/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 06 00:19:06 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.LONGEST_COMMON_SUBSEQUENCE;

public class LONGEST_COMMON_SUBSEQUENCE_ESTest {

//  @Test(timeout = 4000)
//  public void test0()  throws Throwable  {
//      LONGEST_COMMON_SUBSEQUENCE lONGEST_COMMON_SUBSEQUENCE0 = new LONGEST_COMMON_SUBSEQUENCE();
//      // Undeclared exception!
//      LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("lnQaHSd1&/rjxoE3O|4", "Hpp^rf|(a=wVS@");
//  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("TWs1Wr*})/", "TWs1Wr*})/");
      assertNotNull(string0);
      assertEquals("TWs1Wr*})/", string0);
      
      // Undeclared exception!
      try { 
        LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence((String) null, "TWs1Wr*})/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LONGEST_COMMON_SUBSEQUENCE lONGEST_COMMON_SUBSEQUENCE0 = new LONGEST_COMMON_SUBSEQUENCE();
      assertNotNull(lONGEST_COMMON_SUBSEQUENCE0);
      
      // Undeclared exception!
      try { 
        LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
      assertNotNull(string0);
      assertEquals("", string0);
      
      LONGEST_COMMON_SUBSEQUENCE lONGEST_COMMON_SUBSEQUENCE0 = new LONGEST_COMMON_SUBSEQUENCE();
      assertNotNull(lONGEST_COMMON_SUBSEQUENCE0);
      
      String string1 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("!Fcfzr\"#Np_.\" B", "");
      assertNotNull(string1);
      assertEquals("", string1);
  }

//  @Test(timeout = 4000)
//  public void test4()  throws Throwable  {
//      String string0 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
//      assertNotNull(string0);
//      assertEquals("", string0);
//      
//      String string1 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", (String) null);
//      assertNotNull(string1);
//      assertEquals("", string1);
//      
//      LONGEST_COMMON_SUBSEQUENCE lONGEST_COMMON_SUBSEQUENCE0 = new LONGEST_COMMON_SUBSEQUENCE();
//      assertNotNull(lONGEST_COMMON_SUBSEQUENCE0);
//      
//      String string2 = "";
//      String string3 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", (String) null);
//      assertNotNull(string3);
//      assertEquals("", string3);
//      
//      String string4 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
//      assertNotNull(string4);
//      assertEquals("", string4);
//      
//      String string5 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
//      assertNotNull(string5);
//      assertEquals("", string5);
//      
//      String string6 = "KF%]g7)";
//      // Undeclared exception!
//      LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("KF%]g7)", "java_programs.LONGEST_COMMON_SUBSEQUENCE");
//  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = "java_programs.LONGEST_COMMON_SUBSEQUENCE";
      String string1 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("java_programs.LONGEST_COMMON_SUBSEQUENCE", "java_programs.LONGEST_COMMON_SUBSEQUENCE");
      assertNotNull(string1);
      assertEquals("java_programs.LONGEST_COMMON_SUBSEQUENCE", string1);
      assertTrue(string1.equals((Object)string0));
      
      String string2 = null;
      // Undeclared exception!
      try { 
        LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("java_programs.LONGEST_COMMON_SUBSEQUENCE", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//  @Test(timeout = 4000)
//  public void test6()  throws Throwable  {
//      LONGEST_COMMON_SUBSEQUENCE lONGEST_COMMON_SUBSEQUENCE0 = new LONGEST_COMMON_SUBSEQUENCE();
//      assertNotNull(lONGEST_COMMON_SUBSEQUENCE0);
//      
//      String string0 = "";
//      String string1 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("d!GJ[}d", "");
//      assertNotNull(string1);
//      assertEquals("", string1);
//      
//      String string2 = "java_programs.LONGEST_COMMON_SUBSEQUENCE";
//      // Undeclared exception!
//      LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("java_programs.LONGEST_COMMON_SUBSEQUENCE", "c?~'n5!.,;<)<8-~k");
//  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
      assertNotNull(string0);
      assertEquals("", string0);
      
      LONGEST_COMMON_SUBSEQUENCE lONGEST_COMMON_SUBSEQUENCE0 = new LONGEST_COMMON_SUBSEQUENCE();
      assertNotNull(lONGEST_COMMON_SUBSEQUENCE0);
      
      String string1 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
      assertNotNull(string1);
      assertEquals("", string1);
      
      String string2 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
      assertNotNull(string2);
      assertEquals("", string2);
      
      String string3 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("Rn7cI_PZ{", "");
      assertNotNull(string3);
      assertEquals("", string3);
      
      String string4 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("java_programs.LONGEST_COMMON_SUBSEQUENCE", "java_programs.LONGEST_COMMON_SUBSEQUENCE");
      assertNotNull(string4);
      assertEquals("java_programs.LONGEST_COMMON_SUBSEQUENCE", string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      
      String string5 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
      assertNotNull(string5);
      assertEquals("", string5);
      assertFalse(string5.equals((Object)string4));
      
      String string6 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("}", "");
      assertNotNull(string6);
      assertEquals("", string6);
      assertFalse(string6.equals((Object)string4));
      
      String string7 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "7,#^>2-;ZWZ:");
      assertNotNull(string7);
      assertEquals("", string7);
      assertFalse(string7.equals((Object)string4));
      
      String string8 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
      assertNotNull(string8);
      assertEquals("", string8);
      assertFalse(string8.equals((Object)string4));
      
      String string9 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence(")1q%-G\"q'M':WjM", "");
      assertNotNull(string9);
      assertEquals("", string9);
      assertFalse(string9.equals((Object)string4));
      
      String string10 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
      assertNotNull(string10);
      assertEquals("", string10);
      assertFalse(string10.equals((Object)string4));
      
      String string11 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("|", "|");
      assertNotNull(string11);
      assertEquals("|", string11);
      assertFalse(string11.equals((Object)string2));
      assertFalse(string11.equals((Object)string10));
      assertFalse(string11.equals((Object)string1));
      assertFalse(string11.equals((Object)string6));
      assertFalse(string11.equals((Object)string3));
      assertFalse(string11.equals((Object)string4));
      assertFalse(string11.equals((Object)string7));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string5));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string0));
      
      String string12 = LONGEST_COMMON_SUBSEQUENCE.longest_common_subsequence("", "");
      assertNotNull(string12);
      assertEquals("", string12);
      assertFalse(string12.equals((Object)string4));
      assertFalse(string12.equals((Object)string11));
  }
}

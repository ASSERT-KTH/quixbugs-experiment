/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 06 05:01:24 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java_programs.SUBSEQUENCES;

public class SUBSEQUENCES_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      ArrayList<ArrayList> arrayList0 = (ArrayList<ArrayList>)SUBSEQUENCES.subsequences(431, 0, 0);
      assertEquals(1, arrayList0.size());
      
      SUBSEQUENCES.subsequences(0, 0, 0);
      ArrayList<ArrayList> arrayList1 = (ArrayList<ArrayList>)SUBSEQUENCES.subsequences(0, 1, 1);
      assertEquals(1, arrayList1.size());
      
      ArrayList<ArrayList> arrayList2 = (ArrayList<ArrayList>)SUBSEQUENCES.subsequences(50, (-1155), 0);
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = (-1);
      SUBSEQUENCES.subsequences(int0, int0, int0);
      int int1 = 1131;
      SUBSEQUENCES.subsequences(int0, int1, int1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 1767;
      int int1 = (-1);
      SUBSEQUENCES.subsequences(1767, (-1), 1767);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences((-1), 0, 0);
      SUBSEQUENCES.subsequences((-1), (-2197), 4282);
      SUBSEQUENCES.subsequences(1767, 2188, 708);
      SUBSEQUENCES.subsequences(1767, 2063, 1);
      SUBSEQUENCES.subsequences(0, (-4615), 0);
      int int2 = (-2059);
      SUBSEQUENCES.subsequences(int1, int0, int2);
      int int3 = 0;
      SUBSEQUENCES.subsequences(int1, int3, int1);
      int int4 = (-754);
      SUBSEQUENCES.subsequences(int2, int4, int3);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = 0;
      SUBSEQUENCES.subsequences(0, 0, 0);
      int int1 = 914;
      SUBSEQUENCES.subsequences(914, 914, 914);
      int int2 = (-3149);
      SUBSEQUENCES.subsequences(0, (-3149), (-1));
      int int3 = (-1);
      SUBSEQUENCES.subsequences(int0, int1, int3);
      int int4 = (-1);
      int int5 = 0;
      SUBSEQUENCES.subsequences(int4, int3, int5);
      int int6 = (-1120);
      int int7 = 2527;
      SUBSEQUENCES.subsequences(int2, int6, int7);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = (-1);
      SUBSEQUENCES.subsequences(int0, int0, int0);
      int int1 = 967;
      int int2 = 0;
      SUBSEQUENCES.subsequences(int1, int2, int2);
      int int3 = 0;
      int int4 = 0;
      SUBSEQUENCES.subsequences(int3, int4, int4);
      int int5 = (-1575);
      SUBSEQUENCES.subsequences(int5, int5, int5);
      int int6 = 0;
      SUBSEQUENCES.subsequences(int6, int6, int6);
      int int7 = 159;
      int int8 = (-4119);
      SUBSEQUENCES.subsequences(int7, int7, int8);
      int int9 = (-660);
      int int10 = 0;
      SUBSEQUENCES.subsequences(int9, int10, int9);
      int int11 = 1827;
      SUBSEQUENCES.subsequences(int8, int6, int11);
      SUBSEQUENCES.subsequences(int9, int6, int10);
      int int12 = 50;
      SUBSEQUENCES.subsequences(int12, int1, int2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = (-1);
      int int1 = (-1);
      SUBSEQUENCES.subsequences(int0, int0, int1);
      int int2 = 0;
      int int3 = 1040;
      int int4 = 50;
      SUBSEQUENCES.subsequences(int2, int3, int4);
      int int5 = 1876;
      int int6 = 635;
      SUBSEQUENCES.subsequences(int5, int6, int5);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      int int1 = 1414;
      SUBSEQUENCES.subsequences(1641, 0, 1414);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(0, 1641, 0);
      SUBSEQUENCES.subsequences(0, 1641, 1);
      SUBSEQUENCES.subsequences(1414, 0, 50);
      SUBSEQUENCES.subsequences(1414, 1641, 1641);
      int int2 = 0;
      int int3 = 1352;
      SUBSEQUENCES.subsequences(int2, int3, int3);
      int int4 = (-1339);
      int int5 = 154;
      SUBSEQUENCES.subsequences(int4, int0, int5);
      int int6 = 168;
      int int7 = (-492);
      SUBSEQUENCES.subsequences(int1, int6, int7);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = 0;
      int int1 = 3078;
      SUBSEQUENCES.subsequences(int0, int1, int1);
      int int2 = (-860);
      int int3 = 0;
      SUBSEQUENCES.subsequences(int2, int2, int3);
      int int4 = 0;
      int int5 = 0;
      SUBSEQUENCES.subsequences(int4, int5, int4);
      int int6 = 0;
      SUBSEQUENCES.subsequences(int6, int6, int6);
      int int7 = 2592;
      int int8 = (-424);
      SUBSEQUENCES.subsequences(int7, int7, int8);
      int int9 = 1;
      SUBSEQUENCES.subsequences(int9, int9, int9);
      SUBSEQUENCES.subsequences(int9, int9, int9);
      int int10 = 1;
      SUBSEQUENCES.subsequences(int9, int10, int10);
      SUBSEQUENCES.subsequences(int9, int10, int8);
      int int11 = 0;
      SUBSEQUENCES.subsequences(int9, int11, int10);
      int int12 = 3016;
      SUBSEQUENCES.subsequences(int11, int11, int12);
      int int13 = 0;
      int int14 = (-1810);
      SUBSEQUENCES.subsequences(int13, int14, int12);
      int int15 = 168;
      SUBSEQUENCES.subsequences(int6, int11, int15);
      int int16 = 0;
      int int17 = 0;
      SUBSEQUENCES.subsequences(int16, int17, int9);
      SUBSEQUENCES.subsequences(int10, int12, int14);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(50, (-1), (-1));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      SUBSEQUENCES.subsequences(0, 0, 0);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int2 = (-2665);
      SUBSEQUENCES.subsequences(int1, int1, int2);
      int int3 = 0;
      int int4 = 1540;
      SUBSEQUENCES.subsequences(int0, int3, int4);
      int int5 = 3409;
      int int6 = 1;
      SUBSEQUENCES.subsequences(int5, int6, int5);
      int int7 = (-1038);
      int int8 = (-334);
      int int9 = 2896;
      SUBSEQUENCES.subsequences(int7, int8, int9);
      int int10 = 0;
      SUBSEQUENCES.subsequences(int7, int8, int10);
      int int11 = 0;
      SUBSEQUENCES.subsequences(int8, int3, int11);
      SUBSEQUENCES.subsequences(int0, int1, int2);
      int int12 = (-1);
      int int13 = 171;
      SUBSEQUENCES.subsequences(int5, int12, int13);
      int int14 = 519;
      int int15 = 908;
      SUBSEQUENCES.subsequences(int0, int14, int15);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SUBSEQUENCES.subsequences(1107, 1107, 1107);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      // Undeclared exception!
      SUBSEQUENCES.subsequences(1018, 2007, 50);
  }
}

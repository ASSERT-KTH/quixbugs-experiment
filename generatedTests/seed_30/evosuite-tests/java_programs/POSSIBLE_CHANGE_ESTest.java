/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 08 22:56:29 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.POSSIBLE_CHANGE;

public class POSSIBLE_CHANGE_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 192;
      int int0 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int int1 = 0;
      int int2 = POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 610;
      intArray1[2] = 1;
      int int3 = 0;
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE.possible_change(intArray1, int2);
      int int4 = 1255;
      POSSIBLE_CHANGE.possible_change(intArray1, int4);
      POSSIBLE_CHANGE.possible_change(intArray1, int2);
      int int5 = 0;
      POSSIBLE_CHANGE.possible_change(intArray1, int5);
      int int6 = 0;
      int int7 = POSSIBLE_CHANGE.possible_change(intArray0, int6);
      int[] intArray2 = new int[8];
      intArray2[0] = int0;
      intArray2[1] = int1;
      intArray2[2] = int5;
      intArray2[3] = int0;
      intArray2[4] = int7;
      intArray2[5] = int4;
      intArray2[6] = int3;
      intArray2[7] = int7;
      int int8 = 1;
      POSSIBLE_CHANGE.possible_change(intArray2, int8);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int[] intArray1 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      int[] intArray2 = new int[2];
      intArray2[0] = 1;
      intArray2[1] = 1;
      POSSIBLE_CHANGE.possible_change(intArray2, 1);
      int int0 = POSSIBLE_CHANGE.possible_change(intArray2, 1);
      POSSIBLE_CHANGE.possible_change(intArray2, 0);
      POSSIBLE_CHANGE.possible_change(intArray1, (-1));
      POSSIBLE_CHANGE.possible_change(intArray1, 1);
      POSSIBLE_CHANGE.possible_change(intArray1, 1);
      int int1 = 1263;
      POSSIBLE_CHANGE.possible_change(intArray2, int1);
      int int2 = (-1242);
      POSSIBLE_CHANGE.possible_change(intArray0, int2);
      int int3 = (-4380);
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      int int4 = (-353);
      POSSIBLE_CHANGE.possible_change(intArray2, int4);
      POSSIBLE_CHANGE.possible_change(intArray2, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 682;
      intArray0[1] = 2622;
      intArray0[2] = 0;
      int int0 = (-685);
      intArray0[3] = (-685);
      intArray0[4] = 5688;
      intArray0[5] = 3638;
      intArray0[6] = 34;
      intArray0[7] = (-588);
      POSSIBLE_CHANGE.possible_change(intArray0, intArray0[0]);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, intArray0[4]);
      POSSIBLE_CHANGE.possible_change(intArray0, intArray0[1]);
      int int1 = POSSIBLE_CHANGE.possible_change(intArray0, int0);
      POSSIBLE_CHANGE.possible_change(intArray0, int1);
      int int2 = 1;
      POSSIBLE_CHANGE.possible_change(intArray0, int2);
      int int3 = (-1);
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      int[] intArray1 = null;
      int int4 = 1;
      POSSIBLE_CHANGE.possible_change(intArray1, int4);
      int int5 = (-1873);
      POSSIBLE_CHANGE.possible_change(intArray0, int5);
      int int6 = 0;
      POSSIBLE_CHANGE.possible_change(intArray1, int6);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-371);
      intArray0[1] = (-1045);
      intArray0[2] = (-1404);
      intArray0[3] = 280;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-272);
      intArray0[1] = 0;
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-281);
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, (-2220));
      int int1 = 3030;
      int int2 = POSSIBLE_CHANGE.possible_change(intArray0, int1);
      POSSIBLE_CHANGE.possible_change(intArray0, intArray0[1]);
      POSSIBLE_CHANGE.possible_change(intArray0, intArray0[1]);
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
      int int3 = (-1072);
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      POSSIBLE_CHANGE.possible_change(intArray0, intArray0[4]);
      int int4 = 1013;
      POSSIBLE_CHANGE.possible_change(intArray0, int4);
      POSSIBLE_CHANGE.possible_change(intArray0, int2);
      int int5 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, int5);
      int int6 = 1421;
      POSSIBLE_CHANGE.possible_change(intArray0, int6);
      POSSIBLE_CHANGE.possible_change(intArray0, int5);
      int int7 = (-729);
      POSSIBLE_CHANGE.possible_change(intArray0, int7);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[8];
      intArray0[0] = (-1550);
      intArray0[1] = (-21);
      intArray0[2] = 68;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = (-1);
      intArray0[6] = 1670;
      intArray0[7] = (-1808);
      int int0 = 813;
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
      int int1 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, int1);
      int int2 = (-3268);
      POSSIBLE_CHANGE.possible_change(intArray0, int2);
      int int3 = (-1);
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      int int4 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, int4);
      int[] intArray1 = null;
      POSSIBLE_CHANGE.possible_change(intArray1, intArray0[6]);
      int int5 = 1;
      POSSIBLE_CHANGE.possible_change(intArray0, int5);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-3853);
      POSSIBLE_CHANGE.possible_change(intArray0, (-3853));
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, (-3853));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int[] intArray1 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change((int[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

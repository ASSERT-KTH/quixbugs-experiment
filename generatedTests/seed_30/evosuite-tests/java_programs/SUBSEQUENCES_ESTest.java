/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 09 01:27:01 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.SUBSEQUENCES;

public class SUBSEQUENCES_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = (-4374);
      SUBSEQUENCES.subsequences(int0, int0, int0);
      int int1 = (-55);
      int int2 = 0;
      SUBSEQUENCES.subsequences(int1, int1, int2);
      int int3 = 382;
      int int4 = (-201);
      SUBSEQUENCES.subsequences(int3, int3, int4);
      int int5 = (-2169);
      int int6 = 0;
      SUBSEQUENCES.subsequences(int5, int5, int6);
      int int7 = 119;
      int int8 = (-1);
      SUBSEQUENCES.subsequences(int7, int8, int8);
      SUBSEQUENCES.subsequences(int8, int5, int6);
      int int9 = (-1093);
      int int10 = (-1182);
      int int11 = 3648;
      SUBSEQUENCES.subsequences(int9, int10, int11);
      int int12 = (-2250);
      int int13 = 2954;
      SUBSEQUENCES.subsequences(int12, int12, int13);
      SUBSEQUENCES.subsequences(int10, int3, int9);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = (-83);
      int int1 = (-1);
      SUBSEQUENCES.subsequences(int0, int1, int1);
      int int2 = 1;
      SUBSEQUENCES.subsequences(int2, int0, int1);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int3 = 0;
      int int4 = (-1320);
      int int5 = 14;
      SUBSEQUENCES.subsequences(int3, int4, int5);
      SUBSEQUENCES.subsequences(int1, int1, int0);
      int int6 = 0;
      int int7 = (-486);
      int int8 = 267;
      SUBSEQUENCES.subsequences(int6, int7, int8);
      int int9 = 0;
      SUBSEQUENCES.subsequences(int1, int0, int9);
      int int10 = (-1088);
      int int11 = 1381;
      SUBSEQUENCES.subsequences(int10, int0, int11);
      SUBSEQUENCES.subsequences(int10, int0, int2);
      int int12 = 0;
      SUBSEQUENCES.subsequences(int12, int12, int0);
      SUBSEQUENCES.subsequences(int10, int11, int12);
      SUBSEQUENCES.subsequences(int6, int1, int7);
      int int13 = 3816;
      int int14 = 1958;
      SUBSEQUENCES.subsequences(int10, int13, int14);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = 1;
      int int1 = (-450);
      SUBSEQUENCES.subsequences(int0, int0, int1);
      int int2 = (-1076);
      int int3 = 0;
      SUBSEQUENCES.subsequences(int2, int3, int3);
      int int4 = (-1614);
      SUBSEQUENCES.subsequences(int4, int4, int4);
      int int5 = 1538;
      int int6 = 50;
      SUBSEQUENCES.subsequences(int5, int5, int6);
      int int7 = (-290);
      int int8 = 50;
      int int9 = 0;
      SUBSEQUENCES.subsequences(int7, int8, int9);
      int int10 = 0;
      int int11 = 1;
      SUBSEQUENCES.subsequences(int10, int10, int11);
      int int12 = 0;
      int int13 = 0;
      SUBSEQUENCES.subsequences(int12, int12, int13);
      int int14 = 0;
      int int15 = 1;
      SUBSEQUENCES.subsequences(int12, int14, int15);
      SUBSEQUENCES.subsequences(int12, int13, int14);
      int int16 = 291;
      int int17 = 1706;
      SUBSEQUENCES.subsequences(int16, int11, int17);
      int int18 = (-1277);
      int int19 = 0;
      int int20 = (-115);
      SUBSEQUENCES.subsequences(int18, int19, int20);
      int int21 = (-583);
      SUBSEQUENCES.subsequences(int1, int21, int15);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = 0;
      SUBSEQUENCES.subsequences(0, 0, 0);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int1 = 357;
      int int2 = (-1606);
      int int3 = (-2372);
      SUBSEQUENCES.subsequences(int1, int2, int3);
      int int4 = 0;
      SUBSEQUENCES.subsequences(int0, int4, int0);
      int int5 = 0;
      int int6 = 0;
      SUBSEQUENCES.subsequences(int5, int0, int6);
      int int7 = 0;
      SUBSEQUENCES.subsequences(int0, int0, int7);
      int int8 = 0;
      SUBSEQUENCES.subsequences(int8, int0, int8);
      int int9 = 0;
      SUBSEQUENCES.subsequences(int9, int9, int7);
      int int10 = 2521;
      int int11 = (-1727);
      SUBSEQUENCES.subsequences(int10, int7, int11);
      int int12 = 3245;
      int int13 = (-1339);
      int int14 = 240;
      SUBSEQUENCES.subsequences(int12, int13, int14);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SUBSEQUENCES.subsequences(50, 50, 0);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(0, 50, 0);
      SUBSEQUENCES.subsequences(50, 0, 0);
      SUBSEQUENCES.subsequences(1882, 1, 1);
      SUBSEQUENCES.subsequences(0, (-205), 0);
      SUBSEQUENCES.subsequences(5049, 0, 349);
      SUBSEQUENCES.subsequences(50, 50, 0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int int0 = (-2024);
      int int1 = (-1);
      SUBSEQUENCES.subsequences(int0, int0, int1);
      int int2 = 0;
      int int3 = 2614;
      int int4 = (-3329);
      SUBSEQUENCES.subsequences(int2, int3, int4);
      int int5 = 50;
      int int6 = 1;
      SUBSEQUENCES.subsequences(int5, int6, int1);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int7 = (-3377);
      int int8 = 2126;
      SUBSEQUENCES.subsequences(int7, int8, int0);
      int int9 = (-1164);
      SUBSEQUENCES.subsequences(int3, int6, int9);
      int int10 = 0;
      int int11 = 1475;
      SUBSEQUENCES.subsequences(int10, int11, int1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SUBSEQUENCES.subsequences(1376, 2283, 2283);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(1, (-2398), 1085);
      SUBSEQUENCES.subsequences(2283, (-2038), 1376);
      SUBSEQUENCES.subsequences(1376, (-391), 0);
      SUBSEQUENCES.subsequences(0, (-3256), 1742);
      int int0 = 1922;
      SUBSEQUENCES.subsequences(1922, 1922, 1922);
      SUBSEQUENCES.subsequences(1922, 1, (-1888));
      int int1 = (-4105);
      int int2 = (-1211);
      int int3 = (-4146);
      SUBSEQUENCES.subsequences(int1, int2, int3);
      int int4 = (-1469);
      int int5 = 0;
      SUBSEQUENCES.subsequences(int0, int4, int5);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int int0 = 0;
      SUBSEQUENCES.subsequences(0, 1078, 0);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(0, (-300), 0);
      SUBSEQUENCES.subsequences(1078, 1078, 0);
      SUBSEQUENCES.subsequences(0, (-1555), 1);
      int int1 = (-1);
      SUBSEQUENCES.subsequences(int0, int0, int1);
      int int2 = 233;
      SUBSEQUENCES.subsequences(int1, int2, int1);
      int int3 = (-652);
      int int4 = 1022;
      SUBSEQUENCES.subsequences(int3, int4, int1);
      int int5 = 0;
      int int6 = 1168;
      SUBSEQUENCES.subsequences(int5, int4, int6);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(1581, 1255, 1255);
      // Undeclared exception!
      SUBSEQUENCES.subsequences(1, 6367, 1);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SUBSEQUENCES.subsequences(1, 1, 1);
  }
}

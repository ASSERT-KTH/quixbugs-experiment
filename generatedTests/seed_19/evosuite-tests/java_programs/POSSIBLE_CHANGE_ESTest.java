/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 06 02:37:26 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.POSSIBLE_CHANGE;

public class POSSIBLE_CHANGE_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, 1);
      assertEquals(0, int0);
  }

//  @Test(timeout = 4000)
//  public void test1()  throws Throwable  {
//      int[] intArray0 = new int[3];
//      int int0 = (-3099);
//      intArray0[0] = (-3099);
//      int int1 = 1275;
//      intArray0[1] = 1275;
//      int int2 = 1;
//      intArray0[2] = 1;
//      int int3 = POSSIBLE_CHANGE.possible_change(intArray0, int1);
//      POSSIBLE_CHANGE.possible_change(intArray0, int2);
//      int[] intArray1 = new int[2];
//      intArray1[0] = int3;
//      intArray1[1] = int2;
//      int int4 = 0;
//      POSSIBLE_CHANGE.possible_change(intArray1, int4);
//      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
//      POSSIBLE_CHANGE.possible_change(intArray0, intArray0[1]);
//      int int5 = 0;
//      POSSIBLE_CHANGE.possible_change(intArray0, int5);
//      int int6 = (-1189);
//      POSSIBLE_CHANGE.possible_change(intArray1, int6);
//      int int7 = 884;
//      int int8 = POSSIBLE_CHANGE.possible_change(intArray0, int7);
//      int[] intArray2 = new int[4];
//      intArray2[0] = int8;
//      intArray2[1] = int6;
//      intArray2[2] = int0;
//      intArray2[3] = int6;
//      POSSIBLE_CHANGE.possible_change(intArray2, intArray0[0]);
//      int int9 = 0;
//      POSSIBLE_CHANGE.possible_change(intArray2, int9);
//  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 1578);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, (-612));
      assertEquals(0, int0);
      
      POSSIBLE_CHANGE.possible_change(intArray0, 1);
      int int1 = POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int int2 = POSSIBLE_CHANGE.possible_change(intArray0, 878);
      assertFalse(int2 == int1);
      assertEquals(0, int2);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = null;
      POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change((int[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//  @Test(timeout = 4000)
//  public void test4()  throws Throwable  {
//      int[] intArray0 = new int[8];
//      int int0 = 316;
//      intArray0[0] = 316;
//      int int1 = 0;
//      intArray0[1] = 0;
//      int int2 = 1;
//      intArray0[2] = 1;
//      int int3 = 1267;
//      intArray0[3] = 1267;
//      intArray0[4] = 66;
//      int int4 = 1;
//      intArray0[5] = 1;
//      int int5 = 2680;
//      intArray0[6] = 2680;
//      intArray0[7] = 1;
//      POSSIBLE_CHANGE.possible_change(intArray0, int3);
//      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
//      POSSIBLE_CHANGE.possible_change(intArray0, int4);
//      int int6 = 0;
//      POSSIBLE_CHANGE.possible_change(intArray0, int6);
//      POSSIBLE_CHANGE.possible_change(intArray0, int6);
//      int int7 = (-2000);
//      POSSIBLE_CHANGE.possible_change(intArray0, int7);
//      int int8 = 0;
//      POSSIBLE_CHANGE.possible_change(intArray0, int8);
//      int int9 = POSSIBLE_CHANGE.possible_change(intArray0, int3);
//      int int10 = (-1);
//      POSSIBLE_CHANGE.possible_change(intArray0, int10);
//      int int11 = POSSIBLE_CHANGE.possible_change(intArray0, int0);
//      int int12 = POSSIBLE_CHANGE.possible_change(intArray0, intArray0[3]);
//      int int13 = 0;
//      int int14 = POSSIBLE_CHANGE.possible_change(intArray0, int13);
//      POSSIBLE_CHANGE.possible_change(intArray0, int11);
//      int[] intArray1 = new int[9];
//      int int15 = 0;
//      intArray1[0] = int15;
//      intArray1[1] = int1;
//      intArray1[2] = int5;
//      intArray1[3] = int9;
//      intArray1[4] = int3;
//      intArray1[5] = int14;
//      intArray1[6] = int2;
//      intArray1[7] = int12;
//      intArray1[8] = int0;
//      POSSIBLE_CHANGE.possible_change(intArray1, intArray1[5]);
//  }

//  @Test(timeout = 4000)
//  public void test5()  throws Throwable  {
//      int[] intArray0 = new int[7];
//      intArray0[0] = (-31);
//      intArray0[1] = 0;
//      intArray0[2] = 2401;
//      intArray0[3] = (-1193);
//      intArray0[4] = 493;
//      intArray0[5] = (-889);
//      intArray0[6] = 0;
//      int int0 = 1;
//      POSSIBLE_CHANGE.possible_change(intArray0, int0);
//  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1411);
      intArray0[1] = 1014;
      intArray0[2] = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, (-927));
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[7];
      intArray0[0] = (-196);
      intArray0[1] = (-5532);
      intArray0[2] = 0;
      intArray0[3] = 2748;
      intArray0[4] = 0;
      intArray0[5] = (-5256);
      intArray0[6] = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, (-5532));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE.possible_change(intArray0, (-5256));
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1911));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray0, 1);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE.possible_change(intArray0, (-223));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      intArray0[2] = 4157;
      intArray0[3] = 2306;
      intArray0[4] = (-1277);
      intArray0[5] = 0;
      intArray0[6] = 562;
      intArray0[7] = 0;
      intArray0[8] = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 08 22:30:19 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.POSSIBLE_CHANGE;

public class POSSIBLE_CHANGE_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-340);
      intArray0[1] = (-1);
      intArray0[2] = 2865;
      intArray0[3] = 0;
      intArray0[4] = (-1);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-340));
      int[] intArray1 = new int[6];
      intArray1[0] = (-283);
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = (-340);
      intArray1[5] = 1;
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      int[] intArray2 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray2, 1);
      POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      POSSIBLE_CHANGE.possible_change(intArray2, (-283));
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      int int0 = 330;
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
      int int1 = 0;
      POSSIBLE_CHANGE.possible_change(intArray2, int1);
      int int2 = 761;
      POSSIBLE_CHANGE.possible_change(intArray2, int2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[7];
      int int0 = 658;
      intArray0[0] = 658;
      int int1 = 0;
      intArray0[1] = 0;
      int int2 = (-1);
      intArray0[2] = (-1);
      int int3 = 1601;
      intArray0[3] = 1601;
      intArray0[4] = (-1);
      int int4 = (-1);
      intArray0[5] = (-1);
      intArray0[6] = 2062;
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int int5 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, int5);
      int[] intArray1 = new int[5];
      intArray1[0] = int0;
      intArray1[1] = int2;
      intArray1[2] = int1;
      intArray1[3] = int3;
      intArray1[4] = int4;
      int int6 = 0;
      POSSIBLE_CHANGE.possible_change(intArray1, int6);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (-1339);
      intArray0[2] = (-240);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 242;
      intArray0[6] = 3859;
      intArray0[7] = 1;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-501);
      intArray0[1] = (-1136);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1136));
      POSSIBLE_CHANGE.possible_change(intArray0, (-501));
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int int0 = 785;
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 764;
      intArray0[1] = 864;
      intArray0[2] = 2769;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = (-3606);
      int int0 = 2423;
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = 3476;
      intArray0[0] = 3476;
      intArray0[1] = 0;
      intArray0[2] = 919;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int int1 = 3541;
      POSSIBLE_CHANGE.possible_change(intArray0, int1);
      int int2 = (-133);
      POSSIBLE_CHANGE.possible_change(intArray0, int2);
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
      int int3 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
      int int4 = 1;
      int int5 = POSSIBLE_CHANGE.possible_change(intArray0, int4);
      POSSIBLE_CHANGE.possible_change(intArray0, int5);
      int int6 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, int6);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[8];
      intArray0[0] = 137;
      intArray0[1] = (-1021);
      intArray0[2] = (-1);
      intArray0[3] = 1848;
      intArray0[4] = (-3696);
      intArray0[5] = 3554;
      intArray0[6] = (-1841);
      intArray0[7] = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = null;
      POSSIBLE_CHANGE.possible_change((int[]) null, (-1));
      int int0 = (-4748);
      POSSIBLE_CHANGE.possible_change((int[]) null, (-4748));
      POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change((int[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-272);
      intArray0[1] = 1;
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 179;
      intArray0[1] = 28;
      POSSIBLE_CHANGE.possible_change(intArray0, 28);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 179);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, 566);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
  }
}

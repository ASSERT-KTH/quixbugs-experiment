/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 08 22:38:27 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.POSSIBLE_CHANGE;

public class POSSIBLE_CHANGE_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = (-424);
      intArray0[2] = 1740;
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, (-424));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 354;
      int int0 = 0;
      intArray0[1] = 0;
      int int1 = (-4429);
      intArray0[2] = (-4429);
      intArray0[3] = (-3185);
      int int2 = POSSIBLE_CHANGE.possible_change(intArray0, (-163));
      int int3 = 1064;
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      int int4 = POSSIBLE_CHANGE.possible_change(intArray0, int2);
      int[] intArray1 = new int[5];
      intArray1[0] = int1;
      int int5 = 0;
      intArray1[1] = int5;
      intArray1[2] = int2;
      intArray1[3] = int0;
      intArray1[4] = int4;
      int int6 = 0;
      POSSIBLE_CHANGE.possible_change(intArray1, int6);
      int int7 = 0;
      POSSIBLE_CHANGE.possible_change(intArray1, int7);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[8];
      intArray0[0] = (-789);
      intArray0[1] = 1022;
      intArray0[2] = (-1103);
      intArray0[3] = (-485);
      intArray0[4] = 0;
      intArray0[5] = (-1);
      intArray0[6] = (-1458);
      intArray0[7] = 1;
      int int0 = 596;
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE.possible_change(intArray0, (-2381));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = (-2381);
      intArray1[2] = 0;
      POSSIBLE_CHANGE.possible_change(intArray1, (-2381));
      POSSIBLE_CHANGE.possible_change(intArray1, int0);
      int int1 = 1468;
      POSSIBLE_CHANGE.possible_change(intArray1, int1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray0, (-1865));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 1);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray1 = null;
      int int0 = 0;
      POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change((int[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 294;
      intArray0[0] = 294;
      intArray0[1] = (-1733);
      intArray0[2] = (-1);
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = (-1409);
      intArray0[6] = 0;
      intArray0[7] = (-1);
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = 0;
      intArray0[0] = 0;
      intArray0[1] = (-659);
      intArray0[2] = (-66);
      int int1 = POSSIBLE_CHANGE.possible_change(intArray0, (-5845));
      int int2 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-3363));
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int int3 = POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1871));
      int int4 = POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int int5 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-66));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int int6 = POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      int[] intArray1 = new int[8];
      intArray1[0] = int2;
      intArray1[1] = int5;
      intArray1[2] = int3;
      intArray1[3] = int0;
      intArray1[4] = int4;
      intArray1[5] = int0;
      intArray1[6] = int6;
      intArray1[7] = int1;
      int int7 = 2761;
      POSSIBLE_CHANGE.possible_change(intArray1, int7);
      POSSIBLE_CHANGE.possible_change(intArray1, intArray1[6]);
      POSSIBLE_CHANGE.possible_change(intArray1, intArray1[6]);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      POSSIBLE_CHANGE.possible_change(intArray0, 1);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, 515);
  }
}

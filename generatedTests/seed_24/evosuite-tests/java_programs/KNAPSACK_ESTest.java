/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 08 18:43:45 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.KNAPSACK;

public class KNAPSACK_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[][] intArray0 = new int[3][7];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = (-1740);
      intArray3[3] = 0;
      intArray3[4] = 0;
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(0, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      int int0 = KNAPSACK.knapsack(0, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[8];
      intArray1[0] = 4409;
      intArray1[1] = (-883);
      intArray1[2] = 4409;
      intArray1[3] = (-1);
      intArray1[4] = (-598);
      intArray1[5] = 4409;
      intArray1[6] = 4474;
      intArray1[7] = 4409;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = (-1);
      intArray2[1] = (-883);
      intArray2[2] = (-1);
      intArray2[3] = 4474;
      intArray2[4] = (-598);
      intArray2[5] = (-1407);
      intArray0[1] = intArray2;
      // Undeclared exception!
      KNAPSACK.knapsack(4409, intArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 1215;
      intArray1[6] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 1215;
      intArray2[3] = 1215;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray2[7] = 0;
      intArray2[8] = 0;
      intArray0[1] = intArray2;
      KNAPSACK.knapsack(0, intArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-1436), (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[2][6];
      int[] intArray1 = new int[5];
      intArray1[0] = 1617;
      intArray1[1] = 1617;
      intArray1[2] = 1617;
      intArray1[3] = 1617;
      intArray1[4] = 1617;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray1[0] = 1617;
      intArray2[1] = 1617;
      intArray2[2] = 1617;
      intArray0[1] = intArray2;
      KNAPSACK.knapsack(1617, intArray0);
      KNAPSACK.knapsack(32, intArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int[][] intArray0 = new int[0][3];
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-307), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

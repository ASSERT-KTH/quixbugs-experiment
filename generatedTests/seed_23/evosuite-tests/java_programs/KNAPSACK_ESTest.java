/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 08 18:40:28 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.KNAPSACK;

public class KNAPSACK_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      int[] intArray1 = new int[2];
      intArray1[0] = 149;
      intArray1[1] = 149;
      intArray0[0] = intArray1;
      int int0 = KNAPSACK.knapsack(149, intArray0);
      assertEquals(149, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[6][5];
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = (-1);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray3[4] = (-1);
      intArray3[5] = 0;
      intArray3[6] = (-1);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = (-1);
      intArray4[1] = (-1);
      intArray4[2] = (-1);
      intArray4[3] = (-1);
      intArray4[4] = (-1);
      intArray4[5] = (-1);
      intArray4[6] = (-1);
      intArray4[7] = (-1);
      intArray4[8] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 132;
      intArray5[1] = (-1);
      intArray0[4] = intArray5;
      int[] intArray6 = new int[2];
      intArray6[0] = 0;
      intArray6[1] = 132;
      intArray0[5] = intArray6;
      int int0 = KNAPSACK.knapsack(0, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[3][0];
      int[] intArray1 = new int[4];
      intArray1[0] = 3191;
      intArray1[1] = 3191;
      intArray1[2] = 3191;
      intArray1[3] = 3191;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 3191;
      intArray2[3] = 3191;
      intArray2[4] = 3191;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 3191;
      intArray3[1] = 0;
      intArray3[2] = 3191;
      intArray3[3] = 1;
      intArray3[4] = 3191;
      intArray0[2] = intArray3;
      // Undeclared exception!
      KNAPSACK.knapsack(3191, intArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[][] intArray0 = new int[5][1];
      int[] intArray1 = new int[3];
      intArray1[0] = 2386;
      intArray1[1] = 2386;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 0;
      intArray2[1] = 2602;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 2602;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 2602;
      intArray4[1] = 2386;
      intArray4[2] = 0;
      intArray4[3] = 2602;
      intArray4[4] = 2602;
      intArray4[5] = 2386;
      intArray4[6] = 2602;
      intArray4[7] = 2386;
      intArray4[8] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(2386, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[0][1];
      KNAPSACK.knapsack(0, intArray0);
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-588), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(0, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

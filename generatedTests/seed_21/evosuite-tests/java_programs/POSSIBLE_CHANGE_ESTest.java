/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 08 22:26:25 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.POSSIBLE_CHANGE;

public class POSSIBLE_CHANGE_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[8];
      intArray0[0] = (-677);
      intArray0[1] = 0;
      intArray0[2] = (-1009);
      intArray0[3] = 0;
      intArray0[4] = (-56);
      intArray0[5] = 3280;
      intArray0[6] = 1535;
      intArray0[7] = 1464;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-591));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-384));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE.possible_change(intArray0, (-1009));
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-677));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      int int1 = POSSIBLE_CHANGE.possible_change(intArray0, (-506));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      POSSIBLE_CHANGE.possible_change(intArray0, (-1171));
      POSSIBLE_CHANGE.possible_change(intArray0, 1);
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray1[8] = 1;
      POSSIBLE_CHANGE.possible_change(intArray1, (-991));
      int int0 = POSSIBLE_CHANGE.possible_change(intArray1, intArray1[3]);
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
      int int1 = (-758);
      POSSIBLE_CHANGE.possible_change(intArray0, int1);
      int int2 = 499;
      POSSIBLE_CHANGE.possible_change(intArray0, int2);
      int int3 = (-1);
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      int int4 = 1561;
      POSSIBLE_CHANGE.possible_change(intArray1, int4);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray0, (-459));
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, (-2366));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 1);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-950));
      int[] intArray1 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray1, (-459));
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE.possible_change(intArray1, 1);
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change((int[]) null, 49);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

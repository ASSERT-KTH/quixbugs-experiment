/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 09 00:10:22 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java_programs.SIEVE;

public class SIEVE_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SIEVE sIEVE0 = new SIEVE();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(642);
      // Undeclared exception!
      SIEVE.sieve(integer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(147);
      ArrayList<Integer> arrayList0 = SIEVE.sieve(integer0);
      ArrayList<Boolean> arrayList1 = SIEVE.list_comp(0, arrayList0);
      boolean boolean0 = SIEVE.any(arrayList1);
      assertFalse(boolean0);
      assertEquals(34, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(147);
      assertEquals(147, (int)integer0);
      assertNotNull(integer0);
      
      ArrayList<Integer> arrayList0 = SIEVE.sieve(integer0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(34, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(147));
      
      ArrayList<Boolean> arrayList1 = SIEVE.list_comp(0, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(34, arrayList0.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(34, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(147));
      
      Boolean boolean0 = new Boolean(true);
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = arrayList1.add(boolean0);
      assertTrue(boolean1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(34, arrayList0.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(35, arrayList1.size());
      assertFalse(arrayList0.contains(147));
      assertTrue(arrayList1.contains(boolean1));
      
      boolean boolean2 = SIEVE.any(arrayList1);
      assertTrue(boolean2);
      assertTrue(boolean2 == boolean1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(34, arrayList0.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(35, arrayList1.size());
      assertFalse(arrayList0.contains(147));
      assertTrue(arrayList1.contains(boolean1));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        SIEVE.all((ArrayList<Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        SIEVE.any((ArrayList<Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      ArrayList<Integer> arrayList0 = SIEVE.sieve(integer0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(integer0));
      
      boolean boolean0 = arrayList0.add(integer0);
      assertTrue(boolean0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList0.contains(integer0));
      
      // Undeclared exception!
      try { 
        SIEVE.list_comp((-266), arrayList0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        SIEVE.list_comp((-1004), (ArrayList<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        SIEVE.sieve((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayList<Boolean> arrayList0 = new ArrayList<Boolean>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Boolean boolean0 = Boolean.valueOf("7cmTiXnZ1,8k{H4-W");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = arrayList0.add(boolean0);
      assertTrue(boolean1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(boolean0));
      assertFalse(arrayList0.contains(boolean1));
      
      boolean boolean2 = SIEVE.all(arrayList0);
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(boolean0));
      assertFalse(arrayList0.contains(boolean1));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<Boolean> arrayList0 = new ArrayList<Boolean>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      boolean boolean0 = SIEVE.all(arrayList0);
      assertTrue(boolean0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(boolean0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      ArrayList<Boolean> arrayList1 = SIEVE.list_comp(0, arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Integer integer0 = new Integer((-1199));
      assertEquals((-1199), (int)integer0);
      assertNotNull(integer0);
      
      boolean boolean0 = arrayList0.add(integer0);
      assertTrue(boolean0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains((-1199)));
      
      ArrayList<Boolean> arrayList1 = SIEVE.list_comp((-1), arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains((-1)));
      assertTrue(arrayList0.contains((-1199)));
      assertFalse(arrayList1.contains(boolean0));
  }
}

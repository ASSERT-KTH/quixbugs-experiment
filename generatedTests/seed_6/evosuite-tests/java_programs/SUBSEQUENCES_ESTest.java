/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 06 04:43:35 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.SUBSEQUENCES;

public class SUBSEQUENCES_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1);
      SUBSEQUENCES.subsequences(0, (-1), 1685);
      SUBSEQUENCES.subsequences(int1, int1, int1);
      SUBSEQUENCES.subsequences(int0, int0, int0);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int2 = 2924;
      int int3 = (-3463);
      int int4 = (-1);
      SUBSEQUENCES.subsequences(int2, int3, int4);
      int int5 = (-2503);
      int int6 = 0;
      SUBSEQUENCES.subsequences(int1, int5, int6);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(2507, 2507, 411);
      SUBSEQUENCES.subsequences((-1865), (-1128), 925);
      SUBSEQUENCES.subsequences((-1), (-1), 2750);
      SUBSEQUENCES.subsequences(0, 0, 0);
      SUBSEQUENCES.subsequences(1, 1, 1);
      int int0 = (-2787);
      int int1 = 0;
      SUBSEQUENCES.subsequences((-2787), 0, 0);
      int int2 = 1;
      SUBSEQUENCES.subsequences(int2, int2, int0);
      SUBSEQUENCES.subsequences(int0, int0, int1);
      int int3 = 144;
      int int4 = 50;
      int int5 = (-541);
      SUBSEQUENCES.subsequences(int3, int4, int5);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(395, (-3082), 0);
      SUBSEQUENCES.subsequences(0, 0, 0);
      int int0 = (-148);
      SUBSEQUENCES.subsequences((-148), 1, 1);
      int int1 = 3140;
      SUBSEQUENCES.subsequences(0, 3140, 0);
      int int2 = 0;
      int int3 = (-1393);
      SUBSEQUENCES.subsequences(int2, int2, int3);
      int int4 = 0;
      int int5 = (-1727);
      SUBSEQUENCES.subsequences(int4, int5, int4);
      int int6 = (-2367);
      int int7 = 0;
      int int8 = (-422);
      SUBSEQUENCES.subsequences(int6, int7, int8);
      int int9 = 0;
      int int10 = (-127);
      int int11 = 2559;
      SUBSEQUENCES.subsequences(int9, int10, int11);
      int int12 = 1744;
      SUBSEQUENCES.subsequences(int1, int9, int12);
      SUBSEQUENCES.subsequences(int7, int7, int0);
      int int13 = 1846;
      int int14 = 475;
      SUBSEQUENCES.subsequences(int12, int13, int14);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = (-928);
      int int1 = 4117;
      SUBSEQUENCES.subsequences((-928), (-928), 4117);
      int int2 = (-1);
      SUBSEQUENCES.subsequences(4117, (-1), (-928));
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(4117, 4117, 4117);
      int int3 = (-1176);
      SUBSEQUENCES.subsequences(int2, int2, int3);
      int int4 = 816;
      int int5 = (-960);
      SUBSEQUENCES.subsequences(int4, int0, int5);
      SUBSEQUENCES.subsequences(int1, int1, int2);
      int int6 = (-491);
      SUBSEQUENCES.subsequences(int6, int4, int0);
      int int7 = (-182);
      int int8 = 0;
      SUBSEQUENCES.subsequences(int4, int7, int8);
      int int9 = (-1);
      int int10 = (-295);
      SUBSEQUENCES.subsequences(int9, int0, int10);
      int int11 = (-2259);
      int int12 = 0;
      int int13 = 1;
      SUBSEQUENCES.subsequences(int11, int12, int13);
      int int14 = 1;
      int int15 = 3797;
      SUBSEQUENCES.subsequences(int14, int15, int3);
      int int16 = 0;
      SUBSEQUENCES.subsequences(int12, int0, int16);
      int int17 = (-1709);
      int int18 = 0;
      SUBSEQUENCES.subsequences(int17, int3, int18);
      int int19 = 0;
      int int20 = (-274);
      int int21 = 0;
      SUBSEQUENCES.subsequences(int19, int20, int21);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(1, 0, 589);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int int0 = 0;
      SUBSEQUENCES.subsequences(0, 0, 0);
      int int1 = (-3046);
      int int2 = 292;
      SUBSEQUENCES.subsequences(int1, int2, int1);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int3 = 0;
      SUBSEQUENCES.subsequences(int1, int3, int2);
      int int4 = 1;
      int int5 = (-4890);
      SUBSEQUENCES.subsequences(int4, int5, int4);
      int int6 = (-16);
      int int7 = 50;
      SUBSEQUENCES.subsequences(int6, int7, int0);
      int int8 = 0;
      int int9 = (-2718);
      SUBSEQUENCES.subsequences(int8, int0, int9);
      int int10 = 0;
      SUBSEQUENCES.subsequences(int2, int1, int10);
      int int11 = 783;
      int int12 = 0;
      SUBSEQUENCES.subsequences(int11, int0, int12);
      int int13 = 1725;
      int int14 = 0;
      SUBSEQUENCES.subsequences(int13, int0, int14);
      SUBSEQUENCES.subsequences(int0, int2, int1);
      int int15 = (-1);
      int int16 = (-2528);
      SUBSEQUENCES.subsequences(int15, int16, int15);
      int int17 = (-3220);
      SUBSEQUENCES.subsequences(int17, int15, int7);
      int int18 = 0;
      int int19 = (-1306);
      int int20 = 2054;
      SUBSEQUENCES.subsequences(int18, int19, int20);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = 1249;
      int int1 = (-2844);
      SUBSEQUENCES.subsequences(int0, int0, int1);
      int int2 = 81;
      int int3 = 1098;
      int int4 = (-525);
      SUBSEQUENCES.subsequences(int2, int3, int4);
      int int5 = 1;
      int int6 = 0;
      SUBSEQUENCES.subsequences(int5, int5, int6);
      int int7 = 0;
      int int8 = (-184);
      int int9 = 50;
      SUBSEQUENCES.subsequences(int7, int8, int9);
      int int10 = 90;
      SUBSEQUENCES.subsequences(int10, int10, int10);
      int int11 = 0;
      SUBSEQUENCES.subsequences(int7, int8, int11);
      int int12 = 0;
      int int13 = (-1);
      int int14 = 1741;
      SUBSEQUENCES.subsequences(int12, int13, int14);
      int int15 = (-1);
      int int16 = 0;
      SUBSEQUENCES.subsequences(int5, int15, int16);
  }
}

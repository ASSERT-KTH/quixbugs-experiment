/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 09 02:21:13 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java_programs.SHORTEST_PATH_LENGTHS;
import org.evosuite.runtime.ViolatedAssumptionAnswer;

public class SHORTEST_PATH_LENGTHS_ESTest {

//  @Test(timeout = 4000)
//  public void test0()  throws Throwable  {
//      SHORTEST_PATH_LENGTHS sHORTEST_PATH_LENGTHS0 = new SHORTEST_PATH_LENGTHS();
//      int int0 = (-3041);
//      int int1 = (-6527);
//      int int2 = 2900;
//      HashMap<List<Integer>, Integer> hashMap0 = new HashMap<List<Integer>, Integer>();
//      // Undeclared exception!
//      SHORTEST_PATH_LENGTHS.shortest_path_lengths(1052, hashMap0);
//  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<List<Integer>, Integer> hashMap0 = new HashMap<List<Integer>, Integer>();
      Map<List<Integer>, Integer> map0 = SHORTEST_PATH_LENGTHS.shortest_path_lengths((-1), hashMap0);
      Map<List<Integer>, Integer> map1 = SHORTEST_PATH_LENGTHS.shortest_path_lengths(0, map0);
      SHORTEST_PATH_LENGTHS.shortest_path_lengths((-1), map1);
  }

//  @Test(timeout = 4000)
//  public void test2()  throws Throwable  {
//      HashMap<List<Integer>, Integer> hashMap0 = new HashMap<List<Integer>, Integer>();
//      Map<List<Integer>, Integer> map0 = SHORTEST_PATH_LENGTHS.shortest_path_lengths(2, hashMap0);
//      Map<List<Integer>, Integer> map1 = SHORTEST_PATH_LENGTHS.shortest_path_lengths(2, map0);
//      Map<List<Integer>, Integer> map2 = SHORTEST_PATH_LENGTHS.shortest_path_lengths(2, hashMap0);
//      SHORTEST_PATH_LENGTHS sHORTEST_PATH_LENGTHS0 = new SHORTEST_PATH_LENGTHS();
//      SHORTEST_PATH_LENGTHS.shortest_path_lengths(2, hashMap0);
//      SHORTEST_PATH_LENGTHS.shortest_path_lengths((-3482), map2);
//      Map<List<Integer>, Integer> map3 = SHORTEST_PATH_LENGTHS.shortest_path_lengths(2, hashMap0);
//      SHORTEST_PATH_LENGTHS.shortest_path_lengths(2, map3);
//      SHORTEST_PATH_LENGTHS.shortest_path_lengths(2, map1);
//      int int0 = 0;
//      SHORTEST_PATH_LENGTHS.shortest_path_lengths(0, map0);
//      int int1 = 1717;
//      // Undeclared exception!
//      SHORTEST_PATH_LENGTHS.shortest_path_lengths(1717, map3);
//  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = (-1);
      HashMap<List<Integer>, Integer> hashMap0 = new HashMap<List<Integer>, Integer>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      int int1 = (-1);
      // Undeclared exception!
      try { 
        linkedList0.pop();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SHORTEST_PATH_LENGTHS sHORTEST_PATH_LENGTHS0 = new SHORTEST_PATH_LENGTHS();
      int int0 = 2682;
      HashMap<List<Integer>, Integer> hashMap0 = new HashMap<List<Integer>, Integer>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      int int1 = 0;
      Integer integer0 = new Integer(0);
      Collection<Integer> collection0 = null;
      linkedList0.iterator();
      // Undeclared exception!
      try { 
        Integer.divideUnsigned(0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
      }
  }

//  @Test(timeout = 4000)
//  public void test5()  throws Throwable  {
//      SHORTEST_PATH_LENGTHS sHORTEST_PATH_LENGTHS0 = new SHORTEST_PATH_LENGTHS();
//      int int0 = 99999;
//      HashMap<List<Integer>, Integer> hashMap0 = new HashMap<List<Integer>, Integer>(99999);
//      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
//      Integer integer0 = new Integer(99999);
//      hashMap0.put(linkedList0, integer0);
//      // Undeclared exception!
//      SHORTEST_PATH_LENGTHS.shortest_path_lengths(99999, hashMap0);
//  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        SHORTEST_PATH_LENGTHS.shortest_path_lengths(361, (Map<List<Integer>, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}

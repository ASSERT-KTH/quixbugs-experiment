/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 05 22:33:05 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.KNAPSACK;

public class KNAPSACK_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[][] intArray0 = new int[4][1];
      int[] intArray1 = new int[6];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[1] = 0;
      intArray0[3] = intArray4;
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[2][8];
      int[] intArray1 = new int[7];
      intArray1[0] = 3029;
      intArray1[3] = 3029;
      intArray1[2] = 3029;
      intArray1[3] = 3029;
      intArray1[4] = 0;
      intArray1[5] = 3029;
      intArray1[6] = 3029;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 3029;
      intArray2[1] = 0;
      intArray2[2] = 4637;
      intArray2[3] = 0;
      intArray1[2] = 0;
      intArray2[5] = 0;
      intArray2[6] = 3029;
      intArray0[1] = intArray2;
      KNAPSACK.knapsack(3029, intArray0);
      int int0 = 0;
      KNAPSACK.knapsack(0, intArray0);
      // Undeclared exception!
      KNAPSACK.knapsack(1934, intArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      assertNotNull(kNAPSACK0);
      
      int[][] intArray0 = new int[1][3];
      int[] intArray1 = new int[6];
      intArray1[0] = 276;
      intArray1[1] = 961;
      intArray1[2] = 961;
      intArray1[3] = 961;
      intArray1[4] = 961;
      intArray1[5] = 961;
      intArray0[0] = intArray1;
      int int0 = KNAPSACK.knapsack(961, intArray0);
      assertEquals(961, int0);
      assertEquals(1, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 2004;
      intArray1[1] = 2004;
      intArray1[2] = (-1);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      assertFalse(intArray2.equals((Object)intArray1));
      
      intArray2[0] = (-1);
      intArray2[1] = (-1);
      intArray2[2] = (-1);
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(2004, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2005
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      assertNotNull(kNAPSACK0);
      
      int[][] intArray0 = new int[0][0];
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-3113), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-968), (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 09 01:07:35 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java_programs.SUBSEQUENCES;

public class SUBSEQUENCES_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(0, 0, 0);
      ArrayList<ArrayList> arrayList0 = (ArrayList<ArrayList>)SUBSEQUENCES.subsequences(0, (-1113), 0);
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences((-2006), (-2006), 0);
      SUBSEQUENCES.subsequences(0, 0, 0);
      int int0 = 1;
      int int1 = 2509;
      int int2 = (-1);
      SUBSEQUENCES.subsequences(int0, int1, int2);
      int int3 = 0;
      SUBSEQUENCES.subsequences(int3, int3, int3);
      int int4 = (-1);
      int int5 = 1492;
      SUBSEQUENCES.subsequences(int4, int5, int5);
      int int6 = (-1);
      int int7 = (-1976);
      int int8 = 0;
      SUBSEQUENCES.subsequences(int6, int7, int8);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int int0 = (-801);
      int int1 = 0;
      SUBSEQUENCES.subsequences((-801), 0, 0);
      int int2 = 1;
      int int3 = (-142);
      SUBSEQUENCES.subsequences(1, (-142), (-142));
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(2407, (-801), (-1));
      int int4 = 50;
      int int5 = (-161);
      SUBSEQUENCES.subsequences(int4, int1, int5);
      int int6 = 0;
      int int7 = 1968;
      SUBSEQUENCES.subsequences(int6, int7, int3);
      SUBSEQUENCES.subsequences(int1, int0, int2);
      int int8 = 0;
      int int9 = (-1688);
      int int10 = 2418;
      SUBSEQUENCES.subsequences(int8, int9, int10);
      int int11 = 50;
      SUBSEQUENCES.subsequences(int2, int11, int9);
      int int12 = 0;
      SUBSEQUENCES.subsequences(int0, int0, int12);
      SUBSEQUENCES.subsequences(int11, int6, int11);
      int int13 = 1;
      int int14 = (-1);
      int int15 = 0;
      SUBSEQUENCES.subsequences(int13, int14, int15);
      int int16 = 0;
      SUBSEQUENCES.subsequences(int15, int16, int10);
      int int17 = 1825;
      SUBSEQUENCES.subsequences(int5, int17, int13);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = (-3064);
      int int1 = (-2994);
      SUBSEQUENCES.subsequences(int0, int1, int1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int0 = 2729;
      int int1 = (-956);
      SUBSEQUENCES.subsequences(int0, int0, int1);
      int int2 = (-853);
      int int3 = (-1);
      SUBSEQUENCES.subsequences(int2, int3, int2);
      int int4 = 705;
      int int5 = 720;
      int int6 = (-544);
      SUBSEQUENCES.subsequences(int4, int5, int6);
      int int7 = (-2784);
      int int8 = 0;
      SUBSEQUENCES.subsequences(int7, int8, int8);
      int int9 = 1633;
      SUBSEQUENCES.subsequences(int9, int9, int9);
      int int10 = (-2254);
      SUBSEQUENCES.subsequences(int10, int10, int10);
      int int11 = 287;
      SUBSEQUENCES.subsequences(int11, int11, int10);
      int int12 = (-944);
      int int13 = 1107;
      SUBSEQUENCES.subsequences(int11, int12, int13);
      int int14 = 0;
      SUBSEQUENCES.subsequences(int10, int11, int14);
      int int15 = 1;
      int int16 = (-1659);
      SUBSEQUENCES.subsequences(int15, int16, int12);
      int int17 = (-490);
      SUBSEQUENCES.subsequences(int13, int17, int15);
      int int18 = 1;
      int int19 = 0;
      int int20 = (-1679);
      SUBSEQUENCES.subsequences(int18, int19, int20);
      SUBSEQUENCES.subsequences(int5, int16, int6);
      int int21 = 50;
      int int22 = 0;
      SUBSEQUENCES.subsequences(int3, int21, int22);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(1, 1060, 1);
      int int0 = (-1084);
      SUBSEQUENCES.subsequences(int0, int0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int int0 = 509;
      int int1 = (-1);
      SUBSEQUENCES.subsequences(509, (-1), 0);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences((-1), 509, 0);
      int int2 = 3360;
      int int3 = 342;
      SUBSEQUENCES.subsequences(int0, int2, int3);
      int int4 = 0;
      SUBSEQUENCES.subsequences(int3, int1, int4);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int int0 = 1858;
      int int1 = 0;
      SUBSEQUENCES.subsequences(1858, 0, 0);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      int int2 = 0;
      int int3 = (-2567);
      SUBSEQUENCES.subsequences(int1, int2, int3);
      int int4 = 0;
      int int5 = 0;
      SUBSEQUENCES.subsequences(int4, int5, int0);
      SUBSEQUENCES.subsequences(int0, int0, int1);
      int int6 = 0;
      SUBSEQUENCES.subsequences(int1, int6, int0);
      int int7 = 0;
      SUBSEQUENCES.subsequences(int0, int0, int7);
      int int8 = 536;
      int int9 = 0;
      SUBSEQUENCES.subsequences(int6, int8, int9);
      int int10 = (-1068);
      int int11 = (-1);
      int int12 = 1868;
      SUBSEQUENCES.subsequences(int10, int11, int12);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      int int0 = 164;
      SUBSEQUENCES.subsequences(164, 164, 0);
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(0, (-3868), 0);
      SUBSEQUENCES.subsequences((-1), 164, 1612);
      SUBSEQUENCES.subsequences(1, 164, 1);
      SUBSEQUENCES.subsequences(6, 6, 6);
      SUBSEQUENCES.subsequences(598, 598, 288);
      SUBSEQUENCES.subsequences(916, 164, 0);
      SUBSEQUENCES.subsequences(1, 1, 164);
      SUBSEQUENCES.subsequences(1, 0, 0);
      SUBSEQUENCES.subsequences(164, 1, 1);
      SUBSEQUENCES.subsequences(0, 1113, 0);
      SUBSEQUENCES.subsequences(1, 0, 0);
      SUBSEQUENCES.subsequences(1935, 1, 0);
      int int1 = 0;
      int int2 = (-736);
      SUBSEQUENCES.subsequences(int0, int1, int2);
      int int3 = 500;
      int int4 = 1880;
      int int5 = 903;
      SUBSEQUENCES.subsequences(int3, int4, int5);
  }
}

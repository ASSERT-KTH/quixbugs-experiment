/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 06 04:35:33 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.SUBSEQUENCES;

public class SUBSEQUENCES_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(395, 2560, 2560);
      SUBSEQUENCES.subsequences(1844, (-3180), 0);
      SUBSEQUENCES.subsequences(50, 1814, 1);
      int int0 = 0;
      int int1 = 1294;
      SUBSEQUENCES.subsequences(int0, int1, int1);
      int int2 = 0;
      int int3 = 0;
      SUBSEQUENCES.subsequences(int2, int2, int3);
      int int4 = (-1);
      int int5 = (-1400);
      SUBSEQUENCES.subsequences(int4, int5, int4);
      SUBSEQUENCES.subsequences(int1, int0, int4);
  }

//  @Test(timeout = 4000)
//  public void test01()  throws Throwable  {
//      int int0 = 0;
//      int int1 = (-1);
//      int int2 = (-852);
//      SUBSEQUENCES.subsequences(int0, int1, int2);
//      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
//      int int3 = 1;
//      int int4 = 0;
//      int int5 = 0;
//      SUBSEQUENCES.subsequences(int3, int4, int5);
//      int int6 = 1;
//      int int7 = 863;
//      SUBSEQUENCES.subsequences(int1, int6, int7);
//      int int8 = 0;
//      int int9 = (-1512);
//      SUBSEQUENCES.subsequences(int8, int0, int9);
//      int int10 = 2076;
//      int int11 = 1;
//      SUBSEQUENCES.subsequences(int10, int9, int11);
//      SUBSEQUENCES.subsequences(int7, int8, int2);
//      int int12 = 431;
//      SUBSEQUENCES.subsequences(int12, int12, int11);
//  }

//  @Test(timeout = 4000)
//  public void test02()  throws Throwable  {
//      int int0 = 66;
//      SUBSEQUENCES.subsequences(66, 66, 66);
//      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
//      SUBSEQUENCES.subsequences(66, 1, 574);
//      SUBSEQUENCES.subsequences(66, 66, 66);
//      SUBSEQUENCES.subsequences(1030, (-4986), (-635));
//      SUBSEQUENCES.subsequences(66, (-1842), (-1842));
//      SUBSEQUENCES.subsequences(1, 66, 1);
//      SUBSEQUENCES.subsequences((-545), (-545), 2531);
//      int int1 = (-1);
//      SUBSEQUENCES.subsequences(int0, int0, int1);
//      int int2 = (-3805);
//      SUBSEQUENCES.subsequences(int0, int0, int2);
//  }

//  @Test(timeout = 4000)
//  public void test03()  throws Throwable  {
//      int int0 = 0;
//      int int1 = (-3653);
//      SUBSEQUENCES.subsequences(0, (-3653), 0);
//      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
//      int int2 = (-820);
//      SUBSEQUENCES.subsequences(int2, int2, int2);
//      SUBSEQUENCES.subsequences(int1, int0, int0);
//      SUBSEQUENCES.subsequences(int0, int1, int1);
//      int int3 = (-3332);
//      int int4 = 1349;
//      int int5 = 1687;
//      SUBSEQUENCES.subsequences(int3, int4, int5);
//      int int6 = 0;
//      int int7 = 0;
//      SUBSEQUENCES.subsequences(int0, int6, int7);
//      int int8 = 0;
//      SUBSEQUENCES.subsequences(int1, int8, int0);
//  }

//  @Test(timeout = 4000)
//  public void test04()  throws Throwable  {
//      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
//      int int0 = (-246);
//      SUBSEQUENCES.subsequences(int0, int0, int0);
//      int int1 = 0;
//      int int2 = 1613;
//      SUBSEQUENCES.subsequences(int1, int1, int2);
//      int int3 = (-2053);
//      int int4 = (-2525);
//      SUBSEQUENCES.subsequences(int3, int4, int1);
//      int int5 = 50;
//      int int6 = (-1);
//      SUBSEQUENCES.subsequences(int5, int5, int6);
//  }

//  @Test(timeout = 4000)
//  public void test05()  throws Throwable  {
//      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
//      SUBSEQUENCES.subsequences(0, (-143), (-1));
//      int int0 = (-1480);
//      int int1 = (-2175);
//      int int2 = (-1211);
//      SUBSEQUENCES.subsequences(int0, int1, int2);
//      int int3 = (-1243);
//      int int4 = 879;
//      SUBSEQUENCES.subsequences(int3, int3, int4);
//      int int5 = 235;
//      int int6 = 2249;
//      int int7 = 0;
//      SUBSEQUENCES.subsequences(int5, int6, int7);
//  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SUBSEQUENCES.subsequences(0, (-2720), (-507));
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences((-1), (-507), (-1));
      SUBSEQUENCES.subsequences((-507), (-1729), (-1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
      SUBSEQUENCES.subsequences(1468, 1468, 1468);
      SUBSEQUENCES.subsequences((-889), (-889), 0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SUBSEQUENCES.subsequences(50, 0, 50);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SUBSEQUENCES.subsequences(1952, 3236, 1952);
      SUBSEQUENCES.subsequences(1872, 0, 498);
  }

//  @Test(timeout = 4000)
//  public void test10()  throws Throwable  {
//      SUBSEQUENCES sUBSEQUENCES0 = new SUBSEQUENCES();
//      SUBSEQUENCES.subsequences(1, 208, 308);
//      SUBSEQUENCES.subsequences(50, 50, 50);
//      SUBSEQUENCES.subsequences(3584, 3584, 3584);
//      SUBSEQUENCES.subsequences(1718, 1718, 1718);
//      SUBSEQUENCES.subsequences(1214, 0, 1214);
//      SUBSEQUENCES.subsequences(794, 50, 50);
//      // Undeclared exception!
//      SUBSEQUENCES.subsequences(50, 794, 50);
//  }
}

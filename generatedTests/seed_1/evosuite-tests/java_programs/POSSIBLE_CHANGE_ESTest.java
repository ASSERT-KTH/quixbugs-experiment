/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 06 02:11:43 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.POSSIBLE_CHANGE;

public class POSSIBLE_CHANGE_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, (-629));
      POSSIBLE_CHANGE.possible_change(intArray0, (-2548));
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      int int1 = POSSIBLE_CHANGE.possible_change(intArray0, 1);
      assertEquals(1, int1);
      
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = (-629);
      intArray1[3] = 0;
      intArray1[4] = (-1);
      intArray1[5] = (-1);
      intArray1[6] = (-2548);
      POSSIBLE_CHANGE.possible_change(intArray1, (-629));
      POSSIBLE_CHANGE.possible_change(intArray1, (-4282));
      POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE.possible_change(intArray1, (-2036));
      int[] intArray2 = new int[9];
      intArray2[0] = 0;
      intArray2[1] = (-4282);
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = (-4282);
      intArray2[6] = 0;
      intArray2[7] = (-2036);
      intArray2[8] = 0;
      int int2 = POSSIBLE_CHANGE.possible_change(intArray2, 0);
      assertFalse(int2 == int0);
      assertEquals(1, int2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      POSSIBLE_CHANGE.possible_change((int[]) null, (-1893));
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int int0 = POSSIBLE_CHANGE.possible_change((int[]) null, (-1893));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[1];
      intArray0[0] = (-2124);
      int int0 = 1;
      int int1 = POSSIBLE_CHANGE.possible_change(intArray0, int0);
      int int2 = 0;
      int int3 = POSSIBLE_CHANGE.possible_change(intArray0, int2);
      int int4 = (-206);
      POSSIBLE_CHANGE.possible_change(intArray0, int4);
      POSSIBLE_CHANGE.possible_change(intArray0, int1);
      int int5 = POSSIBLE_CHANGE.possible_change(intArray0, int4);
      int int6 = (-1374);
      POSSIBLE_CHANGE.possible_change(intArray0, int6);
      int[] intArray1 = new int[2];
      int int7 = 227;
      intArray1[0] = int7;
      intArray1[1] = int5;
      POSSIBLE_CHANGE.possible_change(intArray1, intArray1[1]);
      POSSIBLE_CHANGE.possible_change(intArray1, int3);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[8];
      intArray0[0] = 2514;
      intArray0[1] = 0;
      intArray0[2] = (-207);
      intArray0[3] = 1494;
      intArray0[4] = (-1);
      intArray0[5] = 1174;
      intArray0[6] = 2129;
      intArray0[7] = 0;
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1161;
      intArray0[3] = (-2685);
      intArray0[4] = 639;
      POSSIBLE_CHANGE.possible_change(intArray0, intArray0[4]);
      int int0 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
      int int1 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, int1);
      int int2 = (-1509);
      POSSIBLE_CHANGE.possible_change(intArray0, int2);
      int int3 = 0;
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[6];
      intArray0[0] = (-730);
      intArray0[1] = (-2644);
      intArray0[2] = 0;
      intArray0[3] = 3737;
      intArray0[4] = 0;
      intArray0[5] = 0;
      int int0 = 1820;
      POSSIBLE_CHANGE.possible_change(intArray0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[5];
      int int0 = 944;
      intArray0[0] = 944;
      intArray0[1] = 2081;
      int int1 = (-560);
      intArray0[2] = (-560);
      intArray0[3] = (-1142);
      intArray0[4] = 743;
      POSSIBLE_CHANGE.possible_change(intArray0, (-1142));
      int[] intArray1 = new int[4];
      intArray1[0] = 2081;
      intArray1[1] = 743;
      intArray1[2] = 2081;
      intArray1[3] = (-560);
      POSSIBLE_CHANGE.possible_change(intArray1, (-1142));
      POSSIBLE_CHANGE.possible_change(intArray0, (-560));
      int int2 = POSSIBLE_CHANGE.possible_change(intArray1, 0);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int int3 = 1;
      POSSIBLE_CHANGE.possible_change(intArray0, int3);
      POSSIBLE_CHANGE.possible_change(intArray1, intArray0[0]);
      int int4 = (-1949);
      POSSIBLE_CHANGE.possible_change(intArray1, int4);
      int int5 = 2308;
      POSSIBLE_CHANGE.possible_change(intArray1, int5);
      int[] intArray2 = new int[5];
      intArray2[0] = int0;
      intArray2[1] = int4;
      intArray2[2] = int2;
      intArray2[3] = int1;
      int int6 = (-265);
      intArray2[4] = int6;
      int int7 = (-897);
      POSSIBLE_CHANGE.possible_change(intArray2, int7);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[0];
      POSSIBLE_CHANGE.possible_change(intArray0, (-4848));
      POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      POSSIBLE_CHANGE.possible_change((int[]) null, (-729));
      POSSIBLE_CHANGE.possible_change((int[]) null, (-729));
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change((int[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

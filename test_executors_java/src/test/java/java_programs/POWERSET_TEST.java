package java_programs;


public class POWERSET_TEST {
    @org.junit.Test(timeout = 3000)
    public void test_0() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wssgh","RSP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RSP],[wssgh],[wssgh,RSP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xfUQ","v")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[v],[xfUQ],[xfUQ,v]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NGKF","Ozb","f","MAn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MAn],[f],[f,MAn],[Ozb],[Ozb,MAn],[Ozb,f],[Ozb,f,MAn],[NGKF],[NGKF,MAn],[NGKF,f],[NGKF,f,MAn],[NGKF,Ozb],[NGKF,Ozb,MAn],[NGKF,Ozb,f],[NGKF,Ozb,f,MAn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","OIP","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[OIP],[OIP,l],[t],[t,l],[t,OIP],[t,OIP,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "te","XTSqx","iTBSK","RxhFu","FYneU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FYneU],[RxhFu],[RxhFu,FYneU],[iTBSK],[iTBSK,FYneU],[iTBSK,RxhFu],[iTBSK,RxhFu,FYneU],[XTSqx],[XTSqx,FYneU],[XTSqx,RxhFu],[XTSqx,RxhFu,FYneU],[XTSqx,iTBSK],[XTSqx,iTBSK,FYneU],[XTSqx,iTBSK,RxhFu],[XTSqx,iTBSK,RxhFu,FYneU],[te],[te,FYneU],[te,RxhFu],[te,RxhFu,FYneU],[te,iTBSK],[te,iTBSK,FYneU],[te,iTBSK,RxhFu],[te,iTBSK,RxhFu,FYneU],[te,XTSqx],[te,XTSqx,FYneU],[te,XTSqx,RxhFu],[te,XTSqx,RxhFu,FYneU],[te,XTSqx,iTBSK],[te,XTSqx,iTBSK,FYneU],[te,XTSqx,iTBSK,RxhFu],[te,XTSqx,iTBSK,RxhFu,FYneU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_5() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vrAw","FvfvK","AlQgn","KDJaK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KDJaK],[AlQgn],[AlQgn,KDJaK],[FvfvK],[FvfvK,KDJaK],[FvfvK,AlQgn],[FvfvK,AlQgn,KDJaK],[vrAw],[vrAw,KDJaK],[vrAw,AlQgn],[vrAw,AlQgn,KDJaK],[vrAw,FvfvK],[vrAw,FvfvK,KDJaK],[vrAw,FvfvK,AlQgn],[vrAw,FvfvK,AlQgn,KDJaK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_6() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hHbBJ","DYw","Blik","VqO","YrO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YrO],[VqO],[VqO,YrO],[Blik],[Blik,YrO],[Blik,VqO],[Blik,VqO,YrO],[DYw],[DYw,YrO],[DYw,VqO],[DYw,VqO,YrO],[DYw,Blik],[DYw,Blik,YrO],[DYw,Blik,VqO],[DYw,Blik,VqO,YrO],[hHbBJ],[hHbBJ,YrO],[hHbBJ,VqO],[hHbBJ,VqO,YrO],[hHbBJ,Blik],[hHbBJ,Blik,YrO],[hHbBJ,Blik,VqO],[hHbBJ,Blik,VqO,YrO],[hHbBJ,DYw],[hHbBJ,DYw,YrO],[hHbBJ,DYw,VqO],[hHbBJ,DYw,VqO,YrO],[hHbBJ,DYw,Blik],[hHbBJ,DYw,Blik,YrO],[hHbBJ,DYw,Blik,VqO],[hHbBJ,DYw,Blik,VqO,YrO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_7() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","hQ","flfT","cVQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cVQ],[flfT],[flfT,cVQ],[hQ],[hQ,cVQ],[hQ,flfT],[hQ,flfT,cVQ],[B],[B,cVQ],[B,flfT],[B,flfT,cVQ],[B,hQ],[B,hQ,cVQ],[B,hQ,flfT],[B,hQ,flfT,cVQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_8() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YiEC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YiEC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_9() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","QciAX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QciAX],[D],[D,QciAX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_10() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kkWcC","vhrNf","wiz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wiz],[vhrNf],[vhrNf,wiz],[kkWcC],[kkWcC,wiz],[kkWcC,vhrNf],[kkWcC,vhrNf,wiz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_11() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YrW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YrW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_12() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","s","S","E","HGrYE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HGrYE],[E],[E,HGrYE],[S],[S,HGrYE],[S,E],[S,E,HGrYE],[s],[s,HGrYE],[s,E],[s,E,HGrYE],[s,S],[s,S,HGrYE],[s,S,E],[s,S,E,HGrYE],[r],[r,HGrYE],[r,E],[r,E,HGrYE],[r,S],[r,S,HGrYE],[r,S,E],[r,S,E,HGrYE],[r,s],[r,s,HGrYE],[r,s,E],[r,s,E,HGrYE],[r,s,S],[r,s,S,HGrYE],[r,s,S,E],[r,s,S,E,HGrYE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_13() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ee","LOF","FZf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FZf],[LOF],[LOF,FZf],[ee],[ee,FZf],[ee,LOF],[ee,LOF,FZf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_14() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DDHlO","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[DDHlO],[DDHlO,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_15() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cIy","DsEJ","m","cYe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cYe],[m],[m,cYe],[DsEJ],[DsEJ,cYe],[DsEJ,m],[DsEJ,m,cYe],[cIy],[cIy,cYe],[cIy,m],[cIy,m,cYe],[cIy,DsEJ],[cIy,DsEJ,cYe],[cIy,DsEJ,m],[cIy,DsEJ,m,cYe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_16() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kLT","jWO","zrE","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[zrE],[zrE,l],[jWO],[jWO,l],[jWO,zrE],[jWO,zrE,l],[kLT],[kLT,l],[kLT,zrE],[kLT,zrE,l],[kLT,jWO],[kLT,jWO,l],[kLT,jWO,zrE],[kLT,jWO,zrE,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_17() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fxU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fxU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_18() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bCGeC","Mkt","n","ugp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ugp],[n],[n,ugp],[Mkt],[Mkt,ugp],[Mkt,n],[Mkt,n,ugp],[bCGeC],[bCGeC,ugp],[bCGeC,n],[bCGeC,n,ugp],[bCGeC,Mkt],[bCGeC,Mkt,ugp],[bCGeC,Mkt,n],[bCGeC,Mkt,n,ugp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_19() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nDM","wuW","oN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oN],[wuW],[wuW,oN],[nDM],[nDM,oN],[nDM,wuW],[nDM,wuW,oN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_20() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iQ","CGB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CGB],[iQ],[iQ,CGB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_21() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EoFkR","ZXK","JXjot","Eb","nxx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nxx],[Eb],[Eb,nxx],[JXjot],[JXjot,nxx],[JXjot,Eb],[JXjot,Eb,nxx],[ZXK],[ZXK,nxx],[ZXK,Eb],[ZXK,Eb,nxx],[ZXK,JXjot],[ZXK,JXjot,nxx],[ZXK,JXjot,Eb],[ZXK,JXjot,Eb,nxx],[EoFkR],[EoFkR,nxx],[EoFkR,Eb],[EoFkR,Eb,nxx],[EoFkR,JXjot],[EoFkR,JXjot,nxx],[EoFkR,JXjot,Eb],[EoFkR,JXjot,Eb,nxx],[EoFkR,ZXK],[EoFkR,ZXK,nxx],[EoFkR,ZXK,Eb],[EoFkR,ZXK,Eb,nxx],[EoFkR,ZXK,JXjot],[EoFkR,ZXK,JXjot,nxx],[EoFkR,ZXK,JXjot,Eb],[EoFkR,ZXK,JXjot,Eb,nxx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_22() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jeOUr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jeOUr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_23() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Or","WvUW","WA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WA],[WvUW],[WvUW,WA],[Or],[Or,WA],[Or,WvUW],[Or,WvUW,WA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_24() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jJq","mo","s","CVMFX","KhjQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KhjQ],[CVMFX],[CVMFX,KhjQ],[s],[s,KhjQ],[s,CVMFX],[s,CVMFX,KhjQ],[mo],[mo,KhjQ],[mo,CVMFX],[mo,CVMFX,KhjQ],[mo,s],[mo,s,KhjQ],[mo,s,CVMFX],[mo,s,CVMFX,KhjQ],[jJq],[jJq,KhjQ],[jJq,CVMFX],[jJq,CVMFX,KhjQ],[jJq,s],[jJq,s,KhjQ],[jJq,s,CVMFX],[jJq,s,CVMFX,KhjQ],[jJq,mo],[jJq,mo,KhjQ],[jJq,mo,CVMFX],[jJq,mo,CVMFX,KhjQ],[jJq,mo,s],[jJq,mo,s,KhjQ],[jJq,mo,s,CVMFX],[jJq,mo,s,CVMFX,KhjQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_25() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EW","Eyh","iLy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iLy],[Eyh],[Eyh,iLy],[EW],[EW,iLy],[EW,Eyh],[EW,Eyh,iLy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_26() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","ZMY","NtOX","Ptvl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ptvl],[NtOX],[NtOX,Ptvl],[ZMY],[ZMY,Ptvl],[ZMY,NtOX],[ZMY,NtOX,Ptvl],[w],[w,Ptvl],[w,NtOX],[w,NtOX,Ptvl],[w,ZMY],[w,ZMY,Ptvl],[w,ZMY,NtOX],[w,ZMY,NtOX,Ptvl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_27() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "av","CCg","Xuf","rEsFT","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[rEsFT],[rEsFT,L],[Xuf],[Xuf,L],[Xuf,rEsFT],[Xuf,rEsFT,L],[CCg],[CCg,L],[CCg,rEsFT],[CCg,rEsFT,L],[CCg,Xuf],[CCg,Xuf,L],[CCg,Xuf,rEsFT],[CCg,Xuf,rEsFT,L],[av],[av,L],[av,rEsFT],[av,rEsFT,L],[av,Xuf],[av,Xuf,L],[av,Xuf,rEsFT],[av,Xuf,rEsFT,L],[av,CCg],[av,CCg,L],[av,CCg,rEsFT],[av,CCg,rEsFT,L],[av,CCg,Xuf],[av,CCg,Xuf,L],[av,CCg,Xuf,rEsFT],[av,CCg,Xuf,rEsFT,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_28() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cyN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cyN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_29() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","M","rBAL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rBAL],[M],[M,rBAL],[a],[a,rBAL],[a,M],[a,M,rBAL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_30() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wQBH","kXPM","iZnhJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iZnhJ],[kXPM],[kXPM,iZnhJ],[wQBH],[wQBH,iZnhJ],[wQBH,kXPM],[wQBH,kXPM,iZnhJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_31() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IbGn","mgn","yQvKs","j","vs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vs],[j],[j,vs],[yQvKs],[yQvKs,vs],[yQvKs,j],[yQvKs,j,vs],[mgn],[mgn,vs],[mgn,j],[mgn,j,vs],[mgn,yQvKs],[mgn,yQvKs,vs],[mgn,yQvKs,j],[mgn,yQvKs,j,vs],[IbGn],[IbGn,vs],[IbGn,j],[IbGn,j,vs],[IbGn,yQvKs],[IbGn,yQvKs,vs],[IbGn,yQvKs,j],[IbGn,yQvKs,j,vs],[IbGn,mgn],[IbGn,mgn,vs],[IbGn,mgn,j],[IbGn,mgn,j,vs],[IbGn,mgn,yQvKs],[IbGn,mgn,yQvKs,vs],[IbGn,mgn,yQvKs,j],[IbGn,mgn,yQvKs,j,vs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_32() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "voF","Hddv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hddv],[voF],[voF,Hddv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_33() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LNf","tayK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tayK],[LNf],[LNf,tayK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_34() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zZ","Xesn","Jlf","F")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[F],[Jlf],[Jlf,F],[Xesn],[Xesn,F],[Xesn,Jlf],[Xesn,Jlf,F],[zZ],[zZ,F],[zZ,Jlf],[zZ,Jlf,F],[zZ,Xesn],[zZ,Xesn,F],[zZ,Xesn,Jlf],[zZ,Xesn,Jlf,F]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_35() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pdQR","iNXh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iNXh],[pdQR],[pdQR,iNXh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_36() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ijry","HIoND")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HIoND],[Ijry],[Ijry,HIoND]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_37() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lP","vYW","UnB","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[UnB],[UnB,k],[vYW],[vYW,k],[vYW,UnB],[vYW,UnB,k],[lP],[lP,k],[lP,UnB],[lP,UnB,k],[lP,vYW],[lP,vYW,k],[lP,vYW,UnB],[lP,vYW,UnB,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_38() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RJz","lo","e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e],[lo],[lo,e],[RJz],[RJz,e],[RJz,lo],[RJz,lo,e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_39() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aOki","pM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pM],[aOki],[aOki,pM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_40() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OOCX","YLx","pj","kg","Mlbn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mlbn],[kg],[kg,Mlbn],[pj],[pj,Mlbn],[pj,kg],[pj,kg,Mlbn],[YLx],[YLx,Mlbn],[YLx,kg],[YLx,kg,Mlbn],[YLx,pj],[YLx,pj,Mlbn],[YLx,pj,kg],[YLx,pj,kg,Mlbn],[OOCX],[OOCX,Mlbn],[OOCX,kg],[OOCX,kg,Mlbn],[OOCX,pj],[OOCX,pj,Mlbn],[OOCX,pj,kg],[OOCX,pj,kg,Mlbn],[OOCX,YLx],[OOCX,YLx,Mlbn],[OOCX,YLx,kg],[OOCX,YLx,kg,Mlbn],[OOCX,YLx,pj],[OOCX,YLx,pj,Mlbn],[OOCX,YLx,pj,kg],[OOCX,YLx,pj,kg,Mlbn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_41() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_42() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","U","eCdk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eCdk],[U],[U,eCdk],[D],[D,eCdk],[D,U],[D,U,eCdk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_43() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OTZcc","ag","W","WRPi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WRPi],[W],[W,WRPi],[ag],[ag,WRPi],[ag,W],[ag,W,WRPi],[OTZcc],[OTZcc,WRPi],[OTZcc,W],[OTZcc,W,WRPi],[OTZcc,ag],[OTZcc,ag,WRPi],[OTZcc,ag,W],[OTZcc,ag,W,WRPi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_44() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dXE","gkV","SPZN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SPZN],[gkV],[gkV,SPZN],[dXE],[dXE,SPZN],[dXE,gkV],[dXE,gkV,SPZN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_45() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sPnV","WzH","LQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LQ],[WzH],[WzH,LQ],[sPnV],[sPnV,LQ],[sPnV,WzH],[sPnV,WzH,LQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_46() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gOQ","VD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VD],[gOQ],[gOQ,VD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_47() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nsud","x","eSg","mNI","lIeSS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lIeSS],[mNI],[mNI,lIeSS],[eSg],[eSg,lIeSS],[eSg,mNI],[eSg,mNI,lIeSS],[x],[x,lIeSS],[x,mNI],[x,mNI,lIeSS],[x,eSg],[x,eSg,lIeSS],[x,eSg,mNI],[x,eSg,mNI,lIeSS],[Nsud],[Nsud,lIeSS],[Nsud,mNI],[Nsud,mNI,lIeSS],[Nsud,eSg],[Nsud,eSg,lIeSS],[Nsud,eSg,mNI],[Nsud,eSg,mNI,lIeSS],[Nsud,x],[Nsud,x,lIeSS],[Nsud,x,mNI],[Nsud,x,mNI,lIeSS],[Nsud,x,eSg],[Nsud,x,eSg,lIeSS],[Nsud,x,eSg,mNI],[Nsud,x,eSg,mNI,lIeSS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_48() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XFPvu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XFPvu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_49() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fPrgf","Cvbxx","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[Cvbxx],[Cvbxx,j],[fPrgf],[fPrgf,j],[fPrgf,Cvbxx],[fPrgf,Cvbxx,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_50() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","GOnaG","U","vxf","cp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cp],[vxf],[vxf,cp],[U],[U,cp],[U,vxf],[U,vxf,cp],[GOnaG],[GOnaG,cp],[GOnaG,vxf],[GOnaG,vxf,cp],[GOnaG,U],[GOnaG,U,cp],[GOnaG,U,vxf],[GOnaG,U,vxf,cp],[Q],[Q,cp],[Q,vxf],[Q,vxf,cp],[Q,U],[Q,U,cp],[Q,U,vxf],[Q,U,vxf,cp],[Q,GOnaG],[Q,GOnaG,cp],[Q,GOnaG,vxf],[Q,GOnaG,vxf,cp],[Q,GOnaG,U],[Q,GOnaG,U,cp],[Q,GOnaG,U,vxf],[Q,GOnaG,U,vxf,cp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_51() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","lQjL","kNy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kNy],[lQjL],[lQjL,kNy],[a],[a,kNy],[a,lQjL],[a,lQjL,kNy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_52() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zz","Bue","E","oKK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oKK],[E],[E,oKK],[Bue],[Bue,oKK],[Bue,E],[Bue,E,oKK],[zz],[zz,oKK],[zz,E],[zz,E,oKK],[zz,Bue],[zz,Bue,oKK],[zz,Bue,E],[zz,Bue,E,oKK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_53() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DPbD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DPbD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_54() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ENgp","c","HkpaQ","yRek","Xac")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xac],[yRek],[yRek,Xac],[HkpaQ],[HkpaQ,Xac],[HkpaQ,yRek],[HkpaQ,yRek,Xac],[c],[c,Xac],[c,yRek],[c,yRek,Xac],[c,HkpaQ],[c,HkpaQ,Xac],[c,HkpaQ,yRek],[c,HkpaQ,yRek,Xac],[ENgp],[ENgp,Xac],[ENgp,yRek],[ENgp,yRek,Xac],[ENgp,HkpaQ],[ENgp,HkpaQ,Xac],[ENgp,HkpaQ,yRek],[ENgp,HkpaQ,yRek,Xac],[ENgp,c],[ENgp,c,Xac],[ENgp,c,yRek],[ENgp,c,yRek,Xac],[ENgp,c,HkpaQ],[ENgp,c,HkpaQ,Xac],[ENgp,c,HkpaQ,yRek],[ENgp,c,HkpaQ,yRek,Xac]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_55() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KMwW","r","f","UUqp","WfX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WfX],[UUqp],[UUqp,WfX],[f],[f,WfX],[f,UUqp],[f,UUqp,WfX],[r],[r,WfX],[r,UUqp],[r,UUqp,WfX],[r,f],[r,f,WfX],[r,f,UUqp],[r,f,UUqp,WfX],[KMwW],[KMwW,WfX],[KMwW,UUqp],[KMwW,UUqp,WfX],[KMwW,f],[KMwW,f,WfX],[KMwW,f,UUqp],[KMwW,f,UUqp,WfX],[KMwW,r],[KMwW,r,WfX],[KMwW,r,UUqp],[KMwW,r,UUqp,WfX],[KMwW,r,f],[KMwW,r,f,WfX],[KMwW,r,f,UUqp],[KMwW,r,f,UUqp,WfX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_56() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LMC","x","qfGL","xdUO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xdUO],[qfGL],[qfGL,xdUO],[x],[x,xdUO],[x,qfGL],[x,qfGL,xdUO],[LMC],[LMC,xdUO],[LMC,qfGL],[LMC,qfGL,xdUO],[LMC,x],[LMC,x,xdUO],[LMC,x,qfGL],[LMC,x,qfGL,xdUO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_57() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GpH","ed")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ed],[GpH],[GpH,ed]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_58() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","RLe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RLe],[E],[E,RLe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_59() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","Wrd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wrd],[g],[g,Wrd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_60() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xssp","D","EiXsj","XfBD","It")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[It],[XfBD],[XfBD,It],[EiXsj],[EiXsj,It],[EiXsj,XfBD],[EiXsj,XfBD,It],[D],[D,It],[D,XfBD],[D,XfBD,It],[D,EiXsj],[D,EiXsj,It],[D,EiXsj,XfBD],[D,EiXsj,XfBD,It],[xssp],[xssp,It],[xssp,XfBD],[xssp,XfBD,It],[xssp,EiXsj],[xssp,EiXsj,It],[xssp,EiXsj,XfBD],[xssp,EiXsj,XfBD,It],[xssp,D],[xssp,D,It],[xssp,D,XfBD],[xssp,D,XfBD,It],[xssp,D,EiXsj],[xssp,D,EiXsj,It],[xssp,D,EiXsj,XfBD],[xssp,D,EiXsj,XfBD,It]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_61() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","cJhG","oWjyC","NolNu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NolNu],[oWjyC],[oWjyC,NolNu],[cJhG],[cJhG,NolNu],[cJhG,oWjyC],[cJhG,oWjyC,NolNu],[T],[T,NolNu],[T,oWjyC],[T,oWjyC,NolNu],[T,cJhG],[T,cJhG,NolNu],[T,cJhG,oWjyC],[T,cJhG,oWjyC,NolNu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_62() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kxfFZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kxfFZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_63() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ev","fUs","H","RMt","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[RMt],[RMt,m],[H],[H,m],[H,RMt],[H,RMt,m],[fUs],[fUs,m],[fUs,RMt],[fUs,RMt,m],[fUs,H],[fUs,H,m],[fUs,H,RMt],[fUs,H,RMt,m],[ev],[ev,m],[ev,RMt],[ev,RMt,m],[ev,H],[ev,H,m],[ev,H,RMt],[ev,H,RMt,m],[ev,fUs],[ev,fUs,m],[ev,fUs,RMt],[ev,fUs,RMt,m],[ev,fUs,H],[ev,fUs,H,m],[ev,fUs,H,RMt],[ev,fUs,H,RMt,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_64() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tuLa","OB","LSgYH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LSgYH],[OB],[OB,LSgYH],[tuLa],[tuLa,LSgYH],[tuLa,OB],[tuLa,OB,LSgYH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_65() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kmrv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kmrv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_66() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SnoH","xprG","rM","ft")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ft],[rM],[rM,ft],[xprG],[xprG,ft],[xprG,rM],[xprG,rM,ft],[SnoH],[SnoH,ft],[SnoH,rM],[SnoH,rM,ft],[SnoH,xprG],[SnoH,xprG,ft],[SnoH,xprG,rM],[SnoH,xprG,rM,ft]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_67() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","ePBgC","yYm","UjlXC","yf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yf],[UjlXC],[UjlXC,yf],[yYm],[yYm,yf],[yYm,UjlXC],[yYm,UjlXC,yf],[ePBgC],[ePBgC,yf],[ePBgC,UjlXC],[ePBgC,UjlXC,yf],[ePBgC,yYm],[ePBgC,yYm,yf],[ePBgC,yYm,UjlXC],[ePBgC,yYm,UjlXC,yf],[T],[T,yf],[T,UjlXC],[T,UjlXC,yf],[T,yYm],[T,yYm,yf],[T,yYm,UjlXC],[T,yYm,UjlXC,yf],[T,ePBgC],[T,ePBgC,yf],[T,ePBgC,UjlXC],[T,ePBgC,UjlXC,yf],[T,ePBgC,yYm],[T,ePBgC,yYm,yf],[T,ePBgC,yYm,UjlXC],[T,ePBgC,yYm,UjlXC,yf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_68() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bw","bQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bQ],[bw],[bw,bQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_69() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pe","XFyBJ","XQUKO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XQUKO],[XFyBJ],[XFyBJ,XQUKO],[pe],[pe,XQUKO],[pe,XFyBJ],[pe,XFyBJ,XQUKO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_70() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IpFf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IpFf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_71() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ua")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ua]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_72() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","EvRW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EvRW],[D],[D,EvRW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_73() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J","BM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BM],[J],[J,BM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_74() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "W","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[W],[W,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_75() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_76() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fh","B","FiEd","ggNz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ggNz],[FiEd],[FiEd,ggNz],[B],[B,ggNz],[B,FiEd],[B,FiEd,ggNz],[Fh],[Fh,ggNz],[Fh,FiEd],[Fh,FiEd,ggNz],[Fh,B],[Fh,B,ggNz],[Fh,B,FiEd],[Fh,B,FiEd,ggNz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_77() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jp","Rsyi","DA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DA],[Rsyi],[Rsyi,DA],[Jp],[Jp,DA],[Jp,Rsyi],[Jp,Rsyi,DA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_78() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nBu","qjgmz","Lqoi","jcE","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[jcE],[jcE,M],[Lqoi],[Lqoi,M],[Lqoi,jcE],[Lqoi,jcE,M],[qjgmz],[qjgmz,M],[qjgmz,jcE],[qjgmz,jcE,M],[qjgmz,Lqoi],[qjgmz,Lqoi,M],[qjgmz,Lqoi,jcE],[qjgmz,Lqoi,jcE,M],[nBu],[nBu,M],[nBu,jcE],[nBu,jcE,M],[nBu,Lqoi],[nBu,Lqoi,M],[nBu,Lqoi,jcE],[nBu,Lqoi,jcE,M],[nBu,qjgmz],[nBu,qjgmz,M],[nBu,qjgmz,jcE],[nBu,qjgmz,jcE,M],[nBu,qjgmz,Lqoi],[nBu,qjgmz,Lqoi,M],[nBu,qjgmz,Lqoi,jcE],[nBu,qjgmz,Lqoi,jcE,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_79() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wGI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wGI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_80() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_81() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_82() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vx","EBjT","x","NY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NY],[x],[x,NY],[EBjT],[EBjT,NY],[EBjT,x],[EBjT,x,NY],[Vx],[Vx,NY],[Vx,x],[Vx,x,NY],[Vx,EBjT],[Vx,EBjT,NY],[Vx,EBjT,x],[Vx,EBjT,x,NY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_83() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kphAY","bzGF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bzGF],[kphAY],[kphAY,bzGF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_84() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WVxid","g","KpwtO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KpwtO],[g],[g,KpwtO],[WVxid],[WVxid,KpwtO],[WVxid,g],[WVxid,g,KpwtO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_85() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "btvz","CDP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CDP],[btvz],[btvz,CDP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_86() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qSITG","F","nfxe","Jy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jy],[nfxe],[nfxe,Jy],[F],[F,Jy],[F,nfxe],[F,nfxe,Jy],[qSITG],[qSITG,Jy],[qSITG,nfxe],[qSITG,nfxe,Jy],[qSITG,F],[qSITG,F,Jy],[qSITG,F,nfxe],[qSITG,F,nfxe,Jy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_87() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KBwp","Zbsd","j","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[j],[j,o],[Zbsd],[Zbsd,o],[Zbsd,j],[Zbsd,j,o],[KBwp],[KBwp,o],[KBwp,j],[KBwp,j,o],[KBwp,Zbsd],[KBwp,Zbsd,o],[KBwp,Zbsd,j],[KBwp,Zbsd,j,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_88() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","IC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IC],[F],[F,IC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_89() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tLUt","GfR","QHo","ht","yRISu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yRISu],[ht],[ht,yRISu],[QHo],[QHo,yRISu],[QHo,ht],[QHo,ht,yRISu],[GfR],[GfR,yRISu],[GfR,ht],[GfR,ht,yRISu],[GfR,QHo],[GfR,QHo,yRISu],[GfR,QHo,ht],[GfR,QHo,ht,yRISu],[tLUt],[tLUt,yRISu],[tLUt,ht],[tLUt,ht,yRISu],[tLUt,QHo],[tLUt,QHo,yRISu],[tLUt,QHo,ht],[tLUt,QHo,ht,yRISu],[tLUt,GfR],[tLUt,GfR,yRISu],[tLUt,GfR,ht],[tLUt,GfR,ht,yRISu],[tLUt,GfR,QHo],[tLUt,GfR,QHo,yRISu],[tLUt,GfR,QHo,ht],[tLUt,GfR,QHo,ht,yRISu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_90() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RnbqO","os","stI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[stI],[os],[os,stI],[RnbqO],[RnbqO,stI],[RnbqO,os],[RnbqO,os,stI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_91() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","lb","fO","uZkcO","lDDhx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lDDhx],[uZkcO],[uZkcO,lDDhx],[fO],[fO,lDDhx],[fO,uZkcO],[fO,uZkcO,lDDhx],[lb],[lb,lDDhx],[lb,uZkcO],[lb,uZkcO,lDDhx],[lb,fO],[lb,fO,lDDhx],[lb,fO,uZkcO],[lb,fO,uZkcO,lDDhx],[D],[D,lDDhx],[D,uZkcO],[D,uZkcO,lDDhx],[D,fO],[D,fO,lDDhx],[D,fO,uZkcO],[D,fO,uZkcO,lDDhx],[D,lb],[D,lb,lDDhx],[D,lb,uZkcO],[D,lb,uZkcO,lDDhx],[D,lb,fO],[D,lb,fO,lDDhx],[D,lb,fO,uZkcO],[D,lb,fO,uZkcO,lDDhx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_92() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","dPjf","F","w","JOa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JOa],[w],[w,JOa],[F],[F,JOa],[F,w],[F,w,JOa],[dPjf],[dPjf,JOa],[dPjf,w],[dPjf,w,JOa],[dPjf,F],[dPjf,F,JOa],[dPjf,F,w],[dPjf,F,w,JOa],[r],[r,JOa],[r,w],[r,w,JOa],[r,F],[r,F,JOa],[r,F,w],[r,F,w,JOa],[r,dPjf],[r,dPjf,JOa],[r,dPjf,w],[r,dPjf,w,JOa],[r,dPjf,F],[r,dPjf,F,JOa],[r,dPjf,F,w],[r,dPjf,F,w,JOa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_93() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wTA","AGNod","IHnBb","BN","TrJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TrJ],[BN],[BN,TrJ],[IHnBb],[IHnBb,TrJ],[IHnBb,BN],[IHnBb,BN,TrJ],[AGNod],[AGNod,TrJ],[AGNod,BN],[AGNod,BN,TrJ],[AGNod,IHnBb],[AGNod,IHnBb,TrJ],[AGNod,IHnBb,BN],[AGNod,IHnBb,BN,TrJ],[wTA],[wTA,TrJ],[wTA,BN],[wTA,BN,TrJ],[wTA,IHnBb],[wTA,IHnBb,TrJ],[wTA,IHnBb,BN],[wTA,IHnBb,BN,TrJ],[wTA,AGNod],[wTA,AGNod,TrJ],[wTA,AGNod,BN],[wTA,AGNod,BN,TrJ],[wTA,AGNod,IHnBb],[wTA,AGNod,IHnBb,TrJ],[wTA,AGNod,IHnBb,BN],[wTA,AGNod,IHnBb,BN,TrJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_94() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_95() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xA","ofS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ofS],[xA],[xA,ofS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_96() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lBUuh","hPqdV","nNcqu","iw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iw],[nNcqu],[nNcqu,iw],[hPqdV],[hPqdV,iw],[hPqdV,nNcqu],[hPqdV,nNcqu,iw],[lBUuh],[lBUuh,iw],[lBUuh,nNcqu],[lBUuh,nNcqu,iw],[lBUuh,hPqdV],[lBUuh,hPqdV,iw],[lBUuh,hPqdV,nNcqu],[lBUuh,hPqdV,nNcqu,iw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_97() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","xbru","GwRw","QVvM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QVvM],[GwRw],[GwRw,QVvM],[xbru],[xbru,QVvM],[xbru,GwRw],[xbru,GwRw,QVvM],[T],[T,QVvM],[T,GwRw],[T,GwRw,QVvM],[T,xbru],[T,xbru,QVvM],[T,xbru,GwRw],[T,xbru,GwRw,QVvM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_98() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KA","YG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YG],[KA],[KA,YG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_99() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","tkHVb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tkHVb],[R],[R,tkHVb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_100() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_101() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tbe","qZrE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qZrE],[tbe],[tbe,qZrE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_102() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ij","lAl","yaVZm","Lg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lg],[yaVZm],[yaVZm,Lg],[lAl],[lAl,Lg],[lAl,yaVZm],[lAl,yaVZm,Lg],[Ij],[Ij,Lg],[Ij,yaVZm],[Ij,yaVZm,Lg],[Ij,lAl],[Ij,lAl,Lg],[Ij,lAl,yaVZm],[Ij,lAl,yaVZm,Lg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_103() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yEJdQ","zZT","KdwH","FbOpB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FbOpB],[KdwH],[KdwH,FbOpB],[zZT],[zZT,FbOpB],[zZT,KdwH],[zZT,KdwH,FbOpB],[yEJdQ],[yEJdQ,FbOpB],[yEJdQ,KdwH],[yEJdQ,KdwH,FbOpB],[yEJdQ,zZT],[yEJdQ,zZT,FbOpB],[yEJdQ,zZT,KdwH],[yEJdQ,zZT,KdwH,FbOpB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_104() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "neaK","in","DeiE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DeiE],[in],[in,DeiE],[neaK],[neaK,DeiE],[neaK,in],[neaK,in,DeiE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_105() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bBfu","wFwcX","gAMk","BynL","Gfl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gfl],[BynL],[BynL,Gfl],[gAMk],[gAMk,Gfl],[gAMk,BynL],[gAMk,BynL,Gfl],[wFwcX],[wFwcX,Gfl],[wFwcX,BynL],[wFwcX,BynL,Gfl],[wFwcX,gAMk],[wFwcX,gAMk,Gfl],[wFwcX,gAMk,BynL],[wFwcX,gAMk,BynL,Gfl],[bBfu],[bBfu,Gfl],[bBfu,BynL],[bBfu,BynL,Gfl],[bBfu,gAMk],[bBfu,gAMk,Gfl],[bBfu,gAMk,BynL],[bBfu,gAMk,BynL,Gfl],[bBfu,wFwcX],[bBfu,wFwcX,Gfl],[bBfu,wFwcX,BynL],[bBfu,wFwcX,BynL,Gfl],[bBfu,wFwcX,gAMk],[bBfu,wFwcX,gAMk,Gfl],[bBfu,wFwcX,gAMk,BynL],[bBfu,wFwcX,gAMk,BynL,Gfl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_106() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","Mq","TJPL","FaF","Mz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mz],[FaF],[FaF,Mz],[TJPL],[TJPL,Mz],[TJPL,FaF],[TJPL,FaF,Mz],[Mq],[Mq,Mz],[Mq,FaF],[Mq,FaF,Mz],[Mq,TJPL],[Mq,TJPL,Mz],[Mq,TJPL,FaF],[Mq,TJPL,FaF,Mz],[P],[P,Mz],[P,FaF],[P,FaF,Mz],[P,TJPL],[P,TJPL,Mz],[P,TJPL,FaF],[P,TJPL,FaF,Mz],[P,Mq],[P,Mq,Mz],[P,Mq,FaF],[P,Mq,FaF,Mz],[P,Mq,TJPL],[P,Mq,TJPL,Mz],[P,Mq,TJPL,FaF],[P,Mq,TJPL,FaF,Mz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_107() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","W","him","unEfh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[unEfh],[him],[him,unEfh],[W],[W,unEfh],[W,him],[W,him,unEfh],[t],[t,unEfh],[t,him],[t,him,unEfh],[t,W],[t,W,unEfh],[t,W,him],[t,W,him,unEfh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_108() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","nSM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nSM],[b],[b,nSM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_109() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rpmzV","h","vcGga","m","SEP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SEP],[m],[m,SEP],[vcGga],[vcGga,SEP],[vcGga,m],[vcGga,m,SEP],[h],[h,SEP],[h,m],[h,m,SEP],[h,vcGga],[h,vcGga,SEP],[h,vcGga,m],[h,vcGga,m,SEP],[rpmzV],[rpmzV,SEP],[rpmzV,m],[rpmzV,m,SEP],[rpmzV,vcGga],[rpmzV,vcGga,SEP],[rpmzV,vcGga,m],[rpmzV,vcGga,m,SEP],[rpmzV,h],[rpmzV,h,SEP],[rpmzV,h,m],[rpmzV,h,m,SEP],[rpmzV,h,vcGga],[rpmzV,h,vcGga,SEP],[rpmzV,h,vcGga,m],[rpmzV,h,vcGga,m,SEP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_110() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OO","nHnns","z","NjY","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[NjY],[NjY,M],[z],[z,M],[z,NjY],[z,NjY,M],[nHnns],[nHnns,M],[nHnns,NjY],[nHnns,NjY,M],[nHnns,z],[nHnns,z,M],[nHnns,z,NjY],[nHnns,z,NjY,M],[OO],[OO,M],[OO,NjY],[OO,NjY,M],[OO,z],[OO,z,M],[OO,z,NjY],[OO,z,NjY,M],[OO,nHnns],[OO,nHnns,M],[OO,nHnns,NjY],[OO,nHnns,NjY,M],[OO,nHnns,z],[OO,nHnns,z,M],[OO,nHnns,z,NjY],[OO,nHnns,z,NjY,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_111() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rQo","PgHa","m","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[m],[m,n],[PgHa],[PgHa,n],[PgHa,m],[PgHa,m,n],[rQo],[rQo,n],[rQo,m],[rQo,m,n],[rQo,PgHa],[rQo,PgHa,n],[rQo,PgHa,m],[rQo,PgHa,m,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_112() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SOm","blde","ggH","hAD","wGpx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wGpx],[hAD],[hAD,wGpx],[ggH],[ggH,wGpx],[ggH,hAD],[ggH,hAD,wGpx],[blde],[blde,wGpx],[blde,hAD],[blde,hAD,wGpx],[blde,ggH],[blde,ggH,wGpx],[blde,ggH,hAD],[blde,ggH,hAD,wGpx],[SOm],[SOm,wGpx],[SOm,hAD],[SOm,hAD,wGpx],[SOm,ggH],[SOm,ggH,wGpx],[SOm,ggH,hAD],[SOm,ggH,hAD,wGpx],[SOm,blde],[SOm,blde,wGpx],[SOm,blde,hAD],[SOm,blde,hAD,wGpx],[SOm,blde,ggH],[SOm,blde,ggH,wGpx],[SOm,blde,ggH,hAD],[SOm,blde,ggH,hAD,wGpx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_113() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uUJj","oX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oX],[uUJj],[uUJj,oX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_114() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","XEeBZ","CWdU","n","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[n],[n,O],[CWdU],[CWdU,O],[CWdU,n],[CWdU,n,O],[XEeBZ],[XEeBZ,O],[XEeBZ,n],[XEeBZ,n,O],[XEeBZ,CWdU],[XEeBZ,CWdU,O],[XEeBZ,CWdU,n],[XEeBZ,CWdU,n,O],[d],[d,O],[d,n],[d,n,O],[d,CWdU],[d,CWdU,O],[d,CWdU,n],[d,CWdU,n,O],[d,XEeBZ],[d,XEeBZ,O],[d,XEeBZ,n],[d,XEeBZ,n,O],[d,XEeBZ,CWdU],[d,XEeBZ,CWdU,O],[d,XEeBZ,CWdU,n],[d,XEeBZ,CWdU,n,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_115() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nIu","XZLq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XZLq],[nIu],[nIu,XZLq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_116() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GLwPA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GLwPA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_117() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rmBk","ckj","hfK","BaN","jdHl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jdHl],[BaN],[BaN,jdHl],[hfK],[hfK,jdHl],[hfK,BaN],[hfK,BaN,jdHl],[ckj],[ckj,jdHl],[ckj,BaN],[ckj,BaN,jdHl],[ckj,hfK],[ckj,hfK,jdHl],[ckj,hfK,BaN],[ckj,hfK,BaN,jdHl],[rmBk],[rmBk,jdHl],[rmBk,BaN],[rmBk,BaN,jdHl],[rmBk,hfK],[rmBk,hfK,jdHl],[rmBk,hfK,BaN],[rmBk,hfK,BaN,jdHl],[rmBk,ckj],[rmBk,ckj,jdHl],[rmBk,ckj,BaN],[rmBk,ckj,BaN,jdHl],[rmBk,ckj,hfK],[rmBk,ckj,hfK,jdHl],[rmBk,ckj,hfK,BaN],[rmBk,ckj,hfK,BaN,jdHl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_118() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qRA","Vx","HbWc","Pel")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pel],[HbWc],[HbWc,Pel],[Vx],[Vx,Pel],[Vx,HbWc],[Vx,HbWc,Pel],[qRA],[qRA,Pel],[qRA,HbWc],[qRA,HbWc,Pel],[qRA,Vx],[qRA,Vx,Pel],[qRA,Vx,HbWc],[qRA,Vx,HbWc,Pel]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_119() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","T","CB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CB],[T],[T,CB],[b],[b,CB],[b,T],[b,T,CB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_120() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tLmwr","CY","HMT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HMT],[CY],[CY,HMT],[tLmwr],[tLmwr,HMT],[tLmwr,CY],[tLmwr,CY,HMT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_121() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ij","vdd","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[vdd],[vdd,x],[ij],[ij,x],[ij,vdd],[ij,vdd,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_122() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","Dn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dn],[F],[F,Dn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_123() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","Vsgzy","HD","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[HD],[HD,N],[Vsgzy],[Vsgzy,N],[Vsgzy,HD],[Vsgzy,HD,N],[d],[d,N],[d,HD],[d,HD,N],[d,Vsgzy],[d,Vsgzy,N],[d,Vsgzy,HD],[d,Vsgzy,HD,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_124() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qTUKV","wuOf","Nq","fO","US")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[US],[fO],[fO,US],[Nq],[Nq,US],[Nq,fO],[Nq,fO,US],[wuOf],[wuOf,US],[wuOf,fO],[wuOf,fO,US],[wuOf,Nq],[wuOf,Nq,US],[wuOf,Nq,fO],[wuOf,Nq,fO,US],[qTUKV],[qTUKV,US],[qTUKV,fO],[qTUKV,fO,US],[qTUKV,Nq],[qTUKV,Nq,US],[qTUKV,Nq,fO],[qTUKV,Nq,fO,US],[qTUKV,wuOf],[qTUKV,wuOf,US],[qTUKV,wuOf,fO],[qTUKV,wuOf,fO,US],[qTUKV,wuOf,Nq],[qTUKV,wuOf,Nq,US],[qTUKV,wuOf,Nq,fO],[qTUKV,wuOf,Nq,fO,US]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_125() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zXO","quz","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[quz],[quz,h],[zXO],[zXO,h],[zXO,quz],[zXO,quz,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_126() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oWDBv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oWDBv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_127() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lN","eUnk","IzpP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IzpP],[eUnk],[eUnk,IzpP],[lN],[lN,IzpP],[lN,eUnk],[lN,eUnk,IzpP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_128() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bcCL","xPcg","sjzL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sjzL],[xPcg],[xPcg,sjzL],[bcCL],[bcCL,sjzL],[bcCL,xPcg],[bcCL,xPcg,sjzL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_129() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","Ti","ZfE","Hq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hq],[ZfE],[ZfE,Hq],[Ti],[Ti,Hq],[Ti,ZfE],[Ti,ZfE,Hq],[T],[T,Hq],[T,ZfE],[T,ZfE,Hq],[T,Ti],[T,Ti,Hq],[T,Ti,ZfE],[T,Ti,ZfE,Hq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_130() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[b],[b,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_131() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","MVn","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[MVn],[MVn,K],[B],[B,K],[B,MVn],[B,MVn,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_132() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qpp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qpp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_133() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RCXU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RCXU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_134() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tHt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tHt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_135() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XJ","YFPM","EJ","v")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[v],[EJ],[EJ,v],[YFPM],[YFPM,v],[YFPM,EJ],[YFPM,EJ,v],[XJ],[XJ,v],[XJ,EJ],[XJ,EJ,v],[XJ,YFPM],[XJ,YFPM,v],[XJ,YFPM,EJ],[XJ,YFPM,EJ,v]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_136() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cyRYG","xEqV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xEqV],[cyRYG],[cyRYG,xEqV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_137() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dgcqQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dgcqQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_138() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NwSq","B","vz","E","jNoC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jNoC],[E],[E,jNoC],[vz],[vz,jNoC],[vz,E],[vz,E,jNoC],[B],[B,jNoC],[B,E],[B,E,jNoC],[B,vz],[B,vz,jNoC],[B,vz,E],[B,vz,E,jNoC],[NwSq],[NwSq,jNoC],[NwSq,E],[NwSq,E,jNoC],[NwSq,vz],[NwSq,vz,jNoC],[NwSq,vz,E],[NwSq,vz,E,jNoC],[NwSq,B],[NwSq,B,jNoC],[NwSq,B,E],[NwSq,B,E,jNoC],[NwSq,B,vz],[NwSq,B,vz,jNoC],[NwSq,B,vz,E],[NwSq,B,vz,E,jNoC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_139() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zni","Sw","aFWe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aFWe],[Sw],[Sw,aFWe],[zni],[zni,aFWe],[zni,Sw],[zni,Sw,aFWe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_140() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","vE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vE],[t],[t,vE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_141() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dH","i","lKUNf","XE","eBSZu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eBSZu],[XE],[XE,eBSZu],[lKUNf],[lKUNf,eBSZu],[lKUNf,XE],[lKUNf,XE,eBSZu],[i],[i,eBSZu],[i,XE],[i,XE,eBSZu],[i,lKUNf],[i,lKUNf,eBSZu],[i,lKUNf,XE],[i,lKUNf,XE,eBSZu],[dH],[dH,eBSZu],[dH,XE],[dH,XE,eBSZu],[dH,lKUNf],[dH,lKUNf,eBSZu],[dH,lKUNf,XE],[dH,lKUNf,XE,eBSZu],[dH,i],[dH,i,eBSZu],[dH,i,XE],[dH,i,XE,eBSZu],[dH,i,lKUNf],[dH,i,lKUNf,eBSZu],[dH,i,lKUNf,XE],[dH,i,lKUNf,XE,eBSZu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_142() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","Sckw","xenyl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xenyl],[Sckw],[Sckw,xenyl],[d],[d,xenyl],[d,Sckw],[d,Sckw,xenyl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_143() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "swJC","gAwHB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gAwHB],[swJC],[swJC,gAwHB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_144() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ugXj","vdV","FWEZP","nJUU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nJUU],[FWEZP],[FWEZP,nJUU],[vdV],[vdV,nJUU],[vdV,FWEZP],[vdV,FWEZP,nJUU],[ugXj],[ugXj,nJUU],[ugXj,FWEZP],[ugXj,FWEZP,nJUU],[ugXj,vdV],[ugXj,vdV,nJUU],[ugXj,vdV,FWEZP],[ugXj,vdV,FWEZP,nJUU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_145() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_146() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jRXHm","RO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RO],[jRXHm],[jRXHm,RO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_147() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uYJ","Y","gZNu","JeXY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JeXY],[gZNu],[gZNu,JeXY],[Y],[Y,JeXY],[Y,gZNu],[Y,gZNu,JeXY],[uYJ],[uYJ,JeXY],[uYJ,gZNu],[uYJ,gZNu,JeXY],[uYJ,Y],[uYJ,Y,JeXY],[uYJ,Y,gZNu],[uYJ,Y,gZNu,JeXY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_148() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nCX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nCX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_149() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xGbU","ealNT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ealNT],[xGbU],[xGbU,ealNT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_150() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TJHv","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[TJHv],[TJHv,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_151() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","unmaN","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[unmaN],[unmaN,N],[p],[p,N],[p,unmaN],[p,unmaN,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_152() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WxoRP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WxoRP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_153() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pvWTx","lq","vEXE","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[vEXE],[vEXE,L],[lq],[lq,L],[lq,vEXE],[lq,vEXE,L],[pvWTx],[pvWTx,L],[pvWTx,vEXE],[pvWTx,vEXE,L],[pvWTx,lq],[pvWTx,lq,L],[pvWTx,lq,vEXE],[pvWTx,lq,vEXE,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_154() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pMeLB","tFHm","O","bIbZG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bIbZG],[O],[O,bIbZG],[tFHm],[tFHm,bIbZG],[tFHm,O],[tFHm,O,bIbZG],[pMeLB],[pMeLB,bIbZG],[pMeLB,O],[pMeLB,O,bIbZG],[pMeLB,tFHm],[pMeLB,tFHm,bIbZG],[pMeLB,tFHm,O],[pMeLB,tFHm,O,bIbZG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_155() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MCDis","nLUL","vDIdi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vDIdi],[nLUL],[nLUL,vDIdi],[MCDis],[MCDis,vDIdi],[MCDis,nLUL],[MCDis,nLUL,vDIdi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_156() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HX","CvXJG","qzsoP","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[qzsoP],[qzsoP,M],[CvXJG],[CvXJG,M],[CvXJG,qzsoP],[CvXJG,qzsoP,M],[HX],[HX,M],[HX,qzsoP],[HX,qzsoP,M],[HX,CvXJG],[HX,CvXJG,M],[HX,CvXJG,qzsoP],[HX,CvXJG,qzsoP,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_157() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fV","WNOA","d","Oh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Oh],[d],[d,Oh],[WNOA],[WNOA,Oh],[WNOA,d],[WNOA,d,Oh],[fV],[fV,Oh],[fV,d],[fV,d,Oh],[fV,WNOA],[fV,WNOA,Oh],[fV,WNOA,d],[fV,WNOA,d,Oh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_158() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pveh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pveh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_159() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wg","r","javpr","NpUJ","rxoY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rxoY],[NpUJ],[NpUJ,rxoY],[javpr],[javpr,rxoY],[javpr,NpUJ],[javpr,NpUJ,rxoY],[r],[r,rxoY],[r,NpUJ],[r,NpUJ,rxoY],[r,javpr],[r,javpr,rxoY],[r,javpr,NpUJ],[r,javpr,NpUJ,rxoY],[wg],[wg,rxoY],[wg,NpUJ],[wg,NpUJ,rxoY],[wg,javpr],[wg,javpr,rxoY],[wg,javpr,NpUJ],[wg,javpr,NpUJ,rxoY],[wg,r],[wg,r,rxoY],[wg,r,NpUJ],[wg,r,NpUJ,rxoY],[wg,r,javpr],[wg,r,javpr,rxoY],[wg,r,javpr,NpUJ],[wg,r,javpr,NpUJ,rxoY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_160() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dCH","Pn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pn],[dCH],[dCH,Pn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_161() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","bBE","Uj","qi","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[qi],[qi,Z],[Uj],[Uj,Z],[Uj,qi],[Uj,qi,Z],[bBE],[bBE,Z],[bBE,qi],[bBE,qi,Z],[bBE,Uj],[bBE,Uj,Z],[bBE,Uj,qi],[bBE,Uj,qi,Z],[c],[c,Z],[c,qi],[c,qi,Z],[c,Uj],[c,Uj,Z],[c,Uj,qi],[c,Uj,qi,Z],[c,bBE],[c,bBE,Z],[c,bBE,qi],[c,bBE,qi,Z],[c,bBE,Uj],[c,bBE,Uj,Z],[c,bBE,Uj,qi],[c,bBE,Uj,qi,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_162() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZoKHd","y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y],[ZoKHd],[ZoKHd,y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_163() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","sMmr","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[sMmr],[sMmr,K],[U],[U,K],[U,sMmr],[U,sMmr,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_164() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","Gv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gv],[u],[u,Gv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_165() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rgYP","CnX","jwSvp","gieB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gieB],[jwSvp],[jwSvp,gieB],[CnX],[CnX,gieB],[CnX,jwSvp],[CnX,jwSvp,gieB],[rgYP],[rgYP,gieB],[rgYP,jwSvp],[rgYP,jwSvp,gieB],[rgYP,CnX],[rgYP,CnX,gieB],[rgYP,CnX,jwSvp],[rgYP,CnX,jwSvp,gieB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_166() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J","Oz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Oz],[J],[J,Oz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_167() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","bCX","RL","lw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lw],[RL],[RL,lw],[bCX],[bCX,lw],[bCX,RL],[bCX,RL,lw],[s],[s,lw],[s,RL],[s,RL,lw],[s,bCX],[s,bCX,lw],[s,bCX,RL],[s,bCX,RL,lw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_168() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XOHiO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XOHiO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_169() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cSAxb","daVcg","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[daVcg],[daVcg,M],[cSAxb],[cSAxb,M],[cSAxb,daVcg],[cSAxb,daVcg,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_170() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yeJhX","znqr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[znqr],[yeJhX],[yeJhX,znqr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_171() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iwu","FiWA","xIPH","JcbU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JcbU],[xIPH],[xIPH,JcbU],[FiWA],[FiWA,JcbU],[FiWA,xIPH],[FiWA,xIPH,JcbU],[iwu],[iwu,JcbU],[iwu,xIPH],[iwu,xIPH,JcbU],[iwu,FiWA],[iwu,FiWA,JcbU],[iwu,FiWA,xIPH],[iwu,FiWA,xIPH,JcbU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_172() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","J","nGFRH","eTkL","Ldv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ldv],[eTkL],[eTkL,Ldv],[nGFRH],[nGFRH,Ldv],[nGFRH,eTkL],[nGFRH,eTkL,Ldv],[J],[J,Ldv],[J,eTkL],[J,eTkL,Ldv],[J,nGFRH],[J,nGFRH,Ldv],[J,nGFRH,eTkL],[J,nGFRH,eTkL,Ldv],[P],[P,Ldv],[P,eTkL],[P,eTkL,Ldv],[P,nGFRH],[P,nGFRH,Ldv],[P,nGFRH,eTkL],[P,nGFRH,eTkL,Ldv],[P,J],[P,J,Ldv],[P,J,eTkL],[P,J,eTkL,Ldv],[P,J,nGFRH],[P,J,nGFRH,Ldv],[P,J,nGFRH,eTkL],[P,J,nGFRH,eTkL,Ldv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_173() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UVf","rhvlz","WMXfw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WMXfw],[rhvlz],[rhvlz,WMXfw],[UVf],[UVf,WMXfw],[UVf,rhvlz],[UVf,rhvlz,WMXfw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_174() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eSUd","Ejud","RCu","J","WE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WE],[J],[J,WE],[RCu],[RCu,WE],[RCu,J],[RCu,J,WE],[Ejud],[Ejud,WE],[Ejud,J],[Ejud,J,WE],[Ejud,RCu],[Ejud,RCu,WE],[Ejud,RCu,J],[Ejud,RCu,J,WE],[eSUd],[eSUd,WE],[eSUd,J],[eSUd,J,WE],[eSUd,RCu],[eSUd,RCu,WE],[eSUd,RCu,J],[eSUd,RCu,J,WE],[eSUd,Ejud],[eSUd,Ejud,WE],[eSUd,Ejud,J],[eSUd,Ejud,J,WE],[eSUd,Ejud,RCu],[eSUd,Ejud,RCu,WE],[eSUd,Ejud,RCu,J],[eSUd,Ejud,RCu,J,WE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_175() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bslnL","X","nW","dGwX","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[dGwX],[dGwX,L],[nW],[nW,L],[nW,dGwX],[nW,dGwX,L],[X],[X,L],[X,dGwX],[X,dGwX,L],[X,nW],[X,nW,L],[X,nW,dGwX],[X,nW,dGwX,L],[bslnL],[bslnL,L],[bslnL,dGwX],[bslnL,dGwX,L],[bslnL,nW],[bslnL,nW,L],[bslnL,nW,dGwX],[bslnL,nW,dGwX,L],[bslnL,X],[bslnL,X,L],[bslnL,X,dGwX],[bslnL,X,dGwX,L],[bslnL,X,nW],[bslnL,X,nW,L],[bslnL,X,nW,dGwX],[bslnL,X,nW,dGwX,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_176() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tu","sauMp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sauMp],[Tu],[Tu,sauMp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_177() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BpyFB","b","QlH","IQldT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IQldT],[QlH],[QlH,IQldT],[b],[b,IQldT],[b,QlH],[b,QlH,IQldT],[BpyFB],[BpyFB,IQldT],[BpyFB,QlH],[BpyFB,QlH,IQldT],[BpyFB,b],[BpyFB,b,IQldT],[BpyFB,b,QlH],[BpyFB,b,QlH,IQldT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_178() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","s","psIg","H","Jy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jy],[H],[H,Jy],[psIg],[psIg,Jy],[psIg,H],[psIg,H,Jy],[s],[s,Jy],[s,H],[s,H,Jy],[s,psIg],[s,psIg,Jy],[s,psIg,H],[s,psIg,H,Jy],[c],[c,Jy],[c,H],[c,H,Jy],[c,psIg],[c,psIg,Jy],[c,psIg,H],[c,psIg,H,Jy],[c,s],[c,s,Jy],[c,s,H],[c,s,H,Jy],[c,s,psIg],[c,s,psIg,Jy],[c,s,psIg,H],[c,s,psIg,H,Jy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_179() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yZaY","dX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dX],[yZaY],[yZaY,dX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_180() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Plp","ozPw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ozPw],[Plp],[Plp,ozPw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_181() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bVy","PqzA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PqzA],[bVy],[bVy,PqzA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_182() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mmaR","iNJz","VVk","rbtm","Da")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Da],[rbtm],[rbtm,Da],[VVk],[VVk,Da],[VVk,rbtm],[VVk,rbtm,Da],[iNJz],[iNJz,Da],[iNJz,rbtm],[iNJz,rbtm,Da],[iNJz,VVk],[iNJz,VVk,Da],[iNJz,VVk,rbtm],[iNJz,VVk,rbtm,Da],[mmaR],[mmaR,Da],[mmaR,rbtm],[mmaR,rbtm,Da],[mmaR,VVk],[mmaR,VVk,Da],[mmaR,VVk,rbtm],[mmaR,VVk,rbtm,Da],[mmaR,iNJz],[mmaR,iNJz,Da],[mmaR,iNJz,rbtm],[mmaR,iNJz,rbtm,Da],[mmaR,iNJz,VVk],[mmaR,iNJz,VVk,Da],[mmaR,iNJz,VVk,rbtm],[mmaR,iNJz,VVk,rbtm,Da]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_183() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","ZdTy","fn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fn],[ZdTy],[ZdTy,fn],[p],[p,fn],[p,ZdTy],[p,ZdTy,fn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_184() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CPHT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CPHT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_185() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JJ","e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e],[JJ],[JJ,e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_186() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NRyAl","e","qXumS","k","ge")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ge],[k],[k,ge],[qXumS],[qXumS,ge],[qXumS,k],[qXumS,k,ge],[e],[e,ge],[e,k],[e,k,ge],[e,qXumS],[e,qXumS,ge],[e,qXumS,k],[e,qXumS,k,ge],[NRyAl],[NRyAl,ge],[NRyAl,k],[NRyAl,k,ge],[NRyAl,qXumS],[NRyAl,qXumS,ge],[NRyAl,qXumS,k],[NRyAl,qXumS,k,ge],[NRyAl,e],[NRyAl,e,ge],[NRyAl,e,k],[NRyAl,e,k,ge],[NRyAl,e,qXumS],[NRyAl,e,qXumS,ge],[NRyAl,e,qXumS,k],[NRyAl,e,qXumS,k,ge]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_187() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jmww","bcT","gLg","T","LQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LQ],[T],[T,LQ],[gLg],[gLg,LQ],[gLg,T],[gLg,T,LQ],[bcT],[bcT,LQ],[bcT,T],[bcT,T,LQ],[bcT,gLg],[bcT,gLg,LQ],[bcT,gLg,T],[bcT,gLg,T,LQ],[Jmww],[Jmww,LQ],[Jmww,T],[Jmww,T,LQ],[Jmww,gLg],[Jmww,gLg,LQ],[Jmww,gLg,T],[Jmww,gLg,T,LQ],[Jmww,bcT],[Jmww,bcT,LQ],[Jmww,bcT,T],[Jmww,bcT,T,LQ],[Jmww,bcT,gLg],[Jmww,bcT,gLg,LQ],[Jmww,bcT,gLg,T],[Jmww,bcT,gLg,T,LQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_188() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "duC","XTVDD","fGGHI","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[fGGHI],[fGGHI,Z],[XTVDD],[XTVDD,Z],[XTVDD,fGGHI],[XTVDD,fGGHI,Z],[duC],[duC,Z],[duC,fGGHI],[duC,fGGHI,Z],[duC,XTVDD],[duC,XTVDD,Z],[duC,XTVDD,fGGHI],[duC,XTVDD,fGGHI,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_189() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sDXi","pI","BCuJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BCuJ],[pI],[pI,BCuJ],[sDXi],[sDXi,BCuJ],[sDXi,pI],[sDXi,pI,BCuJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_190() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_191() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yOeLt","yDU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yDU],[yOeLt],[yOeLt,yDU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_192() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cUWt","xY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xY],[cUWt],[cUWt,xY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_193() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VBeFz","lYJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lYJ],[VBeFz],[VBeFz,lYJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_194() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HNV","pCov","n","rQ","iH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iH],[rQ],[rQ,iH],[n],[n,iH],[n,rQ],[n,rQ,iH],[pCov],[pCov,iH],[pCov,rQ],[pCov,rQ,iH],[pCov,n],[pCov,n,iH],[pCov,n,rQ],[pCov,n,rQ,iH],[HNV],[HNV,iH],[HNV,rQ],[HNV,rQ,iH],[HNV,n],[HNV,n,iH],[HNV,n,rQ],[HNV,n,rQ,iH],[HNV,pCov],[HNV,pCov,iH],[HNV,pCov,rQ],[HNV,pCov,rQ,iH],[HNV,pCov,n],[HNV,pCov,n,iH],[HNV,pCov,n,rQ],[HNV,pCov,n,rQ,iH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_195() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QfVuy","zIXV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zIXV],[QfVuy],[QfVuy,zIXV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_196() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Klv","tBoTQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tBoTQ],[Klv],[Klv,tBoTQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_197() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YcO","wIMNh","zV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zV],[wIMNh],[wIMNh,zV],[YcO],[YcO,zV],[YcO,wIMNh],[YcO,wIMNh,zV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_198() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bwx","ipOq","WyMPS","gntbU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gntbU],[WyMPS],[WyMPS,gntbU],[ipOq],[ipOq,gntbU],[ipOq,WyMPS],[ipOq,WyMPS,gntbU],[bwx],[bwx,gntbU],[bwx,WyMPS],[bwx,WyMPS,gntbU],[bwx,ipOq],[bwx,ipOq,gntbU],[bwx,ipOq,WyMPS],[bwx,ipOq,WyMPS,gntbU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_199() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eV","GGOZ","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[GGOZ],[GGOZ,N],[eV],[eV,N],[eV,GGOZ],[eV,GGOZ,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_200() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ignr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ignr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_201() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "W","gdIs","MCaX","ua","Yg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yg],[ua],[ua,Yg],[MCaX],[MCaX,Yg],[MCaX,ua],[MCaX,ua,Yg],[gdIs],[gdIs,Yg],[gdIs,ua],[gdIs,ua,Yg],[gdIs,MCaX],[gdIs,MCaX,Yg],[gdIs,MCaX,ua],[gdIs,MCaX,ua,Yg],[W],[W,Yg],[W,ua],[W,ua,Yg],[W,MCaX],[W,MCaX,Yg],[W,MCaX,ua],[W,MCaX,ua,Yg],[W,gdIs],[W,gdIs,Yg],[W,gdIs,ua],[W,gdIs,ua,Yg],[W,gdIs,MCaX],[W,gdIs,MCaX,Yg],[W,gdIs,MCaX,ua],[W,gdIs,MCaX,ua,Yg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_202() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dw","E","vn","y","Owtpq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Owtpq],[y],[y,Owtpq],[vn],[vn,Owtpq],[vn,y],[vn,y,Owtpq],[E],[E,Owtpq],[E,y],[E,y,Owtpq],[E,vn],[E,vn,Owtpq],[E,vn,y],[E,vn,y,Owtpq],[dw],[dw,Owtpq],[dw,y],[dw,y,Owtpq],[dw,vn],[dw,vn,Owtpq],[dw,vn,y],[dw,vn,y,Owtpq],[dw,E],[dw,E,Owtpq],[dw,E,y],[dw,E,y,Owtpq],[dw,E,vn],[dw,E,vn,Owtpq],[dw,E,vn,y],[dw,E,vn,y,Owtpq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_203() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YDaO","b","IILIB","mP","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[mP],[mP,O],[IILIB],[IILIB,O],[IILIB,mP],[IILIB,mP,O],[b],[b,O],[b,mP],[b,mP,O],[b,IILIB],[b,IILIB,O],[b,IILIB,mP],[b,IILIB,mP,O],[YDaO],[YDaO,O],[YDaO,mP],[YDaO,mP,O],[YDaO,IILIB],[YDaO,IILIB,O],[YDaO,IILIB,mP],[YDaO,IILIB,mP,O],[YDaO,b],[YDaO,b,O],[YDaO,b,mP],[YDaO,b,mP,O],[YDaO,b,IILIB],[YDaO,b,IILIB,O],[YDaO,b,IILIB,mP],[YDaO,b,IILIB,mP,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_204() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DXD","oIm","IHzQ","H","XByT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XByT],[H],[H,XByT],[IHzQ],[IHzQ,XByT],[IHzQ,H],[IHzQ,H,XByT],[oIm],[oIm,XByT],[oIm,H],[oIm,H,XByT],[oIm,IHzQ],[oIm,IHzQ,XByT],[oIm,IHzQ,H],[oIm,IHzQ,H,XByT],[DXD],[DXD,XByT],[DXD,H],[DXD,H,XByT],[DXD,IHzQ],[DXD,IHzQ,XByT],[DXD,IHzQ,H],[DXD,IHzQ,H,XByT],[DXD,oIm],[DXD,oIm,XByT],[DXD,oIm,H],[DXD,oIm,H,XByT],[DXD,oIm,IHzQ],[DXD,oIm,IHzQ,XByT],[DXD,oIm,IHzQ,H],[DXD,oIm,IHzQ,H,XByT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_205() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xH","xi","k","sjV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sjV],[k],[k,sjV],[xi],[xi,sjV],[xi,k],[xi,k,sjV],[xH],[xH,sjV],[xH,k],[xH,k,sjV],[xH,xi],[xH,xi,sjV],[xH,xi,k],[xH,xi,k,sjV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_206() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "py")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[py]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_207() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tJIGi","kPhCw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kPhCw],[tJIGi],[tJIGi,kPhCw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_208() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OC","IFSqH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IFSqH],[OC],[OC,IFSqH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_209() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lPpBl","UbUIg","tAZW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tAZW],[UbUIg],[UbUIg,tAZW],[lPpBl],[lPpBl,tAZW],[lPpBl,UbUIg],[lPpBl,UbUIg,tAZW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_210() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NRG","uWw","vmXxc","Qo","YGm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YGm],[Qo],[Qo,YGm],[vmXxc],[vmXxc,YGm],[vmXxc,Qo],[vmXxc,Qo,YGm],[uWw],[uWw,YGm],[uWw,Qo],[uWw,Qo,YGm],[uWw,vmXxc],[uWw,vmXxc,YGm],[uWw,vmXxc,Qo],[uWw,vmXxc,Qo,YGm],[NRG],[NRG,YGm],[NRG,Qo],[NRG,Qo,YGm],[NRG,vmXxc],[NRG,vmXxc,YGm],[NRG,vmXxc,Qo],[NRG,vmXxc,Qo,YGm],[NRG,uWw],[NRG,uWw,YGm],[NRG,uWw,Qo],[NRG,uWw,Qo,YGm],[NRG,uWw,vmXxc],[NRG,uWw,vmXxc,YGm],[NRG,uWw,vmXxc,Qo],[NRG,uWw,vmXxc,Qo,YGm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_211() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MoXwT","luig","sEL","urtA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[urtA],[sEL],[sEL,urtA],[luig],[luig,urtA],[luig,sEL],[luig,sEL,urtA],[MoXwT],[MoXwT,urtA],[MoXwT,sEL],[MoXwT,sEL,urtA],[MoXwT,luig],[MoXwT,luig,urtA],[MoXwT,luig,sEL],[MoXwT,luig,sEL,urtA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_212() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_213() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","bEwr","bpy","kPzKM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kPzKM],[bpy],[bpy,kPzKM],[bEwr],[bEwr,kPzKM],[bEwr,bpy],[bEwr,bpy,kPzKM],[A],[A,kPzKM],[A,bpy],[A,bpy,kPzKM],[A,bEwr],[A,bEwr,kPzKM],[A,bEwr,bpy],[A,bEwr,bpy,kPzKM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_214() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[t]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_215() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_216() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","f","bxdyE","kWK","bmRSt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bmRSt],[kWK],[kWK,bmRSt],[bxdyE],[bxdyE,bmRSt],[bxdyE,kWK],[bxdyE,kWK,bmRSt],[f],[f,bmRSt],[f,kWK],[f,kWK,bmRSt],[f,bxdyE],[f,bxdyE,bmRSt],[f,bxdyE,kWK],[f,bxdyE,kWK,bmRSt],[u],[u,bmRSt],[u,kWK],[u,kWK,bmRSt],[u,bxdyE],[u,bxdyE,bmRSt],[u,bxdyE,kWK],[u,bxdyE,kWK,bmRSt],[u,f],[u,f,bmRSt],[u,f,kWK],[u,f,kWK,bmRSt],[u,f,bxdyE],[u,f,bxdyE,bmRSt],[u,f,bxdyE,kWK],[u,f,bxdyE,kWK,bmRSt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_217() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ucB","jOL","aESs","LPNRE","xcTpk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xcTpk],[LPNRE],[LPNRE,xcTpk],[aESs],[aESs,xcTpk],[aESs,LPNRE],[aESs,LPNRE,xcTpk],[jOL],[jOL,xcTpk],[jOL,LPNRE],[jOL,LPNRE,xcTpk],[jOL,aESs],[jOL,aESs,xcTpk],[jOL,aESs,LPNRE],[jOL,aESs,LPNRE,xcTpk],[ucB],[ucB,xcTpk],[ucB,LPNRE],[ucB,LPNRE,xcTpk],[ucB,aESs],[ucB,aESs,xcTpk],[ucB,aESs,LPNRE],[ucB,aESs,LPNRE,xcTpk],[ucB,jOL],[ucB,jOL,xcTpk],[ucB,jOL,LPNRE],[ucB,jOL,LPNRE,xcTpk],[ucB,jOL,aESs],[ucB,jOL,aESs,xcTpk],[ucB,jOL,aESs,LPNRE],[ucB,jOL,aESs,LPNRE,xcTpk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_218() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aWj","El","ZEiQE","gYeto","Tlt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tlt],[gYeto],[gYeto,Tlt],[ZEiQE],[ZEiQE,Tlt],[ZEiQE,gYeto],[ZEiQE,gYeto,Tlt],[El],[El,Tlt],[El,gYeto],[El,gYeto,Tlt],[El,ZEiQE],[El,ZEiQE,Tlt],[El,ZEiQE,gYeto],[El,ZEiQE,gYeto,Tlt],[aWj],[aWj,Tlt],[aWj,gYeto],[aWj,gYeto,Tlt],[aWj,ZEiQE],[aWj,ZEiQE,Tlt],[aWj,ZEiQE,gYeto],[aWj,ZEiQE,gYeto,Tlt],[aWj,El],[aWj,El,Tlt],[aWj,El,gYeto],[aWj,El,gYeto,Tlt],[aWj,El,ZEiQE],[aWj,El,ZEiQE,Tlt],[aWj,El,ZEiQE,gYeto],[aWj,El,ZEiQE,gYeto,Tlt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_219() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sLZT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sLZT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_220() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gb","RdnVh","OmlWJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OmlWJ],[RdnVh],[RdnVh,OmlWJ],[gb],[gb,OmlWJ],[gb,RdnVh],[gb,RdnVh,OmlWJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_221() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RVegN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RVegN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_222() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","gb","ZcV","QUb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QUb],[ZcV],[ZcV,QUb],[gb],[gb,QUb],[gb,ZcV],[gb,ZcV,QUb],[q],[q,QUb],[q,ZcV],[q,ZcV,QUb],[q,gb],[q,gb,QUb],[q,gb,ZcV],[q,gb,ZcV,QUb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_223() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","mnc","ecu","cilsP","EiIKF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EiIKF],[cilsP],[cilsP,EiIKF],[ecu],[ecu,EiIKF],[ecu,cilsP],[ecu,cilsP,EiIKF],[mnc],[mnc,EiIKF],[mnc,cilsP],[mnc,cilsP,EiIKF],[mnc,ecu],[mnc,ecu,EiIKF],[mnc,ecu,cilsP],[mnc,ecu,cilsP,EiIKF],[R],[R,EiIKF],[R,cilsP],[R,cilsP,EiIKF],[R,ecu],[R,ecu,EiIKF],[R,ecu,cilsP],[R,ecu,cilsP,EiIKF],[R,mnc],[R,mnc,EiIKF],[R,mnc,cilsP],[R,mnc,cilsP,EiIKF],[R,mnc,ecu],[R,mnc,ecu,EiIKF],[R,mnc,ecu,cilsP],[R,mnc,ecu,cilsP,EiIKF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_224() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cclvq","zdnd","igBC","ilOqL","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[ilOqL],[ilOqL,o],[igBC],[igBC,o],[igBC,ilOqL],[igBC,ilOqL,o],[zdnd],[zdnd,o],[zdnd,ilOqL],[zdnd,ilOqL,o],[zdnd,igBC],[zdnd,igBC,o],[zdnd,igBC,ilOqL],[zdnd,igBC,ilOqL,o],[cclvq],[cclvq,o],[cclvq,ilOqL],[cclvq,ilOqL,o],[cclvq,igBC],[cclvq,igBC,o],[cclvq,igBC,ilOqL],[cclvq,igBC,ilOqL,o],[cclvq,zdnd],[cclvq,zdnd,o],[cclvq,zdnd,ilOqL],[cclvq,zdnd,ilOqL,o],[cclvq,zdnd,igBC],[cclvq,zdnd,igBC,o],[cclvq,zdnd,igBC,ilOqL],[cclvq,zdnd,igBC,ilOqL,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_225() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","MjTV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MjTV],[s],[s,MjTV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_226() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","TJH","pqci","SiPVg","oK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oK],[SiPVg],[SiPVg,oK],[pqci],[pqci,oK],[pqci,SiPVg],[pqci,SiPVg,oK],[TJH],[TJH,oK],[TJH,SiPVg],[TJH,SiPVg,oK],[TJH,pqci],[TJH,pqci,oK],[TJH,pqci,SiPVg],[TJH,pqci,SiPVg,oK],[A],[A,oK],[A,SiPVg],[A,SiPVg,oK],[A,pqci],[A,pqci,oK],[A,pqci,SiPVg],[A,pqci,SiPVg,oK],[A,TJH],[A,TJH,oK],[A,TJH,SiPVg],[A,TJH,SiPVg,oK],[A,TJH,pqci],[A,TJH,pqci,oK],[A,TJH,pqci,SiPVg],[A,TJH,pqci,SiPVg,oK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_227() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_228() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tJGH","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[tJGH],[tJGH,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_229() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nwy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nwy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_230() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fnUq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fnUq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_231() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bc","g","Mhuh","kDtu","luJgz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[luJgz],[kDtu],[kDtu,luJgz],[Mhuh],[Mhuh,luJgz],[Mhuh,kDtu],[Mhuh,kDtu,luJgz],[g],[g,luJgz],[g,kDtu],[g,kDtu,luJgz],[g,Mhuh],[g,Mhuh,luJgz],[g,Mhuh,kDtu],[g,Mhuh,kDtu,luJgz],[bc],[bc,luJgz],[bc,kDtu],[bc,kDtu,luJgz],[bc,Mhuh],[bc,Mhuh,luJgz],[bc,Mhuh,kDtu],[bc,Mhuh,kDtu,luJgz],[bc,g],[bc,g,luJgz],[bc,g,kDtu],[bc,g,kDtu,luJgz],[bc,g,Mhuh],[bc,g,Mhuh,luJgz],[bc,g,Mhuh,kDtu],[bc,g,Mhuh,kDtu,luJgz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_232() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dJ","aGncZ","xtgpo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xtgpo],[aGncZ],[aGncZ,xtgpo],[dJ],[dJ,xtgpo],[dJ,aGncZ],[dJ,aGncZ,xtgpo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_233() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ssyC","jf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jf],[ssyC],[ssyC,jf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_234() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mKla","GN","x","tFDcy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tFDcy],[x],[x,tFDcy],[GN],[GN,tFDcy],[GN,x],[GN,x,tFDcy],[mKla],[mKla,tFDcy],[mKla,x],[mKla,x,tFDcy],[mKla,GN],[mKla,GN,tFDcy],[mKla,GN,x],[mKla,GN,x,tFDcy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_235() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OqR","bUJ","hQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hQ],[bUJ],[bUJ,hQ],[OqR],[OqR,hQ],[OqR,bUJ],[OqR,bUJ,hQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_236() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pc","pNt","vA","Ao")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ao],[vA],[vA,Ao],[pNt],[pNt,Ao],[pNt,vA],[pNt,vA,Ao],[pc],[pc,Ao],[pc,vA],[pc,vA,Ao],[pc,pNt],[pc,pNt,Ao],[pc,pNt,vA],[pc,pNt,vA,Ao]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_237() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yDT","DQj","rfNE","FU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FU],[rfNE],[rfNE,FU],[DQj],[DQj,FU],[DQj,rfNE],[DQj,rfNE,FU],[yDT],[yDT,FU],[yDT,rfNE],[yDT,rfNE,FU],[yDT,DQj],[yDT,DQj,FU],[yDT,DQj,rfNE],[yDT,DQj,rfNE,FU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_238() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FmVWf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FmVWf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_239() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","vBQhE","wsJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wsJ],[vBQhE],[vBQhE,wsJ],[Y],[Y,wsJ],[Y,vBQhE],[Y,vBQhE,wsJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_240() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TrDgU","NbUg","vRg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vRg],[NbUg],[NbUg,vRg],[TrDgU],[TrDgU,vRg],[TrDgU,NbUg],[TrDgU,NbUg,vRg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_241() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","otTp","h","fjjF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fjjF],[h],[h,fjjF],[otTp],[otTp,fjjF],[otTp,h],[otTp,h,fjjF],[B],[B,fjjF],[B,h],[B,h,fjjF],[B,otTp],[B,otTp,fjjF],[B,otTp,h],[B,otTp,h,fjjF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_242() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FV","KSx","gHgrj","yGSMT","wd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wd],[yGSMT],[yGSMT,wd],[gHgrj],[gHgrj,wd],[gHgrj,yGSMT],[gHgrj,yGSMT,wd],[KSx],[KSx,wd],[KSx,yGSMT],[KSx,yGSMT,wd],[KSx,gHgrj],[KSx,gHgrj,wd],[KSx,gHgrj,yGSMT],[KSx,gHgrj,yGSMT,wd],[FV],[FV,wd],[FV,yGSMT],[FV,yGSMT,wd],[FV,gHgrj],[FV,gHgrj,wd],[FV,gHgrj,yGSMT],[FV,gHgrj,yGSMT,wd],[FV,KSx],[FV,KSx,wd],[FV,KSx,yGSMT],[FV,KSx,yGSMT,wd],[FV,KSx,gHgrj],[FV,KSx,gHgrj,wd],[FV,KSx,gHgrj,yGSMT],[FV,KSx,gHgrj,yGSMT,wd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_243() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_244() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vsi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vsi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_245() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aGfJR","GUE","ZFFi","dNd","fU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fU],[dNd],[dNd,fU],[ZFFi],[ZFFi,fU],[ZFFi,dNd],[ZFFi,dNd,fU],[GUE],[GUE,fU],[GUE,dNd],[GUE,dNd,fU],[GUE,ZFFi],[GUE,ZFFi,fU],[GUE,ZFFi,dNd],[GUE,ZFFi,dNd,fU],[aGfJR],[aGfJR,fU],[aGfJR,dNd],[aGfJR,dNd,fU],[aGfJR,ZFFi],[aGfJR,ZFFi,fU],[aGfJR,ZFFi,dNd],[aGfJR,ZFFi,dNd,fU],[aGfJR,GUE],[aGfJR,GUE,fU],[aGfJR,GUE,dNd],[aGfJR,GUE,dNd,fU],[aGfJR,GUE,ZFFi],[aGfJR,GUE,ZFFi,fU],[aGfJR,GUE,ZFFi,dNd],[aGfJR,GUE,ZFFi,dNd,fU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_246() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","Lv","lWH","TOW","sXBQf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sXBQf],[TOW],[TOW,sXBQf],[lWH],[lWH,sXBQf],[lWH,TOW],[lWH,TOW,sXBQf],[Lv],[Lv,sXBQf],[Lv,TOW],[Lv,TOW,sXBQf],[Lv,lWH],[Lv,lWH,sXBQf],[Lv,lWH,TOW],[Lv,lWH,TOW,sXBQf],[s],[s,sXBQf],[s,TOW],[s,TOW,sXBQf],[s,lWH],[s,lWH,sXBQf],[s,lWH,TOW],[s,lWH,TOW,sXBQf],[s,Lv],[s,Lv,sXBQf],[s,Lv,TOW],[s,Lv,TOW,sXBQf],[s,Lv,lWH],[s,Lv,lWH,sXBQf],[s,Lv,lWH,TOW],[s,Lv,lWH,TOW,sXBQf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_247() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qgHdp","LH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LH],[qgHdp],[qgHdp,LH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_248() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FrLYd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FrLYd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_249() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","muc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[muc],[f],[f,muc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_250() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","V","ni")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ni],[V],[V,ni],[a],[a,ni],[a,V],[a,V,ni]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_251() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","SCJW","Ws","ZBqWk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZBqWk],[Ws],[Ws,ZBqWk],[SCJW],[SCJW,ZBqWk],[SCJW,Ws],[SCJW,Ws,ZBqWk],[A],[A,ZBqWk],[A,Ws],[A,Ws,ZBqWk],[A,SCJW],[A,SCJW,ZBqWk],[A,SCJW,Ws],[A,SCJW,Ws,ZBqWk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_252() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zHbXe","sXNZe","QUl","CRFi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CRFi],[QUl],[QUl,CRFi],[sXNZe],[sXNZe,CRFi],[sXNZe,QUl],[sXNZe,QUl,CRFi],[zHbXe],[zHbXe,CRFi],[zHbXe,QUl],[zHbXe,QUl,CRFi],[zHbXe,sXNZe],[zHbXe,sXNZe,CRFi],[zHbXe,sXNZe,QUl],[zHbXe,sXNZe,QUl,CRFi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_253() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mgfur","Pg","nNVRI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nNVRI],[Pg],[Pg,nNVRI],[Mgfur],[Mgfur,nNVRI],[Mgfur,Pg],[Mgfur,Pg,nNVRI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_254() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hzyL","oTN","zt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zt],[oTN],[oTN,zt],[hzyL],[hzyL,zt],[hzyL,oTN],[hzyL,oTN,zt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_255() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_256() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HJyrE","dU","d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d],[dU],[dU,d],[HJyrE],[HJyrE,d],[HJyrE,dU],[HJyrE,dU,d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_257() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dt","gQm","RGY","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[RGY],[RGY,M],[gQm],[gQm,M],[gQm,RGY],[gQm,RGY,M],[Dt],[Dt,M],[Dt,RGY],[Dt,RGY,M],[Dt,gQm],[Dt,gQm,M],[Dt,gQm,RGY],[Dt,gQm,RGY,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_258() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BQWr","DQRuM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DQRuM],[BQWr],[BQWr,DQRuM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_259() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cJVcj","fkqj","fy","ATGus")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ATGus],[fy],[fy,ATGus],[fkqj],[fkqj,ATGus],[fkqj,fy],[fkqj,fy,ATGus],[cJVcj],[cJVcj,ATGus],[cJVcj,fy],[cJVcj,fy,ATGus],[cJVcj,fkqj],[cJVcj,fkqj,ATGus],[cJVcj,fkqj,fy],[cJVcj,fkqj,fy,ATGus]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_260() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","PBYk","ojN","LhMcJ","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[LhMcJ],[LhMcJ,o],[ojN],[ojN,o],[ojN,LhMcJ],[ojN,LhMcJ,o],[PBYk],[PBYk,o],[PBYk,LhMcJ],[PBYk,LhMcJ,o],[PBYk,ojN],[PBYk,ojN,o],[PBYk,ojN,LhMcJ],[PBYk,ojN,LhMcJ,o],[A],[A,o],[A,LhMcJ],[A,LhMcJ,o],[A,ojN],[A,ojN,o],[A,ojN,LhMcJ],[A,ojN,LhMcJ,o],[A,PBYk],[A,PBYk,o],[A,PBYk,LhMcJ],[A,PBYk,LhMcJ,o],[A,PBYk,ojN],[A,PBYk,ojN,o],[A,PBYk,ojN,LhMcJ],[A,PBYk,ojN,LhMcJ,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_261() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ejV","RqWn","ESREu","nSrL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nSrL],[ESREu],[ESREu,nSrL],[RqWn],[RqWn,nSrL],[RqWn,ESREu],[RqWn,ESREu,nSrL],[ejV],[ejV,nSrL],[ejV,ESREu],[ejV,ESREu,nSrL],[ejV,RqWn],[ejV,RqWn,nSrL],[ejV,RqWn,ESREu],[ejV,RqWn,ESREu,nSrL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_262() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OHoz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OHoz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_263() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K","ID")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ID],[K],[K,ID]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_264() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kIncZ","KKb","tVX","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[tVX],[tVX,X],[KKb],[KKb,X],[KKb,tVX],[KKb,tVX,X],[kIncZ],[kIncZ,X],[kIncZ,tVX],[kIncZ,tVX,X],[kIncZ,KKb],[kIncZ,KKb,X],[kIncZ,KKb,tVX],[kIncZ,KKb,tVX,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_265() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","s","EJElS","hVxV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hVxV],[EJElS],[EJElS,hVxV],[s],[s,hVxV],[s,EJElS],[s,EJElS,hVxV],[p],[p,hVxV],[p,EJElS],[p,EJElS,hVxV],[p,s],[p,s,hVxV],[p,s,EJElS],[p,s,EJElS,hVxV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_266() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XZ","ddy","MwrG","dAk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dAk],[MwrG],[MwrG,dAk],[ddy],[ddy,dAk],[ddy,MwrG],[ddy,MwrG,dAk],[XZ],[XZ,dAk],[XZ,MwrG],[XZ,MwrG,dAk],[XZ,ddy],[XZ,ddy,dAk],[XZ,ddy,MwrG],[XZ,ddy,MwrG,dAk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_267() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OYjv","E","QXhB","Byo","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[Byo],[Byo,M],[QXhB],[QXhB,M],[QXhB,Byo],[QXhB,Byo,M],[E],[E,M],[E,Byo],[E,Byo,M],[E,QXhB],[E,QXhB,M],[E,QXhB,Byo],[E,QXhB,Byo,M],[OYjv],[OYjv,M],[OYjv,Byo],[OYjv,Byo,M],[OYjv,QXhB],[OYjv,QXhB,M],[OYjv,QXhB,Byo],[OYjv,QXhB,Byo,M],[OYjv,E],[OYjv,E,M],[OYjv,E,Byo],[OYjv,E,Byo,M],[OYjv,E,QXhB],[OYjv,E,QXhB,M],[OYjv,E,QXhB,Byo],[OYjv,E,QXhB,Byo,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_268() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sPOR","WpYo","PxiO","xNnf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xNnf],[PxiO],[PxiO,xNnf],[WpYo],[WpYo,xNnf],[WpYo,PxiO],[WpYo,PxiO,xNnf],[sPOR],[sPOR,xNnf],[sPOR,PxiO],[sPOR,PxiO,xNnf],[sPOR,WpYo],[sPOR,WpYo,xNnf],[sPOR,WpYo,PxiO],[sPOR,WpYo,PxiO,xNnf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_269() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oo","xO","wqQs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wqQs],[xO],[xO,wqQs],[oo],[oo,wqQs],[oo,xO],[oo,xO,wqQs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_270() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TPF","vB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vB],[TPF],[TPF,vB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_271() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mM","yAl","ieWD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ieWD],[yAl],[yAl,ieWD],[mM],[mM,ieWD],[mM,yAl],[mM,yAl,ieWD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_272() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UF","NAAe","WVL","QP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QP],[WVL],[WVL,QP],[NAAe],[NAAe,QP],[NAAe,WVL],[NAAe,WVL,QP],[UF],[UF,QP],[UF,WVL],[UF,WVL,QP],[UF,NAAe],[UF,NAAe,QP],[UF,NAAe,WVL],[UF,NAAe,WVL,QP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_273() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LeF","Ezb","cJhC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cJhC],[Ezb],[Ezb,cJhC],[LeF],[LeF,cJhC],[LeF,Ezb],[LeF,Ezb,cJhC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_274() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DVVpS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DVVpS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_275() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MxVq","Ko","e","YuIpG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YuIpG],[e],[e,YuIpG],[Ko],[Ko,YuIpG],[Ko,e],[Ko,e,YuIpG],[MxVq],[MxVq,YuIpG],[MxVq,e],[MxVq,e,YuIpG],[MxVq,Ko],[MxVq,Ko,YuIpG],[MxVq,Ko,e],[MxVq,Ko,e,YuIpG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_276() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vK","uFUJB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uFUJB],[vK],[vK,uFUJB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_277() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XhUG","pjDy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pjDy],[XhUG],[XhUG,pjDy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_278() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","EQa","jDQEa","lt","zzDZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zzDZ],[lt],[lt,zzDZ],[jDQEa],[jDQEa,zzDZ],[jDQEa,lt],[jDQEa,lt,zzDZ],[EQa],[EQa,zzDZ],[EQa,lt],[EQa,lt,zzDZ],[EQa,jDQEa],[EQa,jDQEa,zzDZ],[EQa,jDQEa,lt],[EQa,jDQEa,lt,zzDZ],[P],[P,zzDZ],[P,lt],[P,lt,zzDZ],[P,jDQEa],[P,jDQEa,zzDZ],[P,jDQEa,lt],[P,jDQEa,lt,zzDZ],[P,EQa],[P,EQa,zzDZ],[P,EQa,lt],[P,EQa,lt,zzDZ],[P,EQa,jDQEa],[P,EQa,jDQEa,zzDZ],[P,EQa,jDQEa,lt],[P,EQa,jDQEa,lt,zzDZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_279() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "onzW","BWrr","ybt","axlG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[axlG],[ybt],[ybt,axlG],[BWrr],[BWrr,axlG],[BWrr,ybt],[BWrr,ybt,axlG],[onzW],[onzW,axlG],[onzW,ybt],[onzW,ybt,axlG],[onzW,BWrr],[onzW,BWrr,axlG],[onzW,BWrr,ybt],[onzW,BWrr,ybt,axlG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_280() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ps","g","uvz","zW","dvsa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dvsa],[zW],[zW,dvsa],[uvz],[uvz,dvsa],[uvz,zW],[uvz,zW,dvsa],[g],[g,dvsa],[g,zW],[g,zW,dvsa],[g,uvz],[g,uvz,dvsa],[g,uvz,zW],[g,uvz,zW,dvsa],[ps],[ps,dvsa],[ps,zW],[ps,zW,dvsa],[ps,uvz],[ps,uvz,dvsa],[ps,uvz,zW],[ps,uvz,zW,dvsa],[ps,g],[ps,g,dvsa],[ps,g,zW],[ps,g,zW,dvsa],[ps,g,uvz],[ps,g,uvz,dvsa],[ps,g,uvz,zW],[ps,g,uvz,zW,dvsa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_281() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ulk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ulk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_282() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","hzX","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[hzX],[hzX,l],[t],[t,l],[t,hzX],[t,hzX,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_283() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lH","gXFgj","OHG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OHG],[gXFgj],[gXFgj,OHG],[lH],[lH,OHG],[lH,gXFgj],[lH,gXFgj,OHG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_284() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tmXRJ","lN","jis","OAXGq","zd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zd],[OAXGq],[OAXGq,zd],[jis],[jis,zd],[jis,OAXGq],[jis,OAXGq,zd],[lN],[lN,zd],[lN,OAXGq],[lN,OAXGq,zd],[lN,jis],[lN,jis,zd],[lN,jis,OAXGq],[lN,jis,OAXGq,zd],[tmXRJ],[tmXRJ,zd],[tmXRJ,OAXGq],[tmXRJ,OAXGq,zd],[tmXRJ,jis],[tmXRJ,jis,zd],[tmXRJ,jis,OAXGq],[tmXRJ,jis,OAXGq,zd],[tmXRJ,lN],[tmXRJ,lN,zd],[tmXRJ,lN,OAXGq],[tmXRJ,lN,OAXGq,zd],[tmXRJ,lN,jis],[tmXRJ,lN,jis,zd],[tmXRJ,lN,jis,OAXGq],[tmXRJ,lN,jis,OAXGq,zd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_285() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VktpC","zy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zy],[VktpC],[VktpC,zy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_286() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lEP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lEP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_287() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","INi","f","ZNbpc","pJT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pJT],[ZNbpc],[ZNbpc,pJT],[f],[f,pJT],[f,ZNbpc],[f,ZNbpc,pJT],[INi],[INi,pJT],[INi,ZNbpc],[INi,ZNbpc,pJT],[INi,f],[INi,f,pJT],[INi,f,ZNbpc],[INi,f,ZNbpc,pJT],[S],[S,pJT],[S,ZNbpc],[S,ZNbpc,pJT],[S,f],[S,f,pJT],[S,f,ZNbpc],[S,f,ZNbpc,pJT],[S,INi],[S,INi,pJT],[S,INi,ZNbpc],[S,INi,ZNbpc,pJT],[S,INi,f],[S,INi,f,pJT],[S,INi,f,ZNbpc],[S,INi,f,ZNbpc,pJT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_288() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XgAQd","Jt","YWrfs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YWrfs],[Jt],[Jt,YWrfs],[XgAQd],[XgAQd,YWrfs],[XgAQd,Jt],[XgAQd,Jt,YWrfs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_289() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wZx","e","TQYgV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TQYgV],[e],[e,TQYgV],[wZx],[wZx,TQYgV],[wZx,e],[wZx,e,TQYgV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_290() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XI","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[XI],[XI,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_291() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","M","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[M],[M,m],[A],[A,m],[A,M],[A,M,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_292() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zM","NijVo","QWmtw","My","HuI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HuI],[My],[My,HuI],[QWmtw],[QWmtw,HuI],[QWmtw,My],[QWmtw,My,HuI],[NijVo],[NijVo,HuI],[NijVo,My],[NijVo,My,HuI],[NijVo,QWmtw],[NijVo,QWmtw,HuI],[NijVo,QWmtw,My],[NijVo,QWmtw,My,HuI],[zM],[zM,HuI],[zM,My],[zM,My,HuI],[zM,QWmtw],[zM,QWmtw,HuI],[zM,QWmtw,My],[zM,QWmtw,My,HuI],[zM,NijVo],[zM,NijVo,HuI],[zM,NijVo,My],[zM,NijVo,My,HuI],[zM,NijVo,QWmtw],[zM,NijVo,QWmtw,HuI],[zM,NijVo,QWmtw,My],[zM,NijVo,QWmtw,My,HuI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_293() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bVEUl","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[bVEUl],[bVEUl,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_294() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Yb","J","FA","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[FA],[FA,L],[J],[J,L],[J,FA],[J,FA,L],[Yb],[Yb,L],[Yb,FA],[Yb,FA,L],[Yb,J],[Yb,J,L],[Yb,J,FA],[Yb,J,FA,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_295() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kesQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kesQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_296() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gqp","iNP","dzs","sxFY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sxFY],[dzs],[dzs,sxFY],[iNP],[iNP,sxFY],[iNP,dzs],[iNP,dzs,sxFY],[Gqp],[Gqp,sxFY],[Gqp,dzs],[Gqp,dzs,sxFY],[Gqp,iNP],[Gqp,iNP,sxFY],[Gqp,iNP,dzs],[Gqp,iNP,dzs,sxFY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_297() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_298() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DSQ","E","rzC","LZnHo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LZnHo],[rzC],[rzC,LZnHo],[E],[E,LZnHo],[E,rzC],[E,rzC,LZnHo],[DSQ],[DSQ,LZnHo],[DSQ,rzC],[DSQ,rzC,LZnHo],[DSQ,E],[DSQ,E,LZnHo],[DSQ,E,rzC],[DSQ,E,rzC,LZnHo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_299() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","sT","Y","Whm","UjS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UjS],[Whm],[Whm,UjS],[Y],[Y,UjS],[Y,Whm],[Y,Whm,UjS],[sT],[sT,UjS],[sT,Whm],[sT,Whm,UjS],[sT,Y],[sT,Y,UjS],[sT,Y,Whm],[sT,Y,Whm,UjS],[q],[q,UjS],[q,Whm],[q,Whm,UjS],[q,Y],[q,Y,UjS],[q,Y,Whm],[q,Y,Whm,UjS],[q,sT],[q,sT,UjS],[q,sT,Whm],[q,sT,Whm,UjS],[q,sT,Y],[q,sT,Y,UjS],[q,sT,Y,Whm],[q,sT,Y,Whm,UjS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_300() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Uwpxd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uwpxd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_301() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","zLZx","Et")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Et],[zLZx],[zLZx,Et],[U],[U,Et],[U,zLZx],[U,zLZx,Et]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_302() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LcNw","tsu","lMwSI","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[lMwSI],[lMwSI,M],[tsu],[tsu,M],[tsu,lMwSI],[tsu,lMwSI,M],[LcNw],[LcNw,M],[LcNw,lMwSI],[LcNw,lMwSI,M],[LcNw,tsu],[LcNw,tsu,M],[LcNw,tsu,lMwSI],[LcNw,tsu,lMwSI,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_303() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CFTZy","bF","F","VIZN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VIZN],[F],[F,VIZN],[bF],[bF,VIZN],[bF,F],[bF,F,VIZN],[CFTZy],[CFTZy,VIZN],[CFTZy,F],[CFTZy,F,VIZN],[CFTZy,bF],[CFTZy,bF,VIZN],[CFTZy,bF,F],[CFTZy,bF,F,VIZN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_304() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ucVJ","g","QH","JcG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JcG],[QH],[QH,JcG],[g],[g,JcG],[g,QH],[g,QH,JcG],[ucVJ],[ucVJ,JcG],[ucVJ,QH],[ucVJ,QH,JcG],[ucVJ,g],[ucVJ,g,JcG],[ucVJ,g,QH],[ucVJ,g,QH,JcG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_305() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bdqjr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bdqjr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_306() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XteE","Pdem")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pdem],[XteE],[XteE,Pdem]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_307() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uww","u","bPU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bPU],[u],[u,bPU],[uww],[uww,bPU],[uww,u],[uww,u,bPU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_308() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ncG","aWm","sgJ","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[sgJ],[sgJ,l],[aWm],[aWm,l],[aWm,sgJ],[aWm,sgJ,l],[ncG],[ncG,l],[ncG,sgJ],[ncG,sgJ,l],[ncG,aWm],[ncG,aWm,l],[ncG,aWm,sgJ],[ncG,aWm,sgJ,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_309() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rKKw","E","vLO","PQrM","QLBA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QLBA],[PQrM],[PQrM,QLBA],[vLO],[vLO,QLBA],[vLO,PQrM],[vLO,PQrM,QLBA],[E],[E,QLBA],[E,PQrM],[E,PQrM,QLBA],[E,vLO],[E,vLO,QLBA],[E,vLO,PQrM],[E,vLO,PQrM,QLBA],[rKKw],[rKKw,QLBA],[rKKw,PQrM],[rKKw,PQrM,QLBA],[rKKw,vLO],[rKKw,vLO,QLBA],[rKKw,vLO,PQrM],[rKKw,vLO,PQrM,QLBA],[rKKw,E],[rKKw,E,QLBA],[rKKw,E,PQrM],[rKKw,E,PQrM,QLBA],[rKKw,E,vLO],[rKKw,E,vLO,QLBA],[rKKw,E,vLO,PQrM],[rKKw,E,vLO,PQrM,QLBA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_310() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","PlH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PlH],[S],[S,PlH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_311() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ytmI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ytmI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_312() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h","vNaiy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vNaiy],[h],[h,vNaiy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_313() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kPSK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kPSK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_314() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EZur","zLIZl","FM","gAtmX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gAtmX],[FM],[FM,gAtmX],[zLIZl],[zLIZl,gAtmX],[zLIZl,FM],[zLIZl,FM,gAtmX],[EZur],[EZur,gAtmX],[EZur,FM],[EZur,FM,gAtmX],[EZur,zLIZl],[EZur,zLIZl,gAtmX],[EZur,zLIZl,FM],[EZur,zLIZl,FM,gAtmX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_315() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jK","x","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[x],[x,N],[jK],[jK,N],[jK,x],[jK,x,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_316() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wiqJJ","FJ","ybsx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ybsx],[FJ],[FJ,ybsx],[wiqJJ],[wiqJJ,ybsx],[wiqJJ,FJ],[wiqJJ,FJ,ybsx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_317() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FPFC","iIJC","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[iIJC],[iIJC,M],[FPFC],[FPFC,M],[FPFC,iIJC],[FPFC,iIJC,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_318() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_319() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HRbC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HRbC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_320() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qnBE","wYwQM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wYwQM],[qnBE],[qnBE,wYwQM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_321() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","yYISh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yYISh],[A],[A,yYISh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_322() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HKDq","R","Cz","kWlYz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kWlYz],[Cz],[Cz,kWlYz],[R],[R,kWlYz],[R,Cz],[R,Cz,kWlYz],[HKDq],[HKDq,kWlYz],[HKDq,Cz],[HKDq,Cz,kWlYz],[HKDq,R],[HKDq,R,kWlYz],[HKDq,R,Cz],[HKDq,R,Cz,kWlYz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_323() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sh","m","Bo","DiC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DiC],[Bo],[Bo,DiC],[m],[m,DiC],[m,Bo],[m,Bo,DiC],[sh],[sh,DiC],[sh,Bo],[sh,Bo,DiC],[sh,m],[sh,m,DiC],[sh,m,Bo],[sh,m,Bo,DiC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_324() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jbh","LDJEK","RUb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RUb],[LDJEK],[LDJEK,RUb],[jbh],[jbh,RUb],[jbh,LDJEK],[jbh,LDJEK,RUb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_325() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FMOJ","w","ftX","qhph")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qhph],[ftX],[ftX,qhph],[w],[w,qhph],[w,ftX],[w,ftX,qhph],[FMOJ],[FMOJ,qhph],[FMOJ,ftX],[FMOJ,ftX,qhph],[FMOJ,w],[FMOJ,w,qhph],[FMOJ,w,ftX],[FMOJ,w,ftX,qhph]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_326() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_327() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HYix","ovI","SzHln","wGDA","LqxWm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LqxWm],[wGDA],[wGDA,LqxWm],[SzHln],[SzHln,LqxWm],[SzHln,wGDA],[SzHln,wGDA,LqxWm],[ovI],[ovI,LqxWm],[ovI,wGDA],[ovI,wGDA,LqxWm],[ovI,SzHln],[ovI,SzHln,LqxWm],[ovI,SzHln,wGDA],[ovI,SzHln,wGDA,LqxWm],[HYix],[HYix,LqxWm],[HYix,wGDA],[HYix,wGDA,LqxWm],[HYix,SzHln],[HYix,SzHln,LqxWm],[HYix,SzHln,wGDA],[HYix,SzHln,wGDA,LqxWm],[HYix,ovI],[HYix,ovI,LqxWm],[HYix,ovI,wGDA],[HYix,ovI,wGDA,LqxWm],[HYix,ovI,SzHln],[HYix,ovI,SzHln,LqxWm],[HYix,ovI,SzHln,wGDA],[HYix,ovI,SzHln,wGDA,LqxWm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_328() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XpbR","C","E","pPZy","fgStE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fgStE],[pPZy],[pPZy,fgStE],[E],[E,fgStE],[E,pPZy],[E,pPZy,fgStE],[C],[C,fgStE],[C,pPZy],[C,pPZy,fgStE],[C,E],[C,E,fgStE],[C,E,pPZy],[C,E,pPZy,fgStE],[XpbR],[XpbR,fgStE],[XpbR,pPZy],[XpbR,pPZy,fgStE],[XpbR,E],[XpbR,E,fgStE],[XpbR,E,pPZy],[XpbR,E,pPZy,fgStE],[XpbR,C],[XpbR,C,fgStE],[XpbR,C,pPZy],[XpbR,C,pPZy,fgStE],[XpbR,C,E],[XpbR,C,E,fgStE],[XpbR,C,E,pPZy],[XpbR,C,E,pPZy,fgStE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_329() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xi","cQfYk","GpJf","px","ep")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ep],[px],[px,ep],[GpJf],[GpJf,ep],[GpJf,px],[GpJf,px,ep],[cQfYk],[cQfYk,ep],[cQfYk,px],[cQfYk,px,ep],[cQfYk,GpJf],[cQfYk,GpJf,ep],[cQfYk,GpJf,px],[cQfYk,GpJf,px,ep],[Xi],[Xi,ep],[Xi,px],[Xi,px,ep],[Xi,GpJf],[Xi,GpJf,ep],[Xi,GpJf,px],[Xi,GpJf,px,ep],[Xi,cQfYk],[Xi,cQfYk,ep],[Xi,cQfYk,px],[Xi,cQfYk,px,ep],[Xi,cQfYk,GpJf],[Xi,cQfYk,GpJf,ep],[Xi,cQfYk,GpJf,px],[Xi,cQfYk,GpJf,px,ep]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_330() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","hMb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hMb],[A],[A,hMb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_331() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LUAh","Vyw","nfO","JAUH","pJAb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pJAb],[JAUH],[JAUH,pJAb],[nfO],[nfO,pJAb],[nfO,JAUH],[nfO,JAUH,pJAb],[Vyw],[Vyw,pJAb],[Vyw,JAUH],[Vyw,JAUH,pJAb],[Vyw,nfO],[Vyw,nfO,pJAb],[Vyw,nfO,JAUH],[Vyw,nfO,JAUH,pJAb],[LUAh],[LUAh,pJAb],[LUAh,JAUH],[LUAh,JAUH,pJAb],[LUAh,nfO],[LUAh,nfO,pJAb],[LUAh,nfO,JAUH],[LUAh,nfO,JAUH,pJAb],[LUAh,Vyw],[LUAh,Vyw,pJAb],[LUAh,Vyw,JAUH],[LUAh,Vyw,JAUH,pJAb],[LUAh,Vyw,nfO],[LUAh,Vyw,nfO,pJAb],[LUAh,Vyw,nfO,JAUH],[LUAh,Vyw,nfO,JAUH,pJAb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_332() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xx","ODmEE","dpQ","FlJVy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FlJVy],[dpQ],[dpQ,FlJVy],[ODmEE],[ODmEE,FlJVy],[ODmEE,dpQ],[ODmEE,dpQ,FlJVy],[xx],[xx,FlJVy],[xx,dpQ],[xx,dpQ,FlJVy],[xx,ODmEE],[xx,ODmEE,FlJVy],[xx,ODmEE,dpQ],[xx,ODmEE,dpQ,FlJVy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_333() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rh","eyOCu","m","CB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CB],[m],[m,CB],[eyOCu],[eyOCu,CB],[eyOCu,m],[eyOCu,m,CB],[Rh],[Rh,CB],[Rh,m],[Rh,m,CB],[Rh,eyOCu],[Rh,eyOCu,CB],[Rh,eyOCu,m],[Rh,eyOCu,m,CB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_334() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kTVc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kTVc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_335() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ljk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ljk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_336() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kUBx","Xr","OY","Mz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mz],[OY],[OY,Mz],[Xr],[Xr,Mz],[Xr,OY],[Xr,OY,Mz],[kUBx],[kUBx,Mz],[kUBx,OY],[kUBx,OY,Mz],[kUBx,Xr],[kUBx,Xr,Mz],[kUBx,Xr,OY],[kUBx,Xr,OY,Mz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_337() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RAcN","Hvz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hvz],[RAcN],[RAcN,Hvz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_338() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CxEu","xXtBk","RngSc","Vjr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vjr],[RngSc],[RngSc,Vjr],[xXtBk],[xXtBk,Vjr],[xXtBk,RngSc],[xXtBk,RngSc,Vjr],[CxEu],[CxEu,Vjr],[CxEu,RngSc],[CxEu,RngSc,Vjr],[CxEu,xXtBk],[CxEu,xXtBk,Vjr],[CxEu,xXtBk,RngSc],[CxEu,xXtBk,RngSc,Vjr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_339() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ujU","a","w","rFJ","zhen")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zhen],[rFJ],[rFJ,zhen],[w],[w,zhen],[w,rFJ],[w,rFJ,zhen],[a],[a,zhen],[a,rFJ],[a,rFJ,zhen],[a,w],[a,w,zhen],[a,w,rFJ],[a,w,rFJ,zhen],[ujU],[ujU,zhen],[ujU,rFJ],[ujU,rFJ,zhen],[ujU,w],[ujU,w,zhen],[ujU,w,rFJ],[ujU,w,rFJ,zhen],[ujU,a],[ujU,a,zhen],[ujU,a,rFJ],[ujU,a,rFJ,zhen],[ujU,a,w],[ujU,a,w,zhen],[ujU,a,w,rFJ],[ujU,a,w,rFJ,zhen]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_340() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VrwN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VrwN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_341() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tIJIb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tIJIb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_342() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[S]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_343() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lBfK","N","vd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vd],[N],[N,vd],[lBfK],[lBfK,vd],[lBfK,N],[lBfK,N,vd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_344() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NN","wMcq","h","hedGa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hedGa],[h],[h,hedGa],[wMcq],[wMcq,hedGa],[wMcq,h],[wMcq,h,hedGa],[NN],[NN,hedGa],[NN,h],[NN,h,hedGa],[NN,wMcq],[NN,wMcq,hedGa],[NN,wMcq,h],[NN,wMcq,h,hedGa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_345() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vhkv","tl","jd","dYcr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dYcr],[jd],[jd,dYcr],[tl],[tl,dYcr],[tl,jd],[tl,jd,dYcr],[Vhkv],[Vhkv,dYcr],[Vhkv,jd],[Vhkv,jd,dYcr],[Vhkv,tl],[Vhkv,tl,dYcr],[Vhkv,tl,jd],[Vhkv,tl,jd,dYcr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_346() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_347() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rXrfI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rXrfI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_348() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mBN","cqv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cqv],[mBN],[mBN,cqv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_349() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aa","f","DzzM","SO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SO],[DzzM],[DzzM,SO],[f],[f,SO],[f,DzzM],[f,DzzM,SO],[Aa],[Aa,SO],[Aa,DzzM],[Aa,DzzM,SO],[Aa,f],[Aa,f,SO],[Aa,f,DzzM],[Aa,f,DzzM,SO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_350() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QGY","bZph")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bZph],[QGY],[QGY,bZph]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_351() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RbBF","tFMT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tFMT],[RbBF],[RbBF,tFMT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_352() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KsByg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KsByg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_353() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jTxo","gLiqH","mR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mR],[gLiqH],[gLiqH,mR],[jTxo],[jTxo,mR],[jTxo,gLiqH],[jTxo,gLiqH,mR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_354() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wBM","jLg","olA","cIuRM","QPigC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QPigC],[cIuRM],[cIuRM,QPigC],[olA],[olA,QPigC],[olA,cIuRM],[olA,cIuRM,QPigC],[jLg],[jLg,QPigC],[jLg,cIuRM],[jLg,cIuRM,QPigC],[jLg,olA],[jLg,olA,QPigC],[jLg,olA,cIuRM],[jLg,olA,cIuRM,QPigC],[wBM],[wBM,QPigC],[wBM,cIuRM],[wBM,cIuRM,QPigC],[wBM,olA],[wBM,olA,QPigC],[wBM,olA,cIuRM],[wBM,olA,cIuRM,QPigC],[wBM,jLg],[wBM,jLg,QPigC],[wBM,jLg,cIuRM],[wBM,jLg,cIuRM,QPigC],[wBM,jLg,olA],[wBM,jLg,olA,QPigC],[wBM,jLg,olA,cIuRM],[wBM,jLg,olA,cIuRM,QPigC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_355() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mls","Z","LyVR","muDz","ZY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZY],[muDz],[muDz,ZY],[LyVR],[LyVR,ZY],[LyVR,muDz],[LyVR,muDz,ZY],[Z],[Z,ZY],[Z,muDz],[Z,muDz,ZY],[Z,LyVR],[Z,LyVR,ZY],[Z,LyVR,muDz],[Z,LyVR,muDz,ZY],[mls],[mls,ZY],[mls,muDz],[mls,muDz,ZY],[mls,LyVR],[mls,LyVR,ZY],[mls,LyVR,muDz],[mls,LyVR,muDz,ZY],[mls,Z],[mls,Z,ZY],[mls,Z,muDz],[mls,Z,muDz,ZY],[mls,Z,LyVR],[mls,Z,LyVR,ZY],[mls,Z,LyVR,muDz],[mls,Z,LyVR,muDz,ZY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_356() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mxa","LTuq","wA","fC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fC],[wA],[wA,fC],[LTuq],[LTuq,fC],[LTuq,wA],[LTuq,wA,fC],[mxa],[mxa,fC],[mxa,wA],[mxa,wA,fC],[mxa,LTuq],[mxa,LTuq,fC],[mxa,LTuq,wA],[mxa,LTuq,wA,fC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_357() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Te","Dw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dw],[Te],[Te,Dw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_358() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bMM","U","WsWZx","vQ","eS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eS],[vQ],[vQ,eS],[WsWZx],[WsWZx,eS],[WsWZx,vQ],[WsWZx,vQ,eS],[U],[U,eS],[U,vQ],[U,vQ,eS],[U,WsWZx],[U,WsWZx,eS],[U,WsWZx,vQ],[U,WsWZx,vQ,eS],[bMM],[bMM,eS],[bMM,vQ],[bMM,vQ,eS],[bMM,WsWZx],[bMM,WsWZx,eS],[bMM,WsWZx,vQ],[bMM,WsWZx,vQ,eS],[bMM,U],[bMM,U,eS],[bMM,U,vQ],[bMM,U,vQ,eS],[bMM,U,WsWZx],[bMM,U,WsWZx,eS],[bMM,U,WsWZx,vQ],[bMM,U,WsWZx,vQ,eS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_359() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MZBi","sPin","vhN","YBFIg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YBFIg],[vhN],[vhN,YBFIg],[sPin],[sPin,YBFIg],[sPin,vhN],[sPin,vhN,YBFIg],[MZBi],[MZBi,YBFIg],[MZBi,vhN],[MZBi,vhN,YBFIg],[MZBi,sPin],[MZBi,sPin,YBFIg],[MZBi,sPin,vhN],[MZBi,sPin,vhN,YBFIg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_360() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zaVg","Vh","CObDf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CObDf],[Vh],[Vh,CObDf],[zaVg],[zaVg,CObDf],[zaVg,Vh],[zaVg,Vh,CObDf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_361() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aW","Tnr","qNCSc","nzwC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nzwC],[qNCSc],[qNCSc,nzwC],[Tnr],[Tnr,nzwC],[Tnr,qNCSc],[Tnr,qNCSc,nzwC],[aW],[aW,nzwC],[aW,qNCSc],[aW,qNCSc,nzwC],[aW,Tnr],[aW,Tnr,nzwC],[aW,Tnr,qNCSc],[aW,Tnr,qNCSc,nzwC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_362() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bT","lpHs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lpHs],[bT],[bT,lpHs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_363() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qfZr","GphwY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GphwY],[qfZr],[qfZr,GphwY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_364() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HN","fciNU","i","YEPuz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YEPuz],[i],[i,YEPuz],[fciNU],[fciNU,YEPuz],[fciNU,i],[fciNU,i,YEPuz],[HN],[HN,YEPuz],[HN,i],[HN,i,YEPuz],[HN,fciNU],[HN,fciNU,YEPuz],[HN,fciNU,i],[HN,fciNU,i,YEPuz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_365() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","PR","Bx","hkay")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hkay],[Bx],[Bx,hkay],[PR],[PR,hkay],[PR,Bx],[PR,Bx,hkay],[B],[B,hkay],[B,Bx],[B,Bx,hkay],[B,PR],[B,PR,hkay],[B,PR,Bx],[B,PR,Bx,hkay]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_366() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[r]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_367() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xZX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xZX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_368() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","FFK","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[FFK],[FFK,N],[g],[g,N],[g,FFK],[g,FFK,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_369() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "opZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[opZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_370() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zz","P","JtL","njOno","MDt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MDt],[njOno],[njOno,MDt],[JtL],[JtL,MDt],[JtL,njOno],[JtL,njOno,MDt],[P],[P,MDt],[P,njOno],[P,njOno,MDt],[P,JtL],[P,JtL,MDt],[P,JtL,njOno],[P,JtL,njOno,MDt],[Zz],[Zz,MDt],[Zz,njOno],[Zz,njOno,MDt],[Zz,JtL],[Zz,JtL,MDt],[Zz,JtL,njOno],[Zz,JtL,njOno,MDt],[Zz,P],[Zz,P,MDt],[Zz,P,njOno],[Zz,P,njOno,MDt],[Zz,P,JtL],[Zz,P,JtL,MDt],[Zz,P,JtL,njOno],[Zz,P,JtL,njOno,MDt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_371() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bRxd","yK","Nbgz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nbgz],[yK],[yK,Nbgz],[bRxd],[bRxd,Nbgz],[bRxd,yK],[bRxd,yK,Nbgz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_372() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","v","Lk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lk],[v],[v,Lk],[Q],[Q,Lk],[Q,v],[Q,v,Lk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_373() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cD","LzC","xxWQT","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[xxWQT],[xxWQT,J],[LzC],[LzC,J],[LzC,xxWQT],[LzC,xxWQT,J],[cD],[cD,J],[cD,xxWQT],[cD,xxWQT,J],[cD,LzC],[cD,LzC,J],[cD,LzC,xxWQT],[cD,LzC,xxWQT,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_374() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KUBwG","ullV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ullV],[KUBwG],[KUBwG,ullV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_375() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lP","D","u","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[u],[u,X],[D],[D,X],[D,u],[D,u,X],[lP],[lP,X],[lP,u],[lP,u,X],[lP,D],[lP,D,X],[lP,D,u],[lP,D,u,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_376() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mpW","g","DOT","HIObH","WilQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WilQ],[HIObH],[HIObH,WilQ],[DOT],[DOT,WilQ],[DOT,HIObH],[DOT,HIObH,WilQ],[g],[g,WilQ],[g,HIObH],[g,HIObH,WilQ],[g,DOT],[g,DOT,WilQ],[g,DOT,HIObH],[g,DOT,HIObH,WilQ],[mpW],[mpW,WilQ],[mpW,HIObH],[mpW,HIObH,WilQ],[mpW,DOT],[mpW,DOT,WilQ],[mpW,DOT,HIObH],[mpW,DOT,HIObH,WilQ],[mpW,g],[mpW,g,WilQ],[mpW,g,HIObH],[mpW,g,HIObH,WilQ],[mpW,g,DOT],[mpW,g,DOT,WilQ],[mpW,g,DOT,HIObH],[mpW,g,DOT,HIObH,WilQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_377() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "efgDF","l","HT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HT],[l],[l,HT],[efgDF],[efgDF,HT],[efgDF,l],[efgDF,l,HT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_378() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mo","U","sx","OZwLy","pO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pO],[OZwLy],[OZwLy,pO],[sx],[sx,pO],[sx,OZwLy],[sx,OZwLy,pO],[U],[U,pO],[U,OZwLy],[U,OZwLy,pO],[U,sx],[U,sx,pO],[U,sx,OZwLy],[U,sx,OZwLy,pO],[Mo],[Mo,pO],[Mo,OZwLy],[Mo,OZwLy,pO],[Mo,sx],[Mo,sx,pO],[Mo,sx,OZwLy],[Mo,sx,OZwLy,pO],[Mo,U],[Mo,U,pO],[Mo,U,OZwLy],[Mo,U,OZwLy,pO],[Mo,U,sx],[Mo,U,sx,pO],[Mo,U,sx,OZwLy],[Mo,U,sx,OZwLy,pO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_379() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qzG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qzG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_380() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iy","OpbME","G","UsPC","wItNl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wItNl],[UsPC],[UsPC,wItNl],[G],[G,wItNl],[G,UsPC],[G,UsPC,wItNl],[OpbME],[OpbME,wItNl],[OpbME,UsPC],[OpbME,UsPC,wItNl],[OpbME,G],[OpbME,G,wItNl],[OpbME,G,UsPC],[OpbME,G,UsPC,wItNl],[iy],[iy,wItNl],[iy,UsPC],[iy,UsPC,wItNl],[iy,G],[iy,G,wItNl],[iy,G,UsPC],[iy,G,UsPC,wItNl],[iy,OpbME],[iy,OpbME,wItNl],[iy,OpbME,UsPC],[iy,OpbME,UsPC,wItNl],[iy,OpbME,G],[iy,OpbME,G,wItNl],[iy,OpbME,G,UsPC],[iy,OpbME,G,UsPC,wItNl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_381() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cnkh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cnkh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_382() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bXbxh","nBnA","uVbP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uVbP],[nBnA],[nBnA,uVbP],[bXbxh],[bXbxh,uVbP],[bXbxh,nBnA],[bXbxh,nBnA,uVbP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_383() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vPPy","XORl","MOaN","Kx","Zkzn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zkzn],[Kx],[Kx,Zkzn],[MOaN],[MOaN,Zkzn],[MOaN,Kx],[MOaN,Kx,Zkzn],[XORl],[XORl,Zkzn],[XORl,Kx],[XORl,Kx,Zkzn],[XORl,MOaN],[XORl,MOaN,Zkzn],[XORl,MOaN,Kx],[XORl,MOaN,Kx,Zkzn],[vPPy],[vPPy,Zkzn],[vPPy,Kx],[vPPy,Kx,Zkzn],[vPPy,MOaN],[vPPy,MOaN,Zkzn],[vPPy,MOaN,Kx],[vPPy,MOaN,Kx,Zkzn],[vPPy,XORl],[vPPy,XORl,Zkzn],[vPPy,XORl,Kx],[vPPy,XORl,Kx,Zkzn],[vPPy,XORl,MOaN],[vPPy,XORl,MOaN,Zkzn],[vPPy,XORl,MOaN,Kx],[vPPy,XORl,MOaN,Kx,Zkzn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_384() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GZDB","ZmS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZmS],[GZDB],[GZDB,ZmS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_385() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bWsIt","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[bWsIt],[bWsIt,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_386() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","OPC","OjXI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OjXI],[OPC],[OPC,OjXI],[c],[c,OjXI],[c,OPC],[c,OPC,OjXI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_387() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XABGs","s","TFh","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[TFh],[TFh,x],[s],[s,x],[s,TFh],[s,TFh,x],[XABGs],[XABGs,x],[XABGs,TFh],[XABGs,TFh,x],[XABGs,s],[XABGs,s,x],[XABGs,s,TFh],[XABGs,s,TFh,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_388() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","B","HxT","pfFB","tqf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tqf],[pfFB],[pfFB,tqf],[HxT],[HxT,tqf],[HxT,pfFB],[HxT,pfFB,tqf],[B],[B,tqf],[B,pfFB],[B,pfFB,tqf],[B,HxT],[B,HxT,tqf],[B,HxT,pfFB],[B,HxT,pfFB,tqf],[P],[P,tqf],[P,pfFB],[P,pfFB,tqf],[P,HxT],[P,HxT,tqf],[P,HxT,pfFB],[P,HxT,pfFB,tqf],[P,B],[P,B,tqf],[P,B,pfFB],[P,B,pfFB,tqf],[P,B,HxT],[P,B,HxT,tqf],[P,B,HxT,pfFB],[P,B,HxT,pfFB,tqf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_389() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AQ","hZTsS","C","D")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[D],[C],[C,D],[hZTsS],[hZTsS,D],[hZTsS,C],[hZTsS,C,D],[AQ],[AQ,D],[AQ,C],[AQ,C,D],[AQ,hZTsS],[AQ,hZTsS,D],[AQ,hZTsS,C],[AQ,hZTsS,C,D]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_390() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vqQnK","ShtmN","z","cA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cA],[z],[z,cA],[ShtmN],[ShtmN,cA],[ShtmN,z],[ShtmN,z,cA],[vqQnK],[vqQnK,cA],[vqQnK,z],[vqQnK,z,cA],[vqQnK,ShtmN],[vqQnK,ShtmN,cA],[vqQnK,ShtmN,z],[vqQnK,ShtmN,z,cA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_391() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ompAl","xoKlB","e","EK","gS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gS],[EK],[EK,gS],[e],[e,gS],[e,EK],[e,EK,gS],[xoKlB],[xoKlB,gS],[xoKlB,EK],[xoKlB,EK,gS],[xoKlB,e],[xoKlB,e,gS],[xoKlB,e,EK],[xoKlB,e,EK,gS],[ompAl],[ompAl,gS],[ompAl,EK],[ompAl,EK,gS],[ompAl,e],[ompAl,e,gS],[ompAl,e,EK],[ompAl,e,EK,gS],[ompAl,xoKlB],[ompAl,xoKlB,gS],[ompAl,xoKlB,EK],[ompAl,xoKlB,EK,gS],[ompAl,xoKlB,e],[ompAl,xoKlB,e,gS],[ompAl,xoKlB,e,EK],[ompAl,xoKlB,e,EK,gS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_392() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eZV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eZV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_393() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zz","QqC","QM","nYCV","Dcxh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dcxh],[nYCV],[nYCV,Dcxh],[QM],[QM,Dcxh],[QM,nYCV],[QM,nYCV,Dcxh],[QqC],[QqC,Dcxh],[QqC,nYCV],[QqC,nYCV,Dcxh],[QqC,QM],[QqC,QM,Dcxh],[QqC,QM,nYCV],[QqC,QM,nYCV,Dcxh],[Zz],[Zz,Dcxh],[Zz,nYCV],[Zz,nYCV,Dcxh],[Zz,QM],[Zz,QM,Dcxh],[Zz,QM,nYCV],[Zz,QM,nYCV,Dcxh],[Zz,QqC],[Zz,QqC,Dcxh],[Zz,QqC,nYCV],[Zz,QqC,nYCV,Dcxh],[Zz,QqC,QM],[Zz,QqC,QM,Dcxh],[Zz,QqC,QM,nYCV],[Zz,QqC,QM,nYCV,Dcxh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_394() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KPMk","WpUI","SZdqH","WqEo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WqEo],[SZdqH],[SZdqH,WqEo],[WpUI],[WpUI,WqEo],[WpUI,SZdqH],[WpUI,SZdqH,WqEo],[KPMk],[KPMk,WqEo],[KPMk,SZdqH],[KPMk,SZdqH,WqEo],[KPMk,WpUI],[KPMk,WpUI,WqEo],[KPMk,WpUI,SZdqH],[KPMk,WpUI,SZdqH,WqEo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_395() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hy","sQR","Srtq","tpRn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tpRn],[Srtq],[Srtq,tpRn],[sQR],[sQR,tpRn],[sQR,Srtq],[sQR,Srtq,tpRn],[Hy],[Hy,tpRn],[Hy,Srtq],[Hy,Srtq,tpRn],[Hy,sQR],[Hy,sQR,tpRn],[Hy,sQR,Srtq],[Hy,sQR,Srtq,tpRn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_396() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NIlgb","hIcio","wTQmY","Pqy","gqvf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gqvf],[Pqy],[Pqy,gqvf],[wTQmY],[wTQmY,gqvf],[wTQmY,Pqy],[wTQmY,Pqy,gqvf],[hIcio],[hIcio,gqvf],[hIcio,Pqy],[hIcio,Pqy,gqvf],[hIcio,wTQmY],[hIcio,wTQmY,gqvf],[hIcio,wTQmY,Pqy],[hIcio,wTQmY,Pqy,gqvf],[NIlgb],[NIlgb,gqvf],[NIlgb,Pqy],[NIlgb,Pqy,gqvf],[NIlgb,wTQmY],[NIlgb,wTQmY,gqvf],[NIlgb,wTQmY,Pqy],[NIlgb,wTQmY,Pqy,gqvf],[NIlgb,hIcio],[NIlgb,hIcio,gqvf],[NIlgb,hIcio,Pqy],[NIlgb,hIcio,Pqy,gqvf],[NIlgb,hIcio,wTQmY],[NIlgb,hIcio,wTQmY,gqvf],[NIlgb,hIcio,wTQmY,Pqy],[NIlgb,hIcio,wTQmY,Pqy,gqvf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_397() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ARQ","Ibn","OaI","REIgJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[REIgJ],[OaI],[OaI,REIgJ],[Ibn],[Ibn,REIgJ],[Ibn,OaI],[Ibn,OaI,REIgJ],[ARQ],[ARQ,REIgJ],[ARQ,OaI],[ARQ,OaI,REIgJ],[ARQ,Ibn],[ARQ,Ibn,REIgJ],[ARQ,Ibn,OaI],[ARQ,Ibn,OaI,REIgJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_398() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gak","F","x","PVWp","gF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gF],[PVWp],[PVWp,gF],[x],[x,gF],[x,PVWp],[x,PVWp,gF],[F],[F,gF],[F,PVWp],[F,PVWp,gF],[F,x],[F,x,gF],[F,x,PVWp],[F,x,PVWp,gF],[gak],[gak,gF],[gak,PVWp],[gak,PVWp,gF],[gak,x],[gak,x,gF],[gak,x,PVWp],[gak,x,PVWp,gF],[gak,F],[gak,F,gF],[gak,F,PVWp],[gak,F,PVWp,gF],[gak,F,x],[gak,F,x,gF],[gak,F,x,PVWp],[gak,F,x,PVWp,gF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_399() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_400() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yRp","aloY","DYCPk","WnLk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WnLk],[DYCPk],[DYCPk,WnLk],[aloY],[aloY,WnLk],[aloY,DYCPk],[aloY,DYCPk,WnLk],[yRp],[yRp,WnLk],[yRp,DYCPk],[yRp,DYCPk,WnLk],[yRp,aloY],[yRp,aloY,WnLk],[yRp,aloY,DYCPk],[yRp,aloY,DYCPk,WnLk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_401() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","YQ","uqw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uqw],[YQ],[YQ,uqw],[c],[c,uqw],[c,YQ],[c,YQ,uqw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_402() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mM","br","A","kj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kj],[A],[A,kj],[br],[br,kj],[br,A],[br,A,kj],[mM],[mM,kj],[mM,A],[mM,A,kj],[mM,br],[mM,br,kj],[mM,br,A],[mM,br,A,kj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_403() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ihqi","XEv","JtigM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JtigM],[XEv],[XEv,JtigM],[Ihqi],[Ihqi,JtigM],[Ihqi,XEv],[Ihqi,XEv,JtigM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_404() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_405() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wWiWN","Xf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xf],[wWiWN],[wWiWN,Xf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_406() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YmI","N","Qxhj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qxhj],[N],[N,Qxhj],[YmI],[YmI,Qxhj],[YmI,N],[YmI,N,Qxhj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_407() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[H]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_408() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FHY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FHY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_409() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_410() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sjXS","mnW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mnW],[sjXS],[sjXS,mnW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_411() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IDW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IDW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_412() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ttn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ttn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_413() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RupD","saTfR","Bf","Vej")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vej],[Bf],[Bf,Vej],[saTfR],[saTfR,Vej],[saTfR,Bf],[saTfR,Bf,Vej],[RupD],[RupD,Vej],[RupD,Bf],[RupD,Bf,Vej],[RupD,saTfR],[RupD,saTfR,Vej],[RupD,saTfR,Bf],[RupD,saTfR,Bf,Vej]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_414() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","vqxQ","UccE","NLpVz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NLpVz],[UccE],[UccE,NLpVz],[vqxQ],[vqxQ,NLpVz],[vqxQ,UccE],[vqxQ,UccE,NLpVz],[B],[B,NLpVz],[B,UccE],[B,UccE,NLpVz],[B,vqxQ],[B,vqxQ,NLpVz],[B,vqxQ,UccE],[B,vqxQ,UccE,NLpVz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_415() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","GEq","QZd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QZd],[GEq],[GEq,QZd],[A],[A,QZd],[A,GEq],[A,GEq,QZd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_416() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","ThX","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[ThX],[ThX,w],[D],[D,w],[D,ThX],[D,ThX,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_417() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","LvqKp","DAnB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DAnB],[LvqKp],[LvqKp,DAnB],[D],[D,DAnB],[D,LvqKp],[D,LvqKp,DAnB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_418() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vtnDw","V","gR","ec")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ec],[gR],[gR,ec],[V],[V,ec],[V,gR],[V,gR,ec],[vtnDw],[vtnDw,ec],[vtnDw,gR],[vtnDw,gR,ec],[vtnDw,V],[vtnDw,V,ec],[vtnDw,V,gR],[vtnDw,V,gR,ec]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_419() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qFiH","LSH","UbubR","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[UbubR],[UbubR,X],[LSH],[LSH,X],[LSH,UbubR],[LSH,UbubR,X],[qFiH],[qFiH,X],[qFiH,UbubR],[qFiH,UbubR,X],[qFiH,LSH],[qFiH,LSH,X],[qFiH,LSH,UbubR],[qFiH,LSH,UbubR,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_420() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AqP","pw","Fat")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Fat],[pw],[pw,Fat],[AqP],[AqP,Fat],[AqP,pw],[AqP,pw,Fat]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_421() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mRwS","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[mRwS],[mRwS,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_422() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","MLJl","Ikyl","ni","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[ni],[ni,N],[Ikyl],[Ikyl,N],[Ikyl,ni],[Ikyl,ni,N],[MLJl],[MLJl,N],[MLJl,ni],[MLJl,ni,N],[MLJl,Ikyl],[MLJl,Ikyl,N],[MLJl,Ikyl,ni],[MLJl,Ikyl,ni,N],[s],[s,N],[s,ni],[s,ni,N],[s,Ikyl],[s,Ikyl,N],[s,Ikyl,ni],[s,Ikyl,ni,N],[s,MLJl],[s,MLJl,N],[s,MLJl,ni],[s,MLJl,ni,N],[s,MLJl,Ikyl],[s,MLJl,Ikyl,N],[s,MLJl,Ikyl,ni],[s,MLJl,Ikyl,ni,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_423() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jrpI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jrpI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_424() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BWf","bD","WByOC","jZVc","fbk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fbk],[jZVc],[jZVc,fbk],[WByOC],[WByOC,fbk],[WByOC,jZVc],[WByOC,jZVc,fbk],[bD],[bD,fbk],[bD,jZVc],[bD,jZVc,fbk],[bD,WByOC],[bD,WByOC,fbk],[bD,WByOC,jZVc],[bD,WByOC,jZVc,fbk],[BWf],[BWf,fbk],[BWf,jZVc],[BWf,jZVc,fbk],[BWf,WByOC],[BWf,WByOC,fbk],[BWf,WByOC,jZVc],[BWf,WByOC,jZVc,fbk],[BWf,bD],[BWf,bD,fbk],[BWf,bD,jZVc],[BWf,bD,jZVc,fbk],[BWf,bD,WByOC],[BWf,bD,WByOC,fbk],[BWf,bD,WByOC,jZVc],[BWf,bD,WByOC,jZVc,fbk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_425() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "reo","IbX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IbX],[reo],[reo,IbX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_426() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eGUFg","qTrR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qTrR],[eGUFg],[eGUFg,qTrR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_427() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZR","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[ZR],[ZR,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_428() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "smIfU","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[smIfU],[smIfU,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_429() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","HjRg","U","NU","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[NU],[NU,G],[U],[U,G],[U,NU],[U,NU,G],[HjRg],[HjRg,G],[HjRg,NU],[HjRg,NU,G],[HjRg,U],[HjRg,U,G],[HjRg,U,NU],[HjRg,U,NU,G],[c],[c,G],[c,NU],[c,NU,G],[c,U],[c,U,G],[c,U,NU],[c,U,NU,G],[c,HjRg],[c,HjRg,G],[c,HjRg,NU],[c,HjRg,NU,G],[c,HjRg,U],[c,HjRg,U,G],[c,HjRg,U,NU],[c,HjRg,U,NU,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_430() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KUOO","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[KUOO],[KUOO,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_431() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_432() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MsjfR","uRPs","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[uRPs],[uRPs,X],[MsjfR],[MsjfR,X],[MsjfR,uRPs],[MsjfR,uRPs,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_433() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","JSEMN","V","jdTMK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jdTMK],[V],[V,jdTMK],[JSEMN],[JSEMN,jdTMK],[JSEMN,V],[JSEMN,V,jdTMK],[C],[C,jdTMK],[C,V],[C,V,jdTMK],[C,JSEMN],[C,JSEMN,jdTMK],[C,JSEMN,V],[C,JSEMN,V,jdTMK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_434() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wh","gqyD","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[gqyD],[gqyD,W],[wh],[wh,W],[wh,gqyD],[wh,gqyD,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_435() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CZN","bGrDE","Ga","ZD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZD],[Ga],[Ga,ZD],[bGrDE],[bGrDE,ZD],[bGrDE,Ga],[bGrDE,Ga,ZD],[CZN],[CZN,ZD],[CZN,Ga],[CZN,Ga,ZD],[CZN,bGrDE],[CZN,bGrDE,ZD],[CZN,bGrDE,Ga],[CZN,bGrDE,Ga,ZD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_436() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uoe","hFNjJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hFNjJ],[uoe],[uoe,hFNjJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_437() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","YvE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YvE],[p],[p,YvE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_438() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qHDoA","WBBE","oEL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oEL],[WBBE],[WBBE,oEL],[qHDoA],[qHDoA,oEL],[qHDoA,WBBE],[qHDoA,WBBE,oEL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_439() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Id")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Id]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_440() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EJmj","uOm","MMr","jWQ","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[jWQ],[jWQ,J],[MMr],[MMr,J],[MMr,jWQ],[MMr,jWQ,J],[uOm],[uOm,J],[uOm,jWQ],[uOm,jWQ,J],[uOm,MMr],[uOm,MMr,J],[uOm,MMr,jWQ],[uOm,MMr,jWQ,J],[EJmj],[EJmj,J],[EJmj,jWQ],[EJmj,jWQ,J],[EJmj,MMr],[EJmj,MMr,J],[EJmj,MMr,jWQ],[EJmj,MMr,jWQ,J],[EJmj,uOm],[EJmj,uOm,J],[EJmj,uOm,jWQ],[EJmj,uOm,jWQ,J],[EJmj,uOm,MMr],[EJmj,uOm,MMr,J],[EJmj,uOm,MMr,jWQ],[EJmj,uOm,MMr,jWQ,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_441() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AiA","QbK","sKG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sKG],[QbK],[QbK,sKG],[AiA],[AiA,sKG],[AiA,QbK],[AiA,QbK,sKG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_442() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","SW","vuE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vuE],[SW],[SW,vuE],[a],[a,vuE],[a,SW],[a,SW,vuE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_443() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xlU","ifsg","nA","HRu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HRu],[nA],[nA,HRu],[ifsg],[ifsg,HRu],[ifsg,nA],[ifsg,nA,HRu],[xlU],[xlU,HRu],[xlU,nA],[xlU,nA,HRu],[xlU,ifsg],[xlU,ifsg,HRu],[xlU,ifsg,nA],[xlU,ifsg,nA,HRu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_444() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "evEQ","Kfxr","oz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oz],[Kfxr],[Kfxr,oz],[evEQ],[evEQ,oz],[evEQ,Kfxr],[evEQ,Kfxr,oz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_445() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","W","K","RHYIQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RHYIQ],[K],[K,RHYIQ],[W],[W,RHYIQ],[W,K],[W,K,RHYIQ],[e],[e,RHYIQ],[e,K],[e,K,RHYIQ],[e,W],[e,W,RHYIQ],[e,W,K],[e,W,K,RHYIQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_446() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NfMI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NfMI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_447() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vv","j","KqsBt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KqsBt],[j],[j,KqsBt],[vv],[vv,KqsBt],[vv,j],[vv,j,KqsBt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_448() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SVqSW","sTK","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[sTK],[sTK,L],[SVqSW],[SVqSW,L],[SVqSW,sTK],[SVqSW,sTK,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_449() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NVFS","tLUia","xTljr","okEiB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[okEiB],[xTljr],[xTljr,okEiB],[tLUia],[tLUia,okEiB],[tLUia,xTljr],[tLUia,xTljr,okEiB],[NVFS],[NVFS,okEiB],[NVFS,xTljr],[NVFS,xTljr,okEiB],[NVFS,tLUia],[NVFS,tLUia,okEiB],[NVFS,tLUia,xTljr],[NVFS,tLUia,xTljr,okEiB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_450() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sVrc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sVrc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_451() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NjA","tEoM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tEoM],[NjA],[NjA,tEoM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_452() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mO","hdp","BSNGK","vQv","Qxsqk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qxsqk],[vQv],[vQv,Qxsqk],[BSNGK],[BSNGK,Qxsqk],[BSNGK,vQv],[BSNGK,vQv,Qxsqk],[hdp],[hdp,Qxsqk],[hdp,vQv],[hdp,vQv,Qxsqk],[hdp,BSNGK],[hdp,BSNGK,Qxsqk],[hdp,BSNGK,vQv],[hdp,BSNGK,vQv,Qxsqk],[mO],[mO,Qxsqk],[mO,vQv],[mO,vQv,Qxsqk],[mO,BSNGK],[mO,BSNGK,Qxsqk],[mO,BSNGK,vQv],[mO,BSNGK,vQv,Qxsqk],[mO,hdp],[mO,hdp,Qxsqk],[mO,hdp,vQv],[mO,hdp,vQv,Qxsqk],[mO,hdp,BSNGK],[mO,hdp,BSNGK,Qxsqk],[mO,hdp,BSNGK,vQv],[mO,hdp,BSNGK,vQv,Qxsqk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_453() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","Qbq","V","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[V],[V,l],[Qbq],[Qbq,l],[Qbq,V],[Qbq,V,l],[p],[p,l],[p,V],[p,V,l],[p,Qbq],[p,Qbq,l],[p,Qbq,V],[p,Qbq,V,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_454() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vXC","ZKFUw","Ic")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ic],[ZKFUw],[ZKFUw,Ic],[vXC],[vXC,Ic],[vXC,ZKFUw],[vXC,ZKFUw,Ic]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_455() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","BLE","umfys")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[umfys],[BLE],[BLE,umfys],[P],[P,umfys],[P,BLE],[P,BLE,umfys]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_456() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[T],[T,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_457() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CVBFH","HIGDC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HIGDC],[CVBFH],[CVBFH,HIGDC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_458() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eSkK","V","Pi","M","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[M],[M,O],[Pi],[Pi,O],[Pi,M],[Pi,M,O],[V],[V,O],[V,M],[V,M,O],[V,Pi],[V,Pi,O],[V,Pi,M],[V,Pi,M,O],[eSkK],[eSkK,O],[eSkK,M],[eSkK,M,O],[eSkK,Pi],[eSkK,Pi,O],[eSkK,Pi,M],[eSkK,Pi,M,O],[eSkK,V],[eSkK,V,O],[eSkK,V,M],[eSkK,V,M,O],[eSkK,V,Pi],[eSkK,V,Pi,O],[eSkK,V,Pi,M],[eSkK,V,Pi,M,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_459() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gPtDN","X","k","CEJxn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CEJxn],[k],[k,CEJxn],[X],[X,CEJxn],[X,k],[X,k,CEJxn],[gPtDN],[gPtDN,CEJxn],[gPtDN,k],[gPtDN,k,CEJxn],[gPtDN,X],[gPtDN,X,CEJxn],[gPtDN,X,k],[gPtDN,X,k,CEJxn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_460() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZXEqK","kI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kI],[ZXEqK],[ZXEqK,kI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_461() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","JMf","t","NnK","yBJbW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yBJbW],[NnK],[NnK,yBJbW],[t],[t,yBJbW],[t,NnK],[t,NnK,yBJbW],[JMf],[JMf,yBJbW],[JMf,NnK],[JMf,NnK,yBJbW],[JMf,t],[JMf,t,yBJbW],[JMf,t,NnK],[JMf,t,NnK,yBJbW],[q],[q,yBJbW],[q,NnK],[q,NnK,yBJbW],[q,t],[q,t,yBJbW],[q,t,NnK],[q,t,NnK,yBJbW],[q,JMf],[q,JMf,yBJbW],[q,JMf,NnK],[q,JMf,NnK,yBJbW],[q,JMf,t],[q,JMf,t,yBJbW],[q,JMf,t,NnK],[q,JMf,t,NnK,yBJbW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_462() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xUx","xD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xD],[xUx],[xUx,xD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_463() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ykiA","B","ldie")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ldie],[B],[B,ldie],[ykiA],[ykiA,ldie],[ykiA,B],[ykiA,B,ldie]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_464() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aQ","PS","MaMy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MaMy],[PS],[PS,MaMy],[aQ],[aQ,MaMy],[aQ,PS],[aQ,PS,MaMy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_465() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "x","SOuXj","OcP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OcP],[SOuXj],[SOuXj,OcP],[x],[x,OcP],[x,SOuXj],[x,SOuXj,OcP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_466() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rcqt","Hql","ILtR","rzaFr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rzaFr],[ILtR],[ILtR,rzaFr],[Hql],[Hql,rzaFr],[Hql,ILtR],[Hql,ILtR,rzaFr],[Rcqt],[Rcqt,rzaFr],[Rcqt,ILtR],[Rcqt,ILtR,rzaFr],[Rcqt,Hql],[Rcqt,Hql,rzaFr],[Rcqt,Hql,ILtR],[Rcqt,Hql,ILtR,rzaFr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_467() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pB","Go","ueuc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ueuc],[Go],[Go,ueuc],[pB],[pB,ueuc],[pB,Go],[pB,Go,ueuc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_468() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dSRZo","xHO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xHO],[dSRZo],[dSRZo,xHO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_469() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eTis","aW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aW],[eTis],[eTis,aW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_470() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","w","LfIhM","kliW","Ec")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ec],[kliW],[kliW,Ec],[LfIhM],[LfIhM,Ec],[LfIhM,kliW],[LfIhM,kliW,Ec],[w],[w,Ec],[w,kliW],[w,kliW,Ec],[w,LfIhM],[w,LfIhM,Ec],[w,LfIhM,kliW],[w,LfIhM,kliW,Ec],[d],[d,Ec],[d,kliW],[d,kliW,Ec],[d,LfIhM],[d,LfIhM,Ec],[d,LfIhM,kliW],[d,LfIhM,kliW,Ec],[d,w],[d,w,Ec],[d,w,kliW],[d,w,kliW,Ec],[d,w,LfIhM],[d,w,LfIhM,Ec],[d,w,LfIhM,kliW],[d,w,LfIhM,kliW,Ec]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_471() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gIPL","xfA","hQ","NuIZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NuIZ],[hQ],[hQ,NuIZ],[xfA],[xfA,NuIZ],[xfA,hQ],[xfA,hQ,NuIZ],[gIPL],[gIPL,NuIZ],[gIPL,hQ],[gIPL,hQ,NuIZ],[gIPL,xfA],[gIPL,xfA,NuIZ],[gIPL,xfA,hQ],[gIPL,xfA,hQ,NuIZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_472() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_473() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xdMJ","TWG","WjkOU","IpQu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IpQu],[WjkOU],[WjkOU,IpQu],[TWG],[TWG,IpQu],[TWG,WjkOU],[TWG,WjkOU,IpQu],[xdMJ],[xdMJ,IpQu],[xdMJ,WjkOU],[xdMJ,WjkOU,IpQu],[xdMJ,TWG],[xdMJ,TWG,IpQu],[xdMJ,TWG,WjkOU],[xdMJ,TWG,WjkOU,IpQu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_474() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vVVDC","oBB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oBB],[vVVDC],[vVVDC,oBB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_475() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vMH","SNme","UGuu","kAZeh","hCzy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hCzy],[kAZeh],[kAZeh,hCzy],[UGuu],[UGuu,hCzy],[UGuu,kAZeh],[UGuu,kAZeh,hCzy],[SNme],[SNme,hCzy],[SNme,kAZeh],[SNme,kAZeh,hCzy],[SNme,UGuu],[SNme,UGuu,hCzy],[SNme,UGuu,kAZeh],[SNme,UGuu,kAZeh,hCzy],[vMH],[vMH,hCzy],[vMH,kAZeh],[vMH,kAZeh,hCzy],[vMH,UGuu],[vMH,UGuu,hCzy],[vMH,UGuu,kAZeh],[vMH,UGuu,kAZeh,hCzy],[vMH,SNme],[vMH,SNme,hCzy],[vMH,SNme,kAZeh],[vMH,SNme,kAZeh,hCzy],[vMH,SNme,UGuu],[vMH,SNme,UGuu,hCzy],[vMH,SNme,UGuu,kAZeh],[vMH,SNme,UGuu,kAZeh,hCzy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_476() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lM","c","pDK","cgZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cgZ],[pDK],[pDK,cgZ],[c],[c,cgZ],[c,pDK],[c,pDK,cgZ],[lM],[lM,cgZ],[lM,pDK],[lM,pDK,cgZ],[lM,c],[lM,c,cgZ],[lM,c,pDK],[lM,c,pDK,cgZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_477() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fZ","NeLw","TTbQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TTbQ],[NeLw],[NeLw,TTbQ],[fZ],[fZ,TTbQ],[fZ,NeLw],[fZ,NeLw,TTbQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_478() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nImX","ZuDCA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZuDCA],[nImX],[nImX,ZuDCA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_479() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gPz","EhBSr","Iq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Iq],[EhBSr],[EhBSr,Iq],[gPz],[gPz,Iq],[gPz,EhBSr],[gPz,EhBSr,Iq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_480() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GBuL","LQ","CZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CZ],[LQ],[LQ,CZ],[GBuL],[GBuL,CZ],[GBuL,LQ],[GBuL,LQ,CZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_481() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","GTaRe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GTaRe],[S],[S,GTaRe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_482() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZGesr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZGesr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_483() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dCcNO","e","Ry","IR","ze")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ze],[IR],[IR,ze],[Ry],[Ry,ze],[Ry,IR],[Ry,IR,ze],[e],[e,ze],[e,IR],[e,IR,ze],[e,Ry],[e,Ry,ze],[e,Ry,IR],[e,Ry,IR,ze],[dCcNO],[dCcNO,ze],[dCcNO,IR],[dCcNO,IR,ze],[dCcNO,Ry],[dCcNO,Ry,ze],[dCcNO,Ry,IR],[dCcNO,Ry,IR,ze],[dCcNO,e],[dCcNO,e,ze],[dCcNO,e,IR],[dCcNO,e,IR,ze],[dCcNO,e,Ry],[dCcNO,e,Ry,ze],[dCcNO,e,Ry,IR],[dCcNO,e,Ry,IR,ze]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_484() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wJfv","V","LiGng")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LiGng],[V],[V,LiGng],[wJfv],[wJfv,LiGng],[wJfv,V],[wJfv,V,LiGng]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_485() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FId","tfXVb","Teeh","VBJCh","qYoV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qYoV],[VBJCh],[VBJCh,qYoV],[Teeh],[Teeh,qYoV],[Teeh,VBJCh],[Teeh,VBJCh,qYoV],[tfXVb],[tfXVb,qYoV],[tfXVb,VBJCh],[tfXVb,VBJCh,qYoV],[tfXVb,Teeh],[tfXVb,Teeh,qYoV],[tfXVb,Teeh,VBJCh],[tfXVb,Teeh,VBJCh,qYoV],[FId],[FId,qYoV],[FId,VBJCh],[FId,VBJCh,qYoV],[FId,Teeh],[FId,Teeh,qYoV],[FId,Teeh,VBJCh],[FId,Teeh,VBJCh,qYoV],[FId,tfXVb],[FId,tfXVb,qYoV],[FId,tfXVb,VBJCh],[FId,tfXVb,VBJCh,qYoV],[FId,tfXVb,Teeh],[FId,tfXVb,Teeh,qYoV],[FId,tfXVb,Teeh,VBJCh],[FId,tfXVb,Teeh,VBJCh,qYoV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_486() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K","ZFKa","xSCrx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xSCrx],[ZFKa],[ZFKa,xSCrx],[K],[K,xSCrx],[K,ZFKa],[K,ZFKa,xSCrx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_487() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EDoMJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EDoMJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_488() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RQoe","dTrO","nBcMl","YRr","QJCs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QJCs],[YRr],[YRr,QJCs],[nBcMl],[nBcMl,QJCs],[nBcMl,YRr],[nBcMl,YRr,QJCs],[dTrO],[dTrO,QJCs],[dTrO,YRr],[dTrO,YRr,QJCs],[dTrO,nBcMl],[dTrO,nBcMl,QJCs],[dTrO,nBcMl,YRr],[dTrO,nBcMl,YRr,QJCs],[RQoe],[RQoe,QJCs],[RQoe,YRr],[RQoe,YRr,QJCs],[RQoe,nBcMl],[RQoe,nBcMl,QJCs],[RQoe,nBcMl,YRr],[RQoe,nBcMl,YRr,QJCs],[RQoe,dTrO],[RQoe,dTrO,QJCs],[RQoe,dTrO,YRr],[RQoe,dTrO,YRr,QJCs],[RQoe,dTrO,nBcMl],[RQoe,dTrO,nBcMl,QJCs],[RQoe,dTrO,nBcMl,YRr],[RQoe,dTrO,nBcMl,YRr,QJCs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_489() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_490() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H","LD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LD],[H],[H,LD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_491() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fi","lo","RF","Vap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vap],[RF],[RF,Vap],[lo],[lo,Vap],[lo,RF],[lo,RF,Vap],[Fi],[Fi,Vap],[Fi,RF],[Fi,RF,Vap],[Fi,lo],[Fi,lo,Vap],[Fi,lo,RF],[Fi,lo,RF,Vap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_492() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FNH","qSE","ARZf","sl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sl],[ARZf],[ARZf,sl],[qSE],[qSE,sl],[qSE,ARZf],[qSE,ARZf,sl],[FNH],[FNH,sl],[FNH,ARZf],[FNH,ARZf,sl],[FNH,qSE],[FNH,qSE,sl],[FNH,qSE,ARZf],[FNH,qSE,ARZf,sl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_493() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zgN","dfTgK","jUz","kj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kj],[jUz],[jUz,kj],[dfTgK],[dfTgK,kj],[dfTgK,jUz],[dfTgK,jUz,kj],[zgN],[zgN,kj],[zgN,jUz],[zgN,jUz,kj],[zgN,dfTgK],[zgN,dfTgK,kj],[zgN,dfTgK,jUz],[zgN,dfTgK,jUz,kj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_494() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_495() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JNVY","Hb","vb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vb],[Hb],[Hb,vb],[JNVY],[JNVY,vb],[JNVY,Hb],[JNVY,Hb,vb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_496() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_497() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","L","hE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hE],[L],[L,hE],[r],[r,hE],[r,L],[r,L,hE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_498() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","fEq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fEq],[p],[p,fEq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_499() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PwRjn","S","VYL","GOpHt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GOpHt],[VYL],[VYL,GOpHt],[S],[S,GOpHt],[S,VYL],[S,VYL,GOpHt],[PwRjn],[PwRjn,GOpHt],[PwRjn,VYL],[PwRjn,VYL,GOpHt],[PwRjn,S],[PwRjn,S,GOpHt],[PwRjn,S,VYL],[PwRjn,S,VYL,GOpHt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_500() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ouuF","la","kZu","KBrJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KBrJ],[kZu],[kZu,KBrJ],[la],[la,KBrJ],[la,kZu],[la,kZu,KBrJ],[ouuF],[ouuF,KBrJ],[ouuF,kZu],[ouuF,kZu,KBrJ],[ouuF,la],[ouuF,la,KBrJ],[ouuF,la,kZu],[ouuF,la,kZu,KBrJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_501() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AtgB","q","fs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fs],[q],[q,fs],[AtgB],[AtgB,fs],[AtgB,q],[AtgB,q,fs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_502() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rf","V","DtF","JLJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JLJ],[DtF],[DtF,JLJ],[V],[V,JLJ],[V,DtF],[V,DtF,JLJ],[rf],[rf,JLJ],[rf,DtF],[rf,DtF,JLJ],[rf,V],[rf,V,JLJ],[rf,V,DtF],[rf,V,DtF,JLJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_503() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "k","bGS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bGS],[k],[k,bGS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_504() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","F","M","RXT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RXT],[M],[M,RXT],[F],[F,RXT],[F,M],[F,M,RXT],[A],[A,RXT],[A,M],[A,M,RXT],[A,F],[A,F,RXT],[A,F,M],[A,F,M,RXT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_505() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","OVNLL","STHU","OIac","cp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cp],[OIac],[OIac,cp],[STHU],[STHU,cp],[STHU,OIac],[STHU,OIac,cp],[OVNLL],[OVNLL,cp],[OVNLL,OIac],[OVNLL,OIac,cp],[OVNLL,STHU],[OVNLL,STHU,cp],[OVNLL,STHU,OIac],[OVNLL,STHU,OIac,cp],[S],[S,cp],[S,OIac],[S,OIac,cp],[S,STHU],[S,STHU,cp],[S,STHU,OIac],[S,STHU,OIac,cp],[S,OVNLL],[S,OVNLL,cp],[S,OVNLL,OIac],[S,OVNLL,OIac,cp],[S,OVNLL,STHU],[S,OVNLL,STHU,cp],[S,OVNLL,STHU,OIac],[S,OVNLL,STHU,OIac,cp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_506() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zVMIC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zVMIC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_507() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HbQY","d","yOZbI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yOZbI],[d],[d,yOZbI],[HbQY],[HbQY,yOZbI],[HbQY,d],[HbQY,d,yOZbI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_508() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jz","bAAX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bAAX],[jz],[jz,bAAX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_509() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MIU","iQ","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[iQ],[iQ,z],[MIU],[MIU,z],[MIU,iQ],[MIU,iQ,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_510() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "chV","h","ghJE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ghJE],[h],[h,ghJE],[chV],[chV,ghJE],[chV,h],[chV,h,ghJE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_511() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VfE","uYbLm","xuwHF","uiFNw","Al")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Al],[uiFNw],[uiFNw,Al],[xuwHF],[xuwHF,Al],[xuwHF,uiFNw],[xuwHF,uiFNw,Al],[uYbLm],[uYbLm,Al],[uYbLm,uiFNw],[uYbLm,uiFNw,Al],[uYbLm,xuwHF],[uYbLm,xuwHF,Al],[uYbLm,xuwHF,uiFNw],[uYbLm,xuwHF,uiFNw,Al],[VfE],[VfE,Al],[VfE,uiFNw],[VfE,uiFNw,Al],[VfE,xuwHF],[VfE,xuwHF,Al],[VfE,xuwHF,uiFNw],[VfE,xuwHF,uiFNw,Al],[VfE,uYbLm],[VfE,uYbLm,Al],[VfE,uYbLm,uiFNw],[VfE,uYbLm,uiFNw,Al],[VfE,uYbLm,xuwHF],[VfE,uYbLm,xuwHF,Al],[VfE,uYbLm,xuwHF,uiFNw],[VfE,uYbLm,xuwHF,uiFNw,Al]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_512() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jpFJS","cjqws","RL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RL],[cjqws],[cjqws,RL],[jpFJS],[jpFJS,RL],[jpFJS,cjqws],[jpFJS,cjqws,RL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_513() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lsp","rAQm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rAQm],[lsp],[lsp,rAQm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_514() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FlpWe","DnU","NQUZ","dR","Wf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wf],[dR],[dR,Wf],[NQUZ],[NQUZ,Wf],[NQUZ,dR],[NQUZ,dR,Wf],[DnU],[DnU,Wf],[DnU,dR],[DnU,dR,Wf],[DnU,NQUZ],[DnU,NQUZ,Wf],[DnU,NQUZ,dR],[DnU,NQUZ,dR,Wf],[FlpWe],[FlpWe,Wf],[FlpWe,dR],[FlpWe,dR,Wf],[FlpWe,NQUZ],[FlpWe,NQUZ,Wf],[FlpWe,NQUZ,dR],[FlpWe,NQUZ,dR,Wf],[FlpWe,DnU],[FlpWe,DnU,Wf],[FlpWe,DnU,dR],[FlpWe,DnU,dR,Wf],[FlpWe,DnU,NQUZ],[FlpWe,DnU,NQUZ,Wf],[FlpWe,DnU,NQUZ,dR],[FlpWe,DnU,NQUZ,dR,Wf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_515() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DG","vclm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vclm],[DG],[DG,vclm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_516() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZIIC","Yoh","eGFpx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eGFpx],[Yoh],[Yoh,eGFpx],[ZIIC],[ZIIC,eGFpx],[ZIIC,Yoh],[ZIIC,Yoh,eGFpx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_517() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GnOqG","kB","JzZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JzZ],[kB],[kB,JzZ],[GnOqG],[GnOqG,JzZ],[GnOqG,kB],[GnOqG,kB,JzZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_518() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KppID","J","ub","aqo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aqo],[ub],[ub,aqo],[J],[J,aqo],[J,ub],[J,ub,aqo],[KppID],[KppID,aqo],[KppID,ub],[KppID,ub,aqo],[KppID,J],[KppID,J,aqo],[KppID,J,ub],[KppID,J,ub,aqo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_519() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tqge","uAda")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uAda],[Tqge],[Tqge,uAda]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_520() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cuU","OSx","Uvjy","sIou")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sIou],[Uvjy],[Uvjy,sIou],[OSx],[OSx,sIou],[OSx,Uvjy],[OSx,Uvjy,sIou],[cuU],[cuU,sIou],[cuU,Uvjy],[cuU,Uvjy,sIou],[cuU,OSx],[cuU,OSx,sIou],[cuU,OSx,Uvjy],[cuU,OSx,Uvjy,sIou]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_521() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[r]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_522() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NO","qe","U","Y","jW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jW],[Y],[Y,jW],[U],[U,jW],[U,Y],[U,Y,jW],[qe],[qe,jW],[qe,Y],[qe,Y,jW],[qe,U],[qe,U,jW],[qe,U,Y],[qe,U,Y,jW],[NO],[NO,jW],[NO,Y],[NO,Y,jW],[NO,U],[NO,U,jW],[NO,U,Y],[NO,U,Y,jW],[NO,qe],[NO,qe,jW],[NO,qe,Y],[NO,qe,Y,jW],[NO,qe,U],[NO,qe,U,jW],[NO,qe,U,Y],[NO,qe,U,Y,jW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_523() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CfDwC","h","tmPv","LoLZp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LoLZp],[tmPv],[tmPv,LoLZp],[h],[h,LoLZp],[h,tmPv],[h,tmPv,LoLZp],[CfDwC],[CfDwC,LoLZp],[CfDwC,tmPv],[CfDwC,tmPv,LoLZp],[CfDwC,h],[CfDwC,h,LoLZp],[CfDwC,h,tmPv],[CfDwC,h,tmPv,LoLZp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_524() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","xvR","Gp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gp],[xvR],[xvR,Gp],[D],[D,Gp],[D,xvR],[D,xvR,Gp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_525() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mqKn","nv","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[nv],[nv,L],[mqKn],[mqKn,L],[mqKn,nv],[mqKn,nv,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_526() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LFBBw","UVqzc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UVqzc],[LFBBw],[LFBBw,UVqzc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_527() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vpihy","nkqif")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nkqif],[Vpihy],[Vpihy,nkqif]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_528() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bvZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bvZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_529() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hQub","OiGwQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OiGwQ],[hQub],[hQub,OiGwQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_530() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "znJf","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[znJf],[znJf,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_531() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","LqOMs","BvA","DQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DQ],[BvA],[BvA,DQ],[LqOMs],[LqOMs,DQ],[LqOMs,BvA],[LqOMs,BvA,DQ],[q],[q,DQ],[q,BvA],[q,BvA,DQ],[q,LqOMs],[q,LqOMs,DQ],[q,LqOMs,BvA],[q,LqOMs,BvA,DQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_532() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZcL","PwB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PwB],[ZcL],[ZcL,PwB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_533() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TIH","jtfs","i","XHzSJ","wdiV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wdiV],[XHzSJ],[XHzSJ,wdiV],[i],[i,wdiV],[i,XHzSJ],[i,XHzSJ,wdiV],[jtfs],[jtfs,wdiV],[jtfs,XHzSJ],[jtfs,XHzSJ,wdiV],[jtfs,i],[jtfs,i,wdiV],[jtfs,i,XHzSJ],[jtfs,i,XHzSJ,wdiV],[TIH],[TIH,wdiV],[TIH,XHzSJ],[TIH,XHzSJ,wdiV],[TIH,i],[TIH,i,wdiV],[TIH,i,XHzSJ],[TIH,i,XHzSJ,wdiV],[TIH,jtfs],[TIH,jtfs,wdiV],[TIH,jtfs,XHzSJ],[TIH,jtfs,XHzSJ,wdiV],[TIH,jtfs,i],[TIH,jtfs,i,wdiV],[TIH,jtfs,i,XHzSJ],[TIH,jtfs,i,XHzSJ,wdiV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_534() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QwbXQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QwbXQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_535() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gp","JJjbG","ke","l","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[l],[l,O],[ke],[ke,O],[ke,l],[ke,l,O],[JJjbG],[JJjbG,O],[JJjbG,l],[JJjbG,l,O],[JJjbG,ke],[JJjbG,ke,O],[JJjbG,ke,l],[JJjbG,ke,l,O],[gp],[gp,O],[gp,l],[gp,l,O],[gp,ke],[gp,ke,O],[gp,ke,l],[gp,ke,l,O],[gp,JJjbG],[gp,JJjbG,O],[gp,JJjbG,l],[gp,JJjbG,l,O],[gp,JJjbG,ke],[gp,JJjbG,ke,O],[gp,JJjbG,ke,l],[gp,JJjbG,ke,l,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_536() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "irtOQ","h","PX","WgtFc","YLAe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YLAe],[WgtFc],[WgtFc,YLAe],[PX],[PX,YLAe],[PX,WgtFc],[PX,WgtFc,YLAe],[h],[h,YLAe],[h,WgtFc],[h,WgtFc,YLAe],[h,PX],[h,PX,YLAe],[h,PX,WgtFc],[h,PX,WgtFc,YLAe],[irtOQ],[irtOQ,YLAe],[irtOQ,WgtFc],[irtOQ,WgtFc,YLAe],[irtOQ,PX],[irtOQ,PX,YLAe],[irtOQ,PX,WgtFc],[irtOQ,PX,WgtFc,YLAe],[irtOQ,h],[irtOQ,h,YLAe],[irtOQ,h,WgtFc],[irtOQ,h,WgtFc,YLAe],[irtOQ,h,PX],[irtOQ,h,PX,YLAe],[irtOQ,h,PX,WgtFc],[irtOQ,h,PX,WgtFc,YLAe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_537() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jXR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jXR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_538() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MA","cunw","pzKYU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pzKYU],[cunw],[cunw,pzKYU],[MA],[MA,pzKYU],[MA,cunw],[MA,cunw,pzKYU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_539() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tRXkm","UHwwi","j","yUCn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yUCn],[j],[j,yUCn],[UHwwi],[UHwwi,yUCn],[UHwwi,j],[UHwwi,j,yUCn],[tRXkm],[tRXkm,yUCn],[tRXkm,j],[tRXkm,j,yUCn],[tRXkm,UHwwi],[tRXkm,UHwwi,yUCn],[tRXkm,UHwwi,j],[tRXkm,UHwwi,j,yUCn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_540() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_541() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yJ","N","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[N],[N,n],[yJ],[yJ,n],[yJ,N],[yJ,N,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_542() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "awzIA","g","cQai","XSKeW","vKQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vKQ],[XSKeW],[XSKeW,vKQ],[cQai],[cQai,vKQ],[cQai,XSKeW],[cQai,XSKeW,vKQ],[g],[g,vKQ],[g,XSKeW],[g,XSKeW,vKQ],[g,cQai],[g,cQai,vKQ],[g,cQai,XSKeW],[g,cQai,XSKeW,vKQ],[awzIA],[awzIA,vKQ],[awzIA,XSKeW],[awzIA,XSKeW,vKQ],[awzIA,cQai],[awzIA,cQai,vKQ],[awzIA,cQai,XSKeW],[awzIA,cQai,XSKeW,vKQ],[awzIA,g],[awzIA,g,vKQ],[awzIA,g,XSKeW],[awzIA,g,XSKeW,vKQ],[awzIA,g,cQai],[awzIA,g,cQai,vKQ],[awzIA,g,cQai,XSKeW],[awzIA,g,cQai,XSKeW,vKQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_543() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","ZgBP","oJN","RcEs","fc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fc],[RcEs],[RcEs,fc],[oJN],[oJN,fc],[oJN,RcEs],[oJN,RcEs,fc],[ZgBP],[ZgBP,fc],[ZgBP,RcEs],[ZgBP,RcEs,fc],[ZgBP,oJN],[ZgBP,oJN,fc],[ZgBP,oJN,RcEs],[ZgBP,oJN,RcEs,fc],[q],[q,fc],[q,RcEs],[q,RcEs,fc],[q,oJN],[q,oJN,fc],[q,oJN,RcEs],[q,oJN,RcEs,fc],[q,ZgBP],[q,ZgBP,fc],[q,ZgBP,RcEs],[q,ZgBP,RcEs,fc],[q,ZgBP,oJN],[q,ZgBP,oJN,fc],[q,ZgBP,oJN,RcEs],[q,ZgBP,oJN,RcEs,fc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_544() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XH","uUS","MhbH","fb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fb],[MhbH],[MhbH,fb],[uUS],[uUS,fb],[uUS,MhbH],[uUS,MhbH,fb],[XH],[XH,fb],[XH,MhbH],[XH,MhbH,fb],[XH,uUS],[XH,uUS,fb],[XH,uUS,MhbH],[XH,uUS,MhbH,fb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_545() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BMdw","ZRl","wYF","jS","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[jS],[jS,I],[wYF],[wYF,I],[wYF,jS],[wYF,jS,I],[ZRl],[ZRl,I],[ZRl,jS],[ZRl,jS,I],[ZRl,wYF],[ZRl,wYF,I],[ZRl,wYF,jS],[ZRl,wYF,jS,I],[BMdw],[BMdw,I],[BMdw,jS],[BMdw,jS,I],[BMdw,wYF],[BMdw,wYF,I],[BMdw,wYF,jS],[BMdw,wYF,jS,I],[BMdw,ZRl],[BMdw,ZRl,I],[BMdw,ZRl,jS],[BMdw,ZRl,jS,I],[BMdw,ZRl,wYF],[BMdw,ZRl,wYF,I],[BMdw,ZRl,wYF,jS],[BMdw,ZRl,wYF,jS,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_546() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AGaBl","Y","uN","JbOd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JbOd],[uN],[uN,JbOd],[Y],[Y,JbOd],[Y,uN],[Y,uN,JbOd],[AGaBl],[AGaBl,JbOd],[AGaBl,uN],[AGaBl,uN,JbOd],[AGaBl,Y],[AGaBl,Y,JbOd],[AGaBl,Y,uN],[AGaBl,Y,uN,JbOd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_547() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_548() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oezxl","DnA","ssWH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ssWH],[DnA],[DnA,ssWH],[oezxl],[oezxl,ssWH],[oezxl,DnA],[oezxl,DnA,ssWH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_549() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","plWL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[plWL],[a],[a,plWL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_550() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","xDpe","Ykq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ykq],[xDpe],[xDpe,Ykq],[P],[P,Ykq],[P,xDpe],[P,xDpe,Ykq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_551() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kdnG","jPBiZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jPBiZ],[kdnG],[kdnG,jPBiZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_552() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","asECJ","FiUoY","hP","fYut")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fYut],[hP],[hP,fYut],[FiUoY],[FiUoY,fYut],[FiUoY,hP],[FiUoY,hP,fYut],[asECJ],[asECJ,fYut],[asECJ,hP],[asECJ,hP,fYut],[asECJ,FiUoY],[asECJ,FiUoY,fYut],[asECJ,FiUoY,hP],[asECJ,FiUoY,hP,fYut],[b],[b,fYut],[b,hP],[b,hP,fYut],[b,FiUoY],[b,FiUoY,fYut],[b,FiUoY,hP],[b,FiUoY,hP,fYut],[b,asECJ],[b,asECJ,fYut],[b,asECJ,hP],[b,asECJ,hP,fYut],[b,asECJ,FiUoY],[b,asECJ,FiUoY,fYut],[b,asECJ,FiUoY,hP],[b,asECJ,FiUoY,hP,fYut]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_553() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","MVTNF","Gjy","basf","cA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cA],[basf],[basf,cA],[Gjy],[Gjy,cA],[Gjy,basf],[Gjy,basf,cA],[MVTNF],[MVTNF,cA],[MVTNF,basf],[MVTNF,basf,cA],[MVTNF,Gjy],[MVTNF,Gjy,cA],[MVTNF,Gjy,basf],[MVTNF,Gjy,basf,cA],[B],[B,cA],[B,basf],[B,basf,cA],[B,Gjy],[B,Gjy,cA],[B,Gjy,basf],[B,Gjy,basf,cA],[B,MVTNF],[B,MVTNF,cA],[B,MVTNF,basf],[B,MVTNF,basf,cA],[B,MVTNF,Gjy],[B,MVTNF,Gjy,cA],[B,MVTNF,Gjy,basf],[B,MVTNF,Gjy,basf,cA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_554() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","Zzun","hUc","shXjV","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[shXjV],[shXjV,n],[hUc],[hUc,n],[hUc,shXjV],[hUc,shXjV,n],[Zzun],[Zzun,n],[Zzun,shXjV],[Zzun,shXjV,n],[Zzun,hUc],[Zzun,hUc,n],[Zzun,hUc,shXjV],[Zzun,hUc,shXjV,n],[b],[b,n],[b,shXjV],[b,shXjV,n],[b,hUc],[b,hUc,n],[b,hUc,shXjV],[b,hUc,shXjV,n],[b,Zzun],[b,Zzun,n],[b,Zzun,shXjV],[b,Zzun,shXjV,n],[b,Zzun,hUc],[b,Zzun,hUc,n],[b,Zzun,hUc,shXjV],[b,Zzun,hUc,shXjV,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_555() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MIL","LJE","qCz","MheLX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MheLX],[qCz],[qCz,MheLX],[LJE],[LJE,MheLX],[LJE,qCz],[LJE,qCz,MheLX],[MIL],[MIL,MheLX],[MIL,qCz],[MIL,qCz,MheLX],[MIL,LJE],[MIL,LJE,MheLX],[MIL,LJE,qCz],[MIL,LJE,qCz,MheLX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_556() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","mh","dDXm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dDXm],[mh],[mh,dDXm],[V],[V,dDXm],[V,mh],[V,mh,dDXm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_557() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GAyF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GAyF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_558() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","Pbmqi","nU","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[nU],[nU,j],[Pbmqi],[Pbmqi,j],[Pbmqi,nU],[Pbmqi,nU,j],[q],[q,j],[q,nU],[q,nU,j],[q,Pbmqi],[q,Pbmqi,j],[q,Pbmqi,nU],[q,Pbmqi,nU,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_559() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kl","bFny","AqGDz","g","QrRna")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QrRna],[g],[g,QrRna],[AqGDz],[AqGDz,QrRna],[AqGDz,g],[AqGDz,g,QrRna],[bFny],[bFny,QrRna],[bFny,g],[bFny,g,QrRna],[bFny,AqGDz],[bFny,AqGDz,QrRna],[bFny,AqGDz,g],[bFny,AqGDz,g,QrRna],[kl],[kl,QrRna],[kl,g],[kl,g,QrRna],[kl,AqGDz],[kl,AqGDz,QrRna],[kl,AqGDz,g],[kl,AqGDz,g,QrRna],[kl,bFny],[kl,bFny,QrRna],[kl,bFny,g],[kl,bFny,g,QrRna],[kl,bFny,AqGDz],[kl,bFny,AqGDz,QrRna],[kl,bFny,AqGDz,g],[kl,bFny,AqGDz,g,QrRna]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_560() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eOzK","ULou","ix")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ix],[ULou],[ULou,ix],[eOzK],[eOzK,ix],[eOzK,ULou],[eOzK,ULou,ix]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_561() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "agY","gEa","id","Wc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wc],[id],[id,Wc],[gEa],[gEa,Wc],[gEa,id],[gEa,id,Wc],[agY],[agY,Wc],[agY,id],[agY,id,Wc],[agY,gEa],[agY,gEa,Wc],[agY,gEa,id],[agY,gEa,id,Wc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_562() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tQfI","zuVfr","MFt","QiPFx","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[QiPFx],[QiPFx,n],[MFt],[MFt,n],[MFt,QiPFx],[MFt,QiPFx,n],[zuVfr],[zuVfr,n],[zuVfr,QiPFx],[zuVfr,QiPFx,n],[zuVfr,MFt],[zuVfr,MFt,n],[zuVfr,MFt,QiPFx],[zuVfr,MFt,QiPFx,n],[tQfI],[tQfI,n],[tQfI,QiPFx],[tQfI,QiPFx,n],[tQfI,MFt],[tQfI,MFt,n],[tQfI,MFt,QiPFx],[tQfI,MFt,QiPFx,n],[tQfI,zuVfr],[tQfI,zuVfr,n],[tQfI,zuVfr,QiPFx],[tQfI,zuVfr,QiPFx,n],[tQfI,zuVfr,MFt],[tQfI,zuVfr,MFt,n],[tQfI,zuVfr,MFt,QiPFx],[tQfI,zuVfr,MFt,QiPFx,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_563() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UZkN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UZkN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_564() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JKHLa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JKHLa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_565() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YgPL","kqiZ","qpAb","i","XR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XR],[i],[i,XR],[qpAb],[qpAb,XR],[qpAb,i],[qpAb,i,XR],[kqiZ],[kqiZ,XR],[kqiZ,i],[kqiZ,i,XR],[kqiZ,qpAb],[kqiZ,qpAb,XR],[kqiZ,qpAb,i],[kqiZ,qpAb,i,XR],[YgPL],[YgPL,XR],[YgPL,i],[YgPL,i,XR],[YgPL,qpAb],[YgPL,qpAb,XR],[YgPL,qpAb,i],[YgPL,qpAb,i,XR],[YgPL,kqiZ],[YgPL,kqiZ,XR],[YgPL,kqiZ,i],[YgPL,kqiZ,i,XR],[YgPL,kqiZ,qpAb],[YgPL,kqiZ,qpAb,XR],[YgPL,kqiZ,qpAb,i],[YgPL,kqiZ,qpAb,i,XR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_566() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vyc","Pc","G","Bytrk","tThVc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tThVc],[Bytrk],[Bytrk,tThVc],[G],[G,tThVc],[G,Bytrk],[G,Bytrk,tThVc],[Pc],[Pc,tThVc],[Pc,Bytrk],[Pc,Bytrk,tThVc],[Pc,G],[Pc,G,tThVc],[Pc,G,Bytrk],[Pc,G,Bytrk,tThVc],[Vyc],[Vyc,tThVc],[Vyc,Bytrk],[Vyc,Bytrk,tThVc],[Vyc,G],[Vyc,G,tThVc],[Vyc,G,Bytrk],[Vyc,G,Bytrk,tThVc],[Vyc,Pc],[Vyc,Pc,tThVc],[Vyc,Pc,Bytrk],[Vyc,Pc,Bytrk,tThVc],[Vyc,Pc,G],[Vyc,Pc,G,tThVc],[Vyc,Pc,G,Bytrk],[Vyc,Pc,G,Bytrk,tThVc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_567() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KQsP","zmZAS","Piu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Piu],[zmZAS],[zmZAS,Piu],[KQsP],[KQsP,Piu],[KQsP,zmZAS],[KQsP,zmZAS,Piu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_568() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","grDm","mIq","PagH","Ovbx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ovbx],[PagH],[PagH,Ovbx],[mIq],[mIq,Ovbx],[mIq,PagH],[mIq,PagH,Ovbx],[grDm],[grDm,Ovbx],[grDm,PagH],[grDm,PagH,Ovbx],[grDm,mIq],[grDm,mIq,Ovbx],[grDm,mIq,PagH],[grDm,mIq,PagH,Ovbx],[q],[q,Ovbx],[q,PagH],[q,PagH,Ovbx],[q,mIq],[q,mIq,Ovbx],[q,mIq,PagH],[q,mIq,PagH,Ovbx],[q,grDm],[q,grDm,Ovbx],[q,grDm,PagH],[q,grDm,PagH,Ovbx],[q,grDm,mIq],[q,grDm,mIq,Ovbx],[q,grDm,mIq,PagH],[q,grDm,mIq,PagH,Ovbx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_569() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OXBJ","afLPg","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[afLPg],[afLPg,i],[OXBJ],[OXBJ,i],[OXBJ,afLPg],[OXBJ,afLPg,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_570() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JK","KjAuz","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[KjAuz],[KjAuz,w],[JK],[JK,w],[JK,KjAuz],[JK,KjAuz,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_571() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","eT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eT],[C],[C,eT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_572() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hq","tA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tA],[hq],[hq,tA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_573() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pSX","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[pSX],[pSX,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_574() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MgzQ","oZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oZ],[MgzQ],[MgzQ,oZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_575() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_576() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PjC","yT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yT],[PjC],[PjC,yT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_577() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ii","LJRhz","XYi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XYi],[LJRhz],[LJRhz,XYi],[Ii],[Ii,XYi],[Ii,LJRhz],[Ii,LJRhz,XYi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_578() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dkx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dkx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_579() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oR","XNsg","vjy","DoC","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[DoC],[DoC,n],[vjy],[vjy,n],[vjy,DoC],[vjy,DoC,n],[XNsg],[XNsg,n],[XNsg,DoC],[XNsg,DoC,n],[XNsg,vjy],[XNsg,vjy,n],[XNsg,vjy,DoC],[XNsg,vjy,DoC,n],[oR],[oR,n],[oR,DoC],[oR,DoC,n],[oR,vjy],[oR,vjy,n],[oR,vjy,DoC],[oR,vjy,DoC,n],[oR,XNsg],[oR,XNsg,n],[oR,XNsg,DoC],[oR,XNsg,DoC,n],[oR,XNsg,vjy],[oR,XNsg,vjy,n],[oR,XNsg,vjy,DoC],[oR,XNsg,vjy,DoC,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_580() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yUpVb","dQp","sI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sI],[dQp],[dQp,sI],[yUpVb],[yUpVb,sI],[yUpVb,dQp],[yUpVb,dQp,sI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_581() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Djjj","GylGI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GylGI],[Djjj],[Djjj,GylGI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_582() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","SM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SM],[q],[q,SM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_583() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","nPczp","Ypsh","xo","HGaEy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HGaEy],[xo],[xo,HGaEy],[Ypsh],[Ypsh,HGaEy],[Ypsh,xo],[Ypsh,xo,HGaEy],[nPczp],[nPczp,HGaEy],[nPczp,xo],[nPczp,xo,HGaEy],[nPczp,Ypsh],[nPczp,Ypsh,HGaEy],[nPczp,Ypsh,xo],[nPczp,Ypsh,xo,HGaEy],[Q],[Q,HGaEy],[Q,xo],[Q,xo,HGaEy],[Q,Ypsh],[Q,Ypsh,HGaEy],[Q,Ypsh,xo],[Q,Ypsh,xo,HGaEy],[Q,nPczp],[Q,nPczp,HGaEy],[Q,nPczp,xo],[Q,nPczp,xo,HGaEy],[Q,nPczp,Ypsh],[Q,nPczp,Ypsh,HGaEy],[Q,nPczp,Ypsh,xo],[Q,nPczp,Ypsh,xo,HGaEy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_584() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bboj","UAV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UAV],[bboj],[bboj,UAV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_585() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dGt","JRh","WxNmw","ruco")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ruco],[WxNmw],[WxNmw,ruco],[JRh],[JRh,ruco],[JRh,WxNmw],[JRh,WxNmw,ruco],[dGt],[dGt,ruco],[dGt,WxNmw],[dGt,WxNmw,ruco],[dGt,JRh],[dGt,JRh,ruco],[dGt,JRh,WxNmw],[dGt,JRh,WxNmw,ruco]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_586() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NFy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NFy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_587() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BF","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[BF],[BF,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_588() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UVsT","WB","iLjuc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iLjuc],[WB],[WB,iLjuc],[UVsT],[UVsT,iLjuc],[UVsT,WB],[UVsT,WB,iLjuc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_589() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IaHbr","cjAw","BKSR","iCs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iCs],[BKSR],[BKSR,iCs],[cjAw],[cjAw,iCs],[cjAw,BKSR],[cjAw,BKSR,iCs],[IaHbr],[IaHbr,iCs],[IaHbr,BKSR],[IaHbr,BKSR,iCs],[IaHbr,cjAw],[IaHbr,cjAw,iCs],[IaHbr,cjAw,BKSR],[IaHbr,cjAw,BKSR,iCs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_590() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "muz","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[muz],[muz,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_591() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","alCiC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[alCiC],[d],[d,alCiC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_592() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yrxYD","MIQg","pfPR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pfPR],[MIQg],[MIQg,pfPR],[yrxYD],[yrxYD,pfPR],[yrxYD,MIQg],[yrxYD,MIQg,pfPR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_593() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JZQ","nC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nC],[JZQ],[JZQ,nC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_594() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aS","mdODD","G","k","cb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cb],[k],[k,cb],[G],[G,cb],[G,k],[G,k,cb],[mdODD],[mdODD,cb],[mdODD,k],[mdODD,k,cb],[mdODD,G],[mdODD,G,cb],[mdODD,G,k],[mdODD,G,k,cb],[aS],[aS,cb],[aS,k],[aS,k,cb],[aS,G],[aS,G,cb],[aS,G,k],[aS,G,k,cb],[aS,mdODD],[aS,mdODD,cb],[aS,mdODD,k],[aS,mdODD,k,cb],[aS,mdODD,G],[aS,mdODD,G,cb],[aS,mdODD,G,k],[aS,mdODD,G,k,cb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_595() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fqPg","Z","DbpuE","wE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wE],[DbpuE],[DbpuE,wE],[Z],[Z,wE],[Z,DbpuE],[Z,DbpuE,wE],[fqPg],[fqPg,wE],[fqPg,DbpuE],[fqPg,DbpuE,wE],[fqPg,Z],[fqPg,Z,wE],[fqPg,Z,DbpuE],[fqPg,Z,DbpuE,wE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_596() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RnZC","ayYU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ayYU],[RnZC],[RnZC,ayYU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_597() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HI","VdT","oh","Kuv","Grj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Grj],[Kuv],[Kuv,Grj],[oh],[oh,Grj],[oh,Kuv],[oh,Kuv,Grj],[VdT],[VdT,Grj],[VdT,Kuv],[VdT,Kuv,Grj],[VdT,oh],[VdT,oh,Grj],[VdT,oh,Kuv],[VdT,oh,Kuv,Grj],[HI],[HI,Grj],[HI,Kuv],[HI,Kuv,Grj],[HI,oh],[HI,oh,Grj],[HI,oh,Kuv],[HI,oh,Kuv,Grj],[HI,VdT],[HI,VdT,Grj],[HI,VdT,Kuv],[HI,VdT,Kuv,Grj],[HI,VdT,oh],[HI,VdT,oh,Grj],[HI,VdT,oh,Kuv],[HI,VdT,oh,Kuv,Grj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_598() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HM","oLqZ","UO","sP","WWEOF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WWEOF],[sP],[sP,WWEOF],[UO],[UO,WWEOF],[UO,sP],[UO,sP,WWEOF],[oLqZ],[oLqZ,WWEOF],[oLqZ,sP],[oLqZ,sP,WWEOF],[oLqZ,UO],[oLqZ,UO,WWEOF],[oLqZ,UO,sP],[oLqZ,UO,sP,WWEOF],[HM],[HM,WWEOF],[HM,sP],[HM,sP,WWEOF],[HM,UO],[HM,UO,WWEOF],[HM,UO,sP],[HM,UO,sP,WWEOF],[HM,oLqZ],[HM,oLqZ,WWEOF],[HM,oLqZ,sP],[HM,oLqZ,sP,WWEOF],[HM,oLqZ,UO],[HM,oLqZ,UO,WWEOF],[HM,oLqZ,UO,sP],[HM,oLqZ,UO,sP,WWEOF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_599() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RItDH","aH","KIxe","ToqhQ","kdFi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kdFi],[ToqhQ],[ToqhQ,kdFi],[KIxe],[KIxe,kdFi],[KIxe,ToqhQ],[KIxe,ToqhQ,kdFi],[aH],[aH,kdFi],[aH,ToqhQ],[aH,ToqhQ,kdFi],[aH,KIxe],[aH,KIxe,kdFi],[aH,KIxe,ToqhQ],[aH,KIxe,ToqhQ,kdFi],[RItDH],[RItDH,kdFi],[RItDH,ToqhQ],[RItDH,ToqhQ,kdFi],[RItDH,KIxe],[RItDH,KIxe,kdFi],[RItDH,KIxe,ToqhQ],[RItDH,KIxe,ToqhQ,kdFi],[RItDH,aH],[RItDH,aH,kdFi],[RItDH,aH,ToqhQ],[RItDH,aH,ToqhQ,kdFi],[RItDH,aH,KIxe],[RItDH,aH,KIxe,kdFi],[RItDH,aH,KIxe,ToqhQ],[RItDH,aH,KIxe,ToqhQ,kdFi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_600() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ww","iWZq","KUE","CHQUf","XDMG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XDMG],[CHQUf],[CHQUf,XDMG],[KUE],[KUE,XDMG],[KUE,CHQUf],[KUE,CHQUf,XDMG],[iWZq],[iWZq,XDMG],[iWZq,CHQUf],[iWZq,CHQUf,XDMG],[iWZq,KUE],[iWZq,KUE,XDMG],[iWZq,KUE,CHQUf],[iWZq,KUE,CHQUf,XDMG],[ww],[ww,XDMG],[ww,CHQUf],[ww,CHQUf,XDMG],[ww,KUE],[ww,KUE,XDMG],[ww,KUE,CHQUf],[ww,KUE,CHQUf,XDMG],[ww,iWZq],[ww,iWZq,XDMG],[ww,iWZq,CHQUf],[ww,iWZq,CHQUf,XDMG],[ww,iWZq,KUE],[ww,iWZq,KUE,XDMG],[ww,iWZq,KUE,CHQUf],[ww,iWZq,KUE,CHQUf,XDMG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_601() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lc","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[Lc],[Lc,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_602() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_603() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pDE","ZTWKW","WJl","iaP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iaP],[WJl],[WJl,iaP],[ZTWKW],[ZTWKW,iaP],[ZTWKW,WJl],[ZTWKW,WJl,iaP],[pDE],[pDE,iaP],[pDE,WJl],[pDE,WJl,iaP],[pDE,ZTWKW],[pDE,ZTWKW,iaP],[pDE,ZTWKW,WJl],[pDE,ZTWKW,WJl,iaP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_604() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fQuFO","zI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zI],[fQuFO],[fQuFO,zI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_605() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "grc","UQG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UQG],[grc],[grc,UQG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_606() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lKUv","i","Xt","YQIZy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YQIZy],[Xt],[Xt,YQIZy],[i],[i,YQIZy],[i,Xt],[i,Xt,YQIZy],[lKUv],[lKUv,YQIZy],[lKUv,Xt],[lKUv,Xt,YQIZy],[lKUv,i],[lKUv,i,YQIZy],[lKUv,i,Xt],[lKUv,i,Xt,YQIZy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_607() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qrAXh","eC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eC],[qrAXh],[qrAXh,eC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_608() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mjw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mjw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_609() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RsoM","pI","cktwv","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[cktwv],[cktwv,n],[pI],[pI,n],[pI,cktwv],[pI,cktwv,n],[RsoM],[RsoM,n],[RsoM,cktwv],[RsoM,cktwv,n],[RsoM,pI],[RsoM,pI,n],[RsoM,pI,cktwv],[RsoM,pI,cktwv,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_610() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ab","clk","LzhX","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[LzhX],[LzhX,Z],[clk],[clk,Z],[clk,LzhX],[clk,LzhX,Z],[Ab],[Ab,Z],[Ab,LzhX],[Ab,LzhX,Z],[Ab,clk],[Ab,clk,Z],[Ab,clk,LzhX],[Ab,clk,LzhX,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_611() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CfW","AxTD","FDJe","XQ","REDjX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[REDjX],[XQ],[XQ,REDjX],[FDJe],[FDJe,REDjX],[FDJe,XQ],[FDJe,XQ,REDjX],[AxTD],[AxTD,REDjX],[AxTD,XQ],[AxTD,XQ,REDjX],[AxTD,FDJe],[AxTD,FDJe,REDjX],[AxTD,FDJe,XQ],[AxTD,FDJe,XQ,REDjX],[CfW],[CfW,REDjX],[CfW,XQ],[CfW,XQ,REDjX],[CfW,FDJe],[CfW,FDJe,REDjX],[CfW,FDJe,XQ],[CfW,FDJe,XQ,REDjX],[CfW,AxTD],[CfW,AxTD,REDjX],[CfW,AxTD,XQ],[CfW,AxTD,XQ,REDjX],[CfW,AxTD,FDJe],[CfW,AxTD,FDJe,REDjX],[CfW,AxTD,FDJe,XQ],[CfW,AxTD,FDJe,XQ,REDjX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_612() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vuKQK","QmDaK","DpsBZ","KEeOc","kPt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kPt],[KEeOc],[KEeOc,kPt],[DpsBZ],[DpsBZ,kPt],[DpsBZ,KEeOc],[DpsBZ,KEeOc,kPt],[QmDaK],[QmDaK,kPt],[QmDaK,KEeOc],[QmDaK,KEeOc,kPt],[QmDaK,DpsBZ],[QmDaK,DpsBZ,kPt],[QmDaK,DpsBZ,KEeOc],[QmDaK,DpsBZ,KEeOc,kPt],[vuKQK],[vuKQK,kPt],[vuKQK,KEeOc],[vuKQK,KEeOc,kPt],[vuKQK,DpsBZ],[vuKQK,DpsBZ,kPt],[vuKQK,DpsBZ,KEeOc],[vuKQK,DpsBZ,KEeOc,kPt],[vuKQK,QmDaK],[vuKQK,QmDaK,kPt],[vuKQK,QmDaK,KEeOc],[vuKQK,QmDaK,KEeOc,kPt],[vuKQK,QmDaK,DpsBZ],[vuKQK,QmDaK,DpsBZ,kPt],[vuKQK,QmDaK,DpsBZ,KEeOc],[vuKQK,QmDaK,DpsBZ,KEeOc,kPt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_613() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ymO","Z","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[Z],[Z,K],[ymO],[ymO,K],[ymO,Z],[ymO,Z,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_614() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","X","ZSowc","Mnfm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mnfm],[ZSowc],[ZSowc,Mnfm],[X],[X,Mnfm],[X,ZSowc],[X,ZSowc,Mnfm],[w],[w,Mnfm],[w,ZSowc],[w,ZSowc,Mnfm],[w,X],[w,X,Mnfm],[w,X,ZSowc],[w,X,ZSowc,Mnfm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_615() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nwp","kew")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kew],[Nwp],[Nwp,kew]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_616() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","y","zewO","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[zewO],[zewO,K],[y],[y,K],[y,zewO],[y,zewO,K],[E],[E,K],[E,zewO],[E,zewO,K],[E,y],[E,y,K],[E,y,zewO],[E,y,zewO,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_617() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","HzqF","ABl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ABl],[HzqF],[HzqF,ABl],[a],[a,ABl],[a,HzqF],[a,HzqF,ABl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_618() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lrtt","LtzKl","V","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[V],[V,G],[LtzKl],[LtzKl,G],[LtzKl,V],[LtzKl,V,G],[Lrtt],[Lrtt,G],[Lrtt,V],[Lrtt,V,G],[Lrtt,LtzKl],[Lrtt,LtzKl,G],[Lrtt,LtzKl,V],[Lrtt,LtzKl,V,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_619() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Exd","vproz","IKrUn","giCm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[giCm],[IKrUn],[IKrUn,giCm],[vproz],[vproz,giCm],[vproz,IKrUn],[vproz,IKrUn,giCm],[Exd],[Exd,giCm],[Exd,IKrUn],[Exd,IKrUn,giCm],[Exd,vproz],[Exd,vproz,giCm],[Exd,vproz,IKrUn],[Exd,vproz,IKrUn,giCm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_620() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sKgBb","Nvc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nvc],[sKgBb],[sKgBb,Nvc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_621() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qg","ycnR","DiLu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DiLu],[ycnR],[ycnR,DiLu],[qg],[qg,DiLu],[qg,ycnR],[qg,ycnR,DiLu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_622() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Frf","uscHP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uscHP],[Frf],[Frf,uscHP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_623() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cxv","Nsh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nsh],[Cxv],[Cxv,Nsh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_624() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ru","sinYD","ijrMS","hIXF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hIXF],[ijrMS],[ijrMS,hIXF],[sinYD],[sinYD,hIXF],[sinYD,ijrMS],[sinYD,ijrMS,hIXF],[ru],[ru,hIXF],[ru,ijrMS],[ru,ijrMS,hIXF],[ru,sinYD],[ru,sinYD,hIXF],[ru,sinYD,ijrMS],[ru,sinYD,ijrMS,hIXF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_625() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kKseW","ERqCo","Midf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Midf],[ERqCo],[ERqCo,Midf],[kKseW],[kKseW,Midf],[kKseW,ERqCo],[kKseW,ERqCo,Midf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_626() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cv","qY","uGA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uGA],[qY],[qY,uGA],[Cv],[Cv,uGA],[Cv,qY],[Cv,qY,uGA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_627() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mZfBA","BNB","x","PaksG","Jaf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jaf],[PaksG],[PaksG,Jaf],[x],[x,Jaf],[x,PaksG],[x,PaksG,Jaf],[BNB],[BNB,Jaf],[BNB,PaksG],[BNB,PaksG,Jaf],[BNB,x],[BNB,x,Jaf],[BNB,x,PaksG],[BNB,x,PaksG,Jaf],[mZfBA],[mZfBA,Jaf],[mZfBA,PaksG],[mZfBA,PaksG,Jaf],[mZfBA,x],[mZfBA,x,Jaf],[mZfBA,x,PaksG],[mZfBA,x,PaksG,Jaf],[mZfBA,BNB],[mZfBA,BNB,Jaf],[mZfBA,BNB,PaksG],[mZfBA,BNB,PaksG,Jaf],[mZfBA,BNB,x],[mZfBA,BNB,x,Jaf],[mZfBA,BNB,x,PaksG],[mZfBA,BNB,x,PaksG,Jaf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_628() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AcDlT","K","nNBbN","dTmM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dTmM],[nNBbN],[nNBbN,dTmM],[K],[K,dTmM],[K,nNBbN],[K,nNBbN,dTmM],[AcDlT],[AcDlT,dTmM],[AcDlT,nNBbN],[AcDlT,nNBbN,dTmM],[AcDlT,K],[AcDlT,K,dTmM],[AcDlT,K,nNBbN],[AcDlT,K,nNBbN,dTmM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_629() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PKMvN","xnyB","GEj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GEj],[xnyB],[xnyB,GEj],[PKMvN],[PKMvN,GEj],[PKMvN,xnyB],[PKMvN,xnyB,GEj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_630() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YhuC","rp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rp],[YhuC],[YhuC,rp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_631() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_632() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UE","f","ZgFy","J","NcR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NcR],[J],[J,NcR],[ZgFy],[ZgFy,NcR],[ZgFy,J],[ZgFy,J,NcR],[f],[f,NcR],[f,J],[f,J,NcR],[f,ZgFy],[f,ZgFy,NcR],[f,ZgFy,J],[f,ZgFy,J,NcR],[UE],[UE,NcR],[UE,J],[UE,J,NcR],[UE,ZgFy],[UE,ZgFy,NcR],[UE,ZgFy,J],[UE,ZgFy,J,NcR],[UE,f],[UE,f,NcR],[UE,f,J],[UE,f,J,NcR],[UE,f,ZgFy],[UE,f,ZgFy,NcR],[UE,f,ZgFy,J],[UE,f,ZgFy,J,NcR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_633() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EdDLQ","KVqg","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[KVqg],[KVqg,M],[EdDLQ],[EdDLQ,M],[EdDLQ,KVqg],[EdDLQ,KVqg,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_634() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rUTZx","ovrG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ovrG],[rUTZx],[rUTZx,ovrG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_635() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","rZP","zJei","lMBP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lMBP],[zJei],[zJei,lMBP],[rZP],[rZP,lMBP],[rZP,zJei],[rZP,zJei,lMBP],[p],[p,lMBP],[p,zJei],[p,zJei,lMBP],[p,rZP],[p,rZP,lMBP],[p,rZP,zJei],[p,rZP,zJei,lMBP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_636() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MYOG","F","Moys")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Moys],[F],[F,Moys],[MYOG],[MYOG,Moys],[MYOG,F],[MYOG,F,Moys]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_637() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CpCI","oD","F","vR","jtv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jtv],[vR],[vR,jtv],[F],[F,jtv],[F,vR],[F,vR,jtv],[oD],[oD,jtv],[oD,vR],[oD,vR,jtv],[oD,F],[oD,F,jtv],[oD,F,vR],[oD,F,vR,jtv],[CpCI],[CpCI,jtv],[CpCI,vR],[CpCI,vR,jtv],[CpCI,F],[CpCI,F,jtv],[CpCI,F,vR],[CpCI,F,vR,jtv],[CpCI,oD],[CpCI,oD,jtv],[CpCI,oD,vR],[CpCI,oD,vR,jtv],[CpCI,oD,F],[CpCI,oD,F,jtv],[CpCI,oD,F,vR],[CpCI,oD,F,vR,jtv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_638() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zaYQQ","Ip","AxM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AxM],[Ip],[Ip,AxM],[zaYQQ],[zaYQQ,AxM],[zaYQQ,Ip],[zaYQQ,Ip,AxM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_639() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UPuI","vQcu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vQcu],[UPuI],[UPuI,vQcu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_640() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_641() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mRJlM","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[mRJlM],[mRJlM,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_642() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lCSgL","fhJCG","rM","Ap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ap],[rM],[rM,Ap],[fhJCG],[fhJCG,Ap],[fhJCG,rM],[fhJCG,rM,Ap],[lCSgL],[lCSgL,Ap],[lCSgL,rM],[lCSgL,rM,Ap],[lCSgL,fhJCG],[lCSgL,fhJCG,Ap],[lCSgL,fhJCG,rM],[lCSgL,fhJCG,rM,Ap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_643() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[V]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_644() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[P]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_645() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fNyh","drkQq","RxR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RxR],[drkQq],[drkQq,RxR],[fNyh],[fNyh,RxR],[fNyh,drkQq],[fNyh,drkQq,RxR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_646() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qrc","gmFu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gmFu],[Qrc],[Qrc,gmFu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_647() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JA","UAI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UAI],[JA],[JA,UAI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_648() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wX","C","x","uga")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uga],[x],[x,uga],[C],[C,uga],[C,x],[C,x,uga],[wX],[wX,uga],[wX,x],[wX,x,uga],[wX,C],[wX,C,uga],[wX,C,x],[wX,C,x,uga]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_649() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VRK","yNvG","dS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dS],[yNvG],[yNvG,dS],[VRK],[VRK,dS],[VRK,yNvG],[VRK,yNvG,dS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_650() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dsr","AouwV","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[AouwV],[AouwV,n],[Dsr],[Dsr,n],[Dsr,AouwV],[Dsr,AouwV,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_651() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","oQm","Eqi","ztbmU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ztbmU],[Eqi],[Eqi,ztbmU],[oQm],[oQm,ztbmU],[oQm,Eqi],[oQm,Eqi,ztbmU],[b],[b,ztbmU],[b,Eqi],[b,Eqi,ztbmU],[b,oQm],[b,oQm,ztbmU],[b,oQm,Eqi],[b,oQm,Eqi,ztbmU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_652() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UTBW","uqrUo","hQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hQ],[uqrUo],[uqrUo,hQ],[UTBW],[UTBW,hQ],[UTBW,uqrUo],[UTBW,uqrUo,hQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_653() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qddrf","HQZLz","gyFwR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gyFwR],[HQZLz],[HQZLz,gyFwR],[Qddrf],[Qddrf,gyFwR],[Qddrf,HQZLz],[Qddrf,HQZLz,gyFwR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_654() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","Wxu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wxu],[S],[S,Wxu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_655() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KItvQ","OA","h","J","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[J],[J,O],[h],[h,O],[h,J],[h,J,O],[OA],[OA,O],[OA,J],[OA,J,O],[OA,h],[OA,h,O],[OA,h,J],[OA,h,J,O],[KItvQ],[KItvQ,O],[KItvQ,J],[KItvQ,J,O],[KItvQ,h],[KItvQ,h,O],[KItvQ,h,J],[KItvQ,h,J,O],[KItvQ,OA],[KItvQ,OA,O],[KItvQ,OA,J],[KItvQ,OA,J,O],[KItvQ,OA,h],[KItvQ,OA,h,O],[KItvQ,OA,h,J],[KItvQ,OA,h,J,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_656() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vajNw","tJbN","SMB","zs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zs],[SMB],[SMB,zs],[tJbN],[tJbN,zs],[tJbN,SMB],[tJbN,SMB,zs],[vajNw],[vajNw,zs],[vajNw,SMB],[vajNw,SMB,zs],[vajNw,tJbN],[vajNw,tJbN,zs],[vajNw,tJbN,SMB],[vajNw,tJbN,SMB,zs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_657() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cmgna","DlTTf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DlTTf],[Cmgna],[Cmgna,DlTTf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_658() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "azL","yiavm","KCJrv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KCJrv],[yiavm],[yiavm,KCJrv],[azL],[azL,KCJrv],[azL,yiavm],[azL,yiavm,KCJrv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_659() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uf","reVZK","xnd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xnd],[reVZK],[reVZK,xnd],[uf],[uf,xnd],[uf,reVZK],[uf,reVZK,xnd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_660() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uwz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uwz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_661() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fPM","aZ","I","uHBn","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[uHBn],[uHBn,k],[I],[I,k],[I,uHBn],[I,uHBn,k],[aZ],[aZ,k],[aZ,uHBn],[aZ,uHBn,k],[aZ,I],[aZ,I,k],[aZ,I,uHBn],[aZ,I,uHBn,k],[fPM],[fPM,k],[fPM,uHBn],[fPM,uHBn,k],[fPM,I],[fPM,I,k],[fPM,I,uHBn],[fPM,I,uHBn,k],[fPM,aZ],[fPM,aZ,k],[fPM,aZ,uHBn],[fPM,aZ,uHBn,k],[fPM,aZ,I],[fPM,aZ,I,k],[fPM,aZ,I,uHBn],[fPM,aZ,I,uHBn,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_662() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jm","Qte","zrnxX","sSjcN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sSjcN],[zrnxX],[zrnxX,sSjcN],[Qte],[Qte,sSjcN],[Qte,zrnxX],[Qte,zrnxX,sSjcN],[jm],[jm,sSjcN],[jm,zrnxX],[jm,zrnxX,sSjcN],[jm,Qte],[jm,Qte,sSjcN],[jm,Qte,zrnxX],[jm,Qte,zrnxX,sSjcN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_663() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xe","xEk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xEk],[xe],[xe,xEk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_664() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hfj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hfj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_665() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zPDvT","b","FviQ","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[FviQ],[FviQ,L],[b],[b,L],[b,FviQ],[b,FviQ,L],[zPDvT],[zPDvT,L],[zPDvT,FviQ],[zPDvT,FviQ,L],[zPDvT,b],[zPDvT,b,L],[zPDvT,b,FviQ],[zPDvT,b,FviQ,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_666() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "odTNM","g","upT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[upT],[g],[g,upT],[odTNM],[odTNM,upT],[odTNM,g],[odTNM,g,upT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_667() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eSEn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eSEn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_668() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "evgyU","T","Mwn","xf","VmDzm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VmDzm],[xf],[xf,VmDzm],[Mwn],[Mwn,VmDzm],[Mwn,xf],[Mwn,xf,VmDzm],[T],[T,VmDzm],[T,xf],[T,xf,VmDzm],[T,Mwn],[T,Mwn,VmDzm],[T,Mwn,xf],[T,Mwn,xf,VmDzm],[evgyU],[evgyU,VmDzm],[evgyU,xf],[evgyU,xf,VmDzm],[evgyU,Mwn],[evgyU,Mwn,VmDzm],[evgyU,Mwn,xf],[evgyU,Mwn,xf,VmDzm],[evgyU,T],[evgyU,T,VmDzm],[evgyU,T,xf],[evgyU,T,xf,VmDzm],[evgyU,T,Mwn],[evgyU,T,Mwn,VmDzm],[evgyU,T,Mwn,xf],[evgyU,T,Mwn,xf,VmDzm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_669() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","sW","ZONO","lEdRE","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[lEdRE],[lEdRE,N],[ZONO],[ZONO,N],[ZONO,lEdRE],[ZONO,lEdRE,N],[sW],[sW,N],[sW,lEdRE],[sW,lEdRE,N],[sW,ZONO],[sW,ZONO,N],[sW,ZONO,lEdRE],[sW,ZONO,lEdRE,N],[r],[r,N],[r,lEdRE],[r,lEdRE,N],[r,ZONO],[r,ZONO,N],[r,ZONO,lEdRE],[r,ZONO,lEdRE,N],[r,sW],[r,sW,N],[r,sW,lEdRE],[r,sW,lEdRE,N],[r,sW,ZONO],[r,sW,ZONO,N],[r,sW,ZONO,lEdRE],[r,sW,ZONO,lEdRE,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_670() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "heLe","H","MCaY","PtR","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[PtR],[PtR,o],[MCaY],[MCaY,o],[MCaY,PtR],[MCaY,PtR,o],[H],[H,o],[H,PtR],[H,PtR,o],[H,MCaY],[H,MCaY,o],[H,MCaY,PtR],[H,MCaY,PtR,o],[heLe],[heLe,o],[heLe,PtR],[heLe,PtR,o],[heLe,MCaY],[heLe,MCaY,o],[heLe,MCaY,PtR],[heLe,MCaY,PtR,o],[heLe,H],[heLe,H,o],[heLe,H,PtR],[heLe,H,PtR,o],[heLe,H,MCaY],[heLe,H,MCaY,o],[heLe,H,MCaY,PtR],[heLe,H,MCaY,PtR,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_671() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_672() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qTgCQ","cL","eBPIj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eBPIj],[cL],[cL,eBPIj],[qTgCQ],[qTgCQ,eBPIj],[qTgCQ,cL],[qTgCQ,cL,eBPIj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_673() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","CfVel","ZOy","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[ZOy],[ZOy,O],[CfVel],[CfVel,O],[CfVel,ZOy],[CfVel,ZOy,O],[A],[A,O],[A,ZOy],[A,ZOy,O],[A,CfVel],[A,CfVel,O],[A,CfVel,ZOy],[A,CfVel,ZOy,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_674() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pA","HBVt","HkkZT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HkkZT],[HBVt],[HBVt,HkkZT],[pA],[pA,HkkZT],[pA,HBVt],[pA,HBVt,HkkZT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_675() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rYMhX","FcVzc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FcVzc],[rYMhX],[rYMhX,FcVzc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_676() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GbTtp","T","bEMhK","CvthR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CvthR],[bEMhK],[bEMhK,CvthR],[T],[T,CvthR],[T,bEMhK],[T,bEMhK,CvthR],[GbTtp],[GbTtp,CvthR],[GbTtp,bEMhK],[GbTtp,bEMhK,CvthR],[GbTtp,T],[GbTtp,T,CvthR],[GbTtp,T,bEMhK],[GbTtp,T,bEMhK,CvthR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_677() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zTGF","EhMt","BpHm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BpHm],[EhMt],[EhMt,BpHm],[zTGF],[zTGF,BpHm],[zTGF,EhMt],[zTGF,EhMt,BpHm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_678() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UWoT","hTgxo","t","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[t],[t,j],[hTgxo],[hTgxo,j],[hTgxo,t],[hTgxo,t,j],[UWoT],[UWoT,j],[UWoT,t],[UWoT,t,j],[UWoT,hTgxo],[UWoT,hTgxo,j],[UWoT,hTgxo,t],[UWoT,hTgxo,t,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_679() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nq","jhH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jhH],[nq],[nq,jhH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_680() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kMoc","ldn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ldn],[kMoc],[kMoc,ldn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_681() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","Rp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rp],[V],[V,Rp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_682() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","ZIR","QNMs","XuS","YaB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YaB],[XuS],[XuS,YaB],[QNMs],[QNMs,YaB],[QNMs,XuS],[QNMs,XuS,YaB],[ZIR],[ZIR,YaB],[ZIR,XuS],[ZIR,XuS,YaB],[ZIR,QNMs],[ZIR,QNMs,YaB],[ZIR,QNMs,XuS],[ZIR,QNMs,XuS,YaB],[B],[B,YaB],[B,XuS],[B,XuS,YaB],[B,QNMs],[B,QNMs,YaB],[B,QNMs,XuS],[B,QNMs,XuS,YaB],[B,ZIR],[B,ZIR,YaB],[B,ZIR,XuS],[B,ZIR,XuS,YaB],[B,ZIR,QNMs],[B,ZIR,QNMs,YaB],[B,ZIR,QNMs,XuS],[B,ZIR,QNMs,XuS,YaB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_683() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","ndxm","i","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[i],[i,n],[ndxm],[ndxm,n],[ndxm,i],[ndxm,i,n],[g],[g,n],[g,i],[g,i,n],[g,ndxm],[g,ndxm,n],[g,ndxm,i],[g,ndxm,i,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_684() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cEv","U","LjI","JiY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JiY],[LjI],[LjI,JiY],[U],[U,JiY],[U,LjI],[U,LjI,JiY],[cEv],[cEv,JiY],[cEv,LjI],[cEv,LjI,JiY],[cEv,U],[cEv,U,JiY],[cEv,U,LjI],[cEv,U,LjI,JiY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_685() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_686() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zD","Ap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ap],[zD],[zD,Ap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_687() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yXyU","i","iZY","kE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kE],[iZY],[iZY,kE],[i],[i,kE],[i,iZY],[i,iZY,kE],[yXyU],[yXyU,kE],[yXyU,iZY],[yXyU,iZY,kE],[yXyU,i],[yXyU,i,kE],[yXyU,i,iZY],[yXyU,i,iZY,kE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_688() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","Jspwm","U","bJq","ow")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ow],[bJq],[bJq,ow],[U],[U,ow],[U,bJq],[U,bJq,ow],[Jspwm],[Jspwm,ow],[Jspwm,bJq],[Jspwm,bJq,ow],[Jspwm,U],[Jspwm,U,ow],[Jspwm,U,bJq],[Jspwm,U,bJq,ow],[P],[P,ow],[P,bJq],[P,bJq,ow],[P,U],[P,U,ow],[P,U,bJq],[P,U,bJq,ow],[P,Jspwm],[P,Jspwm,ow],[P,Jspwm,bJq],[P,Jspwm,bJq,ow],[P,Jspwm,U],[P,Jspwm,U,ow],[P,Jspwm,U,bJq],[P,Jspwm,U,bJq,ow]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_689() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DD","Pfjoa","ny")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ny],[Pfjoa],[Pfjoa,ny],[DD],[DD,ny],[DD,Pfjoa],[DD,Pfjoa,ny]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_690() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JkcU","mk","qrP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qrP],[mk],[mk,qrP],[JkcU],[JkcU,qrP],[JkcU,mk],[JkcU,mk,qrP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_691() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sHN","X","lF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lF],[X],[X,lF],[sHN],[sHN,lF],[sHN,X],[sHN,X,lF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_692() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "py")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[py]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_693() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PKYRA","G","LzjY","j","BSFRP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BSFRP],[j],[j,BSFRP],[LzjY],[LzjY,BSFRP],[LzjY,j],[LzjY,j,BSFRP],[G],[G,BSFRP],[G,j],[G,j,BSFRP],[G,LzjY],[G,LzjY,BSFRP],[G,LzjY,j],[G,LzjY,j,BSFRP],[PKYRA],[PKYRA,BSFRP],[PKYRA,j],[PKYRA,j,BSFRP],[PKYRA,LzjY],[PKYRA,LzjY,BSFRP],[PKYRA,LzjY,j],[PKYRA,LzjY,j,BSFRP],[PKYRA,G],[PKYRA,G,BSFRP],[PKYRA,G,j],[PKYRA,G,j,BSFRP],[PKYRA,G,LzjY],[PKYRA,G,LzjY,BSFRP],[PKYRA,G,LzjY,j],[PKYRA,G,LzjY,j,BSFRP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_694() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","W","USIqs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[USIqs],[W],[W,USIqs],[S],[S,USIqs],[S,W],[S,W,USIqs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_695() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lPJW","u","UTRT","w","gWO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gWO],[w],[w,gWO],[UTRT],[UTRT,gWO],[UTRT,w],[UTRT,w,gWO],[u],[u,gWO],[u,w],[u,w,gWO],[u,UTRT],[u,UTRT,gWO],[u,UTRT,w],[u,UTRT,w,gWO],[lPJW],[lPJW,gWO],[lPJW,w],[lPJW,w,gWO],[lPJW,UTRT],[lPJW,UTRT,gWO],[lPJW,UTRT,w],[lPJW,UTRT,w,gWO],[lPJW,u],[lPJW,u,gWO],[lPJW,u,w],[lPJW,u,w,gWO],[lPJW,u,UTRT],[lPJW,u,UTRT,gWO],[lPJW,u,UTRT,w],[lPJW,u,UTRT,w,gWO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_696() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ysP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ysP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_697() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","Z","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[Z],[Z,m],[e],[e,m],[e,Z],[e,Z,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_698() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hAZ","DEK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DEK],[hAZ],[hAZ,DEK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_699() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YLc","gNNer","ke","rBECm","gwj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gwj],[rBECm],[rBECm,gwj],[ke],[ke,gwj],[ke,rBECm],[ke,rBECm,gwj],[gNNer],[gNNer,gwj],[gNNer,rBECm],[gNNer,rBECm,gwj],[gNNer,ke],[gNNer,ke,gwj],[gNNer,ke,rBECm],[gNNer,ke,rBECm,gwj],[YLc],[YLc,gwj],[YLc,rBECm],[YLc,rBECm,gwj],[YLc,ke],[YLc,ke,gwj],[YLc,ke,rBECm],[YLc,ke,rBECm,gwj],[YLc,gNNer],[YLc,gNNer,gwj],[YLc,gNNer,rBECm],[YLc,gNNer,rBECm,gwj],[YLc,gNNer,ke],[YLc,gNNer,ke,gwj],[YLc,gNNer,ke,rBECm],[YLc,gNNer,ke,rBECm,gwj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_700() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BEUa","sCd","wewFc","PkAee")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PkAee],[wewFc],[wewFc,PkAee],[sCd],[sCd,PkAee],[sCd,wewFc],[sCd,wewFc,PkAee],[BEUa],[BEUa,PkAee],[BEUa,wewFc],[BEUa,wewFc,PkAee],[BEUa,sCd],[BEUa,sCd,PkAee],[BEUa,sCd,wewFc],[BEUa,sCd,wewFc,PkAee]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_701() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vqOPL","cvckI","ijJaY","vbjpy","hW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hW],[vbjpy],[vbjpy,hW],[ijJaY],[ijJaY,hW],[ijJaY,vbjpy],[ijJaY,vbjpy,hW],[cvckI],[cvckI,hW],[cvckI,vbjpy],[cvckI,vbjpy,hW],[cvckI,ijJaY],[cvckI,ijJaY,hW],[cvckI,ijJaY,vbjpy],[cvckI,ijJaY,vbjpy,hW],[vqOPL],[vqOPL,hW],[vqOPL,vbjpy],[vqOPL,vbjpy,hW],[vqOPL,ijJaY],[vqOPL,ijJaY,hW],[vqOPL,ijJaY,vbjpy],[vqOPL,ijJaY,vbjpy,hW],[vqOPL,cvckI],[vqOPL,cvckI,hW],[vqOPL,cvckI,vbjpy],[vqOPL,cvckI,vbjpy,hW],[vqOPL,cvckI,ijJaY],[vqOPL,cvckI,ijJaY,hW],[vqOPL,cvckI,ijJaY,vbjpy],[vqOPL,cvckI,ijJaY,vbjpy,hW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_702() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nspA","LBYOD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LBYOD],[nspA],[nspA,LBYOD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_703() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tKuxp","nHFf","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[nHFf],[nHFf,M],[tKuxp],[tKuxp,M],[tKuxp,nHFf],[tKuxp,nHFf,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_704() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pacZI","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[pacZI],[pacZI,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_705() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","Qk","Ctes")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ctes],[Qk],[Qk,Ctes],[Y],[Y,Ctes],[Y,Qk],[Y,Qk,Ctes]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_706() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iQVP","V","kB","z","hrmo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hrmo],[z],[z,hrmo],[kB],[kB,hrmo],[kB,z],[kB,z,hrmo],[V],[V,hrmo],[V,z],[V,z,hrmo],[V,kB],[V,kB,hrmo],[V,kB,z],[V,kB,z,hrmo],[iQVP],[iQVP,hrmo],[iQVP,z],[iQVP,z,hrmo],[iQVP,kB],[iQVP,kB,hrmo],[iQVP,kB,z],[iQVP,kB,z,hrmo],[iQVP,V],[iQVP,V,hrmo],[iQVP,V,z],[iQVP,V,z,hrmo],[iQVP,V,kB],[iQVP,V,kB,hrmo],[iQVP,V,kB,z],[iQVP,V,kB,z,hrmo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_707() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","ywu","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[ywu],[ywu,n],[u],[u,n],[u,ywu],[u,ywu,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_708() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uByl","BBRG","Eyzow","rfQ","IWgg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IWgg],[rfQ],[rfQ,IWgg],[Eyzow],[Eyzow,IWgg],[Eyzow,rfQ],[Eyzow,rfQ,IWgg],[BBRG],[BBRG,IWgg],[BBRG,rfQ],[BBRG,rfQ,IWgg],[BBRG,Eyzow],[BBRG,Eyzow,IWgg],[BBRG,Eyzow,rfQ],[BBRG,Eyzow,rfQ,IWgg],[uByl],[uByl,IWgg],[uByl,rfQ],[uByl,rfQ,IWgg],[uByl,Eyzow],[uByl,Eyzow,IWgg],[uByl,Eyzow,rfQ],[uByl,Eyzow,rfQ,IWgg],[uByl,BBRG],[uByl,BBRG,IWgg],[uByl,BBRG,rfQ],[uByl,BBRG,rfQ,IWgg],[uByl,BBRG,Eyzow],[uByl,BBRG,Eyzow,IWgg],[uByl,BBRG,Eyzow,rfQ],[uByl,BBRG,Eyzow,rfQ,IWgg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_709() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yTAzt","XUmeY","V")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[V],[XUmeY],[XUmeY,V],[yTAzt],[yTAzt,V],[yTAzt,XUmeY],[yTAzt,XUmeY,V]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_710() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","eshU","JQ","lAQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lAQ],[JQ],[JQ,lAQ],[eshU],[eshU,lAQ],[eshU,JQ],[eshU,JQ,lAQ],[C],[C,lAQ],[C,JQ],[C,JQ,lAQ],[C,eshU],[C,eshU,lAQ],[C,eshU,JQ],[C,eshU,JQ,lAQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_711() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hoAj","heGmq","KoiJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KoiJ],[heGmq],[heGmq,KoiJ],[hoAj],[hoAj,KoiJ],[hoAj,heGmq],[hoAj,heGmq,KoiJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_712() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aVL","h","ogGK","WnT","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[WnT],[WnT,o],[ogGK],[ogGK,o],[ogGK,WnT],[ogGK,WnT,o],[h],[h,o],[h,WnT],[h,WnT,o],[h,ogGK],[h,ogGK,o],[h,ogGK,WnT],[h,ogGK,WnT,o],[aVL],[aVL,o],[aVL,WnT],[aVL,WnT,o],[aVL,ogGK],[aVL,ogGK,o],[aVL,ogGK,WnT],[aVL,ogGK,WnT,o],[aVL,h],[aVL,h,o],[aVL,h,WnT],[aVL,h,WnT,o],[aVL,h,ogGK],[aVL,h,ogGK,o],[aVL,h,ogGK,WnT],[aVL,h,ogGK,WnT,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_713() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rHI","nwgD","Whcaq","hbVJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hbVJ],[Whcaq],[Whcaq,hbVJ],[nwgD],[nwgD,hbVJ],[nwgD,Whcaq],[nwgD,Whcaq,hbVJ],[rHI],[rHI,hbVJ],[rHI,Whcaq],[rHI,Whcaq,hbVJ],[rHI,nwgD],[rHI,nwgD,hbVJ],[rHI,nwgD,Whcaq],[rHI,nwgD,Whcaq,hbVJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_714() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","H","VN","cgdJh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cgdJh],[VN],[VN,cgdJh],[H],[H,cgdJh],[H,VN],[H,VN,cgdJh],[Q],[Q,cgdJh],[Q,VN],[Q,VN,cgdJh],[Q,H],[Q,H,cgdJh],[Q,H,VN],[Q,H,VN,cgdJh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_715() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TQmW","P","A")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[A],[P],[P,A],[TQmW],[TQmW,A],[TQmW,P],[TQmW,P,A]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_716() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EFE","WccTl","oN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oN],[WccTl],[WccTl,oN],[EFE],[EFE,oN],[EFE,WccTl],[EFE,WccTl,oN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_717() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vFS","GMVt","Eyzby","GozFz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GozFz],[Eyzby],[Eyzby,GozFz],[GMVt],[GMVt,GozFz],[GMVt,Eyzby],[GMVt,Eyzby,GozFz],[vFS],[vFS,GozFz],[vFS,Eyzby],[vFS,Eyzby,GozFz],[vFS,GMVt],[vFS,GMVt,GozFz],[vFS,GMVt,Eyzby],[vFS,GMVt,Eyzby,GozFz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_718() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","lgHOw","Mt","YIymE","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[YIymE],[YIymE,m],[Mt],[Mt,m],[Mt,YIymE],[Mt,YIymE,m],[lgHOw],[lgHOw,m],[lgHOw,YIymE],[lgHOw,YIymE,m],[lgHOw,Mt],[lgHOw,Mt,m],[lgHOw,Mt,YIymE],[lgHOw,Mt,YIymE,m],[a],[a,m],[a,YIymE],[a,YIymE,m],[a,Mt],[a,Mt,m],[a,Mt,YIymE],[a,Mt,YIymE,m],[a,lgHOw],[a,lgHOw,m],[a,lgHOw,YIymE],[a,lgHOw,YIymE,m],[a,lgHOw,Mt],[a,lgHOw,Mt,m],[a,lgHOw,Mt,YIymE],[a,lgHOw,Mt,YIymE,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_719() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Irwh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Irwh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_720() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HcobN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HcobN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_721() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lvK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lvK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_722() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_723() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zoZD","Yc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yc],[zoZD],[zoZD,Yc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_724() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pTEoD","PI","qEwQ","zXdFN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zXdFN],[qEwQ],[qEwQ,zXdFN],[PI],[PI,zXdFN],[PI,qEwQ],[PI,qEwQ,zXdFN],[pTEoD],[pTEoD,zXdFN],[pTEoD,qEwQ],[pTEoD,qEwQ,zXdFN],[pTEoD,PI],[pTEoD,PI,zXdFN],[pTEoD,PI,qEwQ],[pTEoD,PI,qEwQ,zXdFN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_725() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gabi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gabi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_726() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GW","S","iFr","yNrB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yNrB],[iFr],[iFr,yNrB],[S],[S,yNrB],[S,iFr],[S,iFr,yNrB],[GW],[GW,yNrB],[GW,iFr],[GW,iFr,yNrB],[GW,S],[GW,S,yNrB],[GW,S,iFr],[GW,S,iFr,yNrB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_727() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EYz","urMQp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[urMQp],[EYz],[EYz,urMQp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_728() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","r")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[r],[Q],[Q,r]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_729() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JtgYt","TeNL","vtSq","HGy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HGy],[vtSq],[vtSq,HGy],[TeNL],[TeNL,HGy],[TeNL,vtSq],[TeNL,vtSq,HGy],[JtgYt],[JtgYt,HGy],[JtgYt,vtSq],[JtgYt,vtSq,HGy],[JtgYt,TeNL],[JtgYt,TeNL,HGy],[JtgYt,TeNL,vtSq],[JtgYt,TeNL,vtSq,HGy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_730() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","kyG","Wc","xCj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xCj],[Wc],[Wc,xCj],[kyG],[kyG,xCj],[kyG,Wc],[kyG,Wc,xCj],[V],[V,xCj],[V,Wc],[V,Wc,xCj],[V,kyG],[V,kyG,xCj],[V,kyG,Wc],[V,kyG,Wc,xCj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_731() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oDjDl","Y","bDnC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bDnC],[Y],[Y,bDnC],[oDjDl],[oDjDl,bDnC],[oDjDl,Y],[oDjDl,Y,bDnC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_732() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PCwfh","xj","D","WL","WrUHw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WrUHw],[WL],[WL,WrUHw],[D],[D,WrUHw],[D,WL],[D,WL,WrUHw],[xj],[xj,WrUHw],[xj,WL],[xj,WL,WrUHw],[xj,D],[xj,D,WrUHw],[xj,D,WL],[xj,D,WL,WrUHw],[PCwfh],[PCwfh,WrUHw],[PCwfh,WL],[PCwfh,WL,WrUHw],[PCwfh,D],[PCwfh,D,WrUHw],[PCwfh,D,WL],[PCwfh,D,WL,WrUHw],[PCwfh,xj],[PCwfh,xj,WrUHw],[PCwfh,xj,WL],[PCwfh,xj,WL,WrUHw],[PCwfh,xj,D],[PCwfh,xj,D,WrUHw],[PCwfh,xj,D,WL],[PCwfh,xj,D,WL,WrUHw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_733() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nvWPw","e","nLZqY","qolwy","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[qolwy],[qolwy,m],[nLZqY],[nLZqY,m],[nLZqY,qolwy],[nLZqY,qolwy,m],[e],[e,m],[e,qolwy],[e,qolwy,m],[e,nLZqY],[e,nLZqY,m],[e,nLZqY,qolwy],[e,nLZqY,qolwy,m],[nvWPw],[nvWPw,m],[nvWPw,qolwy],[nvWPw,qolwy,m],[nvWPw,nLZqY],[nvWPw,nLZqY,m],[nvWPw,nLZqY,qolwy],[nvWPw,nLZqY,qolwy,m],[nvWPw,e],[nvWPw,e,m],[nvWPw,e,qolwy],[nvWPw,e,qolwy,m],[nvWPw,e,nLZqY],[nvWPw,e,nLZqY,m],[nvWPw,e,nLZqY,qolwy],[nvWPw,e,nLZqY,qolwy,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_734() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bG","x","i","iVg","Vq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vq],[iVg],[iVg,Vq],[i],[i,Vq],[i,iVg],[i,iVg,Vq],[x],[x,Vq],[x,iVg],[x,iVg,Vq],[x,i],[x,i,Vq],[x,i,iVg],[x,i,iVg,Vq],[bG],[bG,Vq],[bG,iVg],[bG,iVg,Vq],[bG,i],[bG,i,Vq],[bG,i,iVg],[bG,i,iVg,Vq],[bG,x],[bG,x,Vq],[bG,x,iVg],[bG,x,iVg,Vq],[bG,x,i],[bG,x,i,Vq],[bG,x,i,iVg],[bG,x,i,iVg,Vq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_735() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LntLz","ChSi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ChSi],[LntLz],[LntLz,ChSi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_736() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "exSn","iyW","JtWRf","Nhsx","irFy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[irFy],[Nhsx],[Nhsx,irFy],[JtWRf],[JtWRf,irFy],[JtWRf,Nhsx],[JtWRf,Nhsx,irFy],[iyW],[iyW,irFy],[iyW,Nhsx],[iyW,Nhsx,irFy],[iyW,JtWRf],[iyW,JtWRf,irFy],[iyW,JtWRf,Nhsx],[iyW,JtWRf,Nhsx,irFy],[exSn],[exSn,irFy],[exSn,Nhsx],[exSn,Nhsx,irFy],[exSn,JtWRf],[exSn,JtWRf,irFy],[exSn,JtWRf,Nhsx],[exSn,JtWRf,Nhsx,irFy],[exSn,iyW],[exSn,iyW,irFy],[exSn,iyW,Nhsx],[exSn,iyW,Nhsx,irFy],[exSn,iyW,JtWRf],[exSn,iyW,JtWRf,irFy],[exSn,iyW,JtWRf,Nhsx],[exSn,iyW,JtWRf,Nhsx,irFy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_737() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gmL","YYMt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YYMt],[gmL],[gmL,YYMt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_738() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qu","qms","W","KEe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KEe],[W],[W,KEe],[qms],[qms,KEe],[qms,W],[qms,W,KEe],[Qu],[Qu,KEe],[Qu,W],[Qu,W,KEe],[Qu,qms],[Qu,qms,KEe],[Qu,qms,W],[Qu,qms,W,KEe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_739() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[A]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_740() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kn","t","V","lt","fMmk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fMmk],[lt],[lt,fMmk],[V],[V,fMmk],[V,lt],[V,lt,fMmk],[t],[t,fMmk],[t,lt],[t,lt,fMmk],[t,V],[t,V,fMmk],[t,V,lt],[t,V,lt,fMmk],[kn],[kn,fMmk],[kn,lt],[kn,lt,fMmk],[kn,V],[kn,V,fMmk],[kn,V,lt],[kn,V,lt,fMmk],[kn,t],[kn,t,fMmk],[kn,t,lt],[kn,t,lt,fMmk],[kn,t,V],[kn,t,V,fMmk],[kn,t,V,lt],[kn,t,V,lt,fMmk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_741() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tboDe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tboDe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_742() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sdF","uWsQ","KF","ZzSDB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZzSDB],[KF],[KF,ZzSDB],[uWsQ],[uWsQ,ZzSDB],[uWsQ,KF],[uWsQ,KF,ZzSDB],[sdF],[sdF,ZzSDB],[sdF,KF],[sdF,KF,ZzSDB],[sdF,uWsQ],[sdF,uWsQ,ZzSDB],[sdF,uWsQ,KF],[sdF,uWsQ,KF,ZzSDB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_743() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rPP","V","JDLEO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JDLEO],[V],[V,JDLEO],[rPP],[rPP,JDLEO],[rPP,V],[rPP,V,JDLEO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_744() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EuB","dKih","y","iim","HVCUq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HVCUq],[iim],[iim,HVCUq],[y],[y,HVCUq],[y,iim],[y,iim,HVCUq],[dKih],[dKih,HVCUq],[dKih,iim],[dKih,iim,HVCUq],[dKih,y],[dKih,y,HVCUq],[dKih,y,iim],[dKih,y,iim,HVCUq],[EuB],[EuB,HVCUq],[EuB,iim],[EuB,iim,HVCUq],[EuB,y],[EuB,y,HVCUq],[EuB,y,iim],[EuB,y,iim,HVCUq],[EuB,dKih],[EuB,dKih,HVCUq],[EuB,dKih,iim],[EuB,dKih,iim,HVCUq],[EuB,dKih,y],[EuB,dKih,y,HVCUq],[EuB,dKih,y,iim],[EuB,dKih,y,iim,HVCUq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_745() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dXHK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dXHK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_746() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iOn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iOn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_747() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[P],[P,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_748() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UlK","Eepe","jpDLO","zpmEo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zpmEo],[jpDLO],[jpDLO,zpmEo],[Eepe],[Eepe,zpmEo],[Eepe,jpDLO],[Eepe,jpDLO,zpmEo],[UlK],[UlK,zpmEo],[UlK,jpDLO],[UlK,jpDLO,zpmEo],[UlK,Eepe],[UlK,Eepe,zpmEo],[UlK,Eepe,jpDLO],[UlK,Eepe,jpDLO,zpmEo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_749() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","mNF","ayN","JEDG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JEDG],[ayN],[ayN,JEDG],[mNF],[mNF,JEDG],[mNF,ayN],[mNF,ayN,JEDG],[P],[P,JEDG],[P,ayN],[P,ayN,JEDG],[P,mNF],[P,mNF,JEDG],[P,mNF,ayN],[P,mNF,ayN,JEDG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_750() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OzYPX","iFX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iFX],[OzYPX],[OzYPX,iFX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_751() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KBv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KBv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_752() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YmE","T","fTLCG","UOdMM","dys")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dys],[UOdMM],[UOdMM,dys],[fTLCG],[fTLCG,dys],[fTLCG,UOdMM],[fTLCG,UOdMM,dys],[T],[T,dys],[T,UOdMM],[T,UOdMM,dys],[T,fTLCG],[T,fTLCG,dys],[T,fTLCG,UOdMM],[T,fTLCG,UOdMM,dys],[YmE],[YmE,dys],[YmE,UOdMM],[YmE,UOdMM,dys],[YmE,fTLCG],[YmE,fTLCG,dys],[YmE,fTLCG,UOdMM],[YmE,fTLCG,UOdMM,dys],[YmE,T],[YmE,T,dys],[YmE,T,UOdMM],[YmE,T,UOdMM,dys],[YmE,T,fTLCG],[YmE,T,fTLCG,dys],[YmE,T,fTLCG,UOdMM],[YmE,T,fTLCG,UOdMM,dys]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_753() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kZL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kZL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_754() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","D","t")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[t],[D],[D,t],[P],[P,t],[P,D],[P,D,t]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_755() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NbK","hmNB","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[hmNB],[hmNB,L],[NbK],[NbK,L],[NbK,hmNB],[NbK,hmNB,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_756() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "px")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[px]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_757() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qTb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qTb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_758() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yS","k","qYb","Tep","lZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lZ],[Tep],[Tep,lZ],[qYb],[qYb,lZ],[qYb,Tep],[qYb,Tep,lZ],[k],[k,lZ],[k,Tep],[k,Tep,lZ],[k,qYb],[k,qYb,lZ],[k,qYb,Tep],[k,qYb,Tep,lZ],[yS],[yS,lZ],[yS,Tep],[yS,Tep,lZ],[yS,qYb],[yS,qYb,lZ],[yS,qYb,Tep],[yS,qYb,Tep,lZ],[yS,k],[yS,k,lZ],[yS,k,Tep],[yS,k,Tep,lZ],[yS,k,qYb],[yS,k,qYb,lZ],[yS,k,qYb,Tep],[yS,k,qYb,Tep,lZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_759() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UmZP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UmZP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_760() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qHZG","HLo","fDM","uc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uc],[fDM],[fDM,uc],[HLo],[HLo,uc],[HLo,fDM],[HLo,fDM,uc],[qHZG],[qHZG,uc],[qHZG,fDM],[qHZG,fDM,uc],[qHZG,HLo],[qHZG,HLo,uc],[qHZG,HLo,fDM],[qHZG,HLo,fDM,uc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_761() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TcU","gE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gE],[TcU],[TcU,gE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_762() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zKK","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[zKK],[zKK,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_763() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pACh","ut")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ut],[pACh],[pACh,ut]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_764() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aoOIP","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[aoOIP],[aoOIP,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_765() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","Rd","d","gLTG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gLTG],[d],[d,gLTG],[Rd],[Rd,gLTG],[Rd,d],[Rd,d,gLTG],[P],[P,gLTG],[P,d],[P,d,gLTG],[P,Rd],[P,Rd,gLTG],[P,Rd,d],[P,Rd,d,gLTG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_766() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XA","Ds")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ds],[XA],[XA,Ds]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_767() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LpSjk","yc","gmu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gmu],[yc],[yc,gmu],[LpSjk],[LpSjk,gmu],[LpSjk,yc],[LpSjk,yc,gmu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_768() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hYrEm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hYrEm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_769() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZpcJV","kUR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kUR],[ZpcJV],[ZpcJV,kUR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_770() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lbh","zg","o","SEUWA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SEUWA],[o],[o,SEUWA],[zg],[zg,SEUWA],[zg,o],[zg,o,SEUWA],[lbh],[lbh,SEUWA],[lbh,o],[lbh,o,SEUWA],[lbh,zg],[lbh,zg,SEUWA],[lbh,zg,o],[lbh,zg,o,SEUWA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_771() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","EzxM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EzxM],[E],[E,EzxM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_772() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CGG","B","ru","EveBt","BQm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BQm],[EveBt],[EveBt,BQm],[ru],[ru,BQm],[ru,EveBt],[ru,EveBt,BQm],[B],[B,BQm],[B,EveBt],[B,EveBt,BQm],[B,ru],[B,ru,BQm],[B,ru,EveBt],[B,ru,EveBt,BQm],[CGG],[CGG,BQm],[CGG,EveBt],[CGG,EveBt,BQm],[CGG,ru],[CGG,ru,BQm],[CGG,ru,EveBt],[CGG,ru,EveBt,BQm],[CGG,B],[CGG,B,BQm],[CGG,B,EveBt],[CGG,B,EveBt,BQm],[CGG,B,ru],[CGG,B,ru,BQm],[CGG,B,ru,EveBt],[CGG,B,ru,EveBt,BQm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_773() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","bFrja","Apn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Apn],[bFrja],[bFrja,Apn],[P],[P,Apn],[P,bFrja],[P,bFrja,Apn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_774() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CwI","U")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[U],[CwI],[CwI,U]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_775() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uZiMd","SV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SV],[uZiMd],[uZiMd,SV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_776() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ROhWg","Dv","B","hqST","rvey")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rvey],[hqST],[hqST,rvey],[B],[B,rvey],[B,hqST],[B,hqST,rvey],[Dv],[Dv,rvey],[Dv,hqST],[Dv,hqST,rvey],[Dv,B],[Dv,B,rvey],[Dv,B,hqST],[Dv,B,hqST,rvey],[ROhWg],[ROhWg,rvey],[ROhWg,hqST],[ROhWg,hqST,rvey],[ROhWg,B],[ROhWg,B,rvey],[ROhWg,B,hqST],[ROhWg,B,hqST,rvey],[ROhWg,Dv],[ROhWg,Dv,rvey],[ROhWg,Dv,hqST],[ROhWg,Dv,hqST,rvey],[ROhWg,Dv,B],[ROhWg,Dv,B,rvey],[ROhWg,Dv,B,hqST],[ROhWg,Dv,B,hqST,rvey]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_777() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WLBi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WLBi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_778() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xz","rF","wEbd","HB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HB],[wEbd],[wEbd,HB],[rF],[rF,HB],[rF,wEbd],[rF,wEbd,HB],[Xz],[Xz,HB],[Xz,wEbd],[Xz,wEbd,HB],[Xz,rF],[Xz,rF,HB],[Xz,rF,wEbd],[Xz,rF,wEbd,HB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_779() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zs","yKlvA","YciKW","ML")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ML],[YciKW],[YciKW,ML],[yKlvA],[yKlvA,ML],[yKlvA,YciKW],[yKlvA,YciKW,ML],[Zs],[Zs,ML],[Zs,YciKW],[Zs,YciKW,ML],[Zs,yKlvA],[Zs,yKlvA,ML],[Zs,yKlvA,YciKW],[Zs,yKlvA,YciKW,ML]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_780() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IAPsu","mdC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mdC],[IAPsu],[IAPsu,mdC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_781() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ddZa","L","ugcxv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ugcxv],[L],[L,ugcxv],[ddZa],[ddZa,ugcxv],[ddZa,L],[ddZa,L,ugcxv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_782() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","L","EB","bizd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bizd],[EB],[EB,bizd],[L],[L,bizd],[L,EB],[L,EB,bizd],[T],[T,bizd],[T,EB],[T,EB,bizd],[T,L],[T,L,bizd],[T,L,EB],[T,L,EB,bizd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_783() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ierjk","BcOG","lIc","NbpQy","Bhdn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bhdn],[NbpQy],[NbpQy,Bhdn],[lIc],[lIc,Bhdn],[lIc,NbpQy],[lIc,NbpQy,Bhdn],[BcOG],[BcOG,Bhdn],[BcOG,NbpQy],[BcOG,NbpQy,Bhdn],[BcOG,lIc],[BcOG,lIc,Bhdn],[BcOG,lIc,NbpQy],[BcOG,lIc,NbpQy,Bhdn],[ierjk],[ierjk,Bhdn],[ierjk,NbpQy],[ierjk,NbpQy,Bhdn],[ierjk,lIc],[ierjk,lIc,Bhdn],[ierjk,lIc,NbpQy],[ierjk,lIc,NbpQy,Bhdn],[ierjk,BcOG],[ierjk,BcOG,Bhdn],[ierjk,BcOG,NbpQy],[ierjk,BcOG,NbpQy,Bhdn],[ierjk,BcOG,lIc],[ierjk,BcOG,lIc,Bhdn],[ierjk,BcOG,lIc,NbpQy],[ierjk,BcOG,lIc,NbpQy,Bhdn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_784() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_785() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","KtuSi","keyI","gr","OK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OK],[gr],[gr,OK],[keyI],[keyI,OK],[keyI,gr],[keyI,gr,OK],[KtuSi],[KtuSi,OK],[KtuSi,gr],[KtuSi,gr,OK],[KtuSi,keyI],[KtuSi,keyI,OK],[KtuSi,keyI,gr],[KtuSi,keyI,gr,OK],[c],[c,OK],[c,gr],[c,gr,OK],[c,keyI],[c,keyI,OK],[c,keyI,gr],[c,keyI,gr,OK],[c,KtuSi],[c,KtuSi,OK],[c,KtuSi,gr],[c,KtuSi,gr,OK],[c,KtuSi,keyI],[c,KtuSi,keyI,OK],[c,KtuSi,keyI,gr],[c,KtuSi,keyI,gr,OK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_786() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "knX","Pck")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pck],[knX],[knX,Pck]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_787() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DsCT","DoFla","KQv","c","hVddR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hVddR],[c],[c,hVddR],[KQv],[KQv,hVddR],[KQv,c],[KQv,c,hVddR],[DoFla],[DoFla,hVddR],[DoFla,c],[DoFla,c,hVddR],[DoFla,KQv],[DoFla,KQv,hVddR],[DoFla,KQv,c],[DoFla,KQv,c,hVddR],[DsCT],[DsCT,hVddR],[DsCT,c],[DsCT,c,hVddR],[DsCT,KQv],[DsCT,KQv,hVddR],[DsCT,KQv,c],[DsCT,KQv,c,hVddR],[DsCT,DoFla],[DsCT,DoFla,hVddR],[DsCT,DoFla,c],[DsCT,DoFla,c,hVddR],[DsCT,DoFla,KQv],[DsCT,DoFla,KQv,hVddR],[DsCT,DoFla,KQv,c],[DsCT,DoFla,KQv,c,hVddR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_788() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AfAE","qBaZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qBaZ],[AfAE],[AfAE,qBaZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_789() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zoUaY","C","OGQ","L","zg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zg],[L],[L,zg],[OGQ],[OGQ,zg],[OGQ,L],[OGQ,L,zg],[C],[C,zg],[C,L],[C,L,zg],[C,OGQ],[C,OGQ,zg],[C,OGQ,L],[C,OGQ,L,zg],[zoUaY],[zoUaY,zg],[zoUaY,L],[zoUaY,L,zg],[zoUaY,OGQ],[zoUaY,OGQ,zg],[zoUaY,OGQ,L],[zoUaY,OGQ,L,zg],[zoUaY,C],[zoUaY,C,zg],[zoUaY,C,L],[zoUaY,C,L,zg],[zoUaY,C,OGQ],[zoUaY,C,OGQ,zg],[zoUaY,C,OGQ,L],[zoUaY,C,OGQ,L,zg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_790() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BS","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[BS],[BS,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_791() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","COknH","jsv","NL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NL],[jsv],[jsv,NL],[COknH],[COknH,NL],[COknH,jsv],[COknH,jsv,NL],[T],[T,NL],[T,jsv],[T,jsv,NL],[T,COknH],[T,COknH,NL],[T,COknH,jsv],[T,COknH,jsv,NL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_792() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IAyx","TlMW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TlMW],[IAyx],[IAyx,TlMW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_793() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jiO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jiO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_794() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rtmO","F","XT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XT],[F],[F,XT],[rtmO],[rtmO,XT],[rtmO,F],[rtmO,F,XT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_795() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rss","PVkh","h","gAD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gAD],[h],[h,gAD],[PVkh],[PVkh,gAD],[PVkh,h],[PVkh,h,gAD],[rss],[rss,gAD],[rss,h],[rss,h,gAD],[rss,PVkh],[rss,PVkh,gAD],[rss,PVkh,h],[rss,PVkh,h,gAD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_796() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fuNdB","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[fuNdB],[fuNdB,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_797() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sHLC","LitOb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LitOb],[sHLC],[sHLC,LitOb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_798() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gO","fQKkU","jPNP","moo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[moo],[jPNP],[jPNP,moo],[fQKkU],[fQKkU,moo],[fQKkU,jPNP],[fQKkU,jPNP,moo],[gO],[gO,moo],[gO,jPNP],[gO,jPNP,moo],[gO,fQKkU],[gO,fQKkU,moo],[gO,fQKkU,jPNP],[gO,fQKkU,jPNP,moo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_799() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vTo","nwM","G","iSOdr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iSOdr],[G],[G,iSOdr],[nwM],[nwM,iSOdr],[nwM,G],[nwM,G,iSOdr],[vTo],[vTo,iSOdr],[vTo,G],[vTo,G,iSOdr],[vTo,nwM],[vTo,nwM,iSOdr],[vTo,nwM,G],[vTo,nwM,G,iSOdr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_800() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mbW","lO","c","ONFsF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ONFsF],[c],[c,ONFsF],[lO],[lO,ONFsF],[lO,c],[lO,c,ONFsF],[mbW],[mbW,ONFsF],[mbW,c],[mbW,c,ONFsF],[mbW,lO],[mbW,lO,ONFsF],[mbW,lO,c],[mbW,lO,c,ONFsF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_801() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bs","Qot")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qot],[bs],[bs,Qot]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_802() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WPY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WPY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_803() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AOjH","wca","bQF","zy","hKQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hKQ],[zy],[zy,hKQ],[bQF],[bQF,hKQ],[bQF,zy],[bQF,zy,hKQ],[wca],[wca,hKQ],[wca,zy],[wca,zy,hKQ],[wca,bQF],[wca,bQF,hKQ],[wca,bQF,zy],[wca,bQF,zy,hKQ],[AOjH],[AOjH,hKQ],[AOjH,zy],[AOjH,zy,hKQ],[AOjH,bQF],[AOjH,bQF,hKQ],[AOjH,bQF,zy],[AOjH,bQF,zy,hKQ],[AOjH,wca],[AOjH,wca,hKQ],[AOjH,wca,zy],[AOjH,wca,zy,hKQ],[AOjH,wca,bQF],[AOjH,wca,bQF,hKQ],[AOjH,wca,bQF,zy],[AOjH,wca,bQF,zy,hKQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_804() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i","ua")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ua],[i],[i,ua]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_805() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cLSI","b","E","tFrr","LJwF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LJwF],[tFrr],[tFrr,LJwF],[E],[E,LJwF],[E,tFrr],[E,tFrr,LJwF],[b],[b,LJwF],[b,tFrr],[b,tFrr,LJwF],[b,E],[b,E,LJwF],[b,E,tFrr],[b,E,tFrr,LJwF],[cLSI],[cLSI,LJwF],[cLSI,tFrr],[cLSI,tFrr,LJwF],[cLSI,E],[cLSI,E,LJwF],[cLSI,E,tFrr],[cLSI,E,tFrr,LJwF],[cLSI,b],[cLSI,b,LJwF],[cLSI,b,tFrr],[cLSI,b,tFrr,LJwF],[cLSI,b,E],[cLSI,b,E,LJwF],[cLSI,b,E,tFrr],[cLSI,b,E,tFrr,LJwF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_806() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_807() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","HOaF","Yf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yf],[HOaF],[HOaF,Yf],[P],[P,Yf],[P,HOaF],[P,HOaF,Yf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_808() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZP","JVjAU","CUtet","Hb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hb],[CUtet],[CUtet,Hb],[JVjAU],[JVjAU,Hb],[JVjAU,CUtet],[JVjAU,CUtet,Hb],[ZP],[ZP,Hb],[ZP,CUtet],[ZP,CUtet,Hb],[ZP,JVjAU],[ZP,JVjAU,Hb],[ZP,JVjAU,CUtet],[ZP,JVjAU,CUtet,Hb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_809() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","TAnRi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TAnRi],[D],[D,TAnRi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_810() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[d],[d,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_811() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nmLkT","up","VvM","ji")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ji],[VvM],[VvM,ji],[up],[up,ji],[up,VvM],[up,VvM,ji],[nmLkT],[nmLkT,ji],[nmLkT,VvM],[nmLkT,VvM,ji],[nmLkT,up],[nmLkT,up,ji],[nmLkT,up,VvM],[nmLkT,up,VvM,ji]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_812() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pUR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pUR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_813() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dd","HKVg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HKVg],[dd],[dd,HKVg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_814() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","gcB","zhqhl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zhqhl],[gcB],[gcB,zhqhl],[V],[V,zhqhl],[V,gcB],[V,gcB,zhqhl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_815() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tw","bv","PKABj","CHy","MyR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MyR],[CHy],[CHy,MyR],[PKABj],[PKABj,MyR],[PKABj,CHy],[PKABj,CHy,MyR],[bv],[bv,MyR],[bv,CHy],[bv,CHy,MyR],[bv,PKABj],[bv,PKABj,MyR],[bv,PKABj,CHy],[bv,PKABj,CHy,MyR],[Tw],[Tw,MyR],[Tw,CHy],[Tw,CHy,MyR],[Tw,PKABj],[Tw,PKABj,MyR],[Tw,PKABj,CHy],[Tw,PKABj,CHy,MyR],[Tw,bv],[Tw,bv,MyR],[Tw,bv,CHy],[Tw,bv,CHy,MyR],[Tw,bv,PKABj],[Tw,bv,PKABj,MyR],[Tw,bv,PKABj,CHy],[Tw,bv,PKABj,CHy,MyR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_816() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KDlge")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KDlge]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_817() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eML","Dm","GF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GF],[Dm],[Dm,GF],[eML],[eML,GF],[eML,Dm],[eML,Dm,GF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_818() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bPbt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bPbt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_819() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_820() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zfpNq","aTl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aTl],[zfpNq],[zfpNq,aTl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_821() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oPBS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oPBS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_822() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jls","Jh","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[Jh],[Jh,o],[Jls],[Jls,o],[Jls,Jh],[Jls,Jh,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_823() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kPyU","u","FZNn","AER")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AER],[FZNn],[FZNn,AER],[u],[u,AER],[u,FZNn],[u,FZNn,AER],[kPyU],[kPyU,AER],[kPyU,FZNn],[kPyU,FZNn,AER],[kPyU,u],[kPyU,u,AER],[kPyU,u,FZNn],[kPyU,u,FZNn,AER]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_824() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZZVN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZZVN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_825() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tt","wtT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wtT],[tt],[tt,wtT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_826() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WY","Dchq","k","ELwM","Pmk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pmk],[ELwM],[ELwM,Pmk],[k],[k,Pmk],[k,ELwM],[k,ELwM,Pmk],[Dchq],[Dchq,Pmk],[Dchq,ELwM],[Dchq,ELwM,Pmk],[Dchq,k],[Dchq,k,Pmk],[Dchq,k,ELwM],[Dchq,k,ELwM,Pmk],[WY],[WY,Pmk],[WY,ELwM],[WY,ELwM,Pmk],[WY,k],[WY,k,Pmk],[WY,k,ELwM],[WY,k,ELwM,Pmk],[WY,Dchq],[WY,Dchq,Pmk],[WY,Dchq,ELwM],[WY,Dchq,ELwM,Pmk],[WY,Dchq,k],[WY,Dchq,k,Pmk],[WY,Dchq,k,ELwM],[WY,Dchq,k,ELwM,Pmk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_827() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QgUZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QgUZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_828() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hsod","yn","UYk","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[UYk],[UYk,K],[yn],[yn,K],[yn,UYk],[yn,UYk,K],[hsod],[hsod,K],[hsod,UYk],[hsod,UYk,K],[hsod,yn],[hsod,yn,K],[hsod,yn,UYk],[hsod,yn,UYk,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_829() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "flWSn","c","cOtS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cOtS],[c],[c,cOtS],[flWSn],[flWSn,cOtS],[flWSn,c],[flWSn,c,cOtS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_830() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","d","k","m","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[m],[m,O],[k],[k,O],[k,m],[k,m,O],[d],[d,O],[d,m],[d,m,O],[d,k],[d,k,O],[d,k,m],[d,k,m,O],[P],[P,O],[P,m],[P,m,O],[P,k],[P,k,O],[P,k,m],[P,k,m,O],[P,d],[P,d,O],[P,d,m],[P,d,m,O],[P,d,k],[P,d,k,O],[P,d,k,m],[P,d,k,m,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_831() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wxb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wxb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_832() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fXbH","h","tAz","Pl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pl],[tAz],[tAz,Pl],[h],[h,Pl],[h,tAz],[h,tAz,Pl],[fXbH],[fXbH,Pl],[fXbH,tAz],[fXbH,tAz,Pl],[fXbH,h],[fXbH,h,Pl],[fXbH,h,tAz],[fXbH,h,tAz,Pl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_833() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_834() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FTp","cHHFq","JI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JI],[cHHFq],[cHHFq,JI],[FTp],[FTp,JI],[FTp,cHHFq],[FTp,cHHFq,JI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_835() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wphYL","i","tbIx","M","eexkC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eexkC],[M],[M,eexkC],[tbIx],[tbIx,eexkC],[tbIx,M],[tbIx,M,eexkC],[i],[i,eexkC],[i,M],[i,M,eexkC],[i,tbIx],[i,tbIx,eexkC],[i,tbIx,M],[i,tbIx,M,eexkC],[wphYL],[wphYL,eexkC],[wphYL,M],[wphYL,M,eexkC],[wphYL,tbIx],[wphYL,tbIx,eexkC],[wphYL,tbIx,M],[wphYL,tbIx,M,eexkC],[wphYL,i],[wphYL,i,eexkC],[wphYL,i,M],[wphYL,i,M,eexkC],[wphYL,i,tbIx],[wphYL,i,tbIx,eexkC],[wphYL,i,tbIx,M],[wphYL,i,tbIx,M,eexkC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_836() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pC","Dsi","OkVX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OkVX],[Dsi],[Dsi,OkVX],[pC],[pC,OkVX],[pC,Dsi],[pC,Dsi,OkVX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_837() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","tmxm","GPBb","EQt","EINs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EINs],[EQt],[EQt,EINs],[GPBb],[GPBb,EINs],[GPBb,EQt],[GPBb,EQt,EINs],[tmxm],[tmxm,EINs],[tmxm,EQt],[tmxm,EQt,EINs],[tmxm,GPBb],[tmxm,GPBb,EINs],[tmxm,GPBb,EQt],[tmxm,GPBb,EQt,EINs],[S],[S,EINs],[S,EQt],[S,EQt,EINs],[S,GPBb],[S,GPBb,EINs],[S,GPBb,EQt],[S,GPBb,EQt,EINs],[S,tmxm],[S,tmxm,EINs],[S,tmxm,EQt],[S,tmxm,EQt,EINs],[S,tmxm,GPBb],[S,tmxm,GPBb,EINs],[S,tmxm,GPBb,EQt],[S,tmxm,GPBb,EQt,EINs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_838() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UyD","C","CTw","dniMK","TEPLz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TEPLz],[dniMK],[dniMK,TEPLz],[CTw],[CTw,TEPLz],[CTw,dniMK],[CTw,dniMK,TEPLz],[C],[C,TEPLz],[C,dniMK],[C,dniMK,TEPLz],[C,CTw],[C,CTw,TEPLz],[C,CTw,dniMK],[C,CTw,dniMK,TEPLz],[UyD],[UyD,TEPLz],[UyD,dniMK],[UyD,dniMK,TEPLz],[UyD,CTw],[UyD,CTw,TEPLz],[UyD,CTw,dniMK],[UyD,CTw,dniMK,TEPLz],[UyD,C],[UyD,C,TEPLz],[UyD,C,dniMK],[UyD,C,dniMK,TEPLz],[UyD,C,CTw],[UyD,C,CTw,TEPLz],[UyD,C,CTw,dniMK],[UyD,C,CTw,dniMK,TEPLz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_839() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cgkm","aCAII","L","bhd","NziLz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NziLz],[bhd],[bhd,NziLz],[L],[L,NziLz],[L,bhd],[L,bhd,NziLz],[aCAII],[aCAII,NziLz],[aCAII,bhd],[aCAII,bhd,NziLz],[aCAII,L],[aCAII,L,NziLz],[aCAII,L,bhd],[aCAII,L,bhd,NziLz],[Cgkm],[Cgkm,NziLz],[Cgkm,bhd],[Cgkm,bhd,NziLz],[Cgkm,L],[Cgkm,L,NziLz],[Cgkm,L,bhd],[Cgkm,L,bhd,NziLz],[Cgkm,aCAII],[Cgkm,aCAII,NziLz],[Cgkm,aCAII,bhd],[Cgkm,aCAII,bhd,NziLz],[Cgkm,aCAII,L],[Cgkm,aCAII,L,NziLz],[Cgkm,aCAII,L,bhd],[Cgkm,aCAII,L,bhd,NziLz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_840() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JMwJ","tUPo","rUk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rUk],[tUPo],[tUPo,rUk],[JMwJ],[JMwJ,rUk],[JMwJ,tUPo],[JMwJ,tUPo,rUk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_841() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","lX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lX],[B],[B,lX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_842() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LAKtG","GqD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GqD],[LAKtG],[LAKtG,GqD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_843() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "idBG","zyB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zyB],[idBG],[idBG,zyB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_844() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DNPw","ZEZn","xqoNQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xqoNQ],[ZEZn],[ZEZn,xqoNQ],[DNPw],[DNPw,xqoNQ],[DNPw,ZEZn],[DNPw,ZEZn,xqoNQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_845() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EuVN","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[EuVN],[EuVN,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_846() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kauxL","pCPc","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[pCPc],[pCPc,m],[kauxL],[kauxL,m],[kauxL,pCPc],[kauxL,pCPc,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_847() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bIkWX","EB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EB],[bIkWX],[bIkWX,EB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_848() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "m","YRNHE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YRNHE],[m],[m,YRNHE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_849() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lIy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lIy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_850() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "meTM","g","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[g],[g,J],[meTM],[meTM,J],[meTM,g],[meTM,g,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_851() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KnwV","wNQsK","bL","j","lvxTI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lvxTI],[j],[j,lvxTI],[bL],[bL,lvxTI],[bL,j],[bL,j,lvxTI],[wNQsK],[wNQsK,lvxTI],[wNQsK,j],[wNQsK,j,lvxTI],[wNQsK,bL],[wNQsK,bL,lvxTI],[wNQsK,bL,j],[wNQsK,bL,j,lvxTI],[KnwV],[KnwV,lvxTI],[KnwV,j],[KnwV,j,lvxTI],[KnwV,bL],[KnwV,bL,lvxTI],[KnwV,bL,j],[KnwV,bL,j,lvxTI],[KnwV,wNQsK],[KnwV,wNQsK,lvxTI],[KnwV,wNQsK,j],[KnwV,wNQsK,j,lvxTI],[KnwV,wNQsK,bL],[KnwV,wNQsK,bL,lvxTI],[KnwV,wNQsK,bL,j],[KnwV,wNQsK,bL,j,lvxTI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_852() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","zD","j","Kfaxn","faCz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[faCz],[Kfaxn],[Kfaxn,faCz],[j],[j,faCz],[j,Kfaxn],[j,Kfaxn,faCz],[zD],[zD,faCz],[zD,Kfaxn],[zD,Kfaxn,faCz],[zD,j],[zD,j,faCz],[zD,j,Kfaxn],[zD,j,Kfaxn,faCz],[s],[s,faCz],[s,Kfaxn],[s,Kfaxn,faCz],[s,j],[s,j,faCz],[s,j,Kfaxn],[s,j,Kfaxn,faCz],[s,zD],[s,zD,faCz],[s,zD,Kfaxn],[s,zD,Kfaxn,faCz],[s,zD,j],[s,zD,j,faCz],[s,zD,j,Kfaxn],[s,zD,j,Kfaxn,faCz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_853() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oJfqp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oJfqp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_854() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lM","MuUO","PHrgK","vVz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vVz],[PHrgK],[PHrgK,vVz],[MuUO],[MuUO,vVz],[MuUO,PHrgK],[MuUO,PHrgK,vVz],[lM],[lM,vVz],[lM,PHrgK],[lM,PHrgK,vVz],[lM,MuUO],[lM,MuUO,vVz],[lM,MuUO,PHrgK],[lM,MuUO,PHrgK,vVz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_855() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QV","tz","URtu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[URtu],[tz],[tz,URtu],[QV],[QV,URtu],[QV,tz],[QV,tz,URtu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_856() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tdq","ps","ZlN","jY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jY],[ZlN],[ZlN,jY],[ps],[ps,jY],[ps,ZlN],[ps,ZlN,jY],[Tdq],[Tdq,jY],[Tdq,ZlN],[Tdq,ZlN,jY],[Tdq,ps],[Tdq,ps,jY],[Tdq,ps,ZlN],[Tdq,ps,ZlN,jY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_857() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XRYlh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XRYlh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_858() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xTuz","Dl","mKI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mKI],[Dl],[Dl,mKI],[xTuz],[xTuz,mKI],[xTuz,Dl],[xTuz,Dl,mKI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_859() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QWKh","wn","YIo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YIo],[wn],[wn,YIo],[QWKh],[QWKh,YIo],[QWKh,wn],[QWKh,wn,YIo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_860() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TZUvP","YZrMx","dPTx","IfK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IfK],[dPTx],[dPTx,IfK],[YZrMx],[YZrMx,IfK],[YZrMx,dPTx],[YZrMx,dPTx,IfK],[TZUvP],[TZUvP,IfK],[TZUvP,dPTx],[TZUvP,dPTx,IfK],[TZUvP,YZrMx],[TZUvP,YZrMx,IfK],[TZUvP,YZrMx,dPTx],[TZUvP,YZrMx,dPTx,IfK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_861() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_862() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PFG","P","TSq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TSq],[P],[P,TSq],[PFG],[PFG,TSq],[PFG,P],[PFG,P,TSq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_863() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fw","TaXRp","eauZy","y","inQUi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[inQUi],[y],[y,inQUi],[eauZy],[eauZy,inQUi],[eauZy,y],[eauZy,y,inQUi],[TaXRp],[TaXRp,inQUi],[TaXRp,y],[TaXRp,y,inQUi],[TaXRp,eauZy],[TaXRp,eauZy,inQUi],[TaXRp,eauZy,y],[TaXRp,eauZy,y,inQUi],[Fw],[Fw,inQUi],[Fw,y],[Fw,y,inQUi],[Fw,eauZy],[Fw,eauZy,inQUi],[Fw,eauZy,y],[Fw,eauZy,y,inQUi],[Fw,TaXRp],[Fw,TaXRp,inQUi],[Fw,TaXRp,y],[Fw,TaXRp,y,inQUi],[Fw,TaXRp,eauZy],[Fw,TaXRp,eauZy,inQUi],[Fw,TaXRp,eauZy,y],[Fw,TaXRp,eauZy,y,inQUi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_864() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_865() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qJWv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qJWv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_866() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vUuBp","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[vUuBp],[vUuBp,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_867() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qh","IF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IF],[Qh],[Qh,IF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_868() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "syW","lTQZ","exDvw","vcYNb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vcYNb],[exDvw],[exDvw,vcYNb],[lTQZ],[lTQZ,vcYNb],[lTQZ,exDvw],[lTQZ,exDvw,vcYNb],[syW],[syW,vcYNb],[syW,exDvw],[syW,exDvw,vcYNb],[syW,lTQZ],[syW,lTQZ,vcYNb],[syW,lTQZ,exDvw],[syW,lTQZ,exDvw,vcYNb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_869() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bm","hT","Ig")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ig],[hT],[hT,Ig],[bm],[bm,Ig],[bm,hT],[bm,hT,Ig]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_870() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "boGzk","t","XPp","rZt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rZt],[XPp],[XPp,rZt],[t],[t,rZt],[t,XPp],[t,XPp,rZt],[boGzk],[boGzk,rZt],[boGzk,XPp],[boGzk,XPp,rZt],[boGzk,t],[boGzk,t,rZt],[boGzk,t,XPp],[boGzk,t,XPp,rZt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_871() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FrWQL","KmoVg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KmoVg],[FrWQL],[FrWQL,KmoVg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_872() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aBr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aBr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_873() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DsGXy","Oxs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Oxs],[DsGXy],[DsGXy,Oxs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_874() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZOiQv","gcQTN","Ddf","kOel","aDa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aDa],[kOel],[kOel,aDa],[Ddf],[Ddf,aDa],[Ddf,kOel],[Ddf,kOel,aDa],[gcQTN],[gcQTN,aDa],[gcQTN,kOel],[gcQTN,kOel,aDa],[gcQTN,Ddf],[gcQTN,Ddf,aDa],[gcQTN,Ddf,kOel],[gcQTN,Ddf,kOel,aDa],[ZOiQv],[ZOiQv,aDa],[ZOiQv,kOel],[ZOiQv,kOel,aDa],[ZOiQv,Ddf],[ZOiQv,Ddf,aDa],[ZOiQv,Ddf,kOel],[ZOiQv,Ddf,kOel,aDa],[ZOiQv,gcQTN],[ZOiQv,gcQTN,aDa],[ZOiQv,gcQTN,kOel],[ZOiQv,gcQTN,kOel,aDa],[ZOiQv,gcQTN,Ddf],[ZOiQv,gcQTN,Ddf,aDa],[ZOiQv,gcQTN,Ddf,kOel],[ZOiQv,gcQTN,Ddf,kOel,aDa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_875() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qss","mIax","vPSKS","qoK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qoK],[vPSKS],[vPSKS,qoK],[mIax],[mIax,qoK],[mIax,vPSKS],[mIax,vPSKS,qoK],[Qss],[Qss,qoK],[Qss,vPSKS],[Qss,vPSKS,qoK],[Qss,mIax],[Qss,mIax,qoK],[Qss,mIax,vPSKS],[Qss,mIax,vPSKS,qoK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_876() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hmu","BX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BX],[Hmu],[Hmu,BX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_877() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wh","E","zxgVt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zxgVt],[E],[E,zxgVt],[wh],[wh,zxgVt],[wh,E],[wh,E,zxgVt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_878() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iK","uzsws","iwF","nQqIC","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[nQqIC],[nQqIC,O],[iwF],[iwF,O],[iwF,nQqIC],[iwF,nQqIC,O],[uzsws],[uzsws,O],[uzsws,nQqIC],[uzsws,nQqIC,O],[uzsws,iwF],[uzsws,iwF,O],[uzsws,iwF,nQqIC],[uzsws,iwF,nQqIC,O],[iK],[iK,O],[iK,nQqIC],[iK,nQqIC,O],[iK,iwF],[iK,iwF,O],[iK,iwF,nQqIC],[iK,iwF,nQqIC,O],[iK,uzsws],[iK,uzsws,O],[iK,uzsws,nQqIC],[iK,uzsws,nQqIC,O],[iK,uzsws,iwF],[iK,uzsws,iwF,O],[iK,uzsws,iwF,nQqIC],[iK,uzsws,iwF,nQqIC,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_879() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RxHkv","mv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mv],[RxHkv],[RxHkv,mv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_880() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sGI","jnLKd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jnLKd],[sGI],[sGI,jnLKd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_881() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rh","G","Am","mXMA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mXMA],[Am],[Am,mXMA],[G],[G,mXMA],[G,Am],[G,Am,mXMA],[rh],[rh,mXMA],[rh,Am],[rh,Am,mXMA],[rh,G],[rh,G,mXMA],[rh,G,Am],[rh,G,Am,mXMA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_882() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FYIO","jBoYQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jBoYQ],[FYIO],[FYIO,jBoYQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_883() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YXd","Yamq","kwi","tNx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tNx],[kwi],[kwi,tNx],[Yamq],[Yamq,tNx],[Yamq,kwi],[Yamq,kwi,tNx],[YXd],[YXd,tNx],[YXd,kwi],[YXd,kwi,tNx],[YXd,Yamq],[YXd,Yamq,tNx],[YXd,Yamq,kwi],[YXd,Yamq,kwi,tNx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_884() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sFfcw","yWSQ","cMaa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cMaa],[yWSQ],[yWSQ,cMaa],[sFfcw],[sFfcw,cMaa],[sFfcw,yWSQ],[sFfcw,yWSQ,cMaa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_885() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","OyWZ","BNHeE","MjG","nPa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nPa],[MjG],[MjG,nPa],[BNHeE],[BNHeE,nPa],[BNHeE,MjG],[BNHeE,MjG,nPa],[OyWZ],[OyWZ,nPa],[OyWZ,MjG],[OyWZ,MjG,nPa],[OyWZ,BNHeE],[OyWZ,BNHeE,nPa],[OyWZ,BNHeE,MjG],[OyWZ,BNHeE,MjG,nPa],[q],[q,nPa],[q,MjG],[q,MjG,nPa],[q,BNHeE],[q,BNHeE,nPa],[q,BNHeE,MjG],[q,BNHeE,MjG,nPa],[q,OyWZ],[q,OyWZ,nPa],[q,OyWZ,MjG],[q,OyWZ,MjG,nPa],[q,OyWZ,BNHeE],[q,OyWZ,BNHeE,nPa],[q,OyWZ,BNHeE,MjG],[q,OyWZ,BNHeE,MjG,nPa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_886() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aNk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aNk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_887() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","fwg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fwg],[v],[v,fwg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_888() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EFg","EGkhD","xe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xe],[EGkhD],[EGkhD,xe],[EFg],[EFg,xe],[EFg,EGkhD],[EFg,EGkhD,xe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_889() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_890() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_891() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yaMn","c","rZ","sJf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sJf],[rZ],[rZ,sJf],[c],[c,sJf],[c,rZ],[c,rZ,sJf],[yaMn],[yaMn,sJf],[yaMn,rZ],[yaMn,rZ,sJf],[yaMn,c],[yaMn,c,sJf],[yaMn,c,rZ],[yaMn,c,rZ,sJf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_892() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QtSro","BsnP","JDasJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JDasJ],[BsnP],[BsnP,JDasJ],[QtSro],[QtSro,JDasJ],[QtSro,BsnP],[QtSro,BsnP,JDasJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_893() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KE","JCoT","ts")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ts],[JCoT],[JCoT,ts],[KE],[KE,ts],[KE,JCoT],[KE,JCoT,ts]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_894() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DrAC","B","UfgSA","Wgl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wgl],[UfgSA],[UfgSA,Wgl],[B],[B,Wgl],[B,UfgSA],[B,UfgSA,Wgl],[DrAC],[DrAC,Wgl],[DrAC,UfgSA],[DrAC,UfgSA,Wgl],[DrAC,B],[DrAC,B,Wgl],[DrAC,B,UfgSA],[DrAC,B,UfgSA,Wgl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_895() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FXst","pul","UCPMp","WjXdc","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[WjXdc],[WjXdc,O],[UCPMp],[UCPMp,O],[UCPMp,WjXdc],[UCPMp,WjXdc,O],[pul],[pul,O],[pul,WjXdc],[pul,WjXdc,O],[pul,UCPMp],[pul,UCPMp,O],[pul,UCPMp,WjXdc],[pul,UCPMp,WjXdc,O],[FXst],[FXst,O],[FXst,WjXdc],[FXst,WjXdc,O],[FXst,UCPMp],[FXst,UCPMp,O],[FXst,UCPMp,WjXdc],[FXst,UCPMp,WjXdc,O],[FXst,pul],[FXst,pul,O],[FXst,pul,WjXdc],[FXst,pul,WjXdc,O],[FXst,pul,UCPMp],[FXst,pul,UCPMp,O],[FXst,pul,UCPMp,WjXdc],[FXst,pul,UCPMp,WjXdc,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_896() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kMb","bihr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bihr],[kMb],[kMb,bihr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_897() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DEA","u","bNnpN","LpHC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LpHC],[bNnpN],[bNnpN,LpHC],[u],[u,LpHC],[u,bNnpN],[u,bNnpN,LpHC],[DEA],[DEA,LpHC],[DEA,bNnpN],[DEA,bNnpN,LpHC],[DEA,u],[DEA,u,LpHC],[DEA,u,bNnpN],[DEA,u,bNnpN,LpHC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_898() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gAHs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gAHs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_899() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_900() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ik")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ik]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_901() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","Y","y","DqG","mEE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mEE],[DqG],[DqG,mEE],[y],[y,mEE],[y,DqG],[y,DqG,mEE],[Y],[Y,mEE],[Y,DqG],[Y,DqG,mEE],[Y,y],[Y,y,mEE],[Y,y,DqG],[Y,y,DqG,mEE],[v],[v,mEE],[v,DqG],[v,DqG,mEE],[v,y],[v,y,mEE],[v,y,DqG],[v,y,DqG,mEE],[v,Y],[v,Y,mEE],[v,Y,DqG],[v,Y,DqG,mEE],[v,Y,y],[v,Y,y,mEE],[v,Y,y,DqG],[v,Y,y,DqG,mEE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_902() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KuRvt","rQt","kSg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kSg],[rQt],[rQt,kSg],[KuRvt],[KuRvt,kSg],[KuRvt,rQt],[KuRvt,rQt,kSg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_903() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","To")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[To],[A],[A,To]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_904() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FV","dU","hba","zp","exP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[exP],[zp],[zp,exP],[hba],[hba,exP],[hba,zp],[hba,zp,exP],[dU],[dU,exP],[dU,zp],[dU,zp,exP],[dU,hba],[dU,hba,exP],[dU,hba,zp],[dU,hba,zp,exP],[FV],[FV,exP],[FV,zp],[FV,zp,exP],[FV,hba],[FV,hba,exP],[FV,hba,zp],[FV,hba,zp,exP],[FV,dU],[FV,dU,exP],[FV,dU,zp],[FV,dU,zp,exP],[FV,dU,hba],[FV,dU,hba,exP],[FV,dU,hba,zp],[FV,dU,hba,zp,exP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_905() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qr","XihA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XihA],[Qr],[Qr,XihA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_906() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZL","d","jgYrC","NKCu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NKCu],[jgYrC],[jgYrC,NKCu],[d],[d,NKCu],[d,jgYrC],[d,jgYrC,NKCu],[ZL],[ZL,NKCu],[ZL,jgYrC],[ZL,jgYrC,NKCu],[ZL,d],[ZL,d,NKCu],[ZL,d,jgYrC],[ZL,d,jgYrC,NKCu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_907() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FEhON","CZ","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[CZ],[CZ,O],[FEhON],[FEhON,O],[FEhON,CZ],[FEhON,CZ,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_908() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_909() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bHBOX","MlT","W","ShMOR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ShMOR],[W],[W,ShMOR],[MlT],[MlT,ShMOR],[MlT,W],[MlT,W,ShMOR],[bHBOX],[bHBOX,ShMOR],[bHBOX,W],[bHBOX,W,ShMOR],[bHBOX,MlT],[bHBOX,MlT,ShMOR],[bHBOX,MlT,W],[bHBOX,MlT,W,ShMOR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_910() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FRrk","UAWHt","FR","gQv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gQv],[FR],[FR,gQv],[UAWHt],[UAWHt,gQv],[UAWHt,FR],[UAWHt,FR,gQv],[FRrk],[FRrk,gQv],[FRrk,FR],[FRrk,FR,gQv],[FRrk,UAWHt],[FRrk,UAWHt,gQv],[FRrk,UAWHt,FR],[FRrk,UAWHt,FR,gQv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_911() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","bkaaM","T","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[T],[T,f],[bkaaM],[bkaaM,f],[bkaaM,T],[bkaaM,T,f],[a],[a,f],[a,T],[a,T,f],[a,bkaaM],[a,bkaaM,f],[a,bkaaM,T],[a,bkaaM,T,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_912() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","AdP","qCQeK","keH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[keH],[qCQeK],[qCQeK,keH],[AdP],[AdP,keH],[AdP,qCQeK],[AdP,qCQeK,keH],[V],[V,keH],[V,qCQeK],[V,qCQeK,keH],[V,AdP],[V,AdP,keH],[V,AdP,qCQeK],[V,AdP,qCQeK,keH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_913() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "edu","Wa","BP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BP],[Wa],[Wa,BP],[edu],[edu,BP],[edu,Wa],[edu,Wa,BP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_914() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TXtF","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[TXtF],[TXtF,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_915() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QF","Axm","icRC","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[icRC],[icRC,o],[Axm],[Axm,o],[Axm,icRC],[Axm,icRC,o],[QF],[QF,o],[QF,icRC],[QF,icRC,o],[QF,Axm],[QF,Axm,o],[QF,Axm,icRC],[QF,Axm,icRC,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_916() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OPF","QqMhk","FHeFY","hs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hs],[FHeFY],[FHeFY,hs],[QqMhk],[QqMhk,hs],[QqMhk,FHeFY],[QqMhk,FHeFY,hs],[OPF],[OPF,hs],[OPF,FHeFY],[OPF,FHeFY,hs],[OPF,QqMhk],[OPF,QqMhk,hs],[OPF,QqMhk,FHeFY],[OPF,QqMhk,FHeFY,hs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_917() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vcoww","gP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gP],[Vcoww],[Vcoww,gP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_918() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ivXtu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ivXtu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_919() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cOWh","FGEi","RHQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RHQ],[FGEi],[FGEi,RHQ],[cOWh],[cOWh,RHQ],[cOWh,FGEi],[cOWh,FGEi,RHQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_920() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hz","qZuUY","xAKya","Hul")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hul],[xAKya],[xAKya,Hul],[qZuUY],[qZuUY,Hul],[qZuUY,xAKya],[qZuUY,xAKya,Hul],[Hz],[Hz,Hul],[Hz,xAKya],[Hz,xAKya,Hul],[Hz,qZuUY],[Hz,qZuUY,Hul],[Hz,qZuUY,xAKya],[Hz,qZuUY,xAKya,Hul]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_921() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_922() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gi","E","vbU","M","ODs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ODs],[M],[M,ODs],[vbU],[vbU,ODs],[vbU,M],[vbU,M,ODs],[E],[E,ODs],[E,M],[E,M,ODs],[E,vbU],[E,vbU,ODs],[E,vbU,M],[E,vbU,M,ODs],[gi],[gi,ODs],[gi,M],[gi,M,ODs],[gi,vbU],[gi,vbU,ODs],[gi,vbU,M],[gi,vbU,M,ODs],[gi,E],[gi,E,ODs],[gi,E,M],[gi,E,M,ODs],[gi,E,vbU],[gi,E,vbU,ODs],[gi,E,vbU,M],[gi,E,vbU,M,ODs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_923() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ybP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ybP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_924() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_925() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","Mq","v","jSbDf","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[jSbDf],[jSbDf,h],[v],[v,h],[v,jSbDf],[v,jSbDf,h],[Mq],[Mq,h],[Mq,jSbDf],[Mq,jSbDf,h],[Mq,v],[Mq,v,h],[Mq,v,jSbDf],[Mq,v,jSbDf,h],[a],[a,h],[a,jSbDf],[a,jSbDf,h],[a,v],[a,v,h],[a,v,jSbDf],[a,v,jSbDf,h],[a,Mq],[a,Mq,h],[a,Mq,jSbDf],[a,Mq,jSbDf,h],[a,Mq,v],[a,Mq,v,h],[a,Mq,v,jSbDf],[a,Mq,v,jSbDf,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_926() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","GebWe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GebWe],[E],[E,GebWe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_927() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OyKH","c","xyjV","NS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NS],[xyjV],[xyjV,NS],[c],[c,NS],[c,xyjV],[c,xyjV,NS],[OyKH],[OyKH,NS],[OyKH,xyjV],[OyKH,xyjV,NS],[OyKH,c],[OyKH,c,NS],[OyKH,c,xyjV],[OyKH,c,xyjV,NS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_928() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cYf","DeQS","BWVQI","ZYcPa","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[ZYcPa],[ZYcPa,K],[BWVQI],[BWVQI,K],[BWVQI,ZYcPa],[BWVQI,ZYcPa,K],[DeQS],[DeQS,K],[DeQS,ZYcPa],[DeQS,ZYcPa,K],[DeQS,BWVQI],[DeQS,BWVQI,K],[DeQS,BWVQI,ZYcPa],[DeQS,BWVQI,ZYcPa,K],[cYf],[cYf,K],[cYf,ZYcPa],[cYf,ZYcPa,K],[cYf,BWVQI],[cYf,BWVQI,K],[cYf,BWVQI,ZYcPa],[cYf,BWVQI,ZYcPa,K],[cYf,DeQS],[cYf,DeQS,K],[cYf,DeQS,ZYcPa],[cYf,DeQS,ZYcPa,K],[cYf,DeQS,BWVQI],[cYf,DeQS,BWVQI,K],[cYf,DeQS,BWVQI,ZYcPa],[cYf,DeQS,BWVQI,ZYcPa,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_929() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nmF","XR","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[XR],[XR,z],[nmF],[nmF,z],[nmF,XR],[nmF,XR,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_930() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TDZO","EtFr","yE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yE],[EtFr],[EtFr,yE],[TDZO],[TDZO,yE],[TDZO,EtFr],[TDZO,EtFr,yE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_931() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_932() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_933() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KIopF","x","KJnJ","X","zt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zt],[X],[X,zt],[KJnJ],[KJnJ,zt],[KJnJ,X],[KJnJ,X,zt],[x],[x,zt],[x,X],[x,X,zt],[x,KJnJ],[x,KJnJ,zt],[x,KJnJ,X],[x,KJnJ,X,zt],[KIopF],[KIopF,zt],[KIopF,X],[KIopF,X,zt],[KIopF,KJnJ],[KIopF,KJnJ,zt],[KIopF,KJnJ,X],[KIopF,KJnJ,X,zt],[KIopF,x],[KIopF,x,zt],[KIopF,x,X],[KIopF,x,X,zt],[KIopF,x,KJnJ],[KIopF,x,KJnJ,zt],[KIopF,x,KJnJ,X],[KIopF,x,KJnJ,X,zt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_934() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vRWB","c","caLZC","GiLng")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GiLng],[caLZC],[caLZC,GiLng],[c],[c,GiLng],[c,caLZC],[c,caLZC,GiLng],[vRWB],[vRWB,GiLng],[vRWB,caLZC],[vRWB,caLZC,GiLng],[vRWB,c],[vRWB,c,GiLng],[vRWB,c,caLZC],[vRWB,c,caLZC,GiLng]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_935() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Th")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Th]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_936() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[S]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_937() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","L","dzS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dzS],[L],[L,dzS],[Y],[Y,dzS],[Y,L],[Y,L,dzS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_938() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vovsh","TJ","KweVr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KweVr],[TJ],[TJ,KweVr],[vovsh],[vovsh,KweVr],[vovsh,TJ],[vovsh,TJ,KweVr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_939() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ivqv","pT","Jr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jr],[pT],[pT,Jr],[ivqv],[ivqv,Jr],[ivqv,pT],[ivqv,pT,Jr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_940() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wROLJ","BIBJH","db")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[db],[BIBJH],[BIBJH,db],[wROLJ],[wROLJ,db],[wROLJ,BIBJH],[wROLJ,BIBJH,db]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_941() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fy","VeLp","ydJpj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ydJpj],[VeLp],[VeLp,ydJpj],[Fy],[Fy,ydJpj],[Fy,VeLp],[Fy,VeLp,ydJpj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_942() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gl","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[Gl],[Gl,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_943() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "toAWo","Wdf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wdf],[toAWo],[toAWo,Wdf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_944() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tws","BXy","pkzye")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pkzye],[BXy],[BXy,pkzye],[tws],[tws,pkzye],[tws,BXy],[tws,BXy,pkzye]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_945() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XeRd","fU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fU],[XeRd],[XeRd,fU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_946() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fuoel","Y","l","wD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wD],[l],[l,wD],[Y],[Y,wD],[Y,l],[Y,l,wD],[Fuoel],[Fuoel,wD],[Fuoel,l],[Fuoel,l,wD],[Fuoel,Y],[Fuoel,Y,wD],[Fuoel,Y,l],[Fuoel,Y,l,wD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_947() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lHlR","u")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[u],[lHlR],[lHlR,u]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_948() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","w","Qhwnv","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[Qhwnv],[Qhwnv,o],[w],[w,o],[w,Qhwnv],[w,Qhwnv,o],[f],[f,o],[f,Qhwnv],[f,Qhwnv,o],[f,w],[f,w,o],[f,w,Qhwnv],[f,w,Qhwnv,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_949() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dFOF","rfDyE","fmtpq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fmtpq],[rfDyE],[rfDyE,fmtpq],[dFOF],[dFOF,fmtpq],[dFOF,rfDyE],[dFOF,rfDyE,fmtpq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_950() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vbB","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[vbB],[vbB,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_951() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H","i","RVo","yg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yg],[RVo],[RVo,yg],[i],[i,yg],[i,RVo],[i,RVo,yg],[H],[H,yg],[H,RVo],[H,RVo,yg],[H,i],[H,i,yg],[H,i,RVo],[H,i,RVo,yg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_952() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nezTU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nezTU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_953() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dyz","aV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aV],[dyz],[dyz,aV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_954() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_955() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GCgce","iFD","prx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[prx],[iFD],[iFD,prx],[GCgce],[GCgce,prx],[GCgce,iFD],[GCgce,iFD,prx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_956() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","pWZwy","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[pWZwy],[pWZwy,Y],[T],[T,Y],[T,pWZwy],[T,pWZwy,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_957() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Otpo","t","Vj","So")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[So],[Vj],[Vj,So],[t],[t,So],[t,Vj],[t,Vj,So],[Otpo],[Otpo,So],[Otpo,Vj],[Otpo,Vj,So],[Otpo,t],[Otpo,t,So],[Otpo,t,Vj],[Otpo,t,Vj,So]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_958() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EevMF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EevMF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_959() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zvAR","UosvQ","psqNF","DkQtV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DkQtV],[psqNF],[psqNF,DkQtV],[UosvQ],[UosvQ,DkQtV],[UosvQ,psqNF],[UosvQ,psqNF,DkQtV],[zvAR],[zvAR,DkQtV],[zvAR,psqNF],[zvAR,psqNF,DkQtV],[zvAR,UosvQ],[zvAR,UosvQ,DkQtV],[zvAR,UosvQ,psqNF],[zvAR,UosvQ,psqNF,DkQtV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_960() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xWiJI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xWiJI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_961() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BC","AoQ","cV","rgMwA","JlqFa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JlqFa],[rgMwA],[rgMwA,JlqFa],[cV],[cV,JlqFa],[cV,rgMwA],[cV,rgMwA,JlqFa],[AoQ],[AoQ,JlqFa],[AoQ,rgMwA],[AoQ,rgMwA,JlqFa],[AoQ,cV],[AoQ,cV,JlqFa],[AoQ,cV,rgMwA],[AoQ,cV,rgMwA,JlqFa],[BC],[BC,JlqFa],[BC,rgMwA],[BC,rgMwA,JlqFa],[BC,cV],[BC,cV,JlqFa],[BC,cV,rgMwA],[BC,cV,rgMwA,JlqFa],[BC,AoQ],[BC,AoQ,JlqFa],[BC,AoQ,rgMwA],[BC,AoQ,rgMwA,JlqFa],[BC,AoQ,cV],[BC,AoQ,cV,JlqFa],[BC,AoQ,cV,rgMwA],[BC,AoQ,cV,rgMwA,JlqFa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_962() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YsdBA","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[YsdBA],[YsdBA,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_963() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hnXB","mRXx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mRXx],[hnXB],[hnXB,mRXx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_964() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[u],[u,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_965() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","xZu","r","C")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[C],[r],[r,C],[xZu],[xZu,C],[xZu,r],[xZu,r,C],[P],[P,C],[P,r],[P,r,C],[P,xZu],[P,xZu,C],[P,xZu,r],[P,xZu,r,C]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_966() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[b]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_967() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","wZ","HRvAi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HRvAi],[wZ],[wZ,HRvAi],[a],[a,HRvAi],[a,wZ],[a,wZ,HRvAi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_968() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","WxsP","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[WxsP],[WxsP,i],[R],[R,i],[R,WxsP],[R,WxsP,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_969() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","eWfo","w","NF","NSb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NSb],[NF],[NF,NSb],[w],[w,NSb],[w,NF],[w,NF,NSb],[eWfo],[eWfo,NSb],[eWfo,NF],[eWfo,NF,NSb],[eWfo,w],[eWfo,w,NSb],[eWfo,w,NF],[eWfo,w,NF,NSb],[C],[C,NSb],[C,NF],[C,NF,NSb],[C,w],[C,w,NSb],[C,w,NF],[C,w,NF,NSb],[C,eWfo],[C,eWfo,NSb],[C,eWfo,NF],[C,eWfo,NF,NSb],[C,eWfo,w],[C,eWfo,w,NSb],[C,eWfo,w,NF],[C,eWfo,w,NF,NSb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_970() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PwKV","RNu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RNu],[PwKV],[PwKV,RNu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_971() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ubnF","Ucpo","BX","DbMl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DbMl],[BX],[BX,DbMl],[Ucpo],[Ucpo,DbMl],[Ucpo,BX],[Ucpo,BX,DbMl],[ubnF],[ubnF,DbMl],[ubnF,BX],[ubnF,BX,DbMl],[ubnF,Ucpo],[ubnF,Ucpo,DbMl],[ubnF,Ucpo,BX],[ubnF,Ucpo,BX,DbMl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_972() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IIt","PLUpx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PLUpx],[IIt],[IIt,PLUpx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_973() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","KOVKI","FBKZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FBKZ],[KOVKI],[KOVKI,FBKZ],[R],[R,FBKZ],[R,KOVKI],[R,KOVKI,FBKZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_974() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "l","sNZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sNZ],[l],[l,sNZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_975() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OoaxD","vtpaT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vtpaT],[OoaxD],[OoaxD,vtpaT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_976() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","YFTZE","mHlM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mHlM],[YFTZE],[YFTZE,mHlM],[s],[s,mHlM],[s,YFTZE],[s,YFTZE,mHlM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_977() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","sBiNq","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[sBiNq],[sBiNq,k],[R],[R,k],[R,sBiNq],[R,sBiNq,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_978() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","Th","qG","O","GlDm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GlDm],[O],[O,GlDm],[qG],[qG,GlDm],[qG,O],[qG,O,GlDm],[Th],[Th,GlDm],[Th,O],[Th,O,GlDm],[Th,qG],[Th,qG,GlDm],[Th,qG,O],[Th,qG,O,GlDm],[p],[p,GlDm],[p,O],[p,O,GlDm],[p,qG],[p,qG,GlDm],[p,qG,O],[p,qG,O,GlDm],[p,Th],[p,Th,GlDm],[p,Th,O],[p,Th,O,GlDm],[p,Th,qG],[p,Th,qG,GlDm],[p,Th,qG,O],[p,Th,qG,O,GlDm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_979() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nOF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nOF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_980() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ifHg","MNKfX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MNKfX],[ifHg],[ifHg,MNKfX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_981() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[S]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_982() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SFv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SFv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_983() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "skjRE","tZ","ujkT","fbIbz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fbIbz],[ujkT],[ujkT,fbIbz],[tZ],[tZ,fbIbz],[tZ,ujkT],[tZ,ujkT,fbIbz],[skjRE],[skjRE,fbIbz],[skjRE,ujkT],[skjRE,ujkT,fbIbz],[skjRE,tZ],[skjRE,tZ,fbIbz],[skjRE,tZ,ujkT],[skjRE,tZ,ujkT,fbIbz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_984() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "imIh","TH","QeFsP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QeFsP],[TH],[TH,QeFsP],[imIh],[imIh,QeFsP],[imIh,TH],[imIh,TH,QeFsP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_985() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_986() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "k","ZnAHf","rp","QzEe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QzEe],[rp],[rp,QzEe],[ZnAHf],[ZnAHf,QzEe],[ZnAHf,rp],[ZnAHf,rp,QzEe],[k],[k,QzEe],[k,rp],[k,rp,QzEe],[k,ZnAHf],[k,ZnAHf,QzEe],[k,ZnAHf,rp],[k,ZnAHf,rp,QzEe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_987() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IYW","ZI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZI],[IYW],[IYW,ZI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_988() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qemys","WVU","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[WVU],[WVU,l],[Qemys],[Qemys,l],[Qemys,WVU],[Qemys,WVU,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_989() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mp","e","OsrA","rbcnE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rbcnE],[OsrA],[OsrA,rbcnE],[e],[e,rbcnE],[e,OsrA],[e,OsrA,rbcnE],[mp],[mp,rbcnE],[mp,OsrA],[mp,OsrA,rbcnE],[mp,e],[mp,e,rbcnE],[mp,e,OsrA],[mp,e,OsrA,rbcnE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_990() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kKDTw","eWiCF","cg","vfhw","cacj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cacj],[vfhw],[vfhw,cacj],[cg],[cg,cacj],[cg,vfhw],[cg,vfhw,cacj],[eWiCF],[eWiCF,cacj],[eWiCF,vfhw],[eWiCF,vfhw,cacj],[eWiCF,cg],[eWiCF,cg,cacj],[eWiCF,cg,vfhw],[eWiCF,cg,vfhw,cacj],[kKDTw],[kKDTw,cacj],[kKDTw,vfhw],[kKDTw,vfhw,cacj],[kKDTw,cg],[kKDTw,cg,cacj],[kKDTw,cg,vfhw],[kKDTw,cg,vfhw,cacj],[kKDTw,eWiCF],[kKDTw,eWiCF,cacj],[kKDTw,eWiCF,vfhw],[kKDTw,eWiCF,vfhw,cacj],[kKDTw,eWiCF,cg],[kKDTw,eWiCF,cg,cacj],[kKDTw,eWiCF,cg,vfhw],[kKDTw,eWiCF,cg,vfhw,cacj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_991() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fxjL","D","g","Rnij")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rnij],[g],[g,Rnij],[D],[D,Rnij],[D,g],[D,g,Rnij],[fxjL],[fxjL,Rnij],[fxjL,g],[fxjL,g,Rnij],[fxjL,D],[fxjL,D,Rnij],[fxjL,D,g],[fxjL,D,g,Rnij]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_992() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zz","bED","P","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[P],[P,f],[bED],[bED,f],[bED,P],[bED,P,f],[Zz],[Zz,f],[Zz,P],[Zz,P,f],[Zz,bED],[Zz,bED,f],[Zz,bED,P],[Zz,bED,P,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_993() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FQCk","iG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iG],[FQCk],[FQCk,iG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_994() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OdE","GVucW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GVucW],[OdE],[OdE,GVucW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_995() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xaxq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xaxq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_996() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZJPZq","C","U","SmNhv","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[SmNhv],[SmNhv,h],[U],[U,h],[U,SmNhv],[U,SmNhv,h],[C],[C,h],[C,SmNhv],[C,SmNhv,h],[C,U],[C,U,h],[C,U,SmNhv],[C,U,SmNhv,h],[ZJPZq],[ZJPZq,h],[ZJPZq,SmNhv],[ZJPZq,SmNhv,h],[ZJPZq,U],[ZJPZq,U,h],[ZJPZq,U,SmNhv],[ZJPZq,U,SmNhv,h],[ZJPZq,C],[ZJPZq,C,h],[ZJPZq,C,SmNhv],[ZJPZq,C,SmNhv,h],[ZJPZq,C,U],[ZJPZq,C,U,h],[ZJPZq,C,U,SmNhv],[ZJPZq,C,U,SmNhv,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_997() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_998() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xOFYF","psXx","lYuR","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[lYuR],[lYuR,i],[psXx],[psXx,i],[psXx,lYuR],[psXx,lYuR,i],[xOFYF],[xOFYF,i],[xOFYF,lYuR],[xOFYF,lYuR,i],[xOFYF,psXx],[xOFYF,psXx,i],[xOFYF,psXx,lYuR],[xOFYF,psXx,lYuR,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_999() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LzBX","Q","neux","l","doAKN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[doAKN],[l],[l,doAKN],[neux],[neux,doAKN],[neux,l],[neux,l,doAKN],[Q],[Q,doAKN],[Q,l],[Q,l,doAKN],[Q,neux],[Q,neux,doAKN],[Q,neux,l],[Q,neux,l,doAKN],[LzBX],[LzBX,doAKN],[LzBX,l],[LzBX,l,doAKN],[LzBX,neux],[LzBX,neux,doAKN],[LzBX,neux,l],[LzBX,neux,l,doAKN],[LzBX,Q],[LzBX,Q,doAKN],[LzBX,Q,l],[LzBX,Q,l,doAKN],[LzBX,Q,neux],[LzBX,Q,neux,doAKN],[LzBX,Q,neux,l],[LzBX,Q,neux,l,doAKN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1000() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hxrqV","dehm","Spu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Spu],[dehm],[dehm,Spu],[hxrqV],[hxrqV,Spu],[hxrqV,dehm],[hxrqV,dehm,Spu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1001() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1002() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sT","wwDDw","LyU","zW","CEjX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CEjX],[zW],[zW,CEjX],[LyU],[LyU,CEjX],[LyU,zW],[LyU,zW,CEjX],[wwDDw],[wwDDw,CEjX],[wwDDw,zW],[wwDDw,zW,CEjX],[wwDDw,LyU],[wwDDw,LyU,CEjX],[wwDDw,LyU,zW],[wwDDw,LyU,zW,CEjX],[sT],[sT,CEjX],[sT,zW],[sT,zW,CEjX],[sT,LyU],[sT,LyU,CEjX],[sT,LyU,zW],[sT,LyU,zW,CEjX],[sT,wwDDw],[sT,wwDDw,CEjX],[sT,wwDDw,zW],[sT,wwDDw,zW,CEjX],[sT,wwDDw,LyU],[sT,wwDDw,LyU,CEjX],[sT,wwDDw,LyU,zW],[sT,wwDDw,LyU,zW,CEjX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1003() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","u","Ju")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ju],[u],[u,Ju],[T],[T,Ju],[T,u],[T,u,Ju]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1004() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pxQia","I","JXDop")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JXDop],[I],[I,JXDop],[pxQia],[pxQia,JXDop],[pxQia,I],[pxQia,I,JXDop]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1005() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1006() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "POWWI","PUsFA","HAQpv","zOVV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zOVV],[HAQpv],[HAQpv,zOVV],[PUsFA],[PUsFA,zOVV],[PUsFA,HAQpv],[PUsFA,HAQpv,zOVV],[POWWI],[POWWI,zOVV],[POWWI,HAQpv],[POWWI,HAQpv,zOVV],[POWWI,PUsFA],[POWWI,PUsFA,zOVV],[POWWI,PUsFA,HAQpv],[POWWI,PUsFA,HAQpv,zOVV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1007() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1008() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "whlhY","vVw","rfP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rfP],[vVw],[vVw,rfP],[whlhY],[whlhY,rfP],[whlhY,vVw],[whlhY,vVw,rfP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1009() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1010() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sgDlc","mTug")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mTug],[sgDlc],[sgDlc,mTug]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1011() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wx","jm","GOS","Ju","dq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dq],[Ju],[Ju,dq],[GOS],[GOS,dq],[GOS,Ju],[GOS,Ju,dq],[jm],[jm,dq],[jm,Ju],[jm,Ju,dq],[jm,GOS],[jm,GOS,dq],[jm,GOS,Ju],[jm,GOS,Ju,dq],[wx],[wx,dq],[wx,Ju],[wx,Ju,dq],[wx,GOS],[wx,GOS,dq],[wx,GOS,Ju],[wx,GOS,Ju,dq],[wx,jm],[wx,jm,dq],[wx,jm,Ju],[wx,jm,Ju,dq],[wx,jm,GOS],[wx,jm,GOS,dq],[wx,jm,GOS,Ju],[wx,jm,GOS,Ju,dq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1012() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cgw","l","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[l],[l,M],[cgw],[cgw,M],[cgw,l],[cgw,l,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1013() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mNA","PS","z","SUL","sa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sa],[SUL],[SUL,sa],[z],[z,sa],[z,SUL],[z,SUL,sa],[PS],[PS,sa],[PS,SUL],[PS,SUL,sa],[PS,z],[PS,z,sa],[PS,z,SUL],[PS,z,SUL,sa],[mNA],[mNA,sa],[mNA,SUL],[mNA,SUL,sa],[mNA,z],[mNA,z,sa],[mNA,z,SUL],[mNA,z,SUL,sa],[mNA,PS],[mNA,PS,sa],[mNA,PS,SUL],[mNA,PS,SUL,sa],[mNA,PS,z],[mNA,PS,z,sa],[mNA,PS,z,SUL],[mNA,PS,z,SUL,sa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1014() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","Qt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qt],[q],[q,Qt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1015() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","t","mI","uc","weNi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[weNi],[uc],[uc,weNi],[mI],[mI,weNi],[mI,uc],[mI,uc,weNi],[t],[t,weNi],[t,uc],[t,uc,weNi],[t,mI],[t,mI,weNi],[t,mI,uc],[t,mI,uc,weNi],[s],[s,weNi],[s,uc],[s,uc,weNi],[s,mI],[s,mI,weNi],[s,mI,uc],[s,mI,uc,weNi],[s,t],[s,t,weNi],[s,t,uc],[s,t,uc,weNi],[s,t,mI],[s,t,mI,weNi],[s,t,mI,uc],[s,t,mI,uc,weNi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1016() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gYUZZ","V","xMfyP","KITq","uCL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uCL],[KITq],[KITq,uCL],[xMfyP],[xMfyP,uCL],[xMfyP,KITq],[xMfyP,KITq,uCL],[V],[V,uCL],[V,KITq],[V,KITq,uCL],[V,xMfyP],[V,xMfyP,uCL],[V,xMfyP,KITq],[V,xMfyP,KITq,uCL],[gYUZZ],[gYUZZ,uCL],[gYUZZ,KITq],[gYUZZ,KITq,uCL],[gYUZZ,xMfyP],[gYUZZ,xMfyP,uCL],[gYUZZ,xMfyP,KITq],[gYUZZ,xMfyP,KITq,uCL],[gYUZZ,V],[gYUZZ,V,uCL],[gYUZZ,V,KITq],[gYUZZ,V,KITq,uCL],[gYUZZ,V,xMfyP],[gYUZZ,V,xMfyP,uCL],[gYUZZ,V,xMfyP,KITq],[gYUZZ,V,xMfyP,KITq,uCL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1017() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OyCKV","z","TA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TA],[z],[z,TA],[OyCKV],[OyCKV,TA],[OyCKV,z],[OyCKV,z,TA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1018() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UNXnQ","qi","JjBbo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JjBbo],[qi],[qi,JjBbo],[UNXnQ],[UNXnQ,JjBbo],[UNXnQ,qi],[UNXnQ,qi,JjBbo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1019() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gj","yVcb","e","IiiR","Jw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jw],[IiiR],[IiiR,Jw],[e],[e,Jw],[e,IiiR],[e,IiiR,Jw],[yVcb],[yVcb,Jw],[yVcb,IiiR],[yVcb,IiiR,Jw],[yVcb,e],[yVcb,e,Jw],[yVcb,e,IiiR],[yVcb,e,IiiR,Jw],[gj],[gj,Jw],[gj,IiiR],[gj,IiiR,Jw],[gj,e],[gj,e,Jw],[gj,e,IiiR],[gj,e,IiiR,Jw],[gj,yVcb],[gj,yVcb,Jw],[gj,yVcb,IiiR],[gj,yVcb,IiiR,Jw],[gj,yVcb,e],[gj,yVcb,e,Jw],[gj,yVcb,e,IiiR],[gj,yVcb,e,IiiR,Jw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1020() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kRUf","FfCiI","picdQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[picdQ],[FfCiI],[FfCiI,picdQ],[kRUf],[kRUf,picdQ],[kRUf,FfCiI],[kRUf,FfCiI,picdQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1021() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HTz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HTz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1022() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ar","Sgh","guX","Avc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Avc],[guX],[guX,Avc],[Sgh],[Sgh,Avc],[Sgh,guX],[Sgh,guX,Avc],[Ar],[Ar,Avc],[Ar,guX],[Ar,guX,Avc],[Ar,Sgh],[Ar,Sgh,Avc],[Ar,Sgh,guX],[Ar,Sgh,guX,Avc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1023() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qya","BqJP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BqJP],[qya],[qya,BqJP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1024() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TqjyP","xGr","w","nTTvQ","DERb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DERb],[nTTvQ],[nTTvQ,DERb],[w],[w,DERb],[w,nTTvQ],[w,nTTvQ,DERb],[xGr],[xGr,DERb],[xGr,nTTvQ],[xGr,nTTvQ,DERb],[xGr,w],[xGr,w,DERb],[xGr,w,nTTvQ],[xGr,w,nTTvQ,DERb],[TqjyP],[TqjyP,DERb],[TqjyP,nTTvQ],[TqjyP,nTTvQ,DERb],[TqjyP,w],[TqjyP,w,DERb],[TqjyP,w,nTTvQ],[TqjyP,w,nTTvQ,DERb],[TqjyP,xGr],[TqjyP,xGr,DERb],[TqjyP,xGr,nTTvQ],[TqjyP,xGr,nTTvQ,DERb],[TqjyP,xGr,w],[TqjyP,xGr,w,DERb],[TqjyP,xGr,w,nTTvQ],[TqjyP,xGr,w,nTTvQ,DERb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1025() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qLmf","W","tcN","lz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lz],[tcN],[tcN,lz],[W],[W,lz],[W,tcN],[W,tcN,lz],[qLmf],[qLmf,lz],[qLmf,tcN],[qLmf,tcN,lz],[qLmf,W],[qLmf,W,lz],[qLmf,W,tcN],[qLmf,W,tcN,lz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1026() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YzKud","lLZaT","dTqUT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dTqUT],[lLZaT],[lLZaT,dTqUT],[YzKud],[YzKud,dTqUT],[YzKud,lLZaT],[YzKud,lLZaT,dTqUT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1027() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xnz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xnz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1028() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Eapvd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Eapvd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1029() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kezP","ybaaH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ybaaH],[kezP],[kezP,ybaaH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1030() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ayj","qHys","CRAY","xuNDK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xuNDK],[CRAY],[CRAY,xuNDK],[qHys],[qHys,xuNDK],[qHys,CRAY],[qHys,CRAY,xuNDK],[ayj],[ayj,xuNDK],[ayj,CRAY],[ayj,CRAY,xuNDK],[ayj,qHys],[ayj,qHys,xuNDK],[ayj,qHys,CRAY],[ayj,qHys,CRAY,xuNDK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1031() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GoZUM","v","nbrc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nbrc],[v],[v,nbrc],[GoZUM],[GoZUM,nbrc],[GoZUM,v],[GoZUM,v,nbrc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1032() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aoeeH","u","kYVa","bOKa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bOKa],[kYVa],[kYVa,bOKa],[u],[u,bOKa],[u,kYVa],[u,kYVa,bOKa],[aoeeH],[aoeeH,bOKa],[aoeeH,kYVa],[aoeeH,kYVa,bOKa],[aoeeH,u],[aoeeH,u,bOKa],[aoeeH,u,kYVa],[aoeeH,u,kYVa,bOKa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1033() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qBQ","fo","uTjw","dAw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dAw],[uTjw],[uTjw,dAw],[fo],[fo,dAw],[fo,uTjw],[fo,uTjw,dAw],[qBQ],[qBQ,dAw],[qBQ,uTjw],[qBQ,uTjw,dAw],[qBQ,fo],[qBQ,fo,dAw],[qBQ,fo,uTjw],[qBQ,fo,uTjw,dAw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1034() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xir","PAKMH","ielua")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ielua],[PAKMH],[PAKMH,ielua],[xir],[xir,ielua],[xir,PAKMH],[xir,PAKMH,ielua]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1035() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oZkPb","xRg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xRg],[oZkPb],[oZkPb,xRg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1036() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uoVdd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uoVdd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1037() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1038() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1039() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SfiCN","q","wISQ","uieJ","Ed")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ed],[uieJ],[uieJ,Ed],[wISQ],[wISQ,Ed],[wISQ,uieJ],[wISQ,uieJ,Ed],[q],[q,Ed],[q,uieJ],[q,uieJ,Ed],[q,wISQ],[q,wISQ,Ed],[q,wISQ,uieJ],[q,wISQ,uieJ,Ed],[SfiCN],[SfiCN,Ed],[SfiCN,uieJ],[SfiCN,uieJ,Ed],[SfiCN,wISQ],[SfiCN,wISQ,Ed],[SfiCN,wISQ,uieJ],[SfiCN,wISQ,uieJ,Ed],[SfiCN,q],[SfiCN,q,Ed],[SfiCN,q,uieJ],[SfiCN,q,uieJ,Ed],[SfiCN,q,wISQ],[SfiCN,q,wISQ,Ed],[SfiCN,q,wISQ,uieJ],[SfiCN,q,wISQ,uieJ,Ed]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1040() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VH","xUWn","dK","k","Rn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rn],[k],[k,Rn],[dK],[dK,Rn],[dK,k],[dK,k,Rn],[xUWn],[xUWn,Rn],[xUWn,k],[xUWn,k,Rn],[xUWn,dK],[xUWn,dK,Rn],[xUWn,dK,k],[xUWn,dK,k,Rn],[VH],[VH,Rn],[VH,k],[VH,k,Rn],[VH,dK],[VH,dK,Rn],[VH,dK,k],[VH,dK,k,Rn],[VH,xUWn],[VH,xUWn,Rn],[VH,xUWn,k],[VH,xUWn,k,Rn],[VH,xUWn,dK],[VH,xUWn,dK,Rn],[VH,xUWn,dK,k],[VH,xUWn,dK,k,Rn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1041() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xGDj","TclHe","fZAd","esf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[esf],[fZAd],[fZAd,esf],[TclHe],[TclHe,esf],[TclHe,fZAd],[TclHe,fZAd,esf],[xGDj],[xGDj,esf],[xGDj,fZAd],[xGDj,fZAd,esf],[xGDj,TclHe],[xGDj,TclHe,esf],[xGDj,TclHe,fZAd],[xGDj,TclHe,fZAd,esf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1042() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PLLMx","x","nxsXi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nxsXi],[x],[x,nxsXi],[PLLMx],[PLLMx,nxsXi],[PLLMx,x],[PLLMx,x,nxsXi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1043() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oHB","Nlphk","h","xpNl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xpNl],[h],[h,xpNl],[Nlphk],[Nlphk,xpNl],[Nlphk,h],[Nlphk,h,xpNl],[oHB],[oHB,xpNl],[oHB,h],[oHB,h,xpNl],[oHB,Nlphk],[oHB,Nlphk,xpNl],[oHB,Nlphk,h],[oHB,Nlphk,h,xpNl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1044() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JT","nyvj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nyvj],[JT],[JT,nyvj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1045() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tphA","s","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[s],[s,x],[tphA],[tphA,x],[tphA,s],[tphA,s,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1046() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gyyHf","d","ubQ","hJa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hJa],[ubQ],[ubQ,hJa],[d],[d,hJa],[d,ubQ],[d,ubQ,hJa],[gyyHf],[gyyHf,hJa],[gyyHf,ubQ],[gyyHf,ubQ,hJa],[gyyHf,d],[gyyHf,d,hJa],[gyyHf,d,ubQ],[gyyHf,d,ubQ,hJa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1047() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zUp","Jwfp","BoBY","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[BoBY],[BoBY,m],[Jwfp],[Jwfp,m],[Jwfp,BoBY],[Jwfp,BoBY,m],[zUp],[zUp,m],[zUp,BoBY],[zUp,BoBY,m],[zUp,Jwfp],[zUp,Jwfp,m],[zUp,Jwfp,BoBY],[zUp,Jwfp,BoBY,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1048() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZzSpI","F","bi","ABH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ABH],[bi],[bi,ABH],[F],[F,ABH],[F,bi],[F,bi,ABH],[ZzSpI],[ZzSpI,ABH],[ZzSpI,bi],[ZzSpI,bi,ABH],[ZzSpI,F],[ZzSpI,F,ABH],[ZzSpI,F,bi],[ZzSpI,F,bi,ABH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1049() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1050() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","pFtH","NX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NX],[pFtH],[pFtH,NX],[C],[C,NX],[C,pFtH],[C,pFtH,NX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1051() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KfjR","OIj","GYu","spSNE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[spSNE],[GYu],[GYu,spSNE],[OIj],[OIj,spSNE],[OIj,GYu],[OIj,GYu,spSNE],[KfjR],[KfjR,spSNE],[KfjR,GYu],[KfjR,GYu,spSNE],[KfjR,OIj],[KfjR,OIj,spSNE],[KfjR,OIj,GYu],[KfjR,OIj,GYu,spSNE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1052() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","CvSDp","tRK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tRK],[CvSDp],[CvSDp,tRK],[r],[r,tRK],[r,CvSDp],[r,CvSDp,tRK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1053() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","AJxzn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AJxzn],[a],[a,AJxzn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1054() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fMh","t","pwCem","v","snyH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[snyH],[v],[v,snyH],[pwCem],[pwCem,snyH],[pwCem,v],[pwCem,v,snyH],[t],[t,snyH],[t,v],[t,v,snyH],[t,pwCem],[t,pwCem,snyH],[t,pwCem,v],[t,pwCem,v,snyH],[fMh],[fMh,snyH],[fMh,v],[fMh,v,snyH],[fMh,pwCem],[fMh,pwCem,snyH],[fMh,pwCem,v],[fMh,pwCem,v,snyH],[fMh,t],[fMh,t,snyH],[fMh,t,v],[fMh,t,v,snyH],[fMh,t,pwCem],[fMh,t,pwCem,snyH],[fMh,t,pwCem,v],[fMh,t,pwCem,v,snyH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1055() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[V]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1056() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oo","b","Qu","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[Qu],[Qu,i],[b],[b,i],[b,Qu],[b,Qu,i],[oo],[oo,i],[oo,Qu],[oo,Qu,i],[oo,b],[oo,b,i],[oo,b,Qu],[oo,b,Qu,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1057() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "urD","wO","vU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vU],[wO],[wO,vU],[urD],[urD,vU],[urD,wO],[urD,wO,vU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1058() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kDZ","rD","mBtgr","ka","oxRh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oxRh],[ka],[ka,oxRh],[mBtgr],[mBtgr,oxRh],[mBtgr,ka],[mBtgr,ka,oxRh],[rD],[rD,oxRh],[rD,ka],[rD,ka,oxRh],[rD,mBtgr],[rD,mBtgr,oxRh],[rD,mBtgr,ka],[rD,mBtgr,ka,oxRh],[kDZ],[kDZ,oxRh],[kDZ,ka],[kDZ,ka,oxRh],[kDZ,mBtgr],[kDZ,mBtgr,oxRh],[kDZ,mBtgr,ka],[kDZ,mBtgr,ka,oxRh],[kDZ,rD],[kDZ,rD,oxRh],[kDZ,rD,ka],[kDZ,rD,ka,oxRh],[kDZ,rD,mBtgr],[kDZ,rD,mBtgr,oxRh],[kDZ,rD,mBtgr,ka],[kDZ,rD,mBtgr,ka,oxRh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1059() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cvi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cvi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1060() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qKuCs","ojT","Alf","DNDX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DNDX],[Alf],[Alf,DNDX],[ojT],[ojT,DNDX],[ojT,Alf],[ojT,Alf,DNDX],[qKuCs],[qKuCs,DNDX],[qKuCs,Alf],[qKuCs,Alf,DNDX],[qKuCs,ojT],[qKuCs,ojT,DNDX],[qKuCs,ojT,Alf],[qKuCs,ojT,Alf,DNDX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1061() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","XgV","RA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RA],[XgV],[XgV,RA],[F],[F,RA],[F,XgV],[F,XgV,RA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1062() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","qron","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[qron],[qron,M],[u],[u,M],[u,qron],[u,qron,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1063() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YnfLJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YnfLJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1064() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wZe","sX","hjSPK","jiTn","iJQO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iJQO],[jiTn],[jiTn,iJQO],[hjSPK],[hjSPK,iJQO],[hjSPK,jiTn],[hjSPK,jiTn,iJQO],[sX],[sX,iJQO],[sX,jiTn],[sX,jiTn,iJQO],[sX,hjSPK],[sX,hjSPK,iJQO],[sX,hjSPK,jiTn],[sX,hjSPK,jiTn,iJQO],[wZe],[wZe,iJQO],[wZe,jiTn],[wZe,jiTn,iJQO],[wZe,hjSPK],[wZe,hjSPK,iJQO],[wZe,hjSPK,jiTn],[wZe,hjSPK,jiTn,iJQO],[wZe,sX],[wZe,sX,iJQO],[wZe,sX,jiTn],[wZe,sX,jiTn,iJQO],[wZe,sX,hjSPK],[wZe,sX,hjSPK,iJQO],[wZe,sX,hjSPK,jiTn],[wZe,sX,hjSPK,jiTn,iJQO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1065() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SfqyK","aG","GjEZZ","vzS","MmZu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MmZu],[vzS],[vzS,MmZu],[GjEZZ],[GjEZZ,MmZu],[GjEZZ,vzS],[GjEZZ,vzS,MmZu],[aG],[aG,MmZu],[aG,vzS],[aG,vzS,MmZu],[aG,GjEZZ],[aG,GjEZZ,MmZu],[aG,GjEZZ,vzS],[aG,GjEZZ,vzS,MmZu],[SfqyK],[SfqyK,MmZu],[SfqyK,vzS],[SfqyK,vzS,MmZu],[SfqyK,GjEZZ],[SfqyK,GjEZZ,MmZu],[SfqyK,GjEZZ,vzS],[SfqyK,GjEZZ,vzS,MmZu],[SfqyK,aG],[SfqyK,aG,MmZu],[SfqyK,aG,vzS],[SfqyK,aG,vzS,MmZu],[SfqyK,aG,GjEZZ],[SfqyK,aG,GjEZZ,MmZu],[SfqyK,aG,GjEZZ,vzS],[SfqyK,aG,GjEZZ,vzS,MmZu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1066() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qndp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qndp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1067() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "thh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[thh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1068() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SwE","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[SwE],[SwE,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1069() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nDmRx","nDae","fT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fT],[nDae],[nDae,fT],[nDmRx],[nDmRx,fT],[nDmRx,nDae],[nDmRx,nDae,fT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1070() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Awer")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Awer]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1071() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "och","tz","UFuR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UFuR],[tz],[tz,UFuR],[och],[och,UFuR],[och,tz],[och,tz,UFuR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1072() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yajjK","fvt","E")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[E],[fvt],[fvt,E],[yajjK],[yajjK,E],[yajjK,fvt],[yajjK,fvt,E]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1073() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aw","TOB","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[TOB],[TOB,g],[Aw],[Aw,g],[Aw,TOB],[Aw,TOB,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1074() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pP","FQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FQ],[pP],[pP,FQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1075() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qYGtw","cxld","Wpn","rfQxI","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[rfQxI],[rfQxI,k],[Wpn],[Wpn,k],[Wpn,rfQxI],[Wpn,rfQxI,k],[cxld],[cxld,k],[cxld,rfQxI],[cxld,rfQxI,k],[cxld,Wpn],[cxld,Wpn,k],[cxld,Wpn,rfQxI],[cxld,Wpn,rfQxI,k],[qYGtw],[qYGtw,k],[qYGtw,rfQxI],[qYGtw,rfQxI,k],[qYGtw,Wpn],[qYGtw,Wpn,k],[qYGtw,Wpn,rfQxI],[qYGtw,Wpn,rfQxI,k],[qYGtw,cxld],[qYGtw,cxld,k],[qYGtw,cxld,rfQxI],[qYGtw,cxld,rfQxI,k],[qYGtw,cxld,Wpn],[qYGtw,cxld,Wpn,k],[qYGtw,cxld,Wpn,rfQxI],[qYGtw,cxld,Wpn,rfQxI,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1076() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1077() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gyrr","s","lUfGY","VkGEn","Egdfy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Egdfy],[VkGEn],[VkGEn,Egdfy],[lUfGY],[lUfGY,Egdfy],[lUfGY,VkGEn],[lUfGY,VkGEn,Egdfy],[s],[s,Egdfy],[s,VkGEn],[s,VkGEn,Egdfy],[s,lUfGY],[s,lUfGY,Egdfy],[s,lUfGY,VkGEn],[s,lUfGY,VkGEn,Egdfy],[Gyrr],[Gyrr,Egdfy],[Gyrr,VkGEn],[Gyrr,VkGEn,Egdfy],[Gyrr,lUfGY],[Gyrr,lUfGY,Egdfy],[Gyrr,lUfGY,VkGEn],[Gyrr,lUfGY,VkGEn,Egdfy],[Gyrr,s],[Gyrr,s,Egdfy],[Gyrr,s,VkGEn],[Gyrr,s,VkGEn,Egdfy],[Gyrr,s,lUfGY],[Gyrr,s,lUfGY,Egdfy],[Gyrr,s,lUfGY,VkGEn],[Gyrr,s,lUfGY,VkGEn,Egdfy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1078() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RJeou","vSKQN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vSKQN],[RJeou],[RJeou,vSKQN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1079() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "na","Qu","VNO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VNO],[Qu],[Qu,VNO],[na],[na,VNO],[na,Qu],[na,Qu,VNO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1080() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MiQTh","SmB","iHypf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iHypf],[SmB],[SmB,iHypf],[MiQTh],[MiQTh,iHypf],[MiQTh,SmB],[MiQTh,SmB,iHypf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1081() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","zNVf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zNVf],[C],[C,zNVf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1082() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","tCKd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tCKd],[V],[V,tCKd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1083() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ybFWZ","FN","bCGZ","LX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LX],[bCGZ],[bCGZ,LX],[FN],[FN,LX],[FN,bCGZ],[FN,bCGZ,LX],[ybFWZ],[ybFWZ,LX],[ybFWZ,bCGZ],[ybFWZ,bCGZ,LX],[ybFWZ,FN],[ybFWZ,FN,LX],[ybFWZ,FN,bCGZ],[ybFWZ,FN,bCGZ,LX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1084() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nMiNe","Cm","grj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[grj],[Cm],[Cm,grj],[nMiNe],[nMiNe,grj],[nMiNe,Cm],[nMiNe,Cm,grj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1085() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KIZM","UJXHZ","lIFd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lIFd],[UJXHZ],[UJXHZ,lIFd],[KIZM],[KIZM,lIFd],[KIZM,UJXHZ],[KIZM,UJXHZ,lIFd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1086() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gXA","Kf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kf],[gXA],[gXA,Kf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1087() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SdZqK","OC","E","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[E],[E,g],[OC],[OC,g],[OC,E],[OC,E,g],[SdZqK],[SdZqK,g],[SdZqK,E],[SdZqK,E,g],[SdZqK,OC],[SdZqK,OC,g],[SdZqK,OC,E],[SdZqK,OC,E,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1088() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hCR","RWP","Ly")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ly],[RWP],[RWP,Ly],[hCR],[hCR,Ly],[hCR,RWP],[hCR,RWP,Ly]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1089() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hBl","FvQWO","xt","vc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vc],[xt],[xt,vc],[FvQWO],[FvQWO,vc],[FvQWO,xt],[FvQWO,xt,vc],[hBl],[hBl,vc],[hBl,xt],[hBl,xt,vc],[hBl,FvQWO],[hBl,FvQWO,vc],[hBl,FvQWO,xt],[hBl,FvQWO,xt,vc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1090() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ex","kkX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kkX],[Ex],[Ex,kkX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1091() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RRVqE","WK","Zu","qm","OcvpE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OcvpE],[qm],[qm,OcvpE],[Zu],[Zu,OcvpE],[Zu,qm],[Zu,qm,OcvpE],[WK],[WK,OcvpE],[WK,qm],[WK,qm,OcvpE],[WK,Zu],[WK,Zu,OcvpE],[WK,Zu,qm],[WK,Zu,qm,OcvpE],[RRVqE],[RRVqE,OcvpE],[RRVqE,qm],[RRVqE,qm,OcvpE],[RRVqE,Zu],[RRVqE,Zu,OcvpE],[RRVqE,Zu,qm],[RRVqE,Zu,qm,OcvpE],[RRVqE,WK],[RRVqE,WK,OcvpE],[RRVqE,WK,qm],[RRVqE,WK,qm,OcvpE],[RRVqE,WK,Zu],[RRVqE,WK,Zu,OcvpE],[RRVqE,WK,Zu,qm],[RRVqE,WK,Zu,qm,OcvpE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1092() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yeSsh","vjH","Awgkh","yfgM","TRJYg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TRJYg],[yfgM],[yfgM,TRJYg],[Awgkh],[Awgkh,TRJYg],[Awgkh,yfgM],[Awgkh,yfgM,TRJYg],[vjH],[vjH,TRJYg],[vjH,yfgM],[vjH,yfgM,TRJYg],[vjH,Awgkh],[vjH,Awgkh,TRJYg],[vjH,Awgkh,yfgM],[vjH,Awgkh,yfgM,TRJYg],[yeSsh],[yeSsh,TRJYg],[yeSsh,yfgM],[yeSsh,yfgM,TRJYg],[yeSsh,Awgkh],[yeSsh,Awgkh,TRJYg],[yeSsh,Awgkh,yfgM],[yeSsh,Awgkh,yfgM,TRJYg],[yeSsh,vjH],[yeSsh,vjH,TRJYg],[yeSsh,vjH,yfgM],[yeSsh,vjH,yfgM,TRJYg],[yeSsh,vjH,Awgkh],[yeSsh,vjH,Awgkh,TRJYg],[yeSsh,vjH,Awgkh,yfgM],[yeSsh,vjH,Awgkh,yfgM,TRJYg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1093() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","YIWS","fnZk","uc","PQvO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PQvO],[uc],[uc,PQvO],[fnZk],[fnZk,PQvO],[fnZk,uc],[fnZk,uc,PQvO],[YIWS],[YIWS,PQvO],[YIWS,uc],[YIWS,uc,PQvO],[YIWS,fnZk],[YIWS,fnZk,PQvO],[YIWS,fnZk,uc],[YIWS,fnZk,uc,PQvO],[T],[T,PQvO],[T,uc],[T,uc,PQvO],[T,fnZk],[T,fnZk,PQvO],[T,fnZk,uc],[T,fnZk,uc,PQvO],[T,YIWS],[T,YIWS,PQvO],[T,YIWS,uc],[T,YIWS,uc,PQvO],[T,YIWS,fnZk],[T,YIWS,fnZk,PQvO],[T,YIWS,fnZk,uc],[T,YIWS,fnZk,uc,PQvO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1094() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mUhT","Fwyn","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[Fwyn],[Fwyn,J],[mUhT],[mUhT,J],[mUhT,Fwyn],[mUhT,Fwyn,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1095() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HVhBM","Lbr","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[Lbr],[Lbr,N],[HVhBM],[HVhBM,N],[HVhBM,Lbr],[HVhBM,Lbr,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1096() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","VyZz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VyZz],[Y],[Y,VyZz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1097() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fyhbn","rYO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rYO],[Fyhbn],[Fyhbn,rYO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1098() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iDmiU","Tb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tb],[iDmiU],[iDmiU,Tb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1099() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HdwS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HdwS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1100() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wyh","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[wyh],[wyh,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1101() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LIt","Of")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Of],[LIt],[LIt,Of]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1102() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CvtPl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CvtPl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1103() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zswI","VHWep")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VHWep],[zswI],[zswI,VHWep]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1104() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lwa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lwa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1105() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GjU","iQEzU","Pw","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[Pw],[Pw,l],[iQEzU],[iQEzU,l],[iQEzU,Pw],[iQEzU,Pw,l],[GjU],[GjU,l],[GjU,Pw],[GjU,Pw,l],[GjU,iQEzU],[GjU,iQEzU,l],[GjU,iQEzU,Pw],[GjU,iQEzU,Pw,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1106() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "is","J","OJ","Ie")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ie],[OJ],[OJ,Ie],[J],[J,Ie],[J,OJ],[J,OJ,Ie],[is],[is,Ie],[is,OJ],[is,OJ,Ie],[is,J],[is,J,Ie],[is,J,OJ],[is,J,OJ,Ie]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1107() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","X","ZYJ","sAZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sAZ],[ZYJ],[ZYJ,sAZ],[X],[X,sAZ],[X,ZYJ],[X,ZYJ,sAZ],[t],[t,sAZ],[t,ZYJ],[t,ZYJ,sAZ],[t,X],[t,X,sAZ],[t,X,ZYJ],[t,X,ZYJ,sAZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1108() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SFEi","ULCm","oMyy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oMyy],[ULCm],[ULCm,oMyy],[SFEi],[SFEi,oMyy],[SFEi,ULCm],[SFEi,ULCm,oMyy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1109() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BF","MlZ","Kfv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kfv],[MlZ],[MlZ,Kfv],[BF],[BF,Kfv],[BF,MlZ],[BF,MlZ,Kfv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1110() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zr","EgRLc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EgRLc],[Zr],[Zr,EgRLc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1111() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nIb","XZKz","qN","ImmXx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ImmXx],[qN],[qN,ImmXx],[XZKz],[XZKz,ImmXx],[XZKz,qN],[XZKz,qN,ImmXx],[nIb],[nIb,ImmXx],[nIb,qN],[nIb,qN,ImmXx],[nIb,XZKz],[nIb,XZKz,ImmXx],[nIb,XZKz,qN],[nIb,XZKz,qN,ImmXx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1112() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rLxbB","Efcz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Efcz],[rLxbB],[rLxbB,Efcz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1113() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HaHCt","HlbZ","Hbsu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hbsu],[HlbZ],[HlbZ,Hbsu],[HaHCt],[HaHCt,Hbsu],[HaHCt,HlbZ],[HaHCt,HlbZ,Hbsu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1114() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vasp","c","AbCL","yWbr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yWbr],[AbCL],[AbCL,yWbr],[c],[c,yWbr],[c,AbCL],[c,AbCL,yWbr],[Vasp],[Vasp,yWbr],[Vasp,AbCL],[Vasp,AbCL,yWbr],[Vasp,c],[Vasp,c,yWbr],[Vasp,c,AbCL],[Vasp,c,AbCL,yWbr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1115() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","x","oionM","mk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mk],[oionM],[oionM,mk],[x],[x,mk],[x,oionM],[x,oionM,mk],[t],[t,mk],[t,oionM],[t,oionM,mk],[t,x],[t,x,mk],[t,x,oionM],[t,x,oionM,mk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1116() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","OOuW","UHWbt","Jfi","Gc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gc],[Jfi],[Jfi,Gc],[UHWbt],[UHWbt,Gc],[UHWbt,Jfi],[UHWbt,Jfi,Gc],[OOuW],[OOuW,Gc],[OOuW,Jfi],[OOuW,Jfi,Gc],[OOuW,UHWbt],[OOuW,UHWbt,Gc],[OOuW,UHWbt,Jfi],[OOuW,UHWbt,Jfi,Gc],[F],[F,Gc],[F,Jfi],[F,Jfi,Gc],[F,UHWbt],[F,UHWbt,Gc],[F,UHWbt,Jfi],[F,UHWbt,Jfi,Gc],[F,OOuW],[F,OOuW,Gc],[F,OOuW,Jfi],[F,OOuW,Jfi,Gc],[F,OOuW,UHWbt],[F,OOuW,UHWbt,Gc],[F,OOuW,UHWbt,Jfi],[F,OOuW,UHWbt,Jfi,Gc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1117() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hRKQm","g","H","Jx","VD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VD],[Jx],[Jx,VD],[H],[H,VD],[H,Jx],[H,Jx,VD],[g],[g,VD],[g,Jx],[g,Jx,VD],[g,H],[g,H,VD],[g,H,Jx],[g,H,Jx,VD],[hRKQm],[hRKQm,VD],[hRKQm,Jx],[hRKQm,Jx,VD],[hRKQm,H],[hRKQm,H,VD],[hRKQm,H,Jx],[hRKQm,H,Jx,VD],[hRKQm,g],[hRKQm,g,VD],[hRKQm,g,Jx],[hRKQm,g,Jx,VD],[hRKQm,g,H],[hRKQm,g,H,VD],[hRKQm,g,H,Jx],[hRKQm,g,H,Jx,VD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1118() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fh","ozaNv","Bqk","oALSP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oALSP],[Bqk],[Bqk,oALSP],[ozaNv],[ozaNv,oALSP],[ozaNv,Bqk],[ozaNv,Bqk,oALSP],[Fh],[Fh,oALSP],[Fh,Bqk],[Fh,Bqk,oALSP],[Fh,ozaNv],[Fh,ozaNv,oALSP],[Fh,ozaNv,Bqk],[Fh,ozaNv,Bqk,oALSP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1119() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1120() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dLY","kBkLP","VPSdh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VPSdh],[kBkLP],[kBkLP,VPSdh],[dLY],[dLY,VPSdh],[dLY,kBkLP],[dLY,kBkLP,VPSdh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1121() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mh","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[Mh],[Mh,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1122() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","wkv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wkv],[r],[r,wkv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1123() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","x","spRFQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[spRFQ],[x],[x,spRFQ],[v],[v,spRFQ],[v,x],[v,x,spRFQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1124() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[A]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1125() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GFR","gBN","ey","ykO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ykO],[ey],[ey,ykO],[gBN],[gBN,ykO],[gBN,ey],[gBN,ey,ykO],[GFR],[GFR,ykO],[GFR,ey],[GFR,ey,ykO],[GFR,gBN],[GFR,gBN,ykO],[GFR,gBN,ey],[GFR,gBN,ey,ykO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1126() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fglra","E","Ib","z","uQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uQ],[z],[z,uQ],[Ib],[Ib,uQ],[Ib,z],[Ib,z,uQ],[E],[E,uQ],[E,z],[E,z,uQ],[E,Ib],[E,Ib,uQ],[E,Ib,z],[E,Ib,z,uQ],[Fglra],[Fglra,uQ],[Fglra,z],[Fglra,z,uQ],[Fglra,Ib],[Fglra,Ib,uQ],[Fglra,Ib,z],[Fglra,Ib,z,uQ],[Fglra,E],[Fglra,E,uQ],[Fglra,E,z],[Fglra,E,z,uQ],[Fglra,E,Ib],[Fglra,E,Ib,uQ],[Fglra,E,Ib,z],[Fglra,E,Ib,z,uQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1127() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","el","aNZ","tekT","IdQE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IdQE],[tekT],[tekT,IdQE],[aNZ],[aNZ,IdQE],[aNZ,tekT],[aNZ,tekT,IdQE],[el],[el,IdQE],[el,tekT],[el,tekT,IdQE],[el,aNZ],[el,aNZ,IdQE],[el,aNZ,tekT],[el,aNZ,tekT,IdQE],[S],[S,IdQE],[S,tekT],[S,tekT,IdQE],[S,aNZ],[S,aNZ,IdQE],[S,aNZ,tekT],[S,aNZ,tekT,IdQE],[S,el],[S,el,IdQE],[S,el,tekT],[S,el,tekT,IdQE],[S,el,aNZ],[S,el,aNZ,IdQE],[S,el,aNZ,tekT],[S,el,aNZ,tekT,IdQE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1128() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","kjb","x","GNob","wcZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wcZ],[GNob],[GNob,wcZ],[x],[x,wcZ],[x,GNob],[x,GNob,wcZ],[kjb],[kjb,wcZ],[kjb,GNob],[kjb,GNob,wcZ],[kjb,x],[kjb,x,wcZ],[kjb,x,GNob],[kjb,x,GNob,wcZ],[a],[a,wcZ],[a,GNob],[a,GNob,wcZ],[a,x],[a,x,wcZ],[a,x,GNob],[a,x,GNob,wcZ],[a,kjb],[a,kjb,wcZ],[a,kjb,GNob],[a,kjb,GNob,wcZ],[a,kjb,x],[a,kjb,x,wcZ],[a,kjb,x,GNob],[a,kjb,x,GNob,wcZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1129() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JM","W","Igi","mVYTg","BVftv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BVftv],[mVYTg],[mVYTg,BVftv],[Igi],[Igi,BVftv],[Igi,mVYTg],[Igi,mVYTg,BVftv],[W],[W,BVftv],[W,mVYTg],[W,mVYTg,BVftv],[W,Igi],[W,Igi,BVftv],[W,Igi,mVYTg],[W,Igi,mVYTg,BVftv],[JM],[JM,BVftv],[JM,mVYTg],[JM,mVYTg,BVftv],[JM,Igi],[JM,Igi,BVftv],[JM,Igi,mVYTg],[JM,Igi,mVYTg,BVftv],[JM,W],[JM,W,BVftv],[JM,W,mVYTg],[JM,W,mVYTg,BVftv],[JM,W,Igi],[JM,W,Igi,BVftv],[JM,W,Igi,mVYTg],[JM,W,Igi,mVYTg,BVftv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1130() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","EXz","igh","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[igh],[igh,O],[EXz],[EXz,O],[EXz,igh],[EXz,igh,O],[F],[F,O],[F,igh],[F,igh,O],[F,EXz],[F,EXz,O],[F,EXz,igh],[F,EXz,igh,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1131() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1132() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZVshX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZVshX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1133() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cboEg","ntge","H","CRbgm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CRbgm],[H],[H,CRbgm],[ntge],[ntge,CRbgm],[ntge,H],[ntge,H,CRbgm],[cboEg],[cboEg,CRbgm],[cboEg,H],[cboEg,H,CRbgm],[cboEg,ntge],[cboEg,ntge,CRbgm],[cboEg,ntge,H],[cboEg,ntge,H,CRbgm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1134() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qz","xFI","iWbN","L","Ap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ap],[L],[L,Ap],[iWbN],[iWbN,Ap],[iWbN,L],[iWbN,L,Ap],[xFI],[xFI,Ap],[xFI,L],[xFI,L,Ap],[xFI,iWbN],[xFI,iWbN,Ap],[xFI,iWbN,L],[xFI,iWbN,L,Ap],[qz],[qz,Ap],[qz,L],[qz,L,Ap],[qz,iWbN],[qz,iWbN,Ap],[qz,iWbN,L],[qz,iWbN,L,Ap],[qz,xFI],[qz,xFI,Ap],[qz,xFI,L],[qz,xFI,L,Ap],[qz,xFI,iWbN],[qz,xFI,iWbN,Ap],[qz,xFI,iWbN,L],[qz,xFI,iWbN,L,Ap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1135() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i","jLqkp","Iv","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[Iv],[Iv,M],[jLqkp],[jLqkp,M],[jLqkp,Iv],[jLqkp,Iv,M],[i],[i,M],[i,Iv],[i,Iv,M],[i,jLqkp],[i,jLqkp,M],[i,jLqkp,Iv],[i,jLqkp,Iv,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1136() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QlNMk","oy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oy],[QlNMk],[QlNMk,oy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1137() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hUCZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hUCZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1138() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","YbAV","og")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[og],[YbAV],[YbAV,og],[e],[e,og],[e,YbAV],[e,YbAV,og]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1139() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AlN","IuRBK","dk","XoLx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XoLx],[dk],[dk,XoLx],[IuRBK],[IuRBK,XoLx],[IuRBK,dk],[IuRBK,dk,XoLx],[AlN],[AlN,XoLx],[AlN,dk],[AlN,dk,XoLx],[AlN,IuRBK],[AlN,IuRBK,XoLx],[AlN,IuRBK,dk],[AlN,IuRBK,dk,XoLx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1140() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oDC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oDC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1141() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IeQ","aYArR","HklR","k","VDANo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VDANo],[k],[k,VDANo],[HklR],[HklR,VDANo],[HklR,k],[HklR,k,VDANo],[aYArR],[aYArR,VDANo],[aYArR,k],[aYArR,k,VDANo],[aYArR,HklR],[aYArR,HklR,VDANo],[aYArR,HklR,k],[aYArR,HklR,k,VDANo],[IeQ],[IeQ,VDANo],[IeQ,k],[IeQ,k,VDANo],[IeQ,HklR],[IeQ,HklR,VDANo],[IeQ,HklR,k],[IeQ,HklR,k,VDANo],[IeQ,aYArR],[IeQ,aYArR,VDANo],[IeQ,aYArR,k],[IeQ,aYArR,k,VDANo],[IeQ,aYArR,HklR],[IeQ,aYArR,HklR,VDANo],[IeQ,aYArR,HklR,k],[IeQ,aYArR,HklR,k,VDANo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1142() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","FfIVl","G","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[G],[G,l],[FfIVl],[FfIVl,l],[FfIVl,G],[FfIVl,G,l],[E],[E,l],[E,G],[E,G,l],[E,FfIVl],[E,FfIVl,l],[E,FfIVl,G],[E,FfIVl,G,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1143() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","KyrLr","oDJ","V","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[V],[V,j],[oDJ],[oDJ,j],[oDJ,V],[oDJ,V,j],[KyrLr],[KyrLr,j],[KyrLr,V],[KyrLr,V,j],[KyrLr,oDJ],[KyrLr,oDJ,j],[KyrLr,oDJ,V],[KyrLr,oDJ,V,j],[a],[a,j],[a,V],[a,V,j],[a,oDJ],[a,oDJ,j],[a,oDJ,V],[a,oDJ,V,j],[a,KyrLr],[a,KyrLr,j],[a,KyrLr,V],[a,KyrLr,V,j],[a,KyrLr,oDJ],[a,KyrLr,oDJ,j],[a,KyrLr,oDJ,V],[a,KyrLr,oDJ,V,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1144() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sSyP","SKBbR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SKBbR],[sSyP],[sSyP,SKBbR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1145() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jnfrf","HELe","tm","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[tm],[tm,M],[HELe],[HELe,M],[HELe,tm],[HELe,tm,M],[Jnfrf],[Jnfrf,M],[Jnfrf,tm],[Jnfrf,tm,M],[Jnfrf,HELe],[Jnfrf,HELe,M],[Jnfrf,HELe,tm],[Jnfrf,HELe,tm,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1146() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","QEk","AW","lCP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lCP],[AW],[AW,lCP],[QEk],[QEk,lCP],[QEk,AW],[QEk,AW,lCP],[a],[a,lCP],[a,AW],[a,AW,lCP],[a,QEk],[a,QEk,lCP],[a,QEk,AW],[a,QEk,AW,lCP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1147() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ja","H","xtz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xtz],[H],[H,xtz],[ja],[ja,xtz],[ja,H],[ja,H,xtz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1148() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1149() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cqd","YcW","l","jVyJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jVyJ],[l],[l,jVyJ],[YcW],[YcW,jVyJ],[YcW,l],[YcW,l,jVyJ],[cqd],[cqd,jVyJ],[cqd,l],[cqd,l,jVyJ],[cqd,YcW],[cqd,YcW,jVyJ],[cqd,YcW,l],[cqd,YcW,l,jVyJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1150() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gHzKy","XpV","noJrG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[noJrG],[XpV],[XpV,noJrG],[gHzKy],[gHzKy,noJrG],[gHzKy,XpV],[gHzKy,XpV,noJrG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1151() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","ths","sa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sa],[ths],[ths,sa],[g],[g,sa],[g,ths],[g,ths,sa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1152() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "twv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[twv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1153() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[r]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1154() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CCNEF","mOb","BTzgh","m","gxp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gxp],[m],[m,gxp],[BTzgh],[BTzgh,gxp],[BTzgh,m],[BTzgh,m,gxp],[mOb],[mOb,gxp],[mOb,m],[mOb,m,gxp],[mOb,BTzgh],[mOb,BTzgh,gxp],[mOb,BTzgh,m],[mOb,BTzgh,m,gxp],[CCNEF],[CCNEF,gxp],[CCNEF,m],[CCNEF,m,gxp],[CCNEF,BTzgh],[CCNEF,BTzgh,gxp],[CCNEF,BTzgh,m],[CCNEF,BTzgh,m,gxp],[CCNEF,mOb],[CCNEF,mOb,gxp],[CCNEF,mOb,m],[CCNEF,mOb,m,gxp],[CCNEF,mOb,BTzgh],[CCNEF,mOb,BTzgh,gxp],[CCNEF,mOb,BTzgh,m],[CCNEF,mOb,BTzgh,m,gxp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1155() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UE","fAq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fAq],[UE],[UE,fAq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1156() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jizXq","Rg","Id","QLGD","Ly")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ly],[QLGD],[QLGD,Ly],[Id],[Id,Ly],[Id,QLGD],[Id,QLGD,Ly],[Rg],[Rg,Ly],[Rg,QLGD],[Rg,QLGD,Ly],[Rg,Id],[Rg,Id,Ly],[Rg,Id,QLGD],[Rg,Id,QLGD,Ly],[jizXq],[jizXq,Ly],[jizXq,QLGD],[jizXq,QLGD,Ly],[jizXq,Id],[jizXq,Id,Ly],[jizXq,Id,QLGD],[jizXq,Id,QLGD,Ly],[jizXq,Rg],[jizXq,Rg,Ly],[jizXq,Rg,QLGD],[jizXq,Rg,QLGD,Ly],[jizXq,Rg,Id],[jizXq,Rg,Id,Ly],[jizXq,Rg,Id,QLGD],[jizXq,Rg,Id,QLGD,Ly]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1157() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","iHLQ","le","vSX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vSX],[le],[le,vSX],[iHLQ],[iHLQ,vSX],[iHLQ,le],[iHLQ,le,vSX],[t],[t,vSX],[t,le],[t,le,vSX],[t,iHLQ],[t,iHLQ,vSX],[t,iHLQ,le],[t,iHLQ,le,vSX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1158() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ohl","HJ","x","VmXU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VmXU],[x],[x,VmXU],[HJ],[HJ,VmXU],[HJ,x],[HJ,x,VmXU],[ohl],[ohl,VmXU],[ohl,x],[ohl,x,VmXU],[ohl,HJ],[ohl,HJ,VmXU],[ohl,HJ,x],[ohl,HJ,x,VmXU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1159() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1160() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jz","yjA","XvYTJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XvYTJ],[yjA],[yjA,XvYTJ],[Jz],[Jz,XvYTJ],[Jz,yjA],[Jz,yjA,XvYTJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1161() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aAb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aAb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1162() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","JIvK","dK","BcLER","krwL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[krwL],[BcLER],[BcLER,krwL],[dK],[dK,krwL],[dK,BcLER],[dK,BcLER,krwL],[JIvK],[JIvK,krwL],[JIvK,BcLER],[JIvK,BcLER,krwL],[JIvK,dK],[JIvK,dK,krwL],[JIvK,dK,BcLER],[JIvK,dK,BcLER,krwL],[D],[D,krwL],[D,BcLER],[D,BcLER,krwL],[D,dK],[D,dK,krwL],[D,dK,BcLER],[D,dK,BcLER,krwL],[D,JIvK],[D,JIvK,krwL],[D,JIvK,BcLER],[D,JIvK,BcLER,krwL],[D,JIvK,dK],[D,JIvK,dK,krwL],[D,JIvK,dK,BcLER],[D,JIvK,dK,BcLER,krwL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1163() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jc","puJs","IzAX","NjYWQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NjYWQ],[IzAX],[IzAX,NjYWQ],[puJs],[puJs,NjYWQ],[puJs,IzAX],[puJs,IzAX,NjYWQ],[jc],[jc,NjYWQ],[jc,IzAX],[jc,IzAX,NjYWQ],[jc,puJs],[jc,puJs,NjYWQ],[jc,puJs,IzAX],[jc,puJs,IzAX,NjYWQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1164() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "grgr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[grgr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1165() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LoKt","XDKP","y","Jw","gPdi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gPdi],[Jw],[Jw,gPdi],[y],[y,gPdi],[y,Jw],[y,Jw,gPdi],[XDKP],[XDKP,gPdi],[XDKP,Jw],[XDKP,Jw,gPdi],[XDKP,y],[XDKP,y,gPdi],[XDKP,y,Jw],[XDKP,y,Jw,gPdi],[LoKt],[LoKt,gPdi],[LoKt,Jw],[LoKt,Jw,gPdi],[LoKt,y],[LoKt,y,gPdi],[LoKt,y,Jw],[LoKt,y,Jw,gPdi],[LoKt,XDKP],[LoKt,XDKP,gPdi],[LoKt,XDKP,Jw],[LoKt,XDKP,Jw,gPdi],[LoKt,XDKP,y],[LoKt,XDKP,y,gPdi],[LoKt,XDKP,y,Jw],[LoKt,XDKP,y,Jw,gPdi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1166() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dKik","h","GR","LZZoi","ET")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ET],[LZZoi],[LZZoi,ET],[GR],[GR,ET],[GR,LZZoi],[GR,LZZoi,ET],[h],[h,ET],[h,LZZoi],[h,LZZoi,ET],[h,GR],[h,GR,ET],[h,GR,LZZoi],[h,GR,LZZoi,ET],[dKik],[dKik,ET],[dKik,LZZoi],[dKik,LZZoi,ET],[dKik,GR],[dKik,GR,ET],[dKik,GR,LZZoi],[dKik,GR,LZZoi,ET],[dKik,h],[dKik,h,ET],[dKik,h,LZZoi],[dKik,h,LZZoi,ET],[dKik,h,GR],[dKik,h,GR,ET],[dKik,h,GR,LZZoi],[dKik,h,GR,LZZoi,ET]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1167() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vI","GIUJZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GIUJZ],[vI],[vI,GIUJZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1168() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CdQ","mh","zlA","wXld")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wXld],[zlA],[zlA,wXld],[mh],[mh,wXld],[mh,zlA],[mh,zlA,wXld],[CdQ],[CdQ,wXld],[CdQ,zlA],[CdQ,zlA,wXld],[CdQ,mh],[CdQ,mh,wXld],[CdQ,mh,zlA],[CdQ,mh,zlA,wXld]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1169() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dfr","k","njlAu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[njlAu],[k],[k,njlAu],[Dfr],[Dfr,njlAu],[Dfr,k],[Dfr,k,njlAu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1170() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kCQI","b","TMZe","sDC","e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e],[sDC],[sDC,e],[TMZe],[TMZe,e],[TMZe,sDC],[TMZe,sDC,e],[b],[b,e],[b,sDC],[b,sDC,e],[b,TMZe],[b,TMZe,e],[b,TMZe,sDC],[b,TMZe,sDC,e],[kCQI],[kCQI,e],[kCQI,sDC],[kCQI,sDC,e],[kCQI,TMZe],[kCQI,TMZe,e],[kCQI,TMZe,sDC],[kCQI,TMZe,sDC,e],[kCQI,b],[kCQI,b,e],[kCQI,b,sDC],[kCQI,b,sDC,e],[kCQI,b,TMZe],[kCQI,b,TMZe,e],[kCQI,b,TMZe,sDC],[kCQI,b,TMZe,sDC,e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1171() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vfv","HZH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HZH],[Vfv],[Vfv,HZH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1172() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","HgiIR","X","AM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AM],[X],[X,AM],[HgiIR],[HgiIR,AM],[HgiIR,X],[HgiIR,X,AM],[a],[a,AM],[a,X],[a,X,AM],[a,HgiIR],[a,HgiIR,AM],[a,HgiIR,X],[a,HgiIR,X,AM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1173() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hz","fWAw","Es")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Es],[fWAw],[fWAw,Es],[hz],[hz,Es],[hz,fWAw],[hz,fWAw,Es]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1174() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lb","k","corx","RUR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RUR],[corx],[corx,RUR],[k],[k,RUR],[k,corx],[k,corx,RUR],[lb],[lb,RUR],[lb,corx],[lb,corx,RUR],[lb,k],[lb,k,RUR],[lb,k,corx],[lb,k,corx,RUR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1175() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rXAO","WqgZ","YdDz","QxvEV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QxvEV],[YdDz],[YdDz,QxvEV],[WqgZ],[WqgZ,QxvEV],[WqgZ,YdDz],[WqgZ,YdDz,QxvEV],[rXAO],[rXAO,QxvEV],[rXAO,YdDz],[rXAO,YdDz,QxvEV],[rXAO,WqgZ],[rXAO,WqgZ,QxvEV],[rXAO,WqgZ,YdDz],[rXAO,WqgZ,YdDz,QxvEV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1176() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","RU","BkM","G","wCWt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wCWt],[G],[G,wCWt],[BkM],[BkM,wCWt],[BkM,G],[BkM,G,wCWt],[RU],[RU,wCWt],[RU,G],[RU,G,wCWt],[RU,BkM],[RU,BkM,wCWt],[RU,BkM,G],[RU,BkM,G,wCWt],[C],[C,wCWt],[C,G],[C,G,wCWt],[C,BkM],[C,BkM,wCWt],[C,BkM,G],[C,BkM,G,wCWt],[C,RU],[C,RU,wCWt],[C,RU,G],[C,RU,G,wCWt],[C,RU,BkM],[C,RU,BkM,wCWt],[C,RU,BkM,G],[C,RU,BkM,G,wCWt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1177() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZB","eItnV","mx","ZE","LXJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LXJ],[ZE],[ZE,LXJ],[mx],[mx,LXJ],[mx,ZE],[mx,ZE,LXJ],[eItnV],[eItnV,LXJ],[eItnV,ZE],[eItnV,ZE,LXJ],[eItnV,mx],[eItnV,mx,LXJ],[eItnV,mx,ZE],[eItnV,mx,ZE,LXJ],[ZB],[ZB,LXJ],[ZB,ZE],[ZB,ZE,LXJ],[ZB,mx],[ZB,mx,LXJ],[ZB,mx,ZE],[ZB,mx,ZE,LXJ],[ZB,eItnV],[ZB,eItnV,LXJ],[ZB,eItnV,ZE],[ZB,eItnV,ZE,LXJ],[ZB,eItnV,mx],[ZB,eItnV,mx,LXJ],[ZB,eItnV,mx,ZE],[ZB,eItnV,mx,ZE,LXJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1178() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BmI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BmI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1179() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lu","WlsNw","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[WlsNw],[WlsNw,o],[lu],[lu,o],[lu,WlsNw],[lu,WlsNw,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1180() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UJ","qoJeu","Ohpy","MXtU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MXtU],[Ohpy],[Ohpy,MXtU],[qoJeu],[qoJeu,MXtU],[qoJeu,Ohpy],[qoJeu,Ohpy,MXtU],[UJ],[UJ,MXtU],[UJ,Ohpy],[UJ,Ohpy,MXtU],[UJ,qoJeu],[UJ,qoJeu,MXtU],[UJ,qoJeu,Ohpy],[UJ,qoJeu,Ohpy,MXtU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1181() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","WLi","BxcwV","PAkAe","iaetO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iaetO],[PAkAe],[PAkAe,iaetO],[BxcwV],[BxcwV,iaetO],[BxcwV,PAkAe],[BxcwV,PAkAe,iaetO],[WLi],[WLi,iaetO],[WLi,PAkAe],[WLi,PAkAe,iaetO],[WLi,BxcwV],[WLi,BxcwV,iaetO],[WLi,BxcwV,PAkAe],[WLi,BxcwV,PAkAe,iaetO],[S],[S,iaetO],[S,PAkAe],[S,PAkAe,iaetO],[S,BxcwV],[S,BxcwV,iaetO],[S,BxcwV,PAkAe],[S,BxcwV,PAkAe,iaetO],[S,WLi],[S,WLi,iaetO],[S,WLi,PAkAe],[S,WLi,PAkAe,iaetO],[S,WLi,BxcwV],[S,WLi,BxcwV,iaetO],[S,WLi,BxcwV,PAkAe],[S,WLi,BxcwV,PAkAe,iaetO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1182() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XQL","nF","FjaMp","M","NfIps")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NfIps],[M],[M,NfIps],[FjaMp],[FjaMp,NfIps],[FjaMp,M],[FjaMp,M,NfIps],[nF],[nF,NfIps],[nF,M],[nF,M,NfIps],[nF,FjaMp],[nF,FjaMp,NfIps],[nF,FjaMp,M],[nF,FjaMp,M,NfIps],[XQL],[XQL,NfIps],[XQL,M],[XQL,M,NfIps],[XQL,FjaMp],[XQL,FjaMp,NfIps],[XQL,FjaMp,M],[XQL,FjaMp,M,NfIps],[XQL,nF],[XQL,nF,NfIps],[XQL,nF,M],[XQL,nF,M,NfIps],[XQL,nF,FjaMp],[XQL,nF,FjaMp,NfIps],[XQL,nF,FjaMp,M],[XQL,nF,FjaMp,M,NfIps]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1183() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DBMTT","c","JTBO","LnvuF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LnvuF],[JTBO],[JTBO,LnvuF],[c],[c,LnvuF],[c,JTBO],[c,JTBO,LnvuF],[DBMTT],[DBMTT,LnvuF],[DBMTT,JTBO],[DBMTT,JTBO,LnvuF],[DBMTT,c],[DBMTT,c,LnvuF],[DBMTT,c,JTBO],[DBMTT,c,JTBO,LnvuF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1184() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AAP","aYM","pvIRK","WVek","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[WVek],[WVek,o],[pvIRK],[pvIRK,o],[pvIRK,WVek],[pvIRK,WVek,o],[aYM],[aYM,o],[aYM,WVek],[aYM,WVek,o],[aYM,pvIRK],[aYM,pvIRK,o],[aYM,pvIRK,WVek],[aYM,pvIRK,WVek,o],[AAP],[AAP,o],[AAP,WVek],[AAP,WVek,o],[AAP,pvIRK],[AAP,pvIRK,o],[AAP,pvIRK,WVek],[AAP,pvIRK,WVek,o],[AAP,aYM],[AAP,aYM,o],[AAP,aYM,WVek],[AAP,aYM,WVek,o],[AAP,aYM,pvIRK],[AAP,aYM,pvIRK,o],[AAP,aYM,pvIRK,WVek],[AAP,aYM,pvIRK,WVek,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1185() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CS","Qc","dM","yaRzz","UTM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UTM],[yaRzz],[yaRzz,UTM],[dM],[dM,UTM],[dM,yaRzz],[dM,yaRzz,UTM],[Qc],[Qc,UTM],[Qc,yaRzz],[Qc,yaRzz,UTM],[Qc,dM],[Qc,dM,UTM],[Qc,dM,yaRzz],[Qc,dM,yaRzz,UTM],[CS],[CS,UTM],[CS,yaRzz],[CS,yaRzz,UTM],[CS,dM],[CS,dM,UTM],[CS,dM,yaRzz],[CS,dM,yaRzz,UTM],[CS,Qc],[CS,Qc,UTM],[CS,Qc,yaRzz],[CS,Qc,yaRzz,UTM],[CS,Qc,dM],[CS,Qc,dM,UTM],[CS,Qc,dM,yaRzz],[CS,Qc,dM,yaRzz,UTM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1186() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ddq","ApSq","T","KzkNu","gCJgN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gCJgN],[KzkNu],[KzkNu,gCJgN],[T],[T,gCJgN],[T,KzkNu],[T,KzkNu,gCJgN],[ApSq],[ApSq,gCJgN],[ApSq,KzkNu],[ApSq,KzkNu,gCJgN],[ApSq,T],[ApSq,T,gCJgN],[ApSq,T,KzkNu],[ApSq,T,KzkNu,gCJgN],[ddq],[ddq,gCJgN],[ddq,KzkNu],[ddq,KzkNu,gCJgN],[ddq,T],[ddq,T,gCJgN],[ddq,T,KzkNu],[ddq,T,KzkNu,gCJgN],[ddq,ApSq],[ddq,ApSq,gCJgN],[ddq,ApSq,KzkNu],[ddq,ApSq,KzkNu,gCJgN],[ddq,ApSq,T],[ddq,ApSq,T,gCJgN],[ddq,ApSq,T,KzkNu],[ddq,ApSq,T,KzkNu,gCJgN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1187() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eBR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eBR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1188() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xtn","WWALf","Cch","bBL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bBL],[Cch],[Cch,bBL],[WWALf],[WWALf,bBL],[WWALf,Cch],[WWALf,Cch,bBL],[xtn],[xtn,bBL],[xtn,Cch],[xtn,Cch,bBL],[xtn,WWALf],[xtn,WWALf,bBL],[xtn,WWALf,Cch],[xtn,WWALf,Cch,bBL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1189() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DrHTY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DrHTY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1190() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","LioU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LioU],[e],[e,LioU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1191() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gjTuq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gjTuq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1192() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QM","dHGE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dHGE],[QM],[QM,dHGE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1193() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","xSWu","N","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[N],[N,O],[xSWu],[xSWu,O],[xSWu,N],[xSWu,N,O],[T],[T,O],[T,N],[T,N,O],[T,xSWu],[T,xSWu,O],[T,xSWu,N],[T,xSWu,N,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1194() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OuF","c","ON")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ON],[c],[c,ON],[OuF],[OuF,ON],[OuF,c],[OuF,c,ON]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1195() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "delZ","UJVE","VvmM","sL","Smqb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Smqb],[sL],[sL,Smqb],[VvmM],[VvmM,Smqb],[VvmM,sL],[VvmM,sL,Smqb],[UJVE],[UJVE,Smqb],[UJVE,sL],[UJVE,sL,Smqb],[UJVE,VvmM],[UJVE,VvmM,Smqb],[UJVE,VvmM,sL],[UJVE,VvmM,sL,Smqb],[delZ],[delZ,Smqb],[delZ,sL],[delZ,sL,Smqb],[delZ,VvmM],[delZ,VvmM,Smqb],[delZ,VvmM,sL],[delZ,VvmM,sL,Smqb],[delZ,UJVE],[delZ,UJVE,Smqb],[delZ,UJVE,sL],[delZ,UJVE,sL,Smqb],[delZ,UJVE,VvmM],[delZ,UJVE,VvmM,Smqb],[delZ,UJVE,VvmM,sL],[delZ,UJVE,VvmM,sL,Smqb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1196() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dcHe","agVi","nqZ","bIs","jx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jx],[bIs],[bIs,jx],[nqZ],[nqZ,jx],[nqZ,bIs],[nqZ,bIs,jx],[agVi],[agVi,jx],[agVi,bIs],[agVi,bIs,jx],[agVi,nqZ],[agVi,nqZ,jx],[agVi,nqZ,bIs],[agVi,nqZ,bIs,jx],[dcHe],[dcHe,jx],[dcHe,bIs],[dcHe,bIs,jx],[dcHe,nqZ],[dcHe,nqZ,jx],[dcHe,nqZ,bIs],[dcHe,nqZ,bIs,jx],[dcHe,agVi],[dcHe,agVi,jx],[dcHe,agVi,bIs],[dcHe,agVi,bIs,jx],[dcHe,agVi,nqZ],[dcHe,agVi,nqZ,jx],[dcHe,agVi,nqZ,bIs],[dcHe,agVi,nqZ,bIs,jx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1197() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yOHq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yOHq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1198() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1199() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qNHo","RCceJ","v")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[v],[RCceJ],[RCceJ,v],[qNHo],[qNHo,v],[qNHo,RCceJ],[qNHo,RCceJ,v]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1200() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PHxGb","xs","upY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[upY],[xs],[xs,upY],[PHxGb],[PHxGb,upY],[PHxGb,xs],[PHxGb,xs,upY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1201() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VIu","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[VIu],[VIu,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1202() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uU","VUsx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VUsx],[uU],[uU,VUsx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1203() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Kla","Q","ClxR","uUCb","wiGB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wiGB],[uUCb],[uUCb,wiGB],[ClxR],[ClxR,wiGB],[ClxR,uUCb],[ClxR,uUCb,wiGB],[Q],[Q,wiGB],[Q,uUCb],[Q,uUCb,wiGB],[Q,ClxR],[Q,ClxR,wiGB],[Q,ClxR,uUCb],[Q,ClxR,uUCb,wiGB],[Kla],[Kla,wiGB],[Kla,uUCb],[Kla,uUCb,wiGB],[Kla,ClxR],[Kla,ClxR,wiGB],[Kla,ClxR,uUCb],[Kla,ClxR,uUCb,wiGB],[Kla,Q],[Kla,Q,wiGB],[Kla,Q,uUCb],[Kla,Q,uUCb,wiGB],[Kla,Q,ClxR],[Kla,Q,ClxR,wiGB],[Kla,Q,ClxR,uUCb],[Kla,Q,ClxR,uUCb,wiGB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1204() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","w","vO","yMGW","nhF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nhF],[yMGW],[yMGW,nhF],[vO],[vO,nhF],[vO,yMGW],[vO,yMGW,nhF],[w],[w,nhF],[w,yMGW],[w,yMGW,nhF],[w,vO],[w,vO,nhF],[w,vO,yMGW],[w,vO,yMGW,nhF],[U],[U,nhF],[U,yMGW],[U,yMGW,nhF],[U,vO],[U,vO,nhF],[U,vO,yMGW],[U,vO,yMGW,nhF],[U,w],[U,w,nhF],[U,w,yMGW],[U,w,yMGW,nhF],[U,w,vO],[U,w,vO,nhF],[U,w,vO,yMGW],[U,w,vO,yMGW,nhF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1205() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uv","g","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[g],[g,w],[uv],[uv,w],[uv,g],[uv,g,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1206() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NO","Q","bqr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bqr],[Q],[Q,bqr],[NO],[NO,bqr],[NO,Q],[NO,Q,bqr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1207() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zore","bt","Rd","xvHNf","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[xvHNf],[xvHNf,h],[Rd],[Rd,h],[Rd,xvHNf],[Rd,xvHNf,h],[bt],[bt,h],[bt,xvHNf],[bt,xvHNf,h],[bt,Rd],[bt,Rd,h],[bt,Rd,xvHNf],[bt,Rd,xvHNf,h],[Zore],[Zore,h],[Zore,xvHNf],[Zore,xvHNf,h],[Zore,Rd],[Zore,Rd,h],[Zore,Rd,xvHNf],[Zore,Rd,xvHNf,h],[Zore,bt],[Zore,bt,h],[Zore,bt,xvHNf],[Zore,bt,xvHNf,h],[Zore,bt,Rd],[Zore,bt,Rd,h],[Zore,bt,Rd,xvHNf],[Zore,bt,Rd,xvHNf,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1208() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1209() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fEJNp","B","emuG","Nom")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nom],[emuG],[emuG,Nom],[B],[B,Nom],[B,emuG],[B,emuG,Nom],[fEJNp],[fEJNp,Nom],[fEJNp,emuG],[fEJNp,emuG,Nom],[fEJNp,B],[fEJNp,B,Nom],[fEJNp,B,emuG],[fEJNp,B,emuG,Nom]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1210() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NuY","t")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[t],[NuY],[NuY,t]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1211() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vhu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vhu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1212() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pqk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pqk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1213() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uYktH","UiUF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UiUF],[uYktH],[uYktH,UiUF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1214() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","GsXxd","FcRuV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FcRuV],[GsXxd],[GsXxd,FcRuV],[Q],[Q,FcRuV],[Q,GsXxd],[Q,GsXxd,FcRuV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1215() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cu","t","JD","Bmme")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bmme],[JD],[JD,Bmme],[t],[t,Bmme],[t,JD],[t,JD,Bmme],[Cu],[Cu,Bmme],[Cu,JD],[Cu,JD,Bmme],[Cu,t],[Cu,t,Bmme],[Cu,t,JD],[Cu,t,JD,Bmme]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1216() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","T","h","mEV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mEV],[h],[h,mEV],[T],[T,mEV],[T,h],[T,h,mEV],[s],[s,mEV],[s,h],[s,h,mEV],[s,T],[s,T,mEV],[s,T,h],[s,T,h,mEV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1217() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xvXb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xvXb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1218() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DCObp","blSEO","TNdEZ","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[TNdEZ],[TNdEZ,L],[blSEO],[blSEO,L],[blSEO,TNdEZ],[blSEO,TNdEZ,L],[DCObp],[DCObp,L],[DCObp,TNdEZ],[DCObp,TNdEZ,L],[DCObp,blSEO],[DCObp,blSEO,L],[DCObp,blSEO,TNdEZ],[DCObp,blSEO,TNdEZ,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1219() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","psS","Lu","TuogT","rlh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rlh],[TuogT],[TuogT,rlh],[Lu],[Lu,rlh],[Lu,TuogT],[Lu,TuogT,rlh],[psS],[psS,rlh],[psS,TuogT],[psS,TuogT,rlh],[psS,Lu],[psS,Lu,rlh],[psS,Lu,TuogT],[psS,Lu,TuogT,rlh],[P],[P,rlh],[P,TuogT],[P,TuogT,rlh],[P,Lu],[P,Lu,rlh],[P,Lu,TuogT],[P,Lu,TuogT,rlh],[P,psS],[P,psS,rlh],[P,psS,TuogT],[P,psS,TuogT,rlh],[P,psS,Lu],[P,psS,Lu,rlh],[P,psS,Lu,TuogT],[P,psS,Lu,TuogT,rlh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1220() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","bKGq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bKGq],[r],[r,bKGq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1221() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lL","Fj","lGczH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lGczH],[Fj],[Fj,lGczH],[lL],[lL,lGczH],[lL,Fj],[lL,Fj,lGczH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1222() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nn","BAKX","EK","cul","iX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iX],[cul],[cul,iX],[EK],[EK,iX],[EK,cul],[EK,cul,iX],[BAKX],[BAKX,iX],[BAKX,cul],[BAKX,cul,iX],[BAKX,EK],[BAKX,EK,iX],[BAKX,EK,cul],[BAKX,EK,cul,iX],[nn],[nn,iX],[nn,cul],[nn,cul,iX],[nn,EK],[nn,EK,iX],[nn,EK,cul],[nn,EK,cul,iX],[nn,BAKX],[nn,BAKX,iX],[nn,BAKX,cul],[nn,BAKX,cul,iX],[nn,BAKX,EK],[nn,BAKX,EK,iX],[nn,BAKX,EK,cul],[nn,BAKX,EK,cul,iX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1223() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lxCg","UtQkI","mhGK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mhGK],[UtQkI],[UtQkI,mhGK],[lxCg],[lxCg,mhGK],[lxCg,UtQkI],[lxCg,UtQkI,mhGK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1224() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","ZQE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZQE],[d],[d,ZQE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1225() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SBhKB","dFt","Tl","eMTrO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eMTrO],[Tl],[Tl,eMTrO],[dFt],[dFt,eMTrO],[dFt,Tl],[dFt,Tl,eMTrO],[SBhKB],[SBhKB,eMTrO],[SBhKB,Tl],[SBhKB,Tl,eMTrO],[SBhKB,dFt],[SBhKB,dFt,eMTrO],[SBhKB,dFt,Tl],[SBhKB,dFt,Tl,eMTrO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1226() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tyrg","Tz","Arkp","XbXA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XbXA],[Arkp],[Arkp,XbXA],[Tz],[Tz,XbXA],[Tz,Arkp],[Tz,Arkp,XbXA],[Tyrg],[Tyrg,XbXA],[Tyrg,Arkp],[Tyrg,Arkp,XbXA],[Tyrg,Tz],[Tyrg,Tz,XbXA],[Tyrg,Tz,Arkp],[Tyrg,Tz,Arkp,XbXA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1227() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wXvOm","XRwm","AsO","GqJn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GqJn],[AsO],[AsO,GqJn],[XRwm],[XRwm,GqJn],[XRwm,AsO],[XRwm,AsO,GqJn],[wXvOm],[wXvOm,GqJn],[wXvOm,AsO],[wXvOm,AsO,GqJn],[wXvOm,XRwm],[wXvOm,XRwm,GqJn],[wXvOm,XRwm,AsO],[wXvOm,XRwm,AsO,GqJn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1228() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vvD","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[vvD],[vvD,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1229() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","xKZZ","Y","pY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pY],[Y],[Y,pY],[xKZZ],[xKZZ,pY],[xKZZ,Y],[xKZZ,Y,pY],[p],[p,pY],[p,Y],[p,Y,pY],[p,xKZZ],[p,xKZZ,pY],[p,xKZZ,Y],[p,xKZZ,Y,pY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1230() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LYKFQ","tYZAv","OcM","dSVLv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dSVLv],[OcM],[OcM,dSVLv],[tYZAv],[tYZAv,dSVLv],[tYZAv,OcM],[tYZAv,OcM,dSVLv],[LYKFQ],[LYKFQ,dSVLv],[LYKFQ,OcM],[LYKFQ,OcM,dSVLv],[LYKFQ,tYZAv],[LYKFQ,tYZAv,dSVLv],[LYKFQ,tYZAv,OcM],[LYKFQ,tYZAv,OcM,dSVLv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1231() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oWYQ","or","exhLj","SswF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SswF],[exhLj],[exhLj,SswF],[or],[or,SswF],[or,exhLj],[or,exhLj,SswF],[oWYQ],[oWYQ,SswF],[oWYQ,exhLj],[oWYQ,exhLj,SswF],[oWYQ,or],[oWYQ,or,SswF],[oWYQ,or,exhLj],[oWYQ,or,exhLj,SswF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1232() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nGxdU","rZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rZ],[nGxdU],[nGxdU,rZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1233() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pfgRT","wu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wu],[pfgRT],[pfgRT,wu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1234() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1235() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rVZw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rVZw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1236() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kK","fj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fj],[kK],[kK,fj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1237() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ipjcL","Cu","Yxr","kGdj","UJvJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UJvJ],[kGdj],[kGdj,UJvJ],[Yxr],[Yxr,UJvJ],[Yxr,kGdj],[Yxr,kGdj,UJvJ],[Cu],[Cu,UJvJ],[Cu,kGdj],[Cu,kGdj,UJvJ],[Cu,Yxr],[Cu,Yxr,UJvJ],[Cu,Yxr,kGdj],[Cu,Yxr,kGdj,UJvJ],[ipjcL],[ipjcL,UJvJ],[ipjcL,kGdj],[ipjcL,kGdj,UJvJ],[ipjcL,Yxr],[ipjcL,Yxr,UJvJ],[ipjcL,Yxr,kGdj],[ipjcL,Yxr,kGdj,UJvJ],[ipjcL,Cu],[ipjcL,Cu,UJvJ],[ipjcL,Cu,kGdj],[ipjcL,Cu,kGdj,UJvJ],[ipjcL,Cu,Yxr],[ipjcL,Cu,Yxr,UJvJ],[ipjcL,Cu,Yxr,kGdj],[ipjcL,Cu,Yxr,kGdj,UJvJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1238() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","Srqol","KDouZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KDouZ],[Srqol],[Srqol,KDouZ],[S],[S,KDouZ],[S,Srqol],[S,Srqol,KDouZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1239() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1240() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hrRaT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hrRaT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1241() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","lB","DRNX","KG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KG],[DRNX],[DRNX,KG],[lB],[lB,KG],[lB,DRNX],[lB,DRNX,KG],[d],[d,KG],[d,DRNX],[d,DRNX,KG],[d,lB],[d,lB,KG],[d,lB,DRNX],[d,lB,DRNX,KG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1242() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","BPBHQ","Vu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vu],[BPBHQ],[BPBHQ,Vu],[q],[q,Vu],[q,BPBHQ],[q,BPBHQ,Vu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1243() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yrez","btwn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[btwn],[yrez],[yrez,btwn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1244() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ipR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ipR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1245() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jchoE","xqZzW","YdsG","Ame","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[Ame],[Ame,Y],[YdsG],[YdsG,Y],[YdsG,Ame],[YdsG,Ame,Y],[xqZzW],[xqZzW,Y],[xqZzW,Ame],[xqZzW,Ame,Y],[xqZzW,YdsG],[xqZzW,YdsG,Y],[xqZzW,YdsG,Ame],[xqZzW,YdsG,Ame,Y],[jchoE],[jchoE,Y],[jchoE,Ame],[jchoE,Ame,Y],[jchoE,YdsG],[jchoE,YdsG,Y],[jchoE,YdsG,Ame],[jchoE,YdsG,Ame,Y],[jchoE,xqZzW],[jchoE,xqZzW,Y],[jchoE,xqZzW,Ame],[jchoE,xqZzW,Ame,Y],[jchoE,xqZzW,YdsG],[jchoE,xqZzW,YdsG,Y],[jchoE,xqZzW,YdsG,Ame],[jchoE,xqZzW,YdsG,Ame,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1246() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1247() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","QRF","WCRs","Sn","Lh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lh],[Sn],[Sn,Lh],[WCRs],[WCRs,Lh],[WCRs,Sn],[WCRs,Sn,Lh],[QRF],[QRF,Lh],[QRF,Sn],[QRF,Sn,Lh],[QRF,WCRs],[QRF,WCRs,Lh],[QRF,WCRs,Sn],[QRF,WCRs,Sn,Lh],[Q],[Q,Lh],[Q,Sn],[Q,Sn,Lh],[Q,WCRs],[Q,WCRs,Lh],[Q,WCRs,Sn],[Q,WCRs,Sn,Lh],[Q,QRF],[Q,QRF,Lh],[Q,QRF,Sn],[Q,QRF,Sn,Lh],[Q,QRF,WCRs],[Q,QRF,WCRs,Lh],[Q,QRF,WCRs,Sn],[Q,QRF,WCRs,Sn,Lh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1248() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kchS","ZXJY","lwuE","mkDU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mkDU],[lwuE],[lwuE,mkDU],[ZXJY],[ZXJY,mkDU],[ZXJY,lwuE],[ZXJY,lwuE,mkDU],[kchS],[kchS,mkDU],[kchS,lwuE],[kchS,lwuE,mkDU],[kchS,ZXJY],[kchS,ZXJY,mkDU],[kchS,ZXJY,lwuE],[kchS,ZXJY,lwuE,mkDU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1249() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","Pw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pw],[U],[U,Pw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1250() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vcauJ","t","Mc","MOyI","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[MOyI],[MOyI,Y],[Mc],[Mc,Y],[Mc,MOyI],[Mc,MOyI,Y],[t],[t,Y],[t,MOyI],[t,MOyI,Y],[t,Mc],[t,Mc,Y],[t,Mc,MOyI],[t,Mc,MOyI,Y],[vcauJ],[vcauJ,Y],[vcauJ,MOyI],[vcauJ,MOyI,Y],[vcauJ,Mc],[vcauJ,Mc,Y],[vcauJ,Mc,MOyI],[vcauJ,Mc,MOyI,Y],[vcauJ,t],[vcauJ,t,Y],[vcauJ,t,MOyI],[vcauJ,t,MOyI,Y],[vcauJ,t,Mc],[vcauJ,t,Mc,Y],[vcauJ,t,Mc,MOyI],[vcauJ,t,Mc,MOyI,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1251() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OrZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OrZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1252() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","c","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[c],[c,L],[p],[p,L],[p,c],[p,c,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1253() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NZUhC","H","ZWx","KpA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KpA],[ZWx],[ZWx,KpA],[H],[H,KpA],[H,ZWx],[H,ZWx,KpA],[NZUhC],[NZUhC,KpA],[NZUhC,ZWx],[NZUhC,ZWx,KpA],[NZUhC,H],[NZUhC,H,KpA],[NZUhC,H,ZWx],[NZUhC,H,ZWx,KpA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1254() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BtGs","R","Oyr","MRbj","aSP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aSP],[MRbj],[MRbj,aSP],[Oyr],[Oyr,aSP],[Oyr,MRbj],[Oyr,MRbj,aSP],[R],[R,aSP],[R,MRbj],[R,MRbj,aSP],[R,Oyr],[R,Oyr,aSP],[R,Oyr,MRbj],[R,Oyr,MRbj,aSP],[BtGs],[BtGs,aSP],[BtGs,MRbj],[BtGs,MRbj,aSP],[BtGs,Oyr],[BtGs,Oyr,aSP],[BtGs,Oyr,MRbj],[BtGs,Oyr,MRbj,aSP],[BtGs,R],[BtGs,R,aSP],[BtGs,R,MRbj],[BtGs,R,MRbj,aSP],[BtGs,R,Oyr],[BtGs,R,Oyr,aSP],[BtGs,R,Oyr,MRbj],[BtGs,R,Oyr,MRbj,aSP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1255() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lB","skHk","DmyiX","fEev")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fEev],[DmyiX],[DmyiX,fEev],[skHk],[skHk,fEev],[skHk,DmyiX],[skHk,DmyiX,fEev],[lB],[lB,fEev],[lB,DmyiX],[lB,DmyiX,fEev],[lB,skHk],[lB,skHk,fEev],[lB,skHk,DmyiX],[lB,skHk,DmyiX,fEev]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1256() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","aPU","xrhu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xrhu],[aPU],[aPU,xrhu],[t],[t,xrhu],[t,aPU],[t,aPU,xrhu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1257() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SU","Xj","r","eXUbb","EQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EQ],[eXUbb],[eXUbb,EQ],[r],[r,EQ],[r,eXUbb],[r,eXUbb,EQ],[Xj],[Xj,EQ],[Xj,eXUbb],[Xj,eXUbb,EQ],[Xj,r],[Xj,r,EQ],[Xj,r,eXUbb],[Xj,r,eXUbb,EQ],[SU],[SU,EQ],[SU,eXUbb],[SU,eXUbb,EQ],[SU,r],[SU,r,EQ],[SU,r,eXUbb],[SU,r,eXUbb,EQ],[SU,Xj],[SU,Xj,EQ],[SU,Xj,eXUbb],[SU,Xj,eXUbb,EQ],[SU,Xj,r],[SU,Xj,r,EQ],[SU,Xj,r,eXUbb],[SU,Xj,r,eXUbb,EQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1258() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OiYuu","Yxbac")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yxbac],[OiYuu],[OiYuu,Yxbac]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1259() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gtuzu","OlXc","qWrU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qWrU],[OlXc],[OlXc,qWrU],[Gtuzu],[Gtuzu,qWrU],[Gtuzu,OlXc],[Gtuzu,OlXc,qWrU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1260() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1261() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BtqXS","OBE","D","po","ewokf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ewokf],[po],[po,ewokf],[D],[D,ewokf],[D,po],[D,po,ewokf],[OBE],[OBE,ewokf],[OBE,po],[OBE,po,ewokf],[OBE,D],[OBE,D,ewokf],[OBE,D,po],[OBE,D,po,ewokf],[BtqXS],[BtqXS,ewokf],[BtqXS,po],[BtqXS,po,ewokf],[BtqXS,D],[BtqXS,D,ewokf],[BtqXS,D,po],[BtqXS,D,po,ewokf],[BtqXS,OBE],[BtqXS,OBE,ewokf],[BtqXS,OBE,po],[BtqXS,OBE,po,ewokf],[BtqXS,OBE,D],[BtqXS,OBE,D,ewokf],[BtqXS,OBE,D,po],[BtqXS,OBE,D,po,ewokf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1262() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1263() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gQVM","V","ZqlXF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZqlXF],[V],[V,ZqlXF],[gQVM],[gQVM,ZqlXF],[gQVM,V],[gQVM,V,ZqlXF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1264() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nJHo","tWgy","UTkRl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UTkRl],[tWgy],[tWgy,UTkRl],[nJHo],[nJHo,UTkRl],[nJHo,tWgy],[nJHo,tWgy,UTkRl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1265() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "os","lMgp","J","Ozi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ozi],[J],[J,Ozi],[lMgp],[lMgp,Ozi],[lMgp,J],[lMgp,J,Ozi],[os],[os,Ozi],[os,J],[os,J,Ozi],[os,lMgp],[os,lMgp,Ozi],[os,lMgp,J],[os,lMgp,J,Ozi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1266() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "St","Croh","esi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[esi],[Croh],[Croh,esi],[St],[St,esi],[St,Croh],[St,Croh,esi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1267() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dPc","J","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[J],[J,N],[dPc],[dPc,N],[dPc,J],[dPc,J,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1268() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qOEb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qOEb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1269() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jFlA","yGi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yGi],[jFlA],[jFlA,yGi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1270() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cATQp","v","tvO","fu","EAGpj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EAGpj],[fu],[fu,EAGpj],[tvO],[tvO,EAGpj],[tvO,fu],[tvO,fu,EAGpj],[v],[v,EAGpj],[v,fu],[v,fu,EAGpj],[v,tvO],[v,tvO,EAGpj],[v,tvO,fu],[v,tvO,fu,EAGpj],[cATQp],[cATQp,EAGpj],[cATQp,fu],[cATQp,fu,EAGpj],[cATQp,tvO],[cATQp,tvO,EAGpj],[cATQp,tvO,fu],[cATQp,tvO,fu,EAGpj],[cATQp,v],[cATQp,v,EAGpj],[cATQp,v,fu],[cATQp,v,fu,EAGpj],[cATQp,v,tvO],[cATQp,v,tvO,EAGpj],[cATQp,v,tvO,fu],[cATQp,v,tvO,fu,EAGpj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1271() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","dv","upnB","cqPKA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cqPKA],[upnB],[upnB,cqPKA],[dv],[dv,cqPKA],[dv,upnB],[dv,upnB,cqPKA],[p],[p,cqPKA],[p,upnB],[p,upnB,cqPKA],[p,dv],[p,dv,cqPKA],[p,dv,upnB],[p,dv,upnB,cqPKA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1272() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DIWLM","HyMkz","i","ePH","exUC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[exUC],[ePH],[ePH,exUC],[i],[i,exUC],[i,ePH],[i,ePH,exUC],[HyMkz],[HyMkz,exUC],[HyMkz,ePH],[HyMkz,ePH,exUC],[HyMkz,i],[HyMkz,i,exUC],[HyMkz,i,ePH],[HyMkz,i,ePH,exUC],[DIWLM],[DIWLM,exUC],[DIWLM,ePH],[DIWLM,ePH,exUC],[DIWLM,i],[DIWLM,i,exUC],[DIWLM,i,ePH],[DIWLM,i,ePH,exUC],[DIWLM,HyMkz],[DIWLM,HyMkz,exUC],[DIWLM,HyMkz,ePH],[DIWLM,HyMkz,ePH,exUC],[DIWLM,HyMkz,i],[DIWLM,HyMkz,i,exUC],[DIWLM,HyMkz,i,ePH],[DIWLM,HyMkz,i,ePH,exUC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1273() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iUAe","vLcG","lZ","Yw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yw],[lZ],[lZ,Yw],[vLcG],[vLcG,Yw],[vLcG,lZ],[vLcG,lZ,Yw],[iUAe],[iUAe,Yw],[iUAe,lZ],[iUAe,lZ,Yw],[iUAe,vLcG],[iUAe,vLcG,Yw],[iUAe,vLcG,lZ],[iUAe,vLcG,lZ,Yw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1274() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wczT","uzH","dAqA","zbM","GPB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GPB],[zbM],[zbM,GPB],[dAqA],[dAqA,GPB],[dAqA,zbM],[dAqA,zbM,GPB],[uzH],[uzH,GPB],[uzH,zbM],[uzH,zbM,GPB],[uzH,dAqA],[uzH,dAqA,GPB],[uzH,dAqA,zbM],[uzH,dAqA,zbM,GPB],[wczT],[wczT,GPB],[wczT,zbM],[wczT,zbM,GPB],[wczT,dAqA],[wczT,dAqA,GPB],[wczT,dAqA,zbM],[wczT,dAqA,zbM,GPB],[wczT,uzH],[wczT,uzH,GPB],[wczT,uzH,zbM],[wczT,uzH,zbM,GPB],[wczT,uzH,dAqA],[wczT,uzH,dAqA,GPB],[wczT,uzH,dAqA,zbM],[wczT,uzH,dAqA,zbM,GPB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1275() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WUuRM","cWmDO","BFo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BFo],[cWmDO],[cWmDO,BFo],[WUuRM],[WUuRM,BFo],[WUuRM,cWmDO],[WUuRM,cWmDO,BFo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1276() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PzsYK","fb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fb],[PzsYK],[PzsYK,fb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1277() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xz","R","jyJ","qMj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qMj],[jyJ],[jyJ,qMj],[R],[R,qMj],[R,jyJ],[R,jyJ,qMj],[Xz],[Xz,qMj],[Xz,jyJ],[Xz,jyJ,qMj],[Xz,R],[Xz,R,qMj],[Xz,R,jyJ],[Xz,R,jyJ,qMj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1278() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","wbQPC","oW","VzS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VzS],[oW],[oW,VzS],[wbQPC],[wbQPC,VzS],[wbQPC,oW],[wbQPC,oW,VzS],[b],[b,VzS],[b,oW],[b,oW,VzS],[b,wbQPC],[b,wbQPC,VzS],[b,wbQPC,oW],[b,wbQPC,oW,VzS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1279() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AUf","c","FT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FT],[c],[c,FT],[AUf],[AUf,FT],[AUf,c],[AUf,c,FT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1280() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bu","AdEH","aRZl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aRZl],[AdEH],[AdEH,aRZl],[Bu],[Bu,aRZl],[Bu,AdEH],[Bu,AdEH,aRZl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1281() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VCO","D","rl","VBQL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VBQL],[rl],[rl,VBQL],[D],[D,VBQL],[D,rl],[D,rl,VBQL],[VCO],[VCO,VBQL],[VCO,rl],[VCO,rl,VBQL],[VCO,D],[VCO,D,VBQL],[VCO,D,rl],[VCO,D,rl,VBQL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1282() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bXH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bXH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1283() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","Wj","Ip","ku")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ku],[Ip],[Ip,ku],[Wj],[Wj,ku],[Wj,Ip],[Wj,Ip,ku],[b],[b,ku],[b,Ip],[b,Ip,ku],[b,Wj],[b,Wj,ku],[b,Wj,Ip],[b,Wj,Ip,ku]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1284() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HkTkD","yYu","u","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[u],[u,G],[yYu],[yYu,G],[yYu,u],[yYu,u,G],[HkTkD],[HkTkD,G],[HkTkD,u],[HkTkD,u,G],[HkTkD,yYu],[HkTkD,yYu,G],[HkTkD,yYu,u],[HkTkD,yYu,u,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1285() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "chwIH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[chwIH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1286() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tSDla","SfM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SfM],[tSDla],[tSDla,SfM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1287() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LSzOm","SDvPU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SDvPU],[LSzOm],[LSzOm,SDvPU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1288() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ERHCz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ERHCz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1289() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tsgo","T","YHhE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YHhE],[T],[T,YHhE],[tsgo],[tsgo,YHhE],[tsgo,T],[tsgo,T,YHhE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1290() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","q","VcO","QjBI","ryFfX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ryFfX],[QjBI],[QjBI,ryFfX],[VcO],[VcO,ryFfX],[VcO,QjBI],[VcO,QjBI,ryFfX],[q],[q,ryFfX],[q,QjBI],[q,QjBI,ryFfX],[q,VcO],[q,VcO,ryFfX],[q,VcO,QjBI],[q,VcO,QjBI,ryFfX],[a],[a,ryFfX],[a,QjBI],[a,QjBI,ryFfX],[a,VcO],[a,VcO,ryFfX],[a,VcO,QjBI],[a,VcO,QjBI,ryFfX],[a,q],[a,q,ryFfX],[a,q,QjBI],[a,q,QjBI,ryFfX],[a,q,VcO],[a,q,VcO,ryFfX],[a,q,VcO,QjBI],[a,q,VcO,QjBI,ryFfX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1291() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1292() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lNU","Tys")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tys],[lNU],[lNU,Tys]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1293() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zabyQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zabyQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1294() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","kjrM","bVjG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bVjG],[kjrM],[kjrM,bVjG],[E],[E,bVjG],[E,kjrM],[E,kjrM,bVjG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1295() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","Oh","wC","SuDM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SuDM],[wC],[wC,SuDM],[Oh],[Oh,SuDM],[Oh,wC],[Oh,wC,SuDM],[B],[B,SuDM],[B,wC],[B,wC,SuDM],[B,Oh],[B,Oh,SuDM],[B,Oh,wC],[B,Oh,wC,SuDM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1296() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vlqc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vlqc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1297() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cw","vnn","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[vnn],[vnn,w],[cw],[cw,w],[cw,vnn],[cw,vnn,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1298() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","g","izneV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[izneV],[g],[g,izneV],[R],[R,izneV],[R,g],[R,g,izneV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1299() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xbR","iNAcg","Dwrm","bOGAM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bOGAM],[Dwrm],[Dwrm,bOGAM],[iNAcg],[iNAcg,bOGAM],[iNAcg,Dwrm],[iNAcg,Dwrm,bOGAM],[xbR],[xbR,bOGAM],[xbR,Dwrm],[xbR,Dwrm,bOGAM],[xbR,iNAcg],[xbR,iNAcg,bOGAM],[xbR,iNAcg,Dwrm],[xbR,iNAcg,Dwrm,bOGAM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1300() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zevkz","ZONy","vjqf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vjqf],[ZONy],[ZONy,vjqf],[Zevkz],[Zevkz,vjqf],[Zevkz,ZONy],[Zevkz,ZONy,vjqf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1301() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FUQLJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FUQLJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1302() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","R","eJ","CKTd","evMbw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[evMbw],[CKTd],[CKTd,evMbw],[eJ],[eJ,evMbw],[eJ,CKTd],[eJ,CKTd,evMbw],[R],[R,evMbw],[R,CKTd],[R,CKTd,evMbw],[R,eJ],[R,eJ,evMbw],[R,eJ,CKTd],[R,eJ,CKTd,evMbw],[Q],[Q,evMbw],[Q,CKTd],[Q,CKTd,evMbw],[Q,eJ],[Q,eJ,evMbw],[Q,eJ,CKTd],[Q,eJ,CKTd,evMbw],[Q,R],[Q,R,evMbw],[Q,R,CKTd],[Q,R,CKTd,evMbw],[Q,R,eJ],[Q,R,eJ,evMbw],[Q,R,eJ,CKTd],[Q,R,eJ,CKTd,evMbw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1303() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pecO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pecO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1304() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nS","f","G","Qi","MZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MZ],[Qi],[Qi,MZ],[G],[G,MZ],[G,Qi],[G,Qi,MZ],[f],[f,MZ],[f,Qi],[f,Qi,MZ],[f,G],[f,G,MZ],[f,G,Qi],[f,G,Qi,MZ],[nS],[nS,MZ],[nS,Qi],[nS,Qi,MZ],[nS,G],[nS,G,MZ],[nS,G,Qi],[nS,G,Qi,MZ],[nS,f],[nS,f,MZ],[nS,f,Qi],[nS,f,Qi,MZ],[nS,f,G],[nS,f,G,MZ],[nS,f,G,Qi],[nS,f,G,Qi,MZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1305() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","g","jA","gQe","FYLcr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FYLcr],[gQe],[gQe,FYLcr],[jA],[jA,FYLcr],[jA,gQe],[jA,gQe,FYLcr],[g],[g,FYLcr],[g,gQe],[g,gQe,FYLcr],[g,jA],[g,jA,FYLcr],[g,jA,gQe],[g,jA,gQe,FYLcr],[B],[B,FYLcr],[B,gQe],[B,gQe,FYLcr],[B,jA],[B,jA,FYLcr],[B,jA,gQe],[B,jA,gQe,FYLcr],[B,g],[B,g,FYLcr],[B,g,gQe],[B,g,gQe,FYLcr],[B,g,jA],[B,g,jA,FYLcr],[B,g,jA,gQe],[B,g,jA,gQe,FYLcr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1306() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ruU","bEgd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bEgd],[ruU],[ruU,bEgd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1307() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","t","xYbkZ","wHBnU","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[wHBnU],[wHBnU,W],[xYbkZ],[xYbkZ,W],[xYbkZ,wHBnU],[xYbkZ,wHBnU,W],[t],[t,W],[t,wHBnU],[t,wHBnU,W],[t,xYbkZ],[t,xYbkZ,W],[t,xYbkZ,wHBnU],[t,xYbkZ,wHBnU,W],[B],[B,W],[B,wHBnU],[B,wHBnU,W],[B,xYbkZ],[B,xYbkZ,W],[B,xYbkZ,wHBnU],[B,xYbkZ,wHBnU,W],[B,t],[B,t,W],[B,t,wHBnU],[B,t,wHBnU,W],[B,t,xYbkZ],[B,t,xYbkZ,W],[B,t,xYbkZ,wHBnU],[B,t,xYbkZ,wHBnU,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1308() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IgPxG","f","epQ","vKkN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vKkN],[epQ],[epQ,vKkN],[f],[f,vKkN],[f,epQ],[f,epQ,vKkN],[IgPxG],[IgPxG,vKkN],[IgPxG,epQ],[IgPxG,epQ,vKkN],[IgPxG,f],[IgPxG,f,vKkN],[IgPxG,f,epQ],[IgPxG,f,epQ,vKkN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1309() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QTZWy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QTZWy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1310() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XRkw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XRkw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1311() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FJI","GwlCR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GwlCR],[FJI],[FJI,GwlCR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1312() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HY","b","f","cYnbj","ZWkUj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZWkUj],[cYnbj],[cYnbj,ZWkUj],[f],[f,ZWkUj],[f,cYnbj],[f,cYnbj,ZWkUj],[b],[b,ZWkUj],[b,cYnbj],[b,cYnbj,ZWkUj],[b,f],[b,f,ZWkUj],[b,f,cYnbj],[b,f,cYnbj,ZWkUj],[HY],[HY,ZWkUj],[HY,cYnbj],[HY,cYnbj,ZWkUj],[HY,f],[HY,f,ZWkUj],[HY,f,cYnbj],[HY,f,cYnbj,ZWkUj],[HY,b],[HY,b,ZWkUj],[HY,b,cYnbj],[HY,b,cYnbj,ZWkUj],[HY,b,f],[HY,b,f,ZWkUj],[HY,b,f,cYnbj],[HY,b,f,cYnbj,ZWkUj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1313() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","EW","bKoe","MtnYw","gBX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gBX],[MtnYw],[MtnYw,gBX],[bKoe],[bKoe,gBX],[bKoe,MtnYw],[bKoe,MtnYw,gBX],[EW],[EW,gBX],[EW,MtnYw],[EW,MtnYw,gBX],[EW,bKoe],[EW,bKoe,gBX],[EW,bKoe,MtnYw],[EW,bKoe,MtnYw,gBX],[A],[A,gBX],[A,MtnYw],[A,MtnYw,gBX],[A,bKoe],[A,bKoe,gBX],[A,bKoe,MtnYw],[A,bKoe,MtnYw,gBX],[A,EW],[A,EW,gBX],[A,EW,MtnYw],[A,EW,MtnYw,gBX],[A,EW,bKoe],[A,EW,bKoe,gBX],[A,EW,bKoe,MtnYw],[A,EW,bKoe,MtnYw,gBX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1314() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dRYx","i","pN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pN],[i],[i,pN],[dRYx],[dRYx,pN],[dRYx,i],[dRYx,i,pN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1315() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TFvBu","W","vVnxI","Eb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Eb],[vVnxI],[vVnxI,Eb],[W],[W,Eb],[W,vVnxI],[W,vVnxI,Eb],[TFvBu],[TFvBu,Eb],[TFvBu,vVnxI],[TFvBu,vVnxI,Eb],[TFvBu,W],[TFvBu,W,Eb],[TFvBu,W,vVnxI],[TFvBu,W,vVnxI,Eb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1316() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Raj","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[Raj],[Raj,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1317() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","hRN","VfcV","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[VfcV],[VfcV,m],[hRN],[hRN,m],[hRN,VfcV],[hRN,VfcV,m],[e],[e,m],[e,VfcV],[e,VfcV,m],[e,hRN],[e,hRN,m],[e,hRN,VfcV],[e,hRN,VfcV,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1318() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","YHg","SOg","dZu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dZu],[SOg],[SOg,dZu],[YHg],[YHg,dZu],[YHg,SOg],[YHg,SOg,dZu],[s],[s,dZu],[s,SOg],[s,SOg,dZu],[s,YHg],[s,YHg,dZu],[s,YHg,SOg],[s,YHg,SOg,dZu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1319() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tIWG","nC","bH","aia")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aia],[bH],[bH,aia],[nC],[nC,aia],[nC,bH],[nC,bH,aia],[tIWG],[tIWG,aia],[tIWG,bH],[tIWG,bH,aia],[tIWG,nC],[tIWG,nC,aia],[tIWG,nC,bH],[tIWG,nC,bH,aia]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1320() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","eZn","CoLJU","JS","davXp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[davXp],[JS],[JS,davXp],[CoLJU],[CoLJU,davXp],[CoLJU,JS],[CoLJU,JS,davXp],[eZn],[eZn,davXp],[eZn,JS],[eZn,JS,davXp],[eZn,CoLJU],[eZn,CoLJU,davXp],[eZn,CoLJU,JS],[eZn,CoLJU,JS,davXp],[t],[t,davXp],[t,JS],[t,JS,davXp],[t,CoLJU],[t,CoLJU,davXp],[t,CoLJU,JS],[t,CoLJU,JS,davXp],[t,eZn],[t,eZn,davXp],[t,eZn,JS],[t,eZn,JS,davXp],[t,eZn,CoLJU],[t,eZn,CoLJU,davXp],[t,eZn,CoLJU,JS],[t,eZn,CoLJU,JS,davXp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1321() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sgOeW","fWK","mI","kct")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kct],[mI],[mI,kct],[fWK],[fWK,kct],[fWK,mI],[fWK,mI,kct],[sgOeW],[sgOeW,kct],[sgOeW,mI],[sgOeW,mI,kct],[sgOeW,fWK],[sgOeW,fWK,kct],[sgOeW,fWK,mI],[sgOeW,fWK,mI,kct]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1322() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vv","q","WkvG","PBa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PBa],[WkvG],[WkvG,PBa],[q],[q,PBa],[q,WkvG],[q,WkvG,PBa],[vv],[vv,PBa],[vv,WkvG],[vv,WkvG,PBa],[vv,q],[vv,q,PBa],[vv,q,WkvG],[vv,q,WkvG,PBa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1323() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1324() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wtCGJ","NjKx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NjKx],[wtCGJ],[wtCGJ,NjKx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1325() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pa","HHGci","GqXBd","vHQFu","Wf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wf],[vHQFu],[vHQFu,Wf],[GqXBd],[GqXBd,Wf],[GqXBd,vHQFu],[GqXBd,vHQFu,Wf],[HHGci],[HHGci,Wf],[HHGci,vHQFu],[HHGci,vHQFu,Wf],[HHGci,GqXBd],[HHGci,GqXBd,Wf],[HHGci,GqXBd,vHQFu],[HHGci,GqXBd,vHQFu,Wf],[pa],[pa,Wf],[pa,vHQFu],[pa,vHQFu,Wf],[pa,GqXBd],[pa,GqXBd,Wf],[pa,GqXBd,vHQFu],[pa,GqXBd,vHQFu,Wf],[pa,HHGci],[pa,HHGci,Wf],[pa,HHGci,vHQFu],[pa,HHGci,vHQFu,Wf],[pa,HHGci,GqXBd],[pa,HHGci,GqXBd,Wf],[pa,HHGci,GqXBd,vHQFu],[pa,HHGci,GqXBd,vHQFu,Wf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1326() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RGw","uhY","glhK","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[glhK],[glhK,l],[uhY],[uhY,l],[uhY,glhK],[uhY,glhK,l],[RGw],[RGw,l],[RGw,glhK],[RGw,glhK,l],[RGw,uhY],[RGw,uhY,l],[RGw,uhY,glhK],[RGw,uhY,glhK,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1327() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CVG","iBJl","NFw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NFw],[iBJl],[iBJl,NFw],[CVG],[CVG,NFw],[CVG,iBJl],[CVG,iBJl,NFw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1328() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lDOk","UTDm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UTDm],[lDOk],[lDOk,UTDm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1329() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","AVVI","K","AtMcp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AtMcp],[K],[K,AtMcp],[AVVI],[AVVI,AtMcp],[AVVI,K],[AVVI,K,AtMcp],[U],[U,AtMcp],[U,K],[U,K,AtMcp],[U,AVVI],[U,AVVI,AtMcp],[U,AVVI,K],[U,AVVI,K,AtMcp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1330() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","xXyaZ","Yfg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yfg],[xXyaZ],[xXyaZ,Yfg],[u],[u,Yfg],[u,xXyaZ],[u,xXyaZ,Yfg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1331() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zJb","UuG","EToG","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[EToG],[EToG,G],[UuG],[UuG,G],[UuG,EToG],[UuG,EToG,G],[zJb],[zJb,G],[zJb,EToG],[zJb,EToG,G],[zJb,UuG],[zJb,UuG,G],[zJb,UuG,EToG],[zJb,UuG,EToG,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1332() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GJ","qVi","Cm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cm],[qVi],[qVi,Cm],[GJ],[GJ,Cm],[GJ,qVi],[GJ,qVi,Cm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1333() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MhN","wPO","tlMQ","YzYL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YzYL],[tlMQ],[tlMQ,YzYL],[wPO],[wPO,YzYL],[wPO,tlMQ],[wPO,tlMQ,YzYL],[MhN],[MhN,YzYL],[MhN,tlMQ],[MhN,tlMQ,YzYL],[MhN,wPO],[MhN,wPO,YzYL],[MhN,wPO,tlMQ],[MhN,wPO,tlMQ,YzYL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1334() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jUF","QiAZN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QiAZN],[jUF],[jUF,QiAZN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1335() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","pl","KadUY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KadUY],[pl],[pl,KadUY],[b],[b,KadUY],[b,pl],[b,pl,KadUY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1336() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lpxi","Ojk","CHx","vi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vi],[CHx],[CHx,vi],[Ojk],[Ojk,vi],[Ojk,CHx],[Ojk,CHx,vi],[Lpxi],[Lpxi,vi],[Lpxi,CHx],[Lpxi,CHx,vi],[Lpxi,Ojk],[Lpxi,Ojk,vi],[Lpxi,Ojk,CHx],[Lpxi,Ojk,CHx,vi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1337() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[Y],[Y,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1338() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1339() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "og","XpC","Iaar")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Iaar],[XpC],[XpC,Iaar],[og],[og,Iaar],[og,XpC],[og,XpC,Iaar]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1340() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KTB","dsJKz","GJKT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GJKT],[dsJKz],[dsJKz,GJKT],[KTB],[KTB,GJKT],[KTB,dsJKz],[KTB,dsJKz,GJKT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1341() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xoH","Tx","VBBk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VBBk],[Tx],[Tx,VBBk],[xoH],[xoH,VBBk],[xoH,Tx],[xoH,Tx,VBBk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1342() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NQudt","awJNE","L","Quc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Quc],[L],[L,Quc],[awJNE],[awJNE,Quc],[awJNE,L],[awJNE,L,Quc],[NQudt],[NQudt,Quc],[NQudt,L],[NQudt,L,Quc],[NQudt,awJNE],[NQudt,awJNE,Quc],[NQudt,awJNE,L],[NQudt,awJNE,L,Quc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1343() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bPUey","r","CUKD","MD","roRP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[roRP],[MD],[MD,roRP],[CUKD],[CUKD,roRP],[CUKD,MD],[CUKD,MD,roRP],[r],[r,roRP],[r,MD],[r,MD,roRP],[r,CUKD],[r,CUKD,roRP],[r,CUKD,MD],[r,CUKD,MD,roRP],[bPUey],[bPUey,roRP],[bPUey,MD],[bPUey,MD,roRP],[bPUey,CUKD],[bPUey,CUKD,roRP],[bPUey,CUKD,MD],[bPUey,CUKD,MD,roRP],[bPUey,r],[bPUey,r,roRP],[bPUey,r,MD],[bPUey,r,MD,roRP],[bPUey,r,CUKD],[bPUey,r,CUKD,roRP],[bPUey,r,CUKD,MD],[bPUey,r,CUKD,MD,roRP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1344() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","Ut")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ut],[R],[R,Ut]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1345() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","Ls")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ls],[p],[p,Ls]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1346() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aq","JtFUs","DP","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[DP],[DP,m],[JtFUs],[JtFUs,m],[JtFUs,DP],[JtFUs,DP,m],[Aq],[Aq,m],[Aq,DP],[Aq,DP,m],[Aq,JtFUs],[Aq,JtFUs,m],[Aq,JtFUs,DP],[Aq,JtFUs,DP,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1347() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","GZ","d","SQE","yZn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yZn],[SQE],[SQE,yZn],[d],[d,yZn],[d,SQE],[d,SQE,yZn],[GZ],[GZ,yZn],[GZ,SQE],[GZ,SQE,yZn],[GZ,d],[GZ,d,yZn],[GZ,d,SQE],[GZ,d,SQE,yZn],[q],[q,yZn],[q,SQE],[q,SQE,yZn],[q,d],[q,d,yZn],[q,d,SQE],[q,d,SQE,yZn],[q,GZ],[q,GZ,yZn],[q,GZ,SQE],[q,GZ,SQE,yZn],[q,GZ,d],[q,GZ,d,yZn],[q,GZ,d,SQE],[q,GZ,d,SQE,yZn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1348() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Df","C","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[C],[C,O],[Df],[Df,O],[Df,C],[Df,C,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1349() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "m","Zg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zg],[m],[m,Zg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1350() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","XdqQ","k","M","aFQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aFQ],[M],[M,aFQ],[k],[k,aFQ],[k,M],[k,M,aFQ],[XdqQ],[XdqQ,aFQ],[XdqQ,M],[XdqQ,M,aFQ],[XdqQ,k],[XdqQ,k,aFQ],[XdqQ,k,M],[XdqQ,k,M,aFQ],[R],[R,aFQ],[R,M],[R,M,aFQ],[R,k],[R,k,aFQ],[R,k,M],[R,k,M,aFQ],[R,XdqQ],[R,XdqQ,aFQ],[R,XdqQ,M],[R,XdqQ,M,aFQ],[R,XdqQ,k],[R,XdqQ,k,aFQ],[R,XdqQ,k,M],[R,XdqQ,k,M,aFQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1351() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AE","qJqHG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qJqHG],[AE],[AE,qJqHG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1352() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sVI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sVI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1353() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gw","S")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[S],[gw],[gw,S]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1354() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ANisA","wr","oK","MAQ","EhLJr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EhLJr],[MAQ],[MAQ,EhLJr],[oK],[oK,EhLJr],[oK,MAQ],[oK,MAQ,EhLJr],[wr],[wr,EhLJr],[wr,MAQ],[wr,MAQ,EhLJr],[wr,oK],[wr,oK,EhLJr],[wr,oK,MAQ],[wr,oK,MAQ,EhLJr],[ANisA],[ANisA,EhLJr],[ANisA,MAQ],[ANisA,MAQ,EhLJr],[ANisA,oK],[ANisA,oK,EhLJr],[ANisA,oK,MAQ],[ANisA,oK,MAQ,EhLJr],[ANisA,wr],[ANisA,wr,EhLJr],[ANisA,wr,MAQ],[ANisA,wr,MAQ,EhLJr],[ANisA,wr,oK],[ANisA,wr,oK,EhLJr],[ANisA,wr,oK,MAQ],[ANisA,wr,oK,MAQ,EhLJr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1355() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nls","Ec")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ec],[Nls],[Nls,Ec]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1356() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lC","LREvt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LREvt],[lC],[lC,LREvt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1357() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nsYT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nsYT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1358() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","gL","ag","DMPD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DMPD],[ag],[ag,DMPD],[gL],[gL,DMPD],[gL,ag],[gL,ag,DMPD],[c],[c,DMPD],[c,ag],[c,ag,DMPD],[c,gL],[c,gL,DMPD],[c,gL,ag],[c,gL,ag,DMPD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1359() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xoglj","R","ytQbd","dBMnz","Ta")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ta],[dBMnz],[dBMnz,Ta],[ytQbd],[ytQbd,Ta],[ytQbd,dBMnz],[ytQbd,dBMnz,Ta],[R],[R,Ta],[R,dBMnz],[R,dBMnz,Ta],[R,ytQbd],[R,ytQbd,Ta],[R,ytQbd,dBMnz],[R,ytQbd,dBMnz,Ta],[xoglj],[xoglj,Ta],[xoglj,dBMnz],[xoglj,dBMnz,Ta],[xoglj,ytQbd],[xoglj,ytQbd,Ta],[xoglj,ytQbd,dBMnz],[xoglj,ytQbd,dBMnz,Ta],[xoglj,R],[xoglj,R,Ta],[xoglj,R,dBMnz],[xoglj,R,dBMnz,Ta],[xoglj,R,ytQbd],[xoglj,R,ytQbd,Ta],[xoglj,R,ytQbd,dBMnz],[xoglj,R,ytQbd,dBMnz,Ta]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1360() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lsX","r","VMuk","Vsqj","PZy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PZy],[Vsqj],[Vsqj,PZy],[VMuk],[VMuk,PZy],[VMuk,Vsqj],[VMuk,Vsqj,PZy],[r],[r,PZy],[r,Vsqj],[r,Vsqj,PZy],[r,VMuk],[r,VMuk,PZy],[r,VMuk,Vsqj],[r,VMuk,Vsqj,PZy],[lsX],[lsX,PZy],[lsX,Vsqj],[lsX,Vsqj,PZy],[lsX,VMuk],[lsX,VMuk,PZy],[lsX,VMuk,Vsqj],[lsX,VMuk,Vsqj,PZy],[lsX,r],[lsX,r,PZy],[lsX,r,Vsqj],[lsX,r,Vsqj,PZy],[lsX,r,VMuk],[lsX,r,VMuk,PZy],[lsX,r,VMuk,Vsqj],[lsX,r,VMuk,Vsqj,PZy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1361() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GOOyE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GOOyE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1362() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "En","nm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nm],[En],[En,nm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1363() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BF","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[BF],[BF,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1364() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","b","nlOhM","RWn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RWn],[nlOhM],[nlOhM,RWn],[b],[b,RWn],[b,nlOhM],[b,nlOhM,RWn],[P],[P,RWn],[P,nlOhM],[P,nlOhM,RWn],[P,b],[P,b,RWn],[P,b,nlOhM],[P,b,nlOhM,RWn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1365() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AOhBu","LzcD","yNb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yNb],[LzcD],[LzcD,yNb],[AOhBu],[AOhBu,yNb],[AOhBu,LzcD],[AOhBu,LzcD,yNb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1366() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rnf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rnf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1367() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ui","JYyT","yJsuJ","wKPG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wKPG],[yJsuJ],[yJsuJ,wKPG],[JYyT],[JYyT,wKPG],[JYyT,yJsuJ],[JYyT,yJsuJ,wKPG],[Ui],[Ui,wKPG],[Ui,yJsuJ],[Ui,yJsuJ,wKPG],[Ui,JYyT],[Ui,JYyT,wKPG],[Ui,JYyT,yJsuJ],[Ui,JYyT,yJsuJ,wKPG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1368() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xx","JWq","WeD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WeD],[JWq],[JWq,WeD],[xx],[xx,WeD],[xx,JWq],[xx,JWq,WeD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1369() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","mgSAn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mgSAn],[E],[E,mgSAn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1370() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LlYo","nOz","M","Nm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nm],[M],[M,Nm],[nOz],[nOz,Nm],[nOz,M],[nOz,M,Nm],[LlYo],[LlYo,Nm],[LlYo,M],[LlYo,M,Nm],[LlYo,nOz],[LlYo,nOz,Nm],[LlYo,nOz,M],[LlYo,nOz,M,Nm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1371() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ngnm","fGqD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fGqD],[ngnm],[ngnm,fGqD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1372() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","WsMv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WsMv],[P],[P,WsMv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1373() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fd","xkcvx","wkR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wkR],[xkcvx],[xkcvx,wkR],[fd],[fd,wkR],[fd,xkcvx],[fd,xkcvx,wkR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1374() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WX","A","eF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eF],[A],[A,eF],[WX],[WX,eF],[WX,A],[WX,A,eF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1375() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dky","Bw","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[Bw],[Bw,n],[Dky],[Dky,n],[Dky,Bw],[Dky,Bw,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1376() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vwH","HoNQo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HoNQo],[vwH],[vwH,HoNQo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1377() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[R]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1378() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZTYFS","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[ZTYFS],[ZTYFS,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1379() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fHrrO","Uw","C","zC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zC],[C],[C,zC],[Uw],[Uw,zC],[Uw,C],[Uw,C,zC],[fHrrO],[fHrrO,zC],[fHrrO,C],[fHrrO,C,zC],[fHrrO,Uw],[fHrrO,Uw,zC],[fHrrO,Uw,C],[fHrrO,Uw,C,zC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1380() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ln","F","jGu","toj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[toj],[jGu],[jGu,toj],[F],[F,toj],[F,jGu],[F,jGu,toj],[Ln],[Ln,toj],[Ln,jGu],[Ln,jGu,toj],[Ln,F],[Ln,F,toj],[Ln,F,jGu],[Ln,F,jGu,toj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1381() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pp","iQT","FykpF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FykpF],[iQT],[iQT,FykpF],[Pp],[Pp,FykpF],[Pp,iQT],[Pp,iQT,FykpF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1382() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dsh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dsh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1383() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qq","lnMYT","S","d","KzJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KzJ],[d],[d,KzJ],[S],[S,KzJ],[S,d],[S,d,KzJ],[lnMYT],[lnMYT,KzJ],[lnMYT,d],[lnMYT,d,KzJ],[lnMYT,S],[lnMYT,S,KzJ],[lnMYT,S,d],[lnMYT,S,d,KzJ],[qq],[qq,KzJ],[qq,d],[qq,d,KzJ],[qq,S],[qq,S,KzJ],[qq,S,d],[qq,S,d,KzJ],[qq,lnMYT],[qq,lnMYT,KzJ],[qq,lnMYT,d],[qq,lnMYT,d,KzJ],[qq,lnMYT,S],[qq,lnMYT,S,KzJ],[qq,lnMYT,S,d],[qq,lnMYT,S,d,KzJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1384() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","rmhU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rmhU],[b],[b,rmhU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1385() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bgy","F")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[F],[Bgy],[Bgy,F]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1386() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EJ","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[EJ],[EJ,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1387() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cwlu","mU","btCd","lGI","jAE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jAE],[lGI],[lGI,jAE],[btCd],[btCd,jAE],[btCd,lGI],[btCd,lGI,jAE],[mU],[mU,jAE],[mU,lGI],[mU,lGI,jAE],[mU,btCd],[mU,btCd,jAE],[mU,btCd,lGI],[mU,btCd,lGI,jAE],[cwlu],[cwlu,jAE],[cwlu,lGI],[cwlu,lGI,jAE],[cwlu,btCd],[cwlu,btCd,jAE],[cwlu,btCd,lGI],[cwlu,btCd,lGI,jAE],[cwlu,mU],[cwlu,mU,jAE],[cwlu,mU,lGI],[cwlu,mU,lGI,jAE],[cwlu,mU,btCd],[cwlu,mU,btCd,jAE],[cwlu,mU,btCd,lGI],[cwlu,mU,btCd,lGI,jAE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1388() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MD","K","gSI","ISce")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ISce],[gSI],[gSI,ISce],[K],[K,ISce],[K,gSI],[K,gSI,ISce],[MD],[MD,ISce],[MD,gSI],[MD,gSI,ISce],[MD,K],[MD,K,ISce],[MD,K,gSI],[MD,K,gSI,ISce]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1389() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CjWAf","d","e","aPmV","rqTX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rqTX],[aPmV],[aPmV,rqTX],[e],[e,rqTX],[e,aPmV],[e,aPmV,rqTX],[d],[d,rqTX],[d,aPmV],[d,aPmV,rqTX],[d,e],[d,e,rqTX],[d,e,aPmV],[d,e,aPmV,rqTX],[CjWAf],[CjWAf,rqTX],[CjWAf,aPmV],[CjWAf,aPmV,rqTX],[CjWAf,e],[CjWAf,e,rqTX],[CjWAf,e,aPmV],[CjWAf,e,aPmV,rqTX],[CjWAf,d],[CjWAf,d,rqTX],[CjWAf,d,aPmV],[CjWAf,d,aPmV,rqTX],[CjWAf,d,e],[CjWAf,d,e,rqTX],[CjWAf,d,e,aPmV],[CjWAf,d,e,aPmV,rqTX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1390() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ODH","BjTv","sVhd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sVhd],[BjTv],[BjTv,sVhd],[ODH],[ODH,sVhd],[ODH,BjTv],[ODH,BjTv,sVhd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1391() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","JmQyZ","z","N","sEXA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sEXA],[N],[N,sEXA],[z],[z,sEXA],[z,N],[z,N,sEXA],[JmQyZ],[JmQyZ,sEXA],[JmQyZ,N],[JmQyZ,N,sEXA],[JmQyZ,z],[JmQyZ,z,sEXA],[JmQyZ,z,N],[JmQyZ,z,N,sEXA],[U],[U,sEXA],[U,N],[U,N,sEXA],[U,z],[U,z,sEXA],[U,z,N],[U,z,N,sEXA],[U,JmQyZ],[U,JmQyZ,sEXA],[U,JmQyZ,N],[U,JmQyZ,N,sEXA],[U,JmQyZ,z],[U,JmQyZ,z,sEXA],[U,JmQyZ,z,N],[U,JmQyZ,z,N,sEXA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1392() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","Mpk","Gb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gb],[Mpk],[Mpk,Gb],[F],[F,Gb],[F,Mpk],[F,Mpk,Gb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1393() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xgmSU","wlBe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wlBe],[xgmSU],[xgmSU,wlBe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1394() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xMV","GKF","glMzw","pck","Qmv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qmv],[pck],[pck,Qmv],[glMzw],[glMzw,Qmv],[glMzw,pck],[glMzw,pck,Qmv],[GKF],[GKF,Qmv],[GKF,pck],[GKF,pck,Qmv],[GKF,glMzw],[GKF,glMzw,Qmv],[GKF,glMzw,pck],[GKF,glMzw,pck,Qmv],[xMV],[xMV,Qmv],[xMV,pck],[xMV,pck,Qmv],[xMV,glMzw],[xMV,glMzw,Qmv],[xMV,glMzw,pck],[xMV,glMzw,pck,Qmv],[xMV,GKF],[xMV,GKF,Qmv],[xMV,GKF,pck],[xMV,GKF,pck,Qmv],[xMV,GKF,glMzw],[xMV,GKF,glMzw,Qmv],[xMV,GKF,glMzw,pck],[xMV,GKF,glMzw,pck,Qmv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1395() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gokw","HF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HF],[gokw],[gokw,HF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1396() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1397() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dqnSy","S","fxV","m","KtU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KtU],[m],[m,KtU],[fxV],[fxV,KtU],[fxV,m],[fxV,m,KtU],[S],[S,KtU],[S,m],[S,m,KtU],[S,fxV],[S,fxV,KtU],[S,fxV,m],[S,fxV,m,KtU],[dqnSy],[dqnSy,KtU],[dqnSy,m],[dqnSy,m,KtU],[dqnSy,fxV],[dqnSy,fxV,KtU],[dqnSy,fxV,m],[dqnSy,fxV,m,KtU],[dqnSy,S],[dqnSy,S,KtU],[dqnSy,S,m],[dqnSy,S,m,KtU],[dqnSy,S,fxV],[dqnSy,S,fxV,KtU],[dqnSy,S,fxV,m],[dqnSy,S,fxV,m,KtU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1398() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xt","Tc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tc],[xt],[xt,Tc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1399() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XFHu","QEYf","U","DGPq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DGPq],[U],[U,DGPq],[QEYf],[QEYf,DGPq],[QEYf,U],[QEYf,U,DGPq],[XFHu],[XFHu,DGPq],[XFHu,U],[XFHu,U,DGPq],[XFHu,QEYf],[XFHu,QEYf,DGPq],[XFHu,QEYf,U],[XFHu,QEYf,U,DGPq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1400() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PILX","oB","Qf","XcDDD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XcDDD],[Qf],[Qf,XcDDD],[oB],[oB,XcDDD],[oB,Qf],[oB,Qf,XcDDD],[PILX],[PILX,XcDDD],[PILX,Qf],[PILX,Qf,XcDDD],[PILX,oB],[PILX,oB,XcDDD],[PILX,oB,Qf],[PILX,oB,Qf,XcDDD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1401() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KD","pCM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pCM],[KD],[KD,pCM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1402() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lq","G","zHul")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zHul],[G],[G,zHul],[lq],[lq,zHul],[lq,G],[lq,G,zHul]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1403() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1404() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nSaLt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nSaLt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1405() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BdF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BdF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1406() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gqZ","A","dabyV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dabyV],[A],[A,dabyV],[gqZ],[gqZ,dabyV],[gqZ,A],[gqZ,A,dabyV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1407() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GpJI","clnyB","oHf","jY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jY],[oHf],[oHf,jY],[clnyB],[clnyB,jY],[clnyB,oHf],[clnyB,oHf,jY],[GpJI],[GpJI,jY],[GpJI,oHf],[GpJI,oHf,jY],[GpJI,clnyB],[GpJI,clnyB,jY],[GpJI,clnyB,oHf],[GpJI,clnyB,oHf,jY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1408() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PupB","v","wab","n","FByl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FByl],[n],[n,FByl],[wab],[wab,FByl],[wab,n],[wab,n,FByl],[v],[v,FByl],[v,n],[v,n,FByl],[v,wab],[v,wab,FByl],[v,wab,n],[v,wab,n,FByl],[PupB],[PupB,FByl],[PupB,n],[PupB,n,FByl],[PupB,wab],[PupB,wab,FByl],[PupB,wab,n],[PupB,wab,n,FByl],[PupB,v],[PupB,v,FByl],[PupB,v,n],[PupB,v,n,FByl],[PupB,v,wab],[PupB,v,wab,FByl],[PupB,v,wab,n],[PupB,v,wab,n,FByl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1409() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YRyt","KH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KH],[YRyt],[YRyt,KH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1410() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ACcee")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ACcee]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1411() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FbKb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FbKb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1412() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wgqB","v","upqu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[upqu],[v],[v,upqu],[wgqB],[wgqB,upqu],[wgqB,v],[wgqB,v,upqu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1413() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fBO","tNO","GKyLB","UQt","Uq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uq],[UQt],[UQt,Uq],[GKyLB],[GKyLB,Uq],[GKyLB,UQt],[GKyLB,UQt,Uq],[tNO],[tNO,Uq],[tNO,UQt],[tNO,UQt,Uq],[tNO,GKyLB],[tNO,GKyLB,Uq],[tNO,GKyLB,UQt],[tNO,GKyLB,UQt,Uq],[fBO],[fBO,Uq],[fBO,UQt],[fBO,UQt,Uq],[fBO,GKyLB],[fBO,GKyLB,Uq],[fBO,GKyLB,UQt],[fBO,GKyLB,UQt,Uq],[fBO,tNO],[fBO,tNO,Uq],[fBO,tNO,UQt],[fBO,tNO,UQt,Uq],[fBO,tNO,GKyLB],[fBO,tNO,GKyLB,Uq],[fBO,tNO,GKyLB,UQt],[fBO,tNO,GKyLB,UQt,Uq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1414() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","Qor","Ic","xCggQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xCggQ],[Ic],[Ic,xCggQ],[Qor],[Qor,xCggQ],[Qor,Ic],[Qor,Ic,xCggQ],[e],[e,xCggQ],[e,Ic],[e,Ic,xCggQ],[e,Qor],[e,Qor,xCggQ],[e,Qor,Ic],[e,Qor,Ic,xCggQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1415() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","X","Le","zPpN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zPpN],[Le],[Le,zPpN],[X],[X,zPpN],[X,Le],[X,Le,zPpN],[p],[p,zPpN],[p,Le],[p,Le,zPpN],[p,X],[p,X,zPpN],[p,X,Le],[p,X,Le,zPpN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1416() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hcgC","pEYp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pEYp],[hcgC],[hcgC,pEYp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1417() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dU","Flh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Flh],[dU],[dU,Flh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1418() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vWW","ut")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ut],[vWW],[vWW,ut]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1419() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jCmvN","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[jCmvN],[jCmvN,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1420() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gyR","xAi","nMyKX","Zaej")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zaej],[nMyKX],[nMyKX,Zaej],[xAi],[xAi,Zaej],[xAi,nMyKX],[xAi,nMyKX,Zaej],[gyR],[gyR,Zaej],[gyR,nMyKX],[gyR,nMyKX,Zaej],[gyR,xAi],[gyR,xAi,Zaej],[gyR,xAi,nMyKX],[gyR,xAi,nMyKX,Zaej]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1421() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","TURSD","YfWK","yUJE","PsQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PsQ],[yUJE],[yUJE,PsQ],[YfWK],[YfWK,PsQ],[YfWK,yUJE],[YfWK,yUJE,PsQ],[TURSD],[TURSD,PsQ],[TURSD,yUJE],[TURSD,yUJE,PsQ],[TURSD,YfWK],[TURSD,YfWK,PsQ],[TURSD,YfWK,yUJE],[TURSD,YfWK,yUJE,PsQ],[D],[D,PsQ],[D,yUJE],[D,yUJE,PsQ],[D,YfWK],[D,YfWK,PsQ],[D,YfWK,yUJE],[D,YfWK,yUJE,PsQ],[D,TURSD],[D,TURSD,PsQ],[D,TURSD,yUJE],[D,TURSD,yUJE,PsQ],[D,TURSD,YfWK],[D,TURSD,YfWK,PsQ],[D,TURSD,YfWK,yUJE],[D,TURSD,YfWK,yUJE,PsQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1422() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IM","JuYH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JuYH],[IM],[IM,JuYH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1423() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WNRkj","PYynV","xS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xS],[PYynV],[PYynV,xS],[WNRkj],[WNRkj,xS],[WNRkj,PYynV],[WNRkj,PYynV,xS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1424() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","UJ","IzbY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IzbY],[UJ],[UJ,IzbY],[R],[R,IzbY],[R,UJ],[R,UJ,IzbY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1425() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xcSbc","F","QUIhC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QUIhC],[F],[F,QUIhC],[xcSbc],[xcSbc,QUIhC],[xcSbc,F],[xcSbc,F,QUIhC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1426() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "svkGx","TLYv","ag","AyIZ","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[AyIZ],[AyIZ,O],[ag],[ag,O],[ag,AyIZ],[ag,AyIZ,O],[TLYv],[TLYv,O],[TLYv,AyIZ],[TLYv,AyIZ,O],[TLYv,ag],[TLYv,ag,O],[TLYv,ag,AyIZ],[TLYv,ag,AyIZ,O],[svkGx],[svkGx,O],[svkGx,AyIZ],[svkGx,AyIZ,O],[svkGx,ag],[svkGx,ag,O],[svkGx,ag,AyIZ],[svkGx,ag,AyIZ,O],[svkGx,TLYv],[svkGx,TLYv,O],[svkGx,TLYv,AyIZ],[svkGx,TLYv,AyIZ,O],[svkGx,TLYv,ag],[svkGx,TLYv,ag,O],[svkGx,TLYv,ag,AyIZ],[svkGx,TLYv,ag,AyIZ,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1427() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","Hthw","JYYb","yGDI","TR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TR],[yGDI],[yGDI,TR],[JYYb],[JYYb,TR],[JYYb,yGDI],[JYYb,yGDI,TR],[Hthw],[Hthw,TR],[Hthw,yGDI],[Hthw,yGDI,TR],[Hthw,JYYb],[Hthw,JYYb,TR],[Hthw,JYYb,yGDI],[Hthw,JYYb,yGDI,TR],[T],[T,TR],[T,yGDI],[T,yGDI,TR],[T,JYYb],[T,JYYb,TR],[T,JYYb,yGDI],[T,JYYb,yGDI,TR],[T,Hthw],[T,Hthw,TR],[T,Hthw,yGDI],[T,Hthw,yGDI,TR],[T,Hthw,JYYb],[T,Hthw,JYYb,TR],[T,Hthw,JYYb,yGDI],[T,Hthw,JYYb,yGDI,TR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1428() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","bbph","Y","oI","gklLw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gklLw],[oI],[oI,gklLw],[Y],[Y,gklLw],[Y,oI],[Y,oI,gklLw],[bbph],[bbph,gklLw],[bbph,oI],[bbph,oI,gklLw],[bbph,Y],[bbph,Y,gklLw],[bbph,Y,oI],[bbph,Y,oI,gklLw],[E],[E,gklLw],[E,oI],[E,oI,gklLw],[E,Y],[E,Y,gklLw],[E,Y,oI],[E,Y,oI,gklLw],[E,bbph],[E,bbph,gklLw],[E,bbph,oI],[E,bbph,oI,gklLw],[E,bbph,Y],[E,bbph,Y,gklLw],[E,bbph,Y,oI],[E,bbph,Y,oI,gklLw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1429() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tj","aY","X","zAFP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zAFP],[X],[X,zAFP],[aY],[aY,zAFP],[aY,X],[aY,X,zAFP],[Tj],[Tj,zAFP],[Tj,X],[Tj,X,zAFP],[Tj,aY],[Tj,aY,zAFP],[Tj,aY,X],[Tj,aY,X,zAFP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1430() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rDoB","E","oGL","zsP","sL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sL],[zsP],[zsP,sL],[oGL],[oGL,sL],[oGL,zsP],[oGL,zsP,sL],[E],[E,sL],[E,zsP],[E,zsP,sL],[E,oGL],[E,oGL,sL],[E,oGL,zsP],[E,oGL,zsP,sL],[rDoB],[rDoB,sL],[rDoB,zsP],[rDoB,zsP,sL],[rDoB,oGL],[rDoB,oGL,sL],[rDoB,oGL,zsP],[rDoB,oGL,zsP,sL],[rDoB,E],[rDoB,E,sL],[rDoB,E,zsP],[rDoB,E,zsP,sL],[rDoB,E,oGL],[rDoB,E,oGL,sL],[rDoB,E,oGL,zsP],[rDoB,E,oGL,zsP,sL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1431() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vpskr","Oi","eOZr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eOZr],[Oi],[Oi,eOZr],[Vpskr],[Vpskr,eOZr],[Vpskr,Oi],[Vpskr,Oi,eOZr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1432() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kHsye","iBD","uZPx","TthQ","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[TthQ],[TthQ,O],[uZPx],[uZPx,O],[uZPx,TthQ],[uZPx,TthQ,O],[iBD],[iBD,O],[iBD,TthQ],[iBD,TthQ,O],[iBD,uZPx],[iBD,uZPx,O],[iBD,uZPx,TthQ],[iBD,uZPx,TthQ,O],[kHsye],[kHsye,O],[kHsye,TthQ],[kHsye,TthQ,O],[kHsye,uZPx],[kHsye,uZPx,O],[kHsye,uZPx,TthQ],[kHsye,uZPx,TthQ,O],[kHsye,iBD],[kHsye,iBD,O],[kHsye,iBD,TthQ],[kHsye,iBD,TthQ,O],[kHsye,iBD,uZPx],[kHsye,iBD,uZPx,O],[kHsye,iBD,uZPx,TthQ],[kHsye,iBD,uZPx,TthQ,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1433() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "orHyj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[orHyj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1434() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eE","X","GprA","uWpF","ve")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ve],[uWpF],[uWpF,ve],[GprA],[GprA,ve],[GprA,uWpF],[GprA,uWpF,ve],[X],[X,ve],[X,uWpF],[X,uWpF,ve],[X,GprA],[X,GprA,ve],[X,GprA,uWpF],[X,GprA,uWpF,ve],[eE],[eE,ve],[eE,uWpF],[eE,uWpF,ve],[eE,GprA],[eE,GprA,ve],[eE,GprA,uWpF],[eE,GprA,uWpF,ve],[eE,X],[eE,X,ve],[eE,X,uWpF],[eE,X,uWpF,ve],[eE,X,GprA],[eE,X,GprA,ve],[eE,X,GprA,uWpF],[eE,X,GprA,uWpF,ve]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1435() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SgMn","ZSVu","v","zCSOo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zCSOo],[v],[v,zCSOo],[ZSVu],[ZSVu,zCSOo],[ZSVu,v],[ZSVu,v,zCSOo],[SgMn],[SgMn,zCSOo],[SgMn,v],[SgMn,v,zCSOo],[SgMn,ZSVu],[SgMn,ZSVu,zCSOo],[SgMn,ZSVu,v],[SgMn,ZSVu,v,zCSOo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1436() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","c","hZd","Mgmih","Po")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Po],[Mgmih],[Mgmih,Po],[hZd],[hZd,Po],[hZd,Mgmih],[hZd,Mgmih,Po],[c],[c,Po],[c,Mgmih],[c,Mgmih,Po],[c,hZd],[c,hZd,Po],[c,hZd,Mgmih],[c,hZd,Mgmih,Po],[r],[r,Po],[r,Mgmih],[r,Mgmih,Po],[r,hZd],[r,hZd,Po],[r,hZd,Mgmih],[r,hZd,Mgmih,Po],[r,c],[r,c,Po],[r,c,Mgmih],[r,c,Mgmih,Po],[r,c,hZd],[r,c,hZd,Po],[r,c,hZd,Mgmih],[r,c,hZd,Mgmih,Po]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1437() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X","xs","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[xs],[xs,O],[X],[X,O],[X,xs],[X,xs,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1438() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RQQ","hGBpm","Lky")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lky],[hGBpm],[hGBpm,Lky],[RQQ],[RQQ,Lky],[RQQ,hGBpm],[RQQ,hGBpm,Lky]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1439() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","sjsi","yopM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yopM],[sjsi],[sjsi,yopM],[a],[a,yopM],[a,sjsi],[a,sjsi,yopM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1440() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kJzoz","sEu","GNhS","kxIr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kxIr],[GNhS],[GNhS,kxIr],[sEu],[sEu,kxIr],[sEu,GNhS],[sEu,GNhS,kxIr],[kJzoz],[kJzoz,kxIr],[kJzoz,GNhS],[kJzoz,GNhS,kxIr],[kJzoz,sEu],[kJzoz,sEu,kxIr],[kJzoz,sEu,GNhS],[kJzoz,sEu,GNhS,kxIr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1441() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lEsIT","H","WbV","YBgsc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YBgsc],[WbV],[WbV,YBgsc],[H],[H,YBgsc],[H,WbV],[H,WbV,YBgsc],[lEsIT],[lEsIT,YBgsc],[lEsIT,WbV],[lEsIT,WbV,YBgsc],[lEsIT,H],[lEsIT,H,YBgsc],[lEsIT,H,WbV],[lEsIT,H,WbV,YBgsc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1442() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eZ","QzF","tHwch")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tHwch],[QzF],[QzF,tHwch],[eZ],[eZ,tHwch],[eZ,QzF],[eZ,QzF,tHwch]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1443() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cVZf","BsF","x","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[x],[x,i],[BsF],[BsF,i],[BsF,x],[BsF,x,i],[cVZf],[cVZf,i],[cVZf,x],[cVZf,x,i],[cVZf,BsF],[cVZf,BsF,i],[cVZf,BsF,x],[cVZf,BsF,x,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1444() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ex","ZliT","RLLc","sXq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sXq],[RLLc],[RLLc,sXq],[ZliT],[ZliT,sXq],[ZliT,RLLc],[ZliT,RLLc,sXq],[Ex],[Ex,sXq],[Ex,RLLc],[Ex,RLLc,sXq],[Ex,ZliT],[Ex,ZliT,sXq],[Ex,ZliT,RLLc],[Ex,ZliT,RLLc,sXq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1445() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "joRyg","Lu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lu],[joRyg],[joRyg,Lu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1446() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WeKe","np","JwMtb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JwMtb],[np],[np,JwMtb],[WeKe],[WeKe,JwMtb],[WeKe,np],[WeKe,np,JwMtb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1447() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rXV","WHLiK","x","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[x],[x,l],[WHLiK],[WHLiK,l],[WHLiK,x],[WHLiK,x,l],[rXV],[rXV,l],[rXV,x],[rXV,x,l],[rXV,WHLiK],[rXV,WHLiK,l],[rXV,WHLiK,x],[rXV,WHLiK,x,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1448() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","eh","mVFq","hO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hO],[mVFq],[mVFq,hO],[eh],[eh,hO],[eh,mVFq],[eh,mVFq,hO],[S],[S,hO],[S,mVFq],[S,mVFq,hO],[S,eh],[S,eh,hO],[S,eh,mVFq],[S,eh,mVFq,hO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1449() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CwvT","hLjO","fwHEv","ec")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ec],[fwHEv],[fwHEv,ec],[hLjO],[hLjO,ec],[hLjO,fwHEv],[hLjO,fwHEv,ec],[CwvT],[CwvT,ec],[CwvT,fwHEv],[CwvT,fwHEv,ec],[CwvT,hLjO],[CwvT,hLjO,ec],[CwvT,hLjO,fwHEv],[CwvT,hLjO,fwHEv,ec]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1450() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uwJMk","IsJc","BLC","ZMije","GVoUO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GVoUO],[ZMije],[ZMije,GVoUO],[BLC],[BLC,GVoUO],[BLC,ZMije],[BLC,ZMije,GVoUO],[IsJc],[IsJc,GVoUO],[IsJc,ZMije],[IsJc,ZMije,GVoUO],[IsJc,BLC],[IsJc,BLC,GVoUO],[IsJc,BLC,ZMije],[IsJc,BLC,ZMije,GVoUO],[uwJMk],[uwJMk,GVoUO],[uwJMk,ZMije],[uwJMk,ZMije,GVoUO],[uwJMk,BLC],[uwJMk,BLC,GVoUO],[uwJMk,BLC,ZMije],[uwJMk,BLC,ZMije,GVoUO],[uwJMk,IsJc],[uwJMk,IsJc,GVoUO],[uwJMk,IsJc,ZMije],[uwJMk,IsJc,ZMije,GVoUO],[uwJMk,IsJc,BLC],[uwJMk,IsJc,BLC,GVoUO],[uwJMk,IsJc,BLC,ZMije],[uwJMk,IsJc,BLC,ZMije,GVoUO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1451() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ywlh","vjK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vjK],[ywlh],[ywlh,vjK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1452() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","UMiwE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UMiwE],[s],[s,UMiwE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1453() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1454() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UGaQq","KctM","JIJ","xCbEe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xCbEe],[JIJ],[JIJ,xCbEe],[KctM],[KctM,xCbEe],[KctM,JIJ],[KctM,JIJ,xCbEe],[UGaQq],[UGaQq,xCbEe],[UGaQq,JIJ],[UGaQq,JIJ,xCbEe],[UGaQq,KctM],[UGaQq,KctM,xCbEe],[UGaQq,KctM,JIJ],[UGaQq,KctM,JIJ,xCbEe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1455() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lfS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lfS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1456() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "n","sxT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sxT],[n],[n,sxT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1457() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZWb","nuB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nuB],[ZWb],[ZWb,nuB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1458() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","R","s")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[s],[R],[R,s],[A],[A,s],[A,R],[A,R,s]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1459() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bBqL","Y","GPd","z","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[z],[z,O],[GPd],[GPd,O],[GPd,z],[GPd,z,O],[Y],[Y,O],[Y,z],[Y,z,O],[Y,GPd],[Y,GPd,O],[Y,GPd,z],[Y,GPd,z,O],[bBqL],[bBqL,O],[bBqL,z],[bBqL,z,O],[bBqL,GPd],[bBqL,GPd,O],[bBqL,GPd,z],[bBqL,GPd,z,O],[bBqL,Y],[bBqL,Y,O],[bBqL,Y,z],[bBqL,Y,z,O],[bBqL,Y,GPd],[bBqL,Y,GPd,O],[bBqL,Y,GPd,z],[bBqL,Y,GPd,z,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1460() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pXbxh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pXbxh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1461() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LjFBW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LjFBW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1462() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xoLn","JjrQq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JjrQq],[xoLn],[xoLn,JjrQq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1463() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YMD","c")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[c],[YMD],[YMD,c]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1464() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hUNu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hUNu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1465() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MpsV","Wzowz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wzowz],[MpsV],[MpsV,Wzowz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1466() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ykX","Ni","tbCM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tbCM],[Ni],[Ni,tbCM],[ykX],[ykX,tbCM],[ykX,Ni],[ykX,Ni,tbCM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1467() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VrnIG","i","CGokX","k","sjShU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sjShU],[k],[k,sjShU],[CGokX],[CGokX,sjShU],[CGokX,k],[CGokX,k,sjShU],[i],[i,sjShU],[i,k],[i,k,sjShU],[i,CGokX],[i,CGokX,sjShU],[i,CGokX,k],[i,CGokX,k,sjShU],[VrnIG],[VrnIG,sjShU],[VrnIG,k],[VrnIG,k,sjShU],[VrnIG,CGokX],[VrnIG,CGokX,sjShU],[VrnIG,CGokX,k],[VrnIG,CGokX,k,sjShU],[VrnIG,i],[VrnIG,i,sjShU],[VrnIG,i,k],[VrnIG,i,k,sjShU],[VrnIG,i,CGokX],[VrnIG,i,CGokX,sjShU],[VrnIG,i,CGokX,k],[VrnIG,i,CGokX,k,sjShU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1468() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wz","iNpUr","HvqN","I","FbTV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FbTV],[I],[I,FbTV],[HvqN],[HvqN,FbTV],[HvqN,I],[HvqN,I,FbTV],[iNpUr],[iNpUr,FbTV],[iNpUr,I],[iNpUr,I,FbTV],[iNpUr,HvqN],[iNpUr,HvqN,FbTV],[iNpUr,HvqN,I],[iNpUr,HvqN,I,FbTV],[wz],[wz,FbTV],[wz,I],[wz,I,FbTV],[wz,HvqN],[wz,HvqN,FbTV],[wz,HvqN,I],[wz,HvqN,I,FbTV],[wz,iNpUr],[wz,iNpUr,FbTV],[wz,iNpUr,I],[wz,iNpUr,I,FbTV],[wz,iNpUr,HvqN],[wz,iNpUr,HvqN,FbTV],[wz,iNpUr,HvqN,I],[wz,iNpUr,HvqN,I,FbTV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1469() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bBmJu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bBmJu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1470() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hQp","HP","RVCI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RVCI],[HP],[HP,RVCI],[hQp],[hQp,RVCI],[hQp,HP],[hQp,HP,RVCI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1471() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MQUV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MQUV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1472() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WCM","jIxZ","kXA","z","HBLM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HBLM],[z],[z,HBLM],[kXA],[kXA,HBLM],[kXA,z],[kXA,z,HBLM],[jIxZ],[jIxZ,HBLM],[jIxZ,z],[jIxZ,z,HBLM],[jIxZ,kXA],[jIxZ,kXA,HBLM],[jIxZ,kXA,z],[jIxZ,kXA,z,HBLM],[WCM],[WCM,HBLM],[WCM,z],[WCM,z,HBLM],[WCM,kXA],[WCM,kXA,HBLM],[WCM,kXA,z],[WCM,kXA,z,HBLM],[WCM,jIxZ],[WCM,jIxZ,HBLM],[WCM,jIxZ,z],[WCM,jIxZ,z,HBLM],[WCM,jIxZ,kXA],[WCM,jIxZ,kXA,HBLM],[WCM,jIxZ,kXA,z],[WCM,jIxZ,kXA,z,HBLM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1473() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LYCVH","e","kid","BQgsr","RvoWQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RvoWQ],[BQgsr],[BQgsr,RvoWQ],[kid],[kid,RvoWQ],[kid,BQgsr],[kid,BQgsr,RvoWQ],[e],[e,RvoWQ],[e,BQgsr],[e,BQgsr,RvoWQ],[e,kid],[e,kid,RvoWQ],[e,kid,BQgsr],[e,kid,BQgsr,RvoWQ],[LYCVH],[LYCVH,RvoWQ],[LYCVH,BQgsr],[LYCVH,BQgsr,RvoWQ],[LYCVH,kid],[LYCVH,kid,RvoWQ],[LYCVH,kid,BQgsr],[LYCVH,kid,BQgsr,RvoWQ],[LYCVH,e],[LYCVH,e,RvoWQ],[LYCVH,e,BQgsr],[LYCVH,e,BQgsr,RvoWQ],[LYCVH,e,kid],[LYCVH,e,kid,RvoWQ],[LYCVH,e,kid,BQgsr],[LYCVH,e,kid,BQgsr,RvoWQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1474() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lpIH","dVd","cz","WaoFn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WaoFn],[cz],[cz,WaoFn],[dVd],[dVd,WaoFn],[dVd,cz],[dVd,cz,WaoFn],[lpIH],[lpIH,WaoFn],[lpIH,cz],[lpIH,cz,WaoFn],[lpIH,dVd],[lpIH,dVd,WaoFn],[lpIH,dVd,cz],[lpIH,dVd,cz,WaoFn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1475() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UqqV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UqqV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1476() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DV","bnYHh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bnYHh],[DV],[DV,bnYHh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1477() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rsS","heq","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[heq],[heq,W],[rsS],[rsS,W],[rsS,heq],[rsS,heq,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1478() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ek","ZiUXd","z","bvdcu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bvdcu],[z],[z,bvdcu],[ZiUXd],[ZiUXd,bvdcu],[ZiUXd,z],[ZiUXd,z,bvdcu],[Ek],[Ek,bvdcu],[Ek,z],[Ek,z,bvdcu],[Ek,ZiUXd],[Ek,ZiUXd,bvdcu],[Ek,ZiUXd,z],[Ek,ZiUXd,z,bvdcu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1479() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rw","ykLO","pHd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pHd],[ykLO],[ykLO,pHd],[rw],[rw,pHd],[rw,ykLO],[rw,ykLO,pHd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1480() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1481() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zp","KxWD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KxWD],[zp],[zp,KxWD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1482() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SY","RbKbb","FLC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FLC],[RbKbb],[RbKbb,FLC],[SY],[SY,FLC],[SY,RbKbb],[SY,RbKbb,FLC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1483() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bnjdW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bnjdW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1484() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gSIU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gSIU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1485() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nzZPX","JjOCk","TrP","f","uyO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uyO],[f],[f,uyO],[TrP],[TrP,uyO],[TrP,f],[TrP,f,uyO],[JjOCk],[JjOCk,uyO],[JjOCk,f],[JjOCk,f,uyO],[JjOCk,TrP],[JjOCk,TrP,uyO],[JjOCk,TrP,f],[JjOCk,TrP,f,uyO],[nzZPX],[nzZPX,uyO],[nzZPX,f],[nzZPX,f,uyO],[nzZPX,TrP],[nzZPX,TrP,uyO],[nzZPX,TrP,f],[nzZPX,TrP,f,uyO],[nzZPX,JjOCk],[nzZPX,JjOCk,uyO],[nzZPX,JjOCk,f],[nzZPX,JjOCk,f,uyO],[nzZPX,JjOCk,TrP],[nzZPX,JjOCk,TrP,uyO],[nzZPX,JjOCk,TrP,f],[nzZPX,JjOCk,TrP,f,uyO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1486() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YxkT","NtUrg","zxYNz","gfUA","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[gfUA],[gfUA,L],[zxYNz],[zxYNz,L],[zxYNz,gfUA],[zxYNz,gfUA,L],[NtUrg],[NtUrg,L],[NtUrg,gfUA],[NtUrg,gfUA,L],[NtUrg,zxYNz],[NtUrg,zxYNz,L],[NtUrg,zxYNz,gfUA],[NtUrg,zxYNz,gfUA,L],[YxkT],[YxkT,L],[YxkT,gfUA],[YxkT,gfUA,L],[YxkT,zxYNz],[YxkT,zxYNz,L],[YxkT,zxYNz,gfUA],[YxkT,zxYNz,gfUA,L],[YxkT,NtUrg],[YxkT,NtUrg,L],[YxkT,NtUrg,gfUA],[YxkT,NtUrg,gfUA,L],[YxkT,NtUrg,zxYNz],[YxkT,NtUrg,zxYNz,L],[YxkT,NtUrg,zxYNz,gfUA],[YxkT,NtUrg,zxYNz,gfUA,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1487() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WOR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WOR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1488() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lvvSP","dVNky","bCz","I","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[I],[I,o],[bCz],[bCz,o],[bCz,I],[bCz,I,o],[dVNky],[dVNky,o],[dVNky,I],[dVNky,I,o],[dVNky,bCz],[dVNky,bCz,o],[dVNky,bCz,I],[dVNky,bCz,I,o],[lvvSP],[lvvSP,o],[lvvSP,I],[lvvSP,I,o],[lvvSP,bCz],[lvvSP,bCz,o],[lvvSP,bCz,I],[lvvSP,bCz,I,o],[lvvSP,dVNky],[lvvSP,dVNky,o],[lvvSP,dVNky,I],[lvvSP,dVNky,I,o],[lvvSP,dVNky,bCz],[lvvSP,dVNky,bCz,o],[lvvSP,dVNky,bCz,I],[lvvSP,dVNky,bCz,I,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1489() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xetu","Z","jfhXU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jfhXU],[Z],[Z,jfhXU],[Xetu],[Xetu,jfhXU],[Xetu,Z],[Xetu,Z,jfhXU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1490() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1491() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "I","mRb","ohjj","umF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[umF],[ohjj],[ohjj,umF],[mRb],[mRb,umF],[mRb,ohjj],[mRb,ohjj,umF],[I],[I,umF],[I,ohjj],[I,ohjj,umF],[I,mRb],[I,mRb,umF],[I,mRb,ohjj],[I,mRb,ohjj,umF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1492() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JYxL","Jkwg","tV","i","hPbNe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hPbNe],[i],[i,hPbNe],[tV],[tV,hPbNe],[tV,i],[tV,i,hPbNe],[Jkwg],[Jkwg,hPbNe],[Jkwg,i],[Jkwg,i,hPbNe],[Jkwg,tV],[Jkwg,tV,hPbNe],[Jkwg,tV,i],[Jkwg,tV,i,hPbNe],[JYxL],[JYxL,hPbNe],[JYxL,i],[JYxL,i,hPbNe],[JYxL,tV],[JYxL,tV,hPbNe],[JYxL,tV,i],[JYxL,tV,i,hPbNe],[JYxL,Jkwg],[JYxL,Jkwg,hPbNe],[JYxL,Jkwg,i],[JYxL,Jkwg,i,hPbNe],[JYxL,Jkwg,tV],[JYxL,Jkwg,tV,hPbNe],[JYxL,Jkwg,tV,i],[JYxL,Jkwg,tV,i,hPbNe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1493() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BHsH","OS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OS],[BHsH],[BHsH,OS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1494() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NR","d","QG","crI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[crI],[QG],[QG,crI],[d],[d,crI],[d,QG],[d,QG,crI],[NR],[NR,crI],[NR,QG],[NR,QG,crI],[NR,d],[NR,d,crI],[NR,d,QG],[NR,d,QG,crI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1495() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fVlxA","SPux","qaTYr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qaTYr],[SPux],[SPux,qaTYr],[fVlxA],[fVlxA,qaTYr],[fVlxA,SPux],[fVlxA,SPux,qaTYr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1496() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PtJmU","waKN","tMx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tMx],[waKN],[waKN,tMx],[PtJmU],[PtJmU,tMx],[PtJmU,waKN],[PtJmU,waKN,tMx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1497() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","llnTB","Al","XyTmU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XyTmU],[Al],[Al,XyTmU],[llnTB],[llnTB,XyTmU],[llnTB,Al],[llnTB,Al,XyTmU],[E],[E,XyTmU],[E,Al],[E,Al,XyTmU],[E,llnTB],[E,llnTB,XyTmU],[E,llnTB,Al],[E,llnTB,Al,XyTmU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1498() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","dd","TFT","u","DR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DR],[u],[u,DR],[TFT],[TFT,DR],[TFT,u],[TFT,u,DR],[dd],[dd,DR],[dd,u],[dd,u,DR],[dd,TFT],[dd,TFT,DR],[dd,TFT,u],[dd,TFT,u,DR],[P],[P,DR],[P,u],[P,u,DR],[P,TFT],[P,TFT,DR],[P,TFT,u],[P,TFT,u,DR],[P,dd],[P,dd,DR],[P,dd,u],[P,dd,u,DR],[P,dd,TFT],[P,dd,TFT,DR],[P,dd,TFT,u],[P,dd,TFT,u,DR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1499() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KA","NbA","wC","LUE","sB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sB],[LUE],[LUE,sB],[wC],[wC,sB],[wC,LUE],[wC,LUE,sB],[NbA],[NbA,sB],[NbA,LUE],[NbA,LUE,sB],[NbA,wC],[NbA,wC,sB],[NbA,wC,LUE],[NbA,wC,LUE,sB],[KA],[KA,sB],[KA,LUE],[KA,LUE,sB],[KA,wC],[KA,wC,sB],[KA,wC,LUE],[KA,wC,LUE,sB],[KA,NbA],[KA,NbA,sB],[KA,NbA,LUE],[KA,NbA,LUE,sB],[KA,NbA,wC],[KA,NbA,wC,sB],[KA,NbA,wC,LUE],[KA,NbA,wC,LUE,sB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1500() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iD","Yw","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[Yw],[Yw,O],[iD],[iD,O],[iD,Yw],[iD,Yw,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1501() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","NY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NY],[g],[g,NY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1502() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iCho","OfqPi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OfqPi],[iCho],[iCho,OfqPi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1503() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Oa","FDRg","ftKg","tLdMZ","UxQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UxQ],[tLdMZ],[tLdMZ,UxQ],[ftKg],[ftKg,UxQ],[ftKg,tLdMZ],[ftKg,tLdMZ,UxQ],[FDRg],[FDRg,UxQ],[FDRg,tLdMZ],[FDRg,tLdMZ,UxQ],[FDRg,ftKg],[FDRg,ftKg,UxQ],[FDRg,ftKg,tLdMZ],[FDRg,ftKg,tLdMZ,UxQ],[Oa],[Oa,UxQ],[Oa,tLdMZ],[Oa,tLdMZ,UxQ],[Oa,ftKg],[Oa,ftKg,UxQ],[Oa,ftKg,tLdMZ],[Oa,ftKg,tLdMZ,UxQ],[Oa,FDRg],[Oa,FDRg,UxQ],[Oa,FDRg,tLdMZ],[Oa,FDRg,tLdMZ,UxQ],[Oa,FDRg,ftKg],[Oa,FDRg,ftKg,UxQ],[Oa,FDRg,ftKg,tLdMZ],[Oa,FDRg,ftKg,tLdMZ,UxQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1504() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[C]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1505() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UBV","wrKj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wrKj],[UBV],[UBV,wrKj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1506() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KbuRb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KbuRb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1507() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VLri")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VLri]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1508() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UJ","Z","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[Z],[Z,n],[UJ],[UJ,n],[UJ,Z],[UJ,Z,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1509() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HGjb","QHNtJ","HzQ","LEH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LEH],[HzQ],[HzQ,LEH],[QHNtJ],[QHNtJ,LEH],[QHNtJ,HzQ],[QHNtJ,HzQ,LEH],[HGjb],[HGjb,LEH],[HGjb,HzQ],[HGjb,HzQ,LEH],[HGjb,QHNtJ],[HGjb,QHNtJ,LEH],[HGjb,QHNtJ,HzQ],[HGjb,QHNtJ,HzQ,LEH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1510() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WaRhF","T","E","lZvF","MjUb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MjUb],[lZvF],[lZvF,MjUb],[E],[E,MjUb],[E,lZvF],[E,lZvF,MjUb],[T],[T,MjUb],[T,lZvF],[T,lZvF,MjUb],[T,E],[T,E,MjUb],[T,E,lZvF],[T,E,lZvF,MjUb],[WaRhF],[WaRhF,MjUb],[WaRhF,lZvF],[WaRhF,lZvF,MjUb],[WaRhF,E],[WaRhF,E,MjUb],[WaRhF,E,lZvF],[WaRhF,E,lZvF,MjUb],[WaRhF,T],[WaRhF,T,MjUb],[WaRhF,T,lZvF],[WaRhF,T,lZvF,MjUb],[WaRhF,T,E],[WaRhF,T,E,MjUb],[WaRhF,T,E,lZvF],[WaRhF,T,E,lZvF,MjUb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1511() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aoojr","mEDCZ","X","lw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lw],[X],[X,lw],[mEDCZ],[mEDCZ,lw],[mEDCZ,X],[mEDCZ,X,lw],[Aoojr],[Aoojr,lw],[Aoojr,X],[Aoojr,X,lw],[Aoojr,mEDCZ],[Aoojr,mEDCZ,lw],[Aoojr,mEDCZ,X],[Aoojr,mEDCZ,X,lw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1512() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bKz","hNmw","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[hNmw],[hNmw,k],[bKz],[bKz,k],[bKz,hNmw],[bKz,hNmw,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1513() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XeieP","BDIc","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[BDIc],[BDIc,N],[XeieP],[XeieP,N],[XeieP,BDIc],[XeieP,BDIc,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1514() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JQ","TRD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TRD],[JQ],[JQ,TRD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1515() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1516() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kK","YJd","LwFG","yt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yt],[LwFG],[LwFG,yt],[YJd],[YJd,yt],[YJd,LwFG],[YJd,LwFG,yt],[kK],[kK,yt],[kK,LwFG],[kK,LwFG,yt],[kK,YJd],[kK,YJd,yt],[kK,YJd,LwFG],[kK,YJd,LwFG,yt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1517() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","du","nfsP","ezK","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[ezK],[ezK,i],[nfsP],[nfsP,i],[nfsP,ezK],[nfsP,ezK,i],[du],[du,i],[du,ezK],[du,ezK,i],[du,nfsP],[du,nfsP,i],[du,nfsP,ezK],[du,nfsP,ezK,i],[p],[p,i],[p,ezK],[p,ezK,i],[p,nfsP],[p,nfsP,i],[p,nfsP,ezK],[p,nfsP,ezK,i],[p,du],[p,du,i],[p,du,ezK],[p,du,ezK,i],[p,du,nfsP],[p,du,nfsP,i],[p,du,nfsP,ezK],[p,du,nfsP,ezK,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1518() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[p]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1519() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","HphK","SAi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SAi],[HphK],[HphK,SAi],[w],[w,SAi],[w,HphK],[w,HphK,SAi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1520() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EDQR","SXb","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[SXb],[SXb,o],[EDQR],[EDQR,o],[EDQR,SXb],[EDQR,SXb,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1521() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vbl","Axgn","GQq","mACd","lPC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lPC],[mACd],[mACd,lPC],[GQq],[GQq,lPC],[GQq,mACd],[GQq,mACd,lPC],[Axgn],[Axgn,lPC],[Axgn,mACd],[Axgn,mACd,lPC],[Axgn,GQq],[Axgn,GQq,lPC],[Axgn,GQq,mACd],[Axgn,GQq,mACd,lPC],[Vbl],[Vbl,lPC],[Vbl,mACd],[Vbl,mACd,lPC],[Vbl,GQq],[Vbl,GQq,lPC],[Vbl,GQq,mACd],[Vbl,GQq,mACd,lPC],[Vbl,Axgn],[Vbl,Axgn,lPC],[Vbl,Axgn,mACd],[Vbl,Axgn,mACd,lPC],[Vbl,Axgn,GQq],[Vbl,Axgn,GQq,lPC],[Vbl,Axgn,GQq,mACd],[Vbl,Axgn,GQq,mACd,lPC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1522() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jPI","s")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[s],[jPI],[jPI,s]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1523() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DQEY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DQEY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1524() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[b]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1525() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Yi","DV","KgViQ","Dy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dy],[KgViQ],[KgViQ,Dy],[DV],[DV,Dy],[DV,KgViQ],[DV,KgViQ,Dy],[Yi],[Yi,Dy],[Yi,KgViQ],[Yi,KgViQ,Dy],[Yi,DV],[Yi,DV,Dy],[Yi,DV,KgViQ],[Yi,DV,KgViQ,Dy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1526() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GoG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GoG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1527() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VkNn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VkNn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1528() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","Vk","ZdMTn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZdMTn],[Vk],[Vk,ZdMTn],[C],[C,ZdMTn],[C,Vk],[C,Vk,ZdMTn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1529() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "covj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[covj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1530() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1531() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1532() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PwiV","KMed","FMTir","Hyk","YQw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YQw],[Hyk],[Hyk,YQw],[FMTir],[FMTir,YQw],[FMTir,Hyk],[FMTir,Hyk,YQw],[KMed],[KMed,YQw],[KMed,Hyk],[KMed,Hyk,YQw],[KMed,FMTir],[KMed,FMTir,YQw],[KMed,FMTir,Hyk],[KMed,FMTir,Hyk,YQw],[PwiV],[PwiV,YQw],[PwiV,Hyk],[PwiV,Hyk,YQw],[PwiV,FMTir],[PwiV,FMTir,YQw],[PwiV,FMTir,Hyk],[PwiV,FMTir,Hyk,YQw],[PwiV,KMed],[PwiV,KMed,YQw],[PwiV,KMed,Hyk],[PwiV,KMed,Hyk,YQw],[PwiV,KMed,FMTir],[PwiV,KMed,FMTir,YQw],[PwiV,KMed,FMTir,Hyk],[PwiV,KMed,FMTir,Hyk,YQw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1533() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MRQdJ","AfCOx","vGMYR","JWuYe","BuYY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BuYY],[JWuYe],[JWuYe,BuYY],[vGMYR],[vGMYR,BuYY],[vGMYR,JWuYe],[vGMYR,JWuYe,BuYY],[AfCOx],[AfCOx,BuYY],[AfCOx,JWuYe],[AfCOx,JWuYe,BuYY],[AfCOx,vGMYR],[AfCOx,vGMYR,BuYY],[AfCOx,vGMYR,JWuYe],[AfCOx,vGMYR,JWuYe,BuYY],[MRQdJ],[MRQdJ,BuYY],[MRQdJ,JWuYe],[MRQdJ,JWuYe,BuYY],[MRQdJ,vGMYR],[MRQdJ,vGMYR,BuYY],[MRQdJ,vGMYR,JWuYe],[MRQdJ,vGMYR,JWuYe,BuYY],[MRQdJ,AfCOx],[MRQdJ,AfCOx,BuYY],[MRQdJ,AfCOx,JWuYe],[MRQdJ,AfCOx,JWuYe,BuYY],[MRQdJ,AfCOx,vGMYR],[MRQdJ,AfCOx,vGMYR,BuYY],[MRQdJ,AfCOx,vGMYR,JWuYe],[MRQdJ,AfCOx,vGMYR,JWuYe,BuYY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1534() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PRSV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PRSV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1535() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iLVFt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iLVFt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1536() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RSd","HALa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HALa],[RSd],[RSd,HALa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1537() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nDVgC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nDVgC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1538() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dYCXy","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[dYCXy],[dYCXy,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1539() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RKfp","vR","Elax")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Elax],[vR],[vR,Elax],[RKfp],[RKfp,Elax],[RKfp,vR],[RKfp,vR,Elax]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1540() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HZV","Yuc","GO","k","yv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yv],[k],[k,yv],[GO],[GO,yv],[GO,k],[GO,k,yv],[Yuc],[Yuc,yv],[Yuc,k],[Yuc,k,yv],[Yuc,GO],[Yuc,GO,yv],[Yuc,GO,k],[Yuc,GO,k,yv],[HZV],[HZV,yv],[HZV,k],[HZV,k,yv],[HZV,GO],[HZV,GO,yv],[HZV,GO,k],[HZV,GO,k,yv],[HZV,Yuc],[HZV,Yuc,yv],[HZV,Yuc,k],[HZV,Yuc,k,yv],[HZV,Yuc,GO],[HZV,Yuc,GO,yv],[HZV,Yuc,GO,k],[HZV,Yuc,GO,k,yv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1541() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gmw","eqiX","VON","CTqgV","EMR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EMR],[CTqgV],[CTqgV,EMR],[VON],[VON,EMR],[VON,CTqgV],[VON,CTqgV,EMR],[eqiX],[eqiX,EMR],[eqiX,CTqgV],[eqiX,CTqgV,EMR],[eqiX,VON],[eqiX,VON,EMR],[eqiX,VON,CTqgV],[eqiX,VON,CTqgV,EMR],[Gmw],[Gmw,EMR],[Gmw,CTqgV],[Gmw,CTqgV,EMR],[Gmw,VON],[Gmw,VON,EMR],[Gmw,VON,CTqgV],[Gmw,VON,CTqgV,EMR],[Gmw,eqiX],[Gmw,eqiX,EMR],[Gmw,eqiX,CTqgV],[Gmw,eqiX,CTqgV,EMR],[Gmw,eqiX,VON],[Gmw,eqiX,VON,EMR],[Gmw,eqiX,VON,CTqgV],[Gmw,eqiX,VON,CTqgV,EMR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1542() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZoFO","pE","HWGE","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[HWGE],[HWGE,o],[pE],[pE,o],[pE,HWGE],[pE,HWGE,o],[ZoFO],[ZoFO,o],[ZoFO,HWGE],[ZoFO,HWGE,o],[ZoFO,pE],[ZoFO,pE,o],[ZoFO,pE,HWGE],[ZoFO,pE,HWGE,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1543() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "em","smDlo","l","qFVBX","gEl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gEl],[qFVBX],[qFVBX,gEl],[l],[l,gEl],[l,qFVBX],[l,qFVBX,gEl],[smDlo],[smDlo,gEl],[smDlo,qFVBX],[smDlo,qFVBX,gEl],[smDlo,l],[smDlo,l,gEl],[smDlo,l,qFVBX],[smDlo,l,qFVBX,gEl],[em],[em,gEl],[em,qFVBX],[em,qFVBX,gEl],[em,l],[em,l,gEl],[em,l,qFVBX],[em,l,qFVBX,gEl],[em,smDlo],[em,smDlo,gEl],[em,smDlo,qFVBX],[em,smDlo,qFVBX,gEl],[em,smDlo,l],[em,smDlo,l,gEl],[em,smDlo,l,qFVBX],[em,smDlo,l,qFVBX,gEl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1544() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yK","iFury","qSwh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qSwh],[iFury],[iFury,qSwh],[yK],[yK,qSwh],[yK,iFury],[yK,iFury,qSwh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1545() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VF","IxmzT","wiGG","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[wiGG],[wiGG,O],[IxmzT],[IxmzT,O],[IxmzT,wiGG],[IxmzT,wiGG,O],[VF],[VF,O],[VF,wiGG],[VF,wiGG,O],[VF,IxmzT],[VF,IxmzT,O],[VF,IxmzT,wiGG],[VF,IxmzT,wiGG,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1546() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "APzy","cjK","Ez","v")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[v],[Ez],[Ez,v],[cjK],[cjK,v],[cjK,Ez],[cjK,Ez,v],[APzy],[APzy,v],[APzy,Ez],[APzy,Ez,v],[APzy,cjK],[APzy,cjK,v],[APzy,cjK,Ez],[APzy,cjK,Ez,v]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1547() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VaVC","euyV","tx","Jfq","nusVS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nusVS],[Jfq],[Jfq,nusVS],[tx],[tx,nusVS],[tx,Jfq],[tx,Jfq,nusVS],[euyV],[euyV,nusVS],[euyV,Jfq],[euyV,Jfq,nusVS],[euyV,tx],[euyV,tx,nusVS],[euyV,tx,Jfq],[euyV,tx,Jfq,nusVS],[VaVC],[VaVC,nusVS],[VaVC,Jfq],[VaVC,Jfq,nusVS],[VaVC,tx],[VaVC,tx,nusVS],[VaVC,tx,Jfq],[VaVC,tx,Jfq,nusVS],[VaVC,euyV],[VaVC,euyV,nusVS],[VaVC,euyV,Jfq],[VaVC,euyV,Jfq,nusVS],[VaVC,euyV,tx],[VaVC,euyV,tx,nusVS],[VaVC,euyV,tx,Jfq],[VaVC,euyV,tx,Jfq,nusVS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1548() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PP","mSx","IfT","qVQfq","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[qVQfq],[qVQfq,x],[IfT],[IfT,x],[IfT,qVQfq],[IfT,qVQfq,x],[mSx],[mSx,x],[mSx,qVQfq],[mSx,qVQfq,x],[mSx,IfT],[mSx,IfT,x],[mSx,IfT,qVQfq],[mSx,IfT,qVQfq,x],[PP],[PP,x],[PP,qVQfq],[PP,qVQfq,x],[PP,IfT],[PP,IfT,x],[PP,IfT,qVQfq],[PP,IfT,qVQfq,x],[PP,mSx],[PP,mSx,x],[PP,mSx,qVQfq],[PP,mSx,qVQfq,x],[PP,mSx,IfT],[PP,mSx,IfT,x],[PP,mSx,IfT,qVQfq],[PP,mSx,IfT,qVQfq,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1549() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qFkNq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qFkNq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1550() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Abv","plu","iTG","Qo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qo],[iTG],[iTG,Qo],[plu],[plu,Qo],[plu,iTG],[plu,iTG,Qo],[Abv],[Abv,Qo],[Abv,iTG],[Abv,iTG,Qo],[Abv,plu],[Abv,plu,Qo],[Abv,plu,iTG],[Abv,plu,iTG,Qo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1551() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gtoJD","Ish")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ish],[gtoJD],[gtoJD,Ish]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1552() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Wk","v","V","aL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aL],[V],[V,aL],[v],[v,aL],[v,V],[v,V,aL],[Wk],[Wk,aL],[Wk,V],[Wk,V,aL],[Wk,v],[Wk,v,aL],[Wk,v,V],[Wk,v,V,aL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1553() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vj","SSbSR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SSbSR],[vj],[vj,SSbSR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1554() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ze")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ze]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1555() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yGq","Mdcm","OI","QYHy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QYHy],[OI],[OI,QYHy],[Mdcm],[Mdcm,QYHy],[Mdcm,OI],[Mdcm,OI,QYHy],[yGq],[yGq,QYHy],[yGq,OI],[yGq,OI,QYHy],[yGq,Mdcm],[yGq,Mdcm,QYHy],[yGq,Mdcm,OI],[yGq,Mdcm,OI,QYHy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1556() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tgQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tgQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1557() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qowxj","vWC","Stx","kfa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kfa],[Stx],[Stx,kfa],[vWC],[vWC,kfa],[vWC,Stx],[vWC,Stx,kfa],[Qowxj],[Qowxj,kfa],[Qowxj,Stx],[Qowxj,Stx,kfa],[Qowxj,vWC],[Qowxj,vWC,kfa],[Qowxj,vWC,Stx],[Qowxj,vWC,Stx,kfa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1558() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FkBun","AXxa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AXxa],[FkBun],[FkBun,AXxa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1559() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bzETg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bzETg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1560() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MJo","Plr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Plr],[MJo],[MJo,Plr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1561() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ij","nGWp","H","Xp","FpS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FpS],[Xp],[Xp,FpS],[H],[H,FpS],[H,Xp],[H,Xp,FpS],[nGWp],[nGWp,FpS],[nGWp,Xp],[nGWp,Xp,FpS],[nGWp,H],[nGWp,H,FpS],[nGWp,H,Xp],[nGWp,H,Xp,FpS],[Ij],[Ij,FpS],[Ij,Xp],[Ij,Xp,FpS],[Ij,H],[Ij,H,FpS],[Ij,H,Xp],[Ij,H,Xp,FpS],[Ij,nGWp],[Ij,nGWp,FpS],[Ij,nGWp,Xp],[Ij,nGWp,Xp,FpS],[Ij,nGWp,H],[Ij,nGWp,H,FpS],[Ij,nGWp,H,Xp],[Ij,nGWp,H,Xp,FpS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1562() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hdevs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hdevs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1563() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dOC","pKv","KG","peOlF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[peOlF],[KG],[KG,peOlF],[pKv],[pKv,peOlF],[pKv,KG],[pKv,KG,peOlF],[dOC],[dOC,peOlF],[dOC,KG],[dOC,KG,peOlF],[dOC,pKv],[dOC,pKv,peOlF],[dOC,pKv,KG],[dOC,pKv,KG,peOlF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1564() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vInR","i","j","EspN","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[EspN],[EspN,m],[j],[j,m],[j,EspN],[j,EspN,m],[i],[i,m],[i,EspN],[i,EspN,m],[i,j],[i,j,m],[i,j,EspN],[i,j,EspN,m],[vInR],[vInR,m],[vInR,EspN],[vInR,EspN,m],[vInR,j],[vInR,j,m],[vInR,j,EspN],[vInR,j,EspN,m],[vInR,i],[vInR,i,m],[vInR,i,EspN],[vInR,i,EspN,m],[vInR,i,j],[vInR,i,j,m],[vInR,i,j,EspN],[vInR,i,j,EspN,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1565() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aI","XnhT","hah","RaN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RaN],[hah],[hah,RaN],[XnhT],[XnhT,RaN],[XnhT,hah],[XnhT,hah,RaN],[aI],[aI,RaN],[aI,hah],[aI,hah,RaN],[aI,XnhT],[aI,XnhT,RaN],[aI,XnhT,hah],[aI,XnhT,hah,RaN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1566() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GFkyz","g","z","eib","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[eib],[eib,o],[z],[z,o],[z,eib],[z,eib,o],[g],[g,o],[g,eib],[g,eib,o],[g,z],[g,z,o],[g,z,eib],[g,z,eib,o],[GFkyz],[GFkyz,o],[GFkyz,eib],[GFkyz,eib,o],[GFkyz,z],[GFkyz,z,o],[GFkyz,z,eib],[GFkyz,z,eib,o],[GFkyz,g],[GFkyz,g,o],[GFkyz,g,eib],[GFkyz,g,eib,o],[GFkyz,g,z],[GFkyz,g,z,o],[GFkyz,g,z,eib],[GFkyz,g,z,eib,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1567() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","TFNfP","ai","iuGU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iuGU],[ai],[ai,iuGU],[TFNfP],[TFNfP,iuGU],[TFNfP,ai],[TFNfP,ai,iuGU],[D],[D,iuGU],[D,ai],[D,ai,iuGU],[D,TFNfP],[D,TFNfP,iuGU],[D,TFNfP,ai],[D,TFNfP,ai,iuGU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1568() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dxhe","saByZ","ipAKv","nm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nm],[ipAKv],[ipAKv,nm],[saByZ],[saByZ,nm],[saByZ,ipAKv],[saByZ,ipAKv,nm],[Dxhe],[Dxhe,nm],[Dxhe,ipAKv],[Dxhe,ipAKv,nm],[Dxhe,saByZ],[Dxhe,saByZ,nm],[Dxhe,saByZ,ipAKv],[Dxhe,saByZ,ipAKv,nm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1569() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1570() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rOP","UCP","ILJ","SGIHQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SGIHQ],[ILJ],[ILJ,SGIHQ],[UCP],[UCP,SGIHQ],[UCP,ILJ],[UCP,ILJ,SGIHQ],[rOP],[rOP,SGIHQ],[rOP,ILJ],[rOP,ILJ,SGIHQ],[rOP,UCP],[rOP,UCP,SGIHQ],[rOP,UCP,ILJ],[rOP,UCP,ILJ,SGIHQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1571() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NUnjV","P","lUSkf","SLH","nmN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nmN],[SLH],[SLH,nmN],[lUSkf],[lUSkf,nmN],[lUSkf,SLH],[lUSkf,SLH,nmN],[P],[P,nmN],[P,SLH],[P,SLH,nmN],[P,lUSkf],[P,lUSkf,nmN],[P,lUSkf,SLH],[P,lUSkf,SLH,nmN],[NUnjV],[NUnjV,nmN],[NUnjV,SLH],[NUnjV,SLH,nmN],[NUnjV,lUSkf],[NUnjV,lUSkf,nmN],[NUnjV,lUSkf,SLH],[NUnjV,lUSkf,SLH,nmN],[NUnjV,P],[NUnjV,P,nmN],[NUnjV,P,SLH],[NUnjV,P,SLH,nmN],[NUnjV,P,lUSkf],[NUnjV,P,lUSkf,nmN],[NUnjV,P,lUSkf,SLH],[NUnjV,P,lUSkf,SLH,nmN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1572() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hdm","BrT","fqF","zU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zU],[fqF],[fqF,zU],[BrT],[BrT,zU],[BrT,fqF],[BrT,fqF,zU],[Hdm],[Hdm,zU],[Hdm,fqF],[Hdm,fqF,zU],[Hdm,BrT],[Hdm,BrT,zU],[Hdm,BrT,fqF],[Hdm,BrT,fqF,zU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1573() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","JiU","ZgOPa","nGt","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[nGt],[nGt,k],[ZgOPa],[ZgOPa,k],[ZgOPa,nGt],[ZgOPa,nGt,k],[JiU],[JiU,k],[JiU,nGt],[JiU,nGt,k],[JiU,ZgOPa],[JiU,ZgOPa,k],[JiU,ZgOPa,nGt],[JiU,ZgOPa,nGt,k],[q],[q,k],[q,nGt],[q,nGt,k],[q,ZgOPa],[q,ZgOPa,k],[q,ZgOPa,nGt],[q,ZgOPa,nGt,k],[q,JiU],[q,JiU,k],[q,JiU,nGt],[q,JiU,nGt,k],[q,JiU,ZgOPa],[q,JiU,ZgOPa,k],[q,JiU,ZgOPa,nGt],[q,JiU,ZgOPa,nGt,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1574() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dEmw","hEQwp","sLSY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sLSY],[hEQwp],[hEQwp,sLSY],[dEmw],[dEmw,sLSY],[dEmw,hEQwp],[dEmw,hEQwp,sLSY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1575() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MwwSt","SN","hwL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hwL],[SN],[SN,hwL],[MwwSt],[MwwSt,hwL],[MwwSt,SN],[MwwSt,SN,hwL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1576() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YQwX","XY","ADD","AqU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AqU],[ADD],[ADD,AqU],[XY],[XY,AqU],[XY,ADD],[XY,ADD,AqU],[YQwX],[YQwX,AqU],[YQwX,ADD],[YQwX,ADD,AqU],[YQwX,XY],[YQwX,XY,AqU],[YQwX,XY,ADD],[YQwX,XY,ADD,AqU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1577() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Uj","nF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nF],[Uj],[Uj,nF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1578() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rev","KTZa","Y","ZU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZU],[Y],[Y,ZU],[KTZa],[KTZa,ZU],[KTZa,Y],[KTZa,Y,ZU],[rev],[rev,ZU],[rev,Y],[rev,Y,ZU],[rev,KTZa],[rev,KTZa,ZU],[rev,KTZa,Y],[rev,KTZa,Y,ZU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1579() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "icZ","nZRKc","Ys")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ys],[nZRKc],[nZRKc,Ys],[icZ],[icZ,Ys],[icZ,nZRKc],[icZ,nZRKc,Ys]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1580() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rlU","XNu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XNu],[rlU],[rlU,XNu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1581() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xbIz","u","puDNf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[puDNf],[u],[u,puDNf],[xbIz],[xbIz,puDNf],[xbIz,u],[xbIz,u,puDNf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1582() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tGR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tGR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1583() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vz","wL","XzNhG","Hf","YiN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YiN],[Hf],[Hf,YiN],[XzNhG],[XzNhG,YiN],[XzNhG,Hf],[XzNhG,Hf,YiN],[wL],[wL,YiN],[wL,Hf],[wL,Hf,YiN],[wL,XzNhG],[wL,XzNhG,YiN],[wL,XzNhG,Hf],[wL,XzNhG,Hf,YiN],[Vz],[Vz,YiN],[Vz,Hf],[Vz,Hf,YiN],[Vz,XzNhG],[Vz,XzNhG,YiN],[Vz,XzNhG,Hf],[Vz,XzNhG,Hf,YiN],[Vz,wL],[Vz,wL,YiN],[Vz,wL,Hf],[Vz,wL,Hf,YiN],[Vz,wL,XzNhG],[Vz,wL,XzNhG,YiN],[Vz,wL,XzNhG,Hf],[Vz,wL,XzNhG,Hf,YiN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1584() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1585() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RV","onqc","el","jt","DGcxD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DGcxD],[jt],[jt,DGcxD],[el],[el,DGcxD],[el,jt],[el,jt,DGcxD],[onqc],[onqc,DGcxD],[onqc,jt],[onqc,jt,DGcxD],[onqc,el],[onqc,el,DGcxD],[onqc,el,jt],[onqc,el,jt,DGcxD],[RV],[RV,DGcxD],[RV,jt],[RV,jt,DGcxD],[RV,el],[RV,el,DGcxD],[RV,el,jt],[RV,el,jt,DGcxD],[RV,onqc],[RV,onqc,DGcxD],[RV,onqc,jt],[RV,onqc,jt,DGcxD],[RV,onqc,el],[RV,onqc,el,DGcxD],[RV,onqc,el,jt],[RV,onqc,el,jt,DGcxD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1586() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vdkS","E","NCpH","EDz","xOBD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xOBD],[EDz],[EDz,xOBD],[NCpH],[NCpH,xOBD],[NCpH,EDz],[NCpH,EDz,xOBD],[E],[E,xOBD],[E,EDz],[E,EDz,xOBD],[E,NCpH],[E,NCpH,xOBD],[E,NCpH,EDz],[E,NCpH,EDz,xOBD],[vdkS],[vdkS,xOBD],[vdkS,EDz],[vdkS,EDz,xOBD],[vdkS,NCpH],[vdkS,NCpH,xOBD],[vdkS,NCpH,EDz],[vdkS,NCpH,EDz,xOBD],[vdkS,E],[vdkS,E,xOBD],[vdkS,E,EDz],[vdkS,E,EDz,xOBD],[vdkS,E,NCpH],[vdkS,E,NCpH,xOBD],[vdkS,E,NCpH,EDz],[vdkS,E,NCpH,EDz,xOBD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1587() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","dh","qxmRr","dwIZT","XUz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XUz],[dwIZT],[dwIZT,XUz],[qxmRr],[qxmRr,XUz],[qxmRr,dwIZT],[qxmRr,dwIZT,XUz],[dh],[dh,XUz],[dh,dwIZT],[dh,dwIZT,XUz],[dh,qxmRr],[dh,qxmRr,XUz],[dh,qxmRr,dwIZT],[dh,qxmRr,dwIZT,XUz],[Q],[Q,XUz],[Q,dwIZT],[Q,dwIZT,XUz],[Q,qxmRr],[Q,qxmRr,XUz],[Q,qxmRr,dwIZT],[Q,qxmRr,dwIZT,XUz],[Q,dh],[Q,dh,XUz],[Q,dh,dwIZT],[Q,dh,dwIZT,XUz],[Q,dh,qxmRr],[Q,dh,qxmRr,XUz],[Q,dh,qxmRr,dwIZT],[Q,dh,qxmRr,dwIZT,XUz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1588() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cQA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cQA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1589() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ESV","oGewN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oGewN],[ESV],[ESV,oGewN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1590() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VQL","MRY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MRY],[VQL],[VQL,MRY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1591() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cs","nHJNm","jcDru","HWHU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HWHU],[jcDru],[jcDru,HWHU],[nHJNm],[nHJNm,HWHU],[nHJNm,jcDru],[nHJNm,jcDru,HWHU],[Cs],[Cs,HWHU],[Cs,jcDru],[Cs,jcDru,HWHU],[Cs,nHJNm],[Cs,nHJNm,HWHU],[Cs,nHJNm,jcDru],[Cs,nHJNm,jcDru,HWHU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1592() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CD","tnlbm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tnlbm],[CD],[CD,tnlbm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1593() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Viu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Viu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1594() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rmq","PzV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PzV],[rmq],[rmq,PzV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1595() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "psXK","MRQt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MRQt],[psXK],[psXK,MRQt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1596() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eUsMn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eUsMn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1597() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ekg","t","XWdU","aycRm","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[aycRm],[aycRm,O],[XWdU],[XWdU,O],[XWdU,aycRm],[XWdU,aycRm,O],[t],[t,O],[t,aycRm],[t,aycRm,O],[t,XWdU],[t,XWdU,O],[t,XWdU,aycRm],[t,XWdU,aycRm,O],[ekg],[ekg,O],[ekg,aycRm],[ekg,aycRm,O],[ekg,XWdU],[ekg,XWdU,O],[ekg,XWdU,aycRm],[ekg,XWdU,aycRm,O],[ekg,t],[ekg,t,O],[ekg,t,aycRm],[ekg,t,aycRm,O],[ekg,t,XWdU],[ekg,t,XWdU,O],[ekg,t,XWdU,aycRm],[ekg,t,XWdU,aycRm,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1598() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dqp","ZOtX","EtUX","VFpo","SyGBO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SyGBO],[VFpo],[VFpo,SyGBO],[EtUX],[EtUX,SyGBO],[EtUX,VFpo],[EtUX,VFpo,SyGBO],[ZOtX],[ZOtX,SyGBO],[ZOtX,VFpo],[ZOtX,VFpo,SyGBO],[ZOtX,EtUX],[ZOtX,EtUX,SyGBO],[ZOtX,EtUX,VFpo],[ZOtX,EtUX,VFpo,SyGBO],[dqp],[dqp,SyGBO],[dqp,VFpo],[dqp,VFpo,SyGBO],[dqp,EtUX],[dqp,EtUX,SyGBO],[dqp,EtUX,VFpo],[dqp,EtUX,VFpo,SyGBO],[dqp,ZOtX],[dqp,ZOtX,SyGBO],[dqp,ZOtX,VFpo],[dqp,ZOtX,VFpo,SyGBO],[dqp,ZOtX,EtUX],[dqp,ZOtX,EtUX,SyGBO],[dqp,ZOtX,EtUX,VFpo],[dqp,ZOtX,EtUX,VFpo,SyGBO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1599() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SIbCZ","xKI","KR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KR],[xKI],[xKI,KR],[SIbCZ],[SIbCZ,KR],[SIbCZ,xKI],[SIbCZ,xKI,KR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1600() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XBm","tmUW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tmUW],[XBm],[XBm,tmUW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1601() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LIeEx","aZv","IZtQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IZtQ],[aZv],[aZv,IZtQ],[LIeEx],[LIeEx,IZtQ],[LIeEx,aZv],[LIeEx,aZv,IZtQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1602() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MkN","MQJ","YNb","oIY","HUfsZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HUfsZ],[oIY],[oIY,HUfsZ],[YNb],[YNb,HUfsZ],[YNb,oIY],[YNb,oIY,HUfsZ],[MQJ],[MQJ,HUfsZ],[MQJ,oIY],[MQJ,oIY,HUfsZ],[MQJ,YNb],[MQJ,YNb,HUfsZ],[MQJ,YNb,oIY],[MQJ,YNb,oIY,HUfsZ],[MkN],[MkN,HUfsZ],[MkN,oIY],[MkN,oIY,HUfsZ],[MkN,YNb],[MkN,YNb,HUfsZ],[MkN,YNb,oIY],[MkN,YNb,oIY,HUfsZ],[MkN,MQJ],[MkN,MQJ,HUfsZ],[MkN,MQJ,oIY],[MkN,MQJ,oIY,HUfsZ],[MkN,MQJ,YNb],[MkN,MQJ,YNb,HUfsZ],[MkN,MQJ,YNb,oIY],[MkN,MQJ,YNb,oIY,HUfsZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1603() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","AhM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AhM],[f],[f,AhM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1604() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1605() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SlLg","IGOK","iIh","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[iIh],[iIh,N],[IGOK],[IGOK,N],[IGOK,iIh],[IGOK,iIh,N],[SlLg],[SlLg,N],[SlLg,iIh],[SlLg,iIh,N],[SlLg,IGOK],[SlLg,IGOK,N],[SlLg,IGOK,iIh],[SlLg,IGOK,iIh,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1606() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HKMvT","MO","wlHjc","w","pjP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pjP],[w],[w,pjP],[wlHjc],[wlHjc,pjP],[wlHjc,w],[wlHjc,w,pjP],[MO],[MO,pjP],[MO,w],[MO,w,pjP],[MO,wlHjc],[MO,wlHjc,pjP],[MO,wlHjc,w],[MO,wlHjc,w,pjP],[HKMvT],[HKMvT,pjP],[HKMvT,w],[HKMvT,w,pjP],[HKMvT,wlHjc],[HKMvT,wlHjc,pjP],[HKMvT,wlHjc,w],[HKMvT,wlHjc,w,pjP],[HKMvT,MO],[HKMvT,MO,pjP],[HKMvT,MO,w],[HKMvT,MO,w,pjP],[HKMvT,MO,wlHjc],[HKMvT,MO,wlHjc,pjP],[HKMvT,MO,wlHjc,w],[HKMvT,MO,wlHjc,w,pjP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1607() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "if")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[if]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1608() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","tz","BL","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[BL],[BL,J],[tz],[tz,J],[tz,BL],[tz,BL,J],[r],[r,J],[r,BL],[r,BL,J],[r,tz],[r,tz,J],[r,tz,BL],[r,tz,BL,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1609() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wlOCf","BhdHb","OOM","lJ","Vt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vt],[lJ],[lJ,Vt],[OOM],[OOM,Vt],[OOM,lJ],[OOM,lJ,Vt],[BhdHb],[BhdHb,Vt],[BhdHb,lJ],[BhdHb,lJ,Vt],[BhdHb,OOM],[BhdHb,OOM,Vt],[BhdHb,OOM,lJ],[BhdHb,OOM,lJ,Vt],[wlOCf],[wlOCf,Vt],[wlOCf,lJ],[wlOCf,lJ,Vt],[wlOCf,OOM],[wlOCf,OOM,Vt],[wlOCf,OOM,lJ],[wlOCf,OOM,lJ,Vt],[wlOCf,BhdHb],[wlOCf,BhdHb,Vt],[wlOCf,BhdHb,lJ],[wlOCf,BhdHb,lJ,Vt],[wlOCf,BhdHb,OOM],[wlOCf,BhdHb,OOM,Vt],[wlOCf,BhdHb,OOM,lJ],[wlOCf,BhdHb,OOM,lJ,Vt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1610() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","w","uS","We","fyssL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fyssL],[We],[We,fyssL],[uS],[uS,fyssL],[uS,We],[uS,We,fyssL],[w],[w,fyssL],[w,We],[w,We,fyssL],[w,uS],[w,uS,fyssL],[w,uS,We],[w,uS,We,fyssL],[c],[c,fyssL],[c,We],[c,We,fyssL],[c,uS],[c,uS,fyssL],[c,uS,We],[c,uS,We,fyssL],[c,w],[c,w,fyssL],[c,w,We],[c,w,We,fyssL],[c,w,uS],[c,w,uS,fyssL],[c,w,uS,We],[c,w,uS,We,fyssL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1611() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uu","Jzc","SF","OC","HeI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HeI],[OC],[OC,HeI],[SF],[SF,HeI],[SF,OC],[SF,OC,HeI],[Jzc],[Jzc,HeI],[Jzc,OC],[Jzc,OC,HeI],[Jzc,SF],[Jzc,SF,HeI],[Jzc,SF,OC],[Jzc,SF,OC,HeI],[uu],[uu,HeI],[uu,OC],[uu,OC,HeI],[uu,SF],[uu,SF,HeI],[uu,SF,OC],[uu,SF,OC,HeI],[uu,Jzc],[uu,Jzc,HeI],[uu,Jzc,OC],[uu,Jzc,OC,HeI],[uu,Jzc,SF],[uu,Jzc,SF,HeI],[uu,Jzc,SF,OC],[uu,Jzc,SF,OC,HeI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1612() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xEm","UZl","bCEPN","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[bCEPN],[bCEPN,o],[UZl],[UZl,o],[UZl,bCEPN],[UZl,bCEPN,o],[xEm],[xEm,o],[xEm,bCEPN],[xEm,bCEPN,o],[xEm,UZl],[xEm,UZl,o],[xEm,UZl,bCEPN],[xEm,UZl,bCEPN,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1613() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NxP","upHFh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[upHFh],[NxP],[NxP,upHFh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1614() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LmQ","OYr","Z","JW","lhSNt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lhSNt],[JW],[JW,lhSNt],[Z],[Z,lhSNt],[Z,JW],[Z,JW,lhSNt],[OYr],[OYr,lhSNt],[OYr,JW],[OYr,JW,lhSNt],[OYr,Z],[OYr,Z,lhSNt],[OYr,Z,JW],[OYr,Z,JW,lhSNt],[LmQ],[LmQ,lhSNt],[LmQ,JW],[LmQ,JW,lhSNt],[LmQ,Z],[LmQ,Z,lhSNt],[LmQ,Z,JW],[LmQ,Z,JW,lhSNt],[LmQ,OYr],[LmQ,OYr,lhSNt],[LmQ,OYr,JW],[LmQ,OYr,JW,lhSNt],[LmQ,OYr,Z],[LmQ,OYr,Z,lhSNt],[LmQ,OYr,Z,JW],[LmQ,OYr,Z,JW,lhSNt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1615() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hiUl","jNSl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jNSl],[hiUl],[hiUl,jNSl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1616() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GTmA","pPCyB","kH","Tzb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tzb],[kH],[kH,Tzb],[pPCyB],[pPCyB,Tzb],[pPCyB,kH],[pPCyB,kH,Tzb],[GTmA],[GTmA,Tzb],[GTmA,kH],[GTmA,kH,Tzb],[GTmA,pPCyB],[GTmA,pPCyB,Tzb],[GTmA,pPCyB,kH],[GTmA,pPCyB,kH,Tzb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1617() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zdj","CX","mulZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mulZ],[CX],[CX,mulZ],[zdj],[zdj,mulZ],[zdj,CX],[zdj,CX,mulZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1618() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FbbKj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FbbKj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1619() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LuMD","Fef","BmQ","HJo","XSJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XSJ],[HJo],[HJo,XSJ],[BmQ],[BmQ,XSJ],[BmQ,HJo],[BmQ,HJo,XSJ],[Fef],[Fef,XSJ],[Fef,HJo],[Fef,HJo,XSJ],[Fef,BmQ],[Fef,BmQ,XSJ],[Fef,BmQ,HJo],[Fef,BmQ,HJo,XSJ],[LuMD],[LuMD,XSJ],[LuMD,HJo],[LuMD,HJo,XSJ],[LuMD,BmQ],[LuMD,BmQ,XSJ],[LuMD,BmQ,HJo],[LuMD,BmQ,HJo,XSJ],[LuMD,Fef],[LuMD,Fef,XSJ],[LuMD,Fef,HJo],[LuMD,Fef,HJo,XSJ],[LuMD,Fef,BmQ],[LuMD,Fef,BmQ,XSJ],[LuMD,Fef,BmQ,HJo],[LuMD,Fef,BmQ,HJo,XSJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1620() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pvI","mb","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[mb],[mb,W],[pvI],[pvI,W],[pvI,mb],[pvI,mb,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1621() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JMsvV","y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y],[JMsvV],[JMsvV,y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1622() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1623() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NIgN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NIgN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1624() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","GZad","JKJeK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JKJeK],[GZad],[GZad,JKJeK],[q],[q,JKJeK],[q,GZad],[q,GZad,JKJeK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1625() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mtZUH","f","tyM","iD","AO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AO],[iD],[iD,AO],[tyM],[tyM,AO],[tyM,iD],[tyM,iD,AO],[f],[f,AO],[f,iD],[f,iD,AO],[f,tyM],[f,tyM,AO],[f,tyM,iD],[f,tyM,iD,AO],[mtZUH],[mtZUH,AO],[mtZUH,iD],[mtZUH,iD,AO],[mtZUH,tyM],[mtZUH,tyM,AO],[mtZUH,tyM,iD],[mtZUH,tyM,iD,AO],[mtZUH,f],[mtZUH,f,AO],[mtZUH,f,iD],[mtZUH,f,iD,AO],[mtZUH,f,tyM],[mtZUH,f,tyM,AO],[mtZUH,f,tyM,iD],[mtZUH,f,tyM,iD,AO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1626() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gQrI","GNXT","h","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[h],[h,O],[GNXT],[GNXT,O],[GNXT,h],[GNXT,h,O],[gQrI],[gQrI,O],[gQrI,h],[gQrI,h,O],[gQrI,GNXT],[gQrI,GNXT,O],[gQrI,GNXT,h],[gQrI,GNXT,h,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1627() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ingis")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ingis]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1628() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hwmho","zuBy","NBN","L","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[L],[L,o],[NBN],[NBN,o],[NBN,L],[NBN,L,o],[zuBy],[zuBy,o],[zuBy,L],[zuBy,L,o],[zuBy,NBN],[zuBy,NBN,o],[zuBy,NBN,L],[zuBy,NBN,L,o],[hwmho],[hwmho,o],[hwmho,L],[hwmho,L,o],[hwmho,NBN],[hwmho,NBN,o],[hwmho,NBN,L],[hwmho,NBN,L,o],[hwmho,zuBy],[hwmho,zuBy,o],[hwmho,zuBy,L],[hwmho,zuBy,L,o],[hwmho,zuBy,NBN],[hwmho,zuBy,NBN,o],[hwmho,zuBy,NBN,L],[hwmho,zuBy,NBN,L,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1629() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qmw","mZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mZ],[qmw],[qmw,mZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1630() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1631() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[a]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1632() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "efJf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[efJf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1633() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","JUv","SkCSu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SkCSu],[JUv],[JUv,SkCSu],[g],[g,SkCSu],[g,JUv],[g,JUv,SkCSu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1634() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KTLD","r","gerHr","OFRdY","MJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MJ],[OFRdY],[OFRdY,MJ],[gerHr],[gerHr,MJ],[gerHr,OFRdY],[gerHr,OFRdY,MJ],[r],[r,MJ],[r,OFRdY],[r,OFRdY,MJ],[r,gerHr],[r,gerHr,MJ],[r,gerHr,OFRdY],[r,gerHr,OFRdY,MJ],[KTLD],[KTLD,MJ],[KTLD,OFRdY],[KTLD,OFRdY,MJ],[KTLD,gerHr],[KTLD,gerHr,MJ],[KTLD,gerHr,OFRdY],[KTLD,gerHr,OFRdY,MJ],[KTLD,r],[KTLD,r,MJ],[KTLD,r,OFRdY],[KTLD,r,OFRdY,MJ],[KTLD,r,gerHr],[KTLD,r,gerHr,MJ],[KTLD,r,gerHr,OFRdY],[KTLD,r,gerHr,OFRdY,MJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1635() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cglSL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cglSL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1636() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X","VU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VU],[X],[X,VU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1637() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cP","Ur")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ur],[cP],[cP,Ur]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1638() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PPu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PPu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1639() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hy","hAfhd","GND")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GND],[hAfhd],[hAfhd,GND],[hy],[hy,GND],[hy,hAfhd],[hy,hAfhd,GND]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1640() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BOVT","WTK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WTK],[BOVT],[BOVT,WTK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1641() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","VeDmP","af","v","Jb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jb],[v],[v,Jb],[af],[af,Jb],[af,v],[af,v,Jb],[VeDmP],[VeDmP,Jb],[VeDmP,v],[VeDmP,v,Jb],[VeDmP,af],[VeDmP,af,Jb],[VeDmP,af,v],[VeDmP,af,v,Jb],[R],[R,Jb],[R,v],[R,v,Jb],[R,af],[R,af,Jb],[R,af,v],[R,af,v,Jb],[R,VeDmP],[R,VeDmP,Jb],[R,VeDmP,v],[R,VeDmP,v,Jb],[R,VeDmP,af],[R,VeDmP,af,Jb],[R,VeDmP,af,v],[R,VeDmP,af,v,Jb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1642() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GZu","W","Y","wykOb","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[wykOb],[wykOb,z],[Y],[Y,z],[Y,wykOb],[Y,wykOb,z],[W],[W,z],[W,wykOb],[W,wykOb,z],[W,Y],[W,Y,z],[W,Y,wykOb],[W,Y,wykOb,z],[GZu],[GZu,z],[GZu,wykOb],[GZu,wykOb,z],[GZu,Y],[GZu,Y,z],[GZu,Y,wykOb],[GZu,Y,wykOb,z],[GZu,W],[GZu,W,z],[GZu,W,wykOb],[GZu,W,wykOb,z],[GZu,W,Y],[GZu,W,Y,z],[GZu,W,Y,wykOb],[GZu,W,Y,wykOb,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1643() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h","BauCT","TN","ep","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[ep],[ep,k],[TN],[TN,k],[TN,ep],[TN,ep,k],[BauCT],[BauCT,k],[BauCT,ep],[BauCT,ep,k],[BauCT,TN],[BauCT,TN,k],[BauCT,TN,ep],[BauCT,TN,ep,k],[h],[h,k],[h,ep],[h,ep,k],[h,TN],[h,TN,k],[h,TN,ep],[h,TN,ep,k],[h,BauCT],[h,BauCT,k],[h,BauCT,ep],[h,BauCT,ep,k],[h,BauCT,TN],[h,BauCT,TN,k],[h,BauCT,TN,ep],[h,BauCT,TN,ep,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1644() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qr","ffC","Kozf","RXka","xZyQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xZyQ],[RXka],[RXka,xZyQ],[Kozf],[Kozf,xZyQ],[Kozf,RXka],[Kozf,RXka,xZyQ],[ffC],[ffC,xZyQ],[ffC,RXka],[ffC,RXka,xZyQ],[ffC,Kozf],[ffC,Kozf,xZyQ],[ffC,Kozf,RXka],[ffC,Kozf,RXka,xZyQ],[qr],[qr,xZyQ],[qr,RXka],[qr,RXka,xZyQ],[qr,Kozf],[qr,Kozf,xZyQ],[qr,Kozf,RXka],[qr,Kozf,RXka,xZyQ],[qr,ffC],[qr,ffC,xZyQ],[qr,ffC,RXka],[qr,ffC,RXka,xZyQ],[qr,ffC,Kozf],[qr,ffC,Kozf,xZyQ],[qr,ffC,Kozf,RXka],[qr,ffC,Kozf,RXka,xZyQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1645() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vv","pD","UtPha","oyg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oyg],[UtPha],[UtPha,oyg],[pD],[pD,oyg],[pD,UtPha],[pD,UtPha,oyg],[vv],[vv,oyg],[vv,UtPha],[vv,UtPha,oyg],[vv,pD],[vv,pD,oyg],[vv,pD,UtPha],[vv,pD,UtPha,oyg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1646() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lPT","A","laehp","VHCw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VHCw],[laehp],[laehp,VHCw],[A],[A,VHCw],[A,laehp],[A,laehp,VHCw],[lPT],[lPT,VHCw],[lPT,laehp],[lPT,laehp,VHCw],[lPT,A],[lPT,A,VHCw],[lPT,A,laehp],[lPT,A,laehp,VHCw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1647() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nMUg","YeN","wpOb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wpOb],[YeN],[YeN,wpOb],[nMUg],[nMUg,wpOb],[nMUg,YeN],[nMUg,YeN,wpOb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1648() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1649() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qud","eG","puz","XebV","yIrr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yIrr],[XebV],[XebV,yIrr],[puz],[puz,yIrr],[puz,XebV],[puz,XebV,yIrr],[eG],[eG,yIrr],[eG,XebV],[eG,XebV,yIrr],[eG,puz],[eG,puz,yIrr],[eG,puz,XebV],[eG,puz,XebV,yIrr],[qud],[qud,yIrr],[qud,XebV],[qud,XebV,yIrr],[qud,puz],[qud,puz,yIrr],[qud,puz,XebV],[qud,puz,XebV,yIrr],[qud,eG],[qud,eG,yIrr],[qud,eG,XebV],[qud,eG,XebV,yIrr],[qud,eG,puz],[qud,eG,puz,yIrr],[qud,eG,puz,XebV],[qud,eG,puz,XebV,yIrr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1650() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RoM","G","Z","vBX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vBX],[Z],[Z,vBX],[G],[G,vBX],[G,Z],[G,Z,vBX],[RoM],[RoM,vBX],[RoM,Z],[RoM,Z,vBX],[RoM,G],[RoM,G,vBX],[RoM,G,Z],[RoM,G,Z,vBX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1651() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MbF","Ae","jqEg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jqEg],[Ae],[Ae,jqEg],[MbF],[MbF,jqEg],[MbF,Ae],[MbF,Ae,jqEg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1652() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BGE","BD","lZC","EPq","OQJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OQJ],[EPq],[EPq,OQJ],[lZC],[lZC,OQJ],[lZC,EPq],[lZC,EPq,OQJ],[BD],[BD,OQJ],[BD,EPq],[BD,EPq,OQJ],[BD,lZC],[BD,lZC,OQJ],[BD,lZC,EPq],[BD,lZC,EPq,OQJ],[BGE],[BGE,OQJ],[BGE,EPq],[BGE,EPq,OQJ],[BGE,lZC],[BGE,lZC,OQJ],[BGE,lZC,EPq],[BGE,lZC,EPq,OQJ],[BGE,BD],[BGE,BD,OQJ],[BGE,BD,EPq],[BGE,BD,EPq,OQJ],[BGE,BD,lZC],[BGE,BD,lZC,OQJ],[BGE,BD,lZC,EPq],[BGE,BD,lZC,EPq,OQJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1653() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","EFh","cRMs","UR","awFfg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[awFfg],[UR],[UR,awFfg],[cRMs],[cRMs,awFfg],[cRMs,UR],[cRMs,UR,awFfg],[EFh],[EFh,awFfg],[EFh,UR],[EFh,UR,awFfg],[EFh,cRMs],[EFh,cRMs,awFfg],[EFh,cRMs,UR],[EFh,cRMs,UR,awFfg],[U],[U,awFfg],[U,UR],[U,UR,awFfg],[U,cRMs],[U,cRMs,awFfg],[U,cRMs,UR],[U,cRMs,UR,awFfg],[U,EFh],[U,EFh,awFfg],[U,EFh,UR],[U,EFh,UR,awFfg],[U,EFh,cRMs],[U,EFh,cRMs,awFfg],[U,EFh,cRMs,UR],[U,EFh,cRMs,UR,awFfg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1654() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xs","mJtf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mJtf],[Xs],[Xs,mJtf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1655() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cBeMj","pR","zFpE","Gu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gu],[zFpE],[zFpE,Gu],[pR],[pR,Gu],[pR,zFpE],[pR,zFpE,Gu],[cBeMj],[cBeMj,Gu],[cBeMj,zFpE],[cBeMj,zFpE,Gu],[cBeMj,pR],[cBeMj,pR,Gu],[cBeMj,pR,zFpE],[cBeMj,pR,zFpE,Gu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1656() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tpoJD","mw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mw],[tpoJD],[tpoJD,mw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1657() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DmHo","ekNb","dego","FpFG","uSCmb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uSCmb],[FpFG],[FpFG,uSCmb],[dego],[dego,uSCmb],[dego,FpFG],[dego,FpFG,uSCmb],[ekNb],[ekNb,uSCmb],[ekNb,FpFG],[ekNb,FpFG,uSCmb],[ekNb,dego],[ekNb,dego,uSCmb],[ekNb,dego,FpFG],[ekNb,dego,FpFG,uSCmb],[DmHo],[DmHo,uSCmb],[DmHo,FpFG],[DmHo,FpFG,uSCmb],[DmHo,dego],[DmHo,dego,uSCmb],[DmHo,dego,FpFG],[DmHo,dego,FpFG,uSCmb],[DmHo,ekNb],[DmHo,ekNb,uSCmb],[DmHo,ekNb,FpFG],[DmHo,ekNb,FpFG,uSCmb],[DmHo,ekNb,dego],[DmHo,ekNb,dego,uSCmb],[DmHo,ekNb,dego,FpFG],[DmHo,ekNb,dego,FpFG,uSCmb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1658() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1659() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "II","Vugyr","KJV","HnXdq","FMxCW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FMxCW],[HnXdq],[HnXdq,FMxCW],[KJV],[KJV,FMxCW],[KJV,HnXdq],[KJV,HnXdq,FMxCW],[Vugyr],[Vugyr,FMxCW],[Vugyr,HnXdq],[Vugyr,HnXdq,FMxCW],[Vugyr,KJV],[Vugyr,KJV,FMxCW],[Vugyr,KJV,HnXdq],[Vugyr,KJV,HnXdq,FMxCW],[II],[II,FMxCW],[II,HnXdq],[II,HnXdq,FMxCW],[II,KJV],[II,KJV,FMxCW],[II,KJV,HnXdq],[II,KJV,HnXdq,FMxCW],[II,Vugyr],[II,Vugyr,FMxCW],[II,Vugyr,HnXdq],[II,Vugyr,HnXdq,FMxCW],[II,Vugyr,KJV],[II,Vugyr,KJV,FMxCW],[II,Vugyr,KJV,HnXdq],[II,Vugyr,KJV,HnXdq,FMxCW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1660() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hMAU","Ca")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ca],[hMAU],[hMAU,Ca]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1661() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","bPU","WPT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WPT],[bPU],[bPU,WPT],[q],[q,WPT],[q,bPU],[q,bPU,WPT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1662() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zxv","Yt","RN","ibU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ibU],[RN],[RN,ibU],[Yt],[Yt,ibU],[Yt,RN],[Yt,RN,ibU],[Zxv],[Zxv,ibU],[Zxv,RN],[Zxv,RN,ibU],[Zxv,Yt],[Zxv,Yt,ibU],[Zxv,Yt,RN],[Zxv,Yt,RN,ibU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1663() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VdZq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VdZq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1664() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TrRfq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TrRfq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1665() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fkt","Gylfk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gylfk],[fkt],[fkt,Gylfk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1666() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qCgJc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qCgJc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1667() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","auWnP","h","DZU","BFR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BFR],[DZU],[DZU,BFR],[h],[h,BFR],[h,DZU],[h,DZU,BFR],[auWnP],[auWnP,BFR],[auWnP,DZU],[auWnP,DZU,BFR],[auWnP,h],[auWnP,h,BFR],[auWnP,h,DZU],[auWnP,h,DZU,BFR],[s],[s,BFR],[s,DZU],[s,DZU,BFR],[s,h],[s,h,BFR],[s,h,DZU],[s,h,DZU,BFR],[s,auWnP],[s,auWnP,BFR],[s,auWnP,DZU],[s,auWnP,DZU,BFR],[s,auWnP,h],[s,auWnP,h,BFR],[s,auWnP,h,DZU],[s,auWnP,h,DZU,BFR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1668() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RmXS","D")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[D],[RmXS],[RmXS,D]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1669() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "znAwy","LYQCo","TvJcW","PJrrk","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[PJrrk],[PJrrk,L],[TvJcW],[TvJcW,L],[TvJcW,PJrrk],[TvJcW,PJrrk,L],[LYQCo],[LYQCo,L],[LYQCo,PJrrk],[LYQCo,PJrrk,L],[LYQCo,TvJcW],[LYQCo,TvJcW,L],[LYQCo,TvJcW,PJrrk],[LYQCo,TvJcW,PJrrk,L],[znAwy],[znAwy,L],[znAwy,PJrrk],[znAwy,PJrrk,L],[znAwy,TvJcW],[znAwy,TvJcW,L],[znAwy,TvJcW,PJrrk],[znAwy,TvJcW,PJrrk,L],[znAwy,LYQCo],[znAwy,LYQCo,L],[znAwy,LYQCo,PJrrk],[znAwy,LYQCo,PJrrk,L],[znAwy,LYQCo,TvJcW],[znAwy,LYQCo,TvJcW,L],[znAwy,LYQCo,TvJcW,PJrrk],[znAwy,LYQCo,TvJcW,PJrrk,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1670() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1671() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gnz","UQN","Lb","IMNsl","ICv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ICv],[IMNsl],[IMNsl,ICv],[Lb],[Lb,ICv],[Lb,IMNsl],[Lb,IMNsl,ICv],[UQN],[UQN,ICv],[UQN,IMNsl],[UQN,IMNsl,ICv],[UQN,Lb],[UQN,Lb,ICv],[UQN,Lb,IMNsl],[UQN,Lb,IMNsl,ICv],[Gnz],[Gnz,ICv],[Gnz,IMNsl],[Gnz,IMNsl,ICv],[Gnz,Lb],[Gnz,Lb,ICv],[Gnz,Lb,IMNsl],[Gnz,Lb,IMNsl,ICv],[Gnz,UQN],[Gnz,UQN,ICv],[Gnz,UQN,IMNsl],[Gnz,UQN,IMNsl,ICv],[Gnz,UQN,Lb],[Gnz,UQN,Lb,ICv],[Gnz,UQN,Lb,IMNsl],[Gnz,UQN,Lb,IMNsl,ICv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1672() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1673() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PPWn","xL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xL],[PPWn],[PPWn,xL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1674() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xXVm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xXVm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1675() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vhc","JkInj","OhoM","RTgA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RTgA],[OhoM],[OhoM,RTgA],[JkInj],[JkInj,RTgA],[JkInj,OhoM],[JkInj,OhoM,RTgA],[vhc],[vhc,RTgA],[vhc,OhoM],[vhc,OhoM,RTgA],[vhc,JkInj],[vhc,JkInj,RTgA],[vhc,JkInj,OhoM],[vhc,JkInj,OhoM,RTgA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1676() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ewGT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ewGT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1677() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uU","Uj","ucU","VsWCe","pTdFD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pTdFD],[VsWCe],[VsWCe,pTdFD],[ucU],[ucU,pTdFD],[ucU,VsWCe],[ucU,VsWCe,pTdFD],[Uj],[Uj,pTdFD],[Uj,VsWCe],[Uj,VsWCe,pTdFD],[Uj,ucU],[Uj,ucU,pTdFD],[Uj,ucU,VsWCe],[Uj,ucU,VsWCe,pTdFD],[uU],[uU,pTdFD],[uU,VsWCe],[uU,VsWCe,pTdFD],[uU,ucU],[uU,ucU,pTdFD],[uU,ucU,VsWCe],[uU,ucU,VsWCe,pTdFD],[uU,Uj],[uU,Uj,pTdFD],[uU,Uj,VsWCe],[uU,Uj,VsWCe,pTdFD],[uU,Uj,ucU],[uU,Uj,ucU,pTdFD],[uU,Uj,ucU,VsWCe],[uU,Uj,ucU,VsWCe,pTdFD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1678() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","hTE","Rqi","NJDa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NJDa],[Rqi],[Rqi,NJDa],[hTE],[hTE,NJDa],[hTE,Rqi],[hTE,Rqi,NJDa],[A],[A,NJDa],[A,Rqi],[A,Rqi,NJDa],[A,hTE],[A,hTE,NJDa],[A,hTE,Rqi],[A,hTE,Rqi,NJDa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1679() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sVZl","nylEj","by","bq","Fgo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Fgo],[bq],[bq,Fgo],[by],[by,Fgo],[by,bq],[by,bq,Fgo],[nylEj],[nylEj,Fgo],[nylEj,bq],[nylEj,bq,Fgo],[nylEj,by],[nylEj,by,Fgo],[nylEj,by,bq],[nylEj,by,bq,Fgo],[sVZl],[sVZl,Fgo],[sVZl,bq],[sVZl,bq,Fgo],[sVZl,by],[sVZl,by,Fgo],[sVZl,by,bq],[sVZl,by,bq,Fgo],[sVZl,nylEj],[sVZl,nylEj,Fgo],[sVZl,nylEj,bq],[sVZl,nylEj,bq,Fgo],[sVZl,nylEj,by],[sVZl,nylEj,by,Fgo],[sVZl,nylEj,by,bq],[sVZl,nylEj,by,bq,Fgo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1680() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OzGCG","u","YDFG","tZ","XrsEF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XrsEF],[tZ],[tZ,XrsEF],[YDFG],[YDFG,XrsEF],[YDFG,tZ],[YDFG,tZ,XrsEF],[u],[u,XrsEF],[u,tZ],[u,tZ,XrsEF],[u,YDFG],[u,YDFG,XrsEF],[u,YDFG,tZ],[u,YDFG,tZ,XrsEF],[OzGCG],[OzGCG,XrsEF],[OzGCG,tZ],[OzGCG,tZ,XrsEF],[OzGCG,YDFG],[OzGCG,YDFG,XrsEF],[OzGCG,YDFG,tZ],[OzGCG,YDFG,tZ,XrsEF],[OzGCG,u],[OzGCG,u,XrsEF],[OzGCG,u,tZ],[OzGCG,u,tZ,XrsEF],[OzGCG,u,YDFG],[OzGCG,u,YDFG,XrsEF],[OzGCG,u,YDFG,tZ],[OzGCG,u,YDFG,tZ,XrsEF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1681() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rd","bmn","d","Dy","ATMVh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ATMVh],[Dy],[Dy,ATMVh],[d],[d,ATMVh],[d,Dy],[d,Dy,ATMVh],[bmn],[bmn,ATMVh],[bmn,Dy],[bmn,Dy,ATMVh],[bmn,d],[bmn,d,ATMVh],[bmn,d,Dy],[bmn,d,Dy,ATMVh],[Rd],[Rd,ATMVh],[Rd,Dy],[Rd,Dy,ATMVh],[Rd,d],[Rd,d,ATMVh],[Rd,d,Dy],[Rd,d,Dy,ATMVh],[Rd,bmn],[Rd,bmn,ATMVh],[Rd,bmn,Dy],[Rd,bmn,Dy,ATMVh],[Rd,bmn,d],[Rd,bmn,d,ATMVh],[Rd,bmn,d,Dy],[Rd,bmn,d,Dy,ATMVh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1682() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NqNRd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NqNRd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1683() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iwgzp","gyp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gyp],[iwgzp],[iwgzp,gyp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1684() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rx","fCPk","OkLCv","nsqk","JBgXh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JBgXh],[nsqk],[nsqk,JBgXh],[OkLCv],[OkLCv,JBgXh],[OkLCv,nsqk],[OkLCv,nsqk,JBgXh],[fCPk],[fCPk,JBgXh],[fCPk,nsqk],[fCPk,nsqk,JBgXh],[fCPk,OkLCv],[fCPk,OkLCv,JBgXh],[fCPk,OkLCv,nsqk],[fCPk,OkLCv,nsqk,JBgXh],[rx],[rx,JBgXh],[rx,nsqk],[rx,nsqk,JBgXh],[rx,OkLCv],[rx,OkLCv,JBgXh],[rx,OkLCv,nsqk],[rx,OkLCv,nsqk,JBgXh],[rx,fCPk],[rx,fCPk,JBgXh],[rx,fCPk,nsqk],[rx,fCPk,nsqk,JBgXh],[rx,fCPk,OkLCv],[rx,fCPk,OkLCv,JBgXh],[rx,fCPk,OkLCv,nsqk],[rx,fCPk,OkLCv,nsqk,JBgXh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1685() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LN","lHav","W","z","eDWQI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eDWQI],[z],[z,eDWQI],[W],[W,eDWQI],[W,z],[W,z,eDWQI],[lHav],[lHav,eDWQI],[lHav,z],[lHav,z,eDWQI],[lHav,W],[lHav,W,eDWQI],[lHav,W,z],[lHav,W,z,eDWQI],[LN],[LN,eDWQI],[LN,z],[LN,z,eDWQI],[LN,W],[LN,W,eDWQI],[LN,W,z],[LN,W,z,eDWQI],[LN,lHav],[LN,lHav,eDWQI],[LN,lHav,z],[LN,lHav,z,eDWQI],[LN,lHav,W],[LN,lHav,W,eDWQI],[LN,lHav,W,z],[LN,lHav,W,z,eDWQI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1686() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gn","x","H","Acwv","WV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WV],[Acwv],[Acwv,WV],[H],[H,WV],[H,Acwv],[H,Acwv,WV],[x],[x,WV],[x,Acwv],[x,Acwv,WV],[x,H],[x,H,WV],[x,H,Acwv],[x,H,Acwv,WV],[Gn],[Gn,WV],[Gn,Acwv],[Gn,Acwv,WV],[Gn,H],[Gn,H,WV],[Gn,H,Acwv],[Gn,H,Acwv,WV],[Gn,x],[Gn,x,WV],[Gn,x,Acwv],[Gn,x,Acwv,WV],[Gn,x,H],[Gn,x,H,WV],[Gn,x,H,Acwv],[Gn,x,H,Acwv,WV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1687() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","iWK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iWK],[a],[a,iWK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1688() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mVhjg","j","eA","BIS","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[BIS],[BIS,m],[eA],[eA,m],[eA,BIS],[eA,BIS,m],[j],[j,m],[j,BIS],[j,BIS,m],[j,eA],[j,eA,m],[j,eA,BIS],[j,eA,BIS,m],[mVhjg],[mVhjg,m],[mVhjg,BIS],[mVhjg,BIS,m],[mVhjg,eA],[mVhjg,eA,m],[mVhjg,eA,BIS],[mVhjg,eA,BIS,m],[mVhjg,j],[mVhjg,j,m],[mVhjg,j,BIS],[mVhjg,j,BIS,m],[mVhjg,j,eA],[mVhjg,j,eA,m],[mVhjg,j,eA,BIS],[mVhjg,j,eA,BIS,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1689() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lXtA","Gr","bak")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bak],[Gr],[Gr,bak],[lXtA],[lXtA,bak],[lXtA,Gr],[lXtA,Gr,bak]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1690() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1691() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cX","rkQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rkQ],[cX],[cX,rkQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1692() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SLgT","BuQk","JFuiV","w","EA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EA],[w],[w,EA],[JFuiV],[JFuiV,EA],[JFuiV,w],[JFuiV,w,EA],[BuQk],[BuQk,EA],[BuQk,w],[BuQk,w,EA],[BuQk,JFuiV],[BuQk,JFuiV,EA],[BuQk,JFuiV,w],[BuQk,JFuiV,w,EA],[SLgT],[SLgT,EA],[SLgT,w],[SLgT,w,EA],[SLgT,JFuiV],[SLgT,JFuiV,EA],[SLgT,JFuiV,w],[SLgT,JFuiV,w,EA],[SLgT,BuQk],[SLgT,BuQk,EA],[SLgT,BuQk,w],[SLgT,BuQk,w,EA],[SLgT,BuQk,JFuiV],[SLgT,BuQk,JFuiV,EA],[SLgT,BuQk,JFuiV,w],[SLgT,BuQk,JFuiV,w,EA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1693() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Avg","Mevyl","irzew","We","gGqSD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gGqSD],[We],[We,gGqSD],[irzew],[irzew,gGqSD],[irzew,We],[irzew,We,gGqSD],[Mevyl],[Mevyl,gGqSD],[Mevyl,We],[Mevyl,We,gGqSD],[Mevyl,irzew],[Mevyl,irzew,gGqSD],[Mevyl,irzew,We],[Mevyl,irzew,We,gGqSD],[Avg],[Avg,gGqSD],[Avg,We],[Avg,We,gGqSD],[Avg,irzew],[Avg,irzew,gGqSD],[Avg,irzew,We],[Avg,irzew,We,gGqSD],[Avg,Mevyl],[Avg,Mevyl,gGqSD],[Avg,Mevyl,We],[Avg,Mevyl,We,gGqSD],[Avg,Mevyl,irzew],[Avg,Mevyl,irzew,gGqSD],[Avg,Mevyl,irzew,We],[Avg,Mevyl,irzew,We,gGqSD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1694() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yOdF","Vy","H","eWaR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eWaR],[H],[H,eWaR],[Vy],[Vy,eWaR],[Vy,H],[Vy,H,eWaR],[yOdF],[yOdF,eWaR],[yOdF,H],[yOdF,H,eWaR],[yOdF,Vy],[yOdF,Vy,eWaR],[yOdF,Vy,H],[yOdF,Vy,H,eWaR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1695() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NC","ka","F","slD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[slD],[F],[F,slD],[ka],[ka,slD],[ka,F],[ka,F,slD],[NC],[NC,slD],[NC,F],[NC,F,slD],[NC,ka],[NC,ka,slD],[NC,ka,F],[NC,ka,F,slD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1696() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1697() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Py","kdeJL","AHS","oBPib")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oBPib],[AHS],[AHS,oBPib],[kdeJL],[kdeJL,oBPib],[kdeJL,AHS],[kdeJL,AHS,oBPib],[Py],[Py,oBPib],[Py,AHS],[Py,AHS,oBPib],[Py,kdeJL],[Py,kdeJL,oBPib],[Py,kdeJL,AHS],[Py,kdeJL,AHS,oBPib]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1698() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1699() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","trRkx","xC","LGzKF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LGzKF],[xC],[xC,LGzKF],[trRkx],[trRkx,LGzKF],[trRkx,xC],[trRkx,xC,LGzKF],[u],[u,LGzKF],[u,xC],[u,xC,LGzKF],[u,trRkx],[u,trRkx,LGzKF],[u,trRkx,xC],[u,trRkx,xC,LGzKF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1700() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IlT","Q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Q],[IlT],[IlT,Q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1701() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1702() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HronE","vJTQJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vJTQJ],[HronE],[HronE,vJTQJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1703() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GG","KYeF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KYeF],[GG],[GG,KYeF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1704() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TGWq","MX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MX],[TGWq],[TGWq,MX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1705() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wiASO","X","DN","K","oIi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oIi],[K],[K,oIi],[DN],[DN,oIi],[DN,K],[DN,K,oIi],[X],[X,oIi],[X,K],[X,K,oIi],[X,DN],[X,DN,oIi],[X,DN,K],[X,DN,K,oIi],[wiASO],[wiASO,oIi],[wiASO,K],[wiASO,K,oIi],[wiASO,DN],[wiASO,DN,oIi],[wiASO,DN,K],[wiASO,DN,K,oIi],[wiASO,X],[wiASO,X,oIi],[wiASO,X,K],[wiASO,X,K,oIi],[wiASO,X,DN],[wiASO,X,DN,oIi],[wiASO,X,DN,K],[wiASO,X,DN,K,oIi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1706() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","lo","JrjSL","VoME","xCi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xCi],[VoME],[VoME,xCi],[JrjSL],[JrjSL,xCi],[JrjSL,VoME],[JrjSL,VoME,xCi],[lo],[lo,xCi],[lo,VoME],[lo,VoME,xCi],[lo,JrjSL],[lo,JrjSL,xCi],[lo,JrjSL,VoME],[lo,JrjSL,VoME,xCi],[A],[A,xCi],[A,VoME],[A,VoME,xCi],[A,JrjSL],[A,JrjSL,xCi],[A,JrjSL,VoME],[A,JrjSL,VoME,xCi],[A,lo],[A,lo,xCi],[A,lo,VoME],[A,lo,VoME,xCi],[A,lo,JrjSL],[A,lo,JrjSL,xCi],[A,lo,JrjSL,VoME],[A,lo,JrjSL,VoME,xCi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1707() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1708() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","JFXx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JFXx],[P],[P,JFXx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1709() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KkBlz","YIczk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YIczk],[KkBlz],[KkBlz,YIczk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1710() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zeGX","F","YPd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YPd],[F],[F,YPd],[zeGX],[zeGX,YPd],[zeGX,F],[zeGX,F,YPd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1711() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SKhI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SKhI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1712() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fPoO","CxuV","kX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kX],[CxuV],[CxuV,kX],[fPoO],[fPoO,kX],[fPoO,CxuV],[fPoO,CxuV,kX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1713() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Np")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Np]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1714() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tdHN","jB","cAeK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cAeK],[jB],[jB,cAeK],[tdHN],[tdHN,cAeK],[tdHN,jB],[tdHN,jB,cAeK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1715() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1716() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JuM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JuM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1717() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","u")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[u],[s],[s,u]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1718() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AC","nlIC","Xfz","bq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bq],[Xfz],[Xfz,bq],[nlIC],[nlIC,bq],[nlIC,Xfz],[nlIC,Xfz,bq],[AC],[AC,bq],[AC,Xfz],[AC,Xfz,bq],[AC,nlIC],[AC,nlIC,bq],[AC,nlIC,Xfz],[AC,nlIC,Xfz,bq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1719() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fHVX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fHVX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1720() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[S]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1721() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1722() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","ZCMs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZCMs],[D],[D,ZCMs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1723() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CKpDx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CKpDx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1724() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zZnL","FaPWl","VKjfc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VKjfc],[FaPWl],[FaPWl,VKjfc],[zZnL],[zZnL,VKjfc],[zZnL,FaPWl],[zZnL,FaPWl,VKjfc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1725() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TsB","EERAv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EERAv],[TsB],[TsB,EERAv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1726() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ij","pQ","vvU","NbSK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NbSK],[vvU],[vvU,NbSK],[pQ],[pQ,NbSK],[pQ,vvU],[pQ,vvU,NbSK],[Ij],[Ij,NbSK],[Ij,vvU],[Ij,vvU,NbSK],[Ij,pQ],[Ij,pQ,NbSK],[Ij,pQ,vvU],[Ij,pQ,vvU,NbSK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1727() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pCS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pCS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1728() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","Sxb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sxb],[V],[V,Sxb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1729() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UX","fJ","g","UqAg","UOee")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UOee],[UqAg],[UqAg,UOee],[g],[g,UOee],[g,UqAg],[g,UqAg,UOee],[fJ],[fJ,UOee],[fJ,UqAg],[fJ,UqAg,UOee],[fJ,g],[fJ,g,UOee],[fJ,g,UqAg],[fJ,g,UqAg,UOee],[UX],[UX,UOee],[UX,UqAg],[UX,UqAg,UOee],[UX,g],[UX,g,UOee],[UX,g,UqAg],[UX,g,UqAg,UOee],[UX,fJ],[UX,fJ,UOee],[UX,fJ,UqAg],[UX,fJ,UqAg,UOee],[UX,fJ,g],[UX,fJ,g,UOee],[UX,fJ,g,UqAg],[UX,fJ,g,UqAg,UOee]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1730() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","x","Z","qK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qK],[Z],[Z,qK],[x],[x,qK],[x,Z],[x,Z,qK],[D],[D,qK],[D,Z],[D,Z,qK],[D,x],[D,x,qK],[D,x,Z],[D,x,Z,qK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1731() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zkoMx","qWQSX","FHy","y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y],[FHy],[FHy,y],[qWQSX],[qWQSX,y],[qWQSX,FHy],[qWQSX,FHy,y],[zkoMx],[zkoMx,y],[zkoMx,FHy],[zkoMx,FHy,y],[zkoMx,qWQSX],[zkoMx,qWQSX,y],[zkoMx,qWQSX,FHy],[zkoMx,qWQSX,FHy,y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1732() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vgSY","f","bnwr","YR","jFj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jFj],[YR],[YR,jFj],[bnwr],[bnwr,jFj],[bnwr,YR],[bnwr,YR,jFj],[f],[f,jFj],[f,YR],[f,YR,jFj],[f,bnwr],[f,bnwr,jFj],[f,bnwr,YR],[f,bnwr,YR,jFj],[vgSY],[vgSY,jFj],[vgSY,YR],[vgSY,YR,jFj],[vgSY,bnwr],[vgSY,bnwr,jFj],[vgSY,bnwr,YR],[vgSY,bnwr,YR,jFj],[vgSY,f],[vgSY,f,jFj],[vgSY,f,YR],[vgSY,f,YR,jFj],[vgSY,f,bnwr],[vgSY,f,bnwr,jFj],[vgSY,f,bnwr,YR],[vgSY,f,bnwr,YR,jFj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1733() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SurlT","ZGD","h","FOwf","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[FOwf],[FOwf,z],[h],[h,z],[h,FOwf],[h,FOwf,z],[ZGD],[ZGD,z],[ZGD,FOwf],[ZGD,FOwf,z],[ZGD,h],[ZGD,h,z],[ZGD,h,FOwf],[ZGD,h,FOwf,z],[SurlT],[SurlT,z],[SurlT,FOwf],[SurlT,FOwf,z],[SurlT,h],[SurlT,h,z],[SurlT,h,FOwf],[SurlT,h,FOwf,z],[SurlT,ZGD],[SurlT,ZGD,z],[SurlT,ZGD,FOwf],[SurlT,ZGD,FOwf,z],[SurlT,ZGD,h],[SurlT,ZGD,h,z],[SurlT,ZGD,h,FOwf],[SurlT,ZGD,h,FOwf,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1734() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vzv","NAh","UDU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UDU],[NAh],[NAh,UDU],[vzv],[vzv,UDU],[vzv,NAh],[vzv,NAh,UDU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1735() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HqL","NC","GYO","Mihv","Ih")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ih],[Mihv],[Mihv,Ih],[GYO],[GYO,Ih],[GYO,Mihv],[GYO,Mihv,Ih],[NC],[NC,Ih],[NC,Mihv],[NC,Mihv,Ih],[NC,GYO],[NC,GYO,Ih],[NC,GYO,Mihv],[NC,GYO,Mihv,Ih],[HqL],[HqL,Ih],[HqL,Mihv],[HqL,Mihv,Ih],[HqL,GYO],[HqL,GYO,Ih],[HqL,GYO,Mihv],[HqL,GYO,Mihv,Ih],[HqL,NC],[HqL,NC,Ih],[HqL,NC,Mihv],[HqL,NC,Mihv,Ih],[HqL,NC,GYO],[HqL,NC,GYO,Ih],[HqL,NC,GYO,Mihv],[HqL,NC,GYO,Mihv,Ih]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1736() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "onLM","T","Beg","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[Beg],[Beg,Y],[T],[T,Y],[T,Beg],[T,Beg,Y],[onLM],[onLM,Y],[onLM,Beg],[onLM,Beg,Y],[onLM,T],[onLM,T,Y],[onLM,T,Beg],[onLM,T,Beg,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1737() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zL","t","Kr","Rz","wZhUy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wZhUy],[Rz],[Rz,wZhUy],[Kr],[Kr,wZhUy],[Kr,Rz],[Kr,Rz,wZhUy],[t],[t,wZhUy],[t,Rz],[t,Rz,wZhUy],[t,Kr],[t,Kr,wZhUy],[t,Kr,Rz],[t,Kr,Rz,wZhUy],[zL],[zL,wZhUy],[zL,Rz],[zL,Rz,wZhUy],[zL,Kr],[zL,Kr,wZhUy],[zL,Kr,Rz],[zL,Kr,Rz,wZhUy],[zL,t],[zL,t,wZhUy],[zL,t,Rz],[zL,t,Rz,wZhUy],[zL,t,Kr],[zL,t,Kr,wZhUy],[zL,t,Kr,Rz],[zL,t,Kr,Rz,wZhUy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1738() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oO","FH","eyw","sG","CdaWa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CdaWa],[sG],[sG,CdaWa],[eyw],[eyw,CdaWa],[eyw,sG],[eyw,sG,CdaWa],[FH],[FH,CdaWa],[FH,sG],[FH,sG,CdaWa],[FH,eyw],[FH,eyw,CdaWa],[FH,eyw,sG],[FH,eyw,sG,CdaWa],[oO],[oO,CdaWa],[oO,sG],[oO,sG,CdaWa],[oO,eyw],[oO,eyw,CdaWa],[oO,eyw,sG],[oO,eyw,sG,CdaWa],[oO,FH],[oO,FH,CdaWa],[oO,FH,sG],[oO,FH,sG,CdaWa],[oO,FH,eyw],[oO,FH,eyw,CdaWa],[oO,FH,eyw,sG],[oO,FH,eyw,sG,CdaWa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1739() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SGNn","PU","ijqVJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ijqVJ],[PU],[PU,ijqVJ],[SGNn],[SGNn,ijqVJ],[SGNn,PU],[SGNn,PU,ijqVJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1740() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1741() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","uTe","jct","ulWBp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ulWBp],[jct],[jct,ulWBp],[uTe],[uTe,ulWBp],[uTe,jct],[uTe,jct,ulWBp],[s],[s,ulWBp],[s,jct],[s,jct,ulWBp],[s,uTe],[s,uTe,ulWBp],[s,uTe,jct],[s,uTe,jct,ulWBp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1742() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iVm","OQ","bCCxW","fxH","AUjx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AUjx],[fxH],[fxH,AUjx],[bCCxW],[bCCxW,AUjx],[bCCxW,fxH],[bCCxW,fxH,AUjx],[OQ],[OQ,AUjx],[OQ,fxH],[OQ,fxH,AUjx],[OQ,bCCxW],[OQ,bCCxW,AUjx],[OQ,bCCxW,fxH],[OQ,bCCxW,fxH,AUjx],[iVm],[iVm,AUjx],[iVm,fxH],[iVm,fxH,AUjx],[iVm,bCCxW],[iVm,bCCxW,AUjx],[iVm,bCCxW,fxH],[iVm,bCCxW,fxH,AUjx],[iVm,OQ],[iVm,OQ,AUjx],[iVm,OQ,fxH],[iVm,OQ,fxH,AUjx],[iVm,OQ,bCCxW],[iVm,OQ,bCCxW,AUjx],[iVm,OQ,bCCxW,fxH],[iVm,OQ,bCCxW,fxH,AUjx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1743() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uUA","Ij","t","YNpjL","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[YNpjL],[YNpjL,i],[t],[t,i],[t,YNpjL],[t,YNpjL,i],[Ij],[Ij,i],[Ij,YNpjL],[Ij,YNpjL,i],[Ij,t],[Ij,t,i],[Ij,t,YNpjL],[Ij,t,YNpjL,i],[uUA],[uUA,i],[uUA,YNpjL],[uUA,YNpjL,i],[uUA,t],[uUA,t,i],[uUA,t,YNpjL],[uUA,t,YNpjL,i],[uUA,Ij],[uUA,Ij,i],[uUA,Ij,YNpjL],[uUA,Ij,YNpjL,i],[uUA,Ij,t],[uUA,Ij,t,i],[uUA,Ij,t,YNpjL],[uUA,Ij,t,YNpjL,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1744() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "k","wEZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wEZ],[k],[k,wEZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1745() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","D","EFpbK","DPF","MkyZc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MkyZc],[DPF],[DPF,MkyZc],[EFpbK],[EFpbK,MkyZc],[EFpbK,DPF],[EFpbK,DPF,MkyZc],[D],[D,MkyZc],[D,DPF],[D,DPF,MkyZc],[D,EFpbK],[D,EFpbK,MkyZc],[D,EFpbK,DPF],[D,EFpbK,DPF,MkyZc],[R],[R,MkyZc],[R,DPF],[R,DPF,MkyZc],[R,EFpbK],[R,EFpbK,MkyZc],[R,EFpbK,DPF],[R,EFpbK,DPF,MkyZc],[R,D],[R,D,MkyZc],[R,D,DPF],[R,D,DPF,MkyZc],[R,D,EFpbK],[R,D,EFpbK,MkyZc],[R,D,EFpbK,DPF],[R,D,EFpbK,DPF,MkyZc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1746() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bR","EOEa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EOEa],[bR],[bR,EOEa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1747() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NQ","RF","yJU","VL","liSe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[liSe],[VL],[VL,liSe],[yJU],[yJU,liSe],[yJU,VL],[yJU,VL,liSe],[RF],[RF,liSe],[RF,VL],[RF,VL,liSe],[RF,yJU],[RF,yJU,liSe],[RF,yJU,VL],[RF,yJU,VL,liSe],[NQ],[NQ,liSe],[NQ,VL],[NQ,VL,liSe],[NQ,yJU],[NQ,yJU,liSe],[NQ,yJU,VL],[NQ,yJU,VL,liSe],[NQ,RF],[NQ,RF,liSe],[NQ,RF,VL],[NQ,RF,VL,liSe],[NQ,RF,yJU],[NQ,RF,yJU,liSe],[NQ,RF,yJU,VL],[NQ,RF,yJU,VL,liSe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1748() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NT","XGZ","nKaRK","xQsT","NtkxB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NtkxB],[xQsT],[xQsT,NtkxB],[nKaRK],[nKaRK,NtkxB],[nKaRK,xQsT],[nKaRK,xQsT,NtkxB],[XGZ],[XGZ,NtkxB],[XGZ,xQsT],[XGZ,xQsT,NtkxB],[XGZ,nKaRK],[XGZ,nKaRK,NtkxB],[XGZ,nKaRK,xQsT],[XGZ,nKaRK,xQsT,NtkxB],[NT],[NT,NtkxB],[NT,xQsT],[NT,xQsT,NtkxB],[NT,nKaRK],[NT,nKaRK,NtkxB],[NT,nKaRK,xQsT],[NT,nKaRK,xQsT,NtkxB],[NT,XGZ],[NT,XGZ,NtkxB],[NT,XGZ,xQsT],[NT,XGZ,xQsT,NtkxB],[NT,XGZ,nKaRK],[NT,XGZ,nKaRK,NtkxB],[NT,XGZ,nKaRK,xQsT],[NT,XGZ,nKaRK,xQsT,NtkxB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1749() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1750() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1751() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZM","xCf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xCf],[ZM],[ZM,xCf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1752() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1753() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xobWF","UbUcG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UbUcG],[xobWF],[xobWF,UbUcG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1754() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CcB","Z","syS","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[syS],[syS,L],[Z],[Z,L],[Z,syS],[Z,syS,L],[CcB],[CcB,L],[CcB,syS],[CcB,syS,L],[CcB,Z],[CcB,Z,L],[CcB,Z,syS],[CcB,Z,syS,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1755() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JN","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[JN],[JN,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1756() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "URb","SMsnQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SMsnQ],[URb],[URb,SMsnQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1757() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","gPo","OZBV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OZBV],[gPo],[gPo,OZBV],[p],[p,OZBV],[p,gPo],[p,gPo,OZBV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1758() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lvwwW","YdV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YdV],[lvwwW],[lvwwW,YdV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1759() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1760() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IK","AU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AU],[IK],[IK,AU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1761() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JJIJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JJIJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1762() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WevE","T","CcjQG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CcjQG],[T],[T,CcjQG],[WevE],[WevE,CcjQG],[WevE,T],[WevE,T,CcjQG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1763() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zSOqO","jjK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jjK],[zSOqO],[zSOqO,jjK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1764() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1765() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","SJP","gpU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gpU],[SJP],[SJP,gpU],[q],[q,gpU],[q,SJP],[q,SJP,gpU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1766() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sqqTy","ThmbC","tB","ZjKzi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZjKzi],[tB],[tB,ZjKzi],[ThmbC],[ThmbC,ZjKzi],[ThmbC,tB],[ThmbC,tB,ZjKzi],[sqqTy],[sqqTy,ZjKzi],[sqqTy,tB],[sqqTy,tB,ZjKzi],[sqqTy,ThmbC],[sqqTy,ThmbC,ZjKzi],[sqqTy,ThmbC,tB],[sqqTy,ThmbC,tB,ZjKzi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1767() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1768() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CQgX","LkSjV","RofE","bHgq","He")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[He],[bHgq],[bHgq,He],[RofE],[RofE,He],[RofE,bHgq],[RofE,bHgq,He],[LkSjV],[LkSjV,He],[LkSjV,bHgq],[LkSjV,bHgq,He],[LkSjV,RofE],[LkSjV,RofE,He],[LkSjV,RofE,bHgq],[LkSjV,RofE,bHgq,He],[CQgX],[CQgX,He],[CQgX,bHgq],[CQgX,bHgq,He],[CQgX,RofE],[CQgX,RofE,He],[CQgX,RofE,bHgq],[CQgX,RofE,bHgq,He],[CQgX,LkSjV],[CQgX,LkSjV,He],[CQgX,LkSjV,bHgq],[CQgX,LkSjV,bHgq,He],[CQgX,LkSjV,RofE],[CQgX,LkSjV,RofE,He],[CQgX,LkSjV,RofE,bHgq],[CQgX,LkSjV,RofE,bHgq,He]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1769() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MsVSZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MsVSZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1770() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "duEN","mzD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mzD],[duEN],[duEN,mzD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1771() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1772() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fw","KM","VTRdw","cWpM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cWpM],[VTRdw],[VTRdw,cWpM],[KM],[KM,cWpM],[KM,VTRdw],[KM,VTRdw,cWpM],[Fw],[Fw,cWpM],[Fw,VTRdw],[Fw,VTRdw,cWpM],[Fw,KM],[Fw,KM,cWpM],[Fw,KM,VTRdw],[Fw,KM,VTRdw,cWpM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1773() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tD","CjFMc","khCMc","MlBDt","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[MlBDt],[MlBDt,o],[khCMc],[khCMc,o],[khCMc,MlBDt],[khCMc,MlBDt,o],[CjFMc],[CjFMc,o],[CjFMc,MlBDt],[CjFMc,MlBDt,o],[CjFMc,khCMc],[CjFMc,khCMc,o],[CjFMc,khCMc,MlBDt],[CjFMc,khCMc,MlBDt,o],[tD],[tD,o],[tD,MlBDt],[tD,MlBDt,o],[tD,khCMc],[tD,khCMc,o],[tD,khCMc,MlBDt],[tD,khCMc,MlBDt,o],[tD,CjFMc],[tD,CjFMc,o],[tD,CjFMc,MlBDt],[tD,CjFMc,MlBDt,o],[tD,CjFMc,khCMc],[tD,CjFMc,khCMc,o],[tD,CjFMc,khCMc,MlBDt],[tD,CjFMc,khCMc,MlBDt,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1774() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xRwGE","KjMCc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KjMCc],[xRwGE],[xRwGE,KjMCc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1775() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kHp","Vz","yRE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yRE],[Vz],[Vz,yRE],[kHp],[kHp,yRE],[kHp,Vz],[kHp,Vz,yRE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1776() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WzV","Zkjqz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zkjqz],[WzV],[WzV,Zkjqz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1777() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nn","d","si","bgN","dSAEl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dSAEl],[bgN],[bgN,dSAEl],[si],[si,dSAEl],[si,bgN],[si,bgN,dSAEl],[d],[d,dSAEl],[d,bgN],[d,bgN,dSAEl],[d,si],[d,si,dSAEl],[d,si,bgN],[d,si,bgN,dSAEl],[Nn],[Nn,dSAEl],[Nn,bgN],[Nn,bgN,dSAEl],[Nn,si],[Nn,si,dSAEl],[Nn,si,bgN],[Nn,si,bgN,dSAEl],[Nn,d],[Nn,d,dSAEl],[Nn,d,bgN],[Nn,d,bgN,dSAEl],[Nn,d,si],[Nn,d,si,dSAEl],[Nn,d,si,bgN],[Nn,d,si,bgN,dSAEl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1778() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rSNgG","mqdms","Bdxte","RJr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RJr],[Bdxte],[Bdxte,RJr],[mqdms],[mqdms,RJr],[mqdms,Bdxte],[mqdms,Bdxte,RJr],[rSNgG],[rSNgG,RJr],[rSNgG,Bdxte],[rSNgG,Bdxte,RJr],[rSNgG,mqdms],[rSNgG,mqdms,RJr],[rSNgG,mqdms,Bdxte],[rSNgG,mqdms,Bdxte,RJr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1779() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rVi","e","MVo","oWjV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oWjV],[MVo],[MVo,oWjV],[e],[e,oWjV],[e,MVo],[e,MVo,oWjV],[rVi],[rVi,oWjV],[rVi,MVo],[rVi,MVo,oWjV],[rVi,e],[rVi,e,oWjV],[rVi,e,MVo],[rVi,e,MVo,oWjV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1780() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sdA","Tk","g","PZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PZ],[g],[g,PZ],[Tk],[Tk,PZ],[Tk,g],[Tk,g,PZ],[sdA],[sdA,PZ],[sdA,g],[sdA,g,PZ],[sdA,Tk],[sdA,Tk,PZ],[sdA,Tk,g],[sdA,Tk,g,PZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1781() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fvl","ZgZeR","BGHlv","o","EqTf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EqTf],[o],[o,EqTf],[BGHlv],[BGHlv,EqTf],[BGHlv,o],[BGHlv,o,EqTf],[ZgZeR],[ZgZeR,EqTf],[ZgZeR,o],[ZgZeR,o,EqTf],[ZgZeR,BGHlv],[ZgZeR,BGHlv,EqTf],[ZgZeR,BGHlv,o],[ZgZeR,BGHlv,o,EqTf],[fvl],[fvl,EqTf],[fvl,o],[fvl,o,EqTf],[fvl,BGHlv],[fvl,BGHlv,EqTf],[fvl,BGHlv,o],[fvl,BGHlv,o,EqTf],[fvl,ZgZeR],[fvl,ZgZeR,EqTf],[fvl,ZgZeR,o],[fvl,ZgZeR,o,EqTf],[fvl,ZgZeR,BGHlv],[fvl,ZgZeR,BGHlv,EqTf],[fvl,ZgZeR,BGHlv,o],[fvl,ZgZeR,BGHlv,o,EqTf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1782() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hPpl","ignt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ignt],[hPpl],[hPpl,ignt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1783() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uCPXL","TpvEN","wO","n","dpJht")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dpJht],[n],[n,dpJht],[wO],[wO,dpJht],[wO,n],[wO,n,dpJht],[TpvEN],[TpvEN,dpJht],[TpvEN,n],[TpvEN,n,dpJht],[TpvEN,wO],[TpvEN,wO,dpJht],[TpvEN,wO,n],[TpvEN,wO,n,dpJht],[uCPXL],[uCPXL,dpJht],[uCPXL,n],[uCPXL,n,dpJht],[uCPXL,wO],[uCPXL,wO,dpJht],[uCPXL,wO,n],[uCPXL,wO,n,dpJht],[uCPXL,TpvEN],[uCPXL,TpvEN,dpJht],[uCPXL,TpvEN,n],[uCPXL,TpvEN,n,dpJht],[uCPXL,TpvEN,wO],[uCPXL,TpvEN,wO,dpJht],[uCPXL,TpvEN,wO,n],[uCPXL,TpvEN,wO,n,dpJht]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1784() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FK","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[FK],[FK,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1785() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VsAvu","pvmIv","gtdVs","WaVNP","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[WaVNP],[WaVNP,L],[gtdVs],[gtdVs,L],[gtdVs,WaVNP],[gtdVs,WaVNP,L],[pvmIv],[pvmIv,L],[pvmIv,WaVNP],[pvmIv,WaVNP,L],[pvmIv,gtdVs],[pvmIv,gtdVs,L],[pvmIv,gtdVs,WaVNP],[pvmIv,gtdVs,WaVNP,L],[VsAvu],[VsAvu,L],[VsAvu,WaVNP],[VsAvu,WaVNP,L],[VsAvu,gtdVs],[VsAvu,gtdVs,L],[VsAvu,gtdVs,WaVNP],[VsAvu,gtdVs,WaVNP,L],[VsAvu,pvmIv],[VsAvu,pvmIv,L],[VsAvu,pvmIv,WaVNP],[VsAvu,pvmIv,WaVNP,L],[VsAvu,pvmIv,gtdVs],[VsAvu,pvmIv,gtdVs,L],[VsAvu,pvmIv,gtdVs,WaVNP],[VsAvu,pvmIv,gtdVs,WaVNP,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1786() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zxgC","C","U","imKGM","xbp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xbp],[imKGM],[imKGM,xbp],[U],[U,xbp],[U,imKGM],[U,imKGM,xbp],[C],[C,xbp],[C,imKGM],[C,imKGM,xbp],[C,U],[C,U,xbp],[C,U,imKGM],[C,U,imKGM,xbp],[zxgC],[zxgC,xbp],[zxgC,imKGM],[zxgC,imKGM,xbp],[zxgC,U],[zxgC,U,xbp],[zxgC,U,imKGM],[zxgC,U,imKGM,xbp],[zxgC,C],[zxgC,C,xbp],[zxgC,C,imKGM],[zxgC,C,imKGM,xbp],[zxgC,C,U],[zxgC,C,U,xbp],[zxgC,C,U,imKGM],[zxgC,C,U,imKGM,xbp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1787() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sotwX","LFaeU","uLMen","XNB","aO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aO],[XNB],[XNB,aO],[uLMen],[uLMen,aO],[uLMen,XNB],[uLMen,XNB,aO],[LFaeU],[LFaeU,aO],[LFaeU,XNB],[LFaeU,XNB,aO],[LFaeU,uLMen],[LFaeU,uLMen,aO],[LFaeU,uLMen,XNB],[LFaeU,uLMen,XNB,aO],[sotwX],[sotwX,aO],[sotwX,XNB],[sotwX,XNB,aO],[sotwX,uLMen],[sotwX,uLMen,aO],[sotwX,uLMen,XNB],[sotwX,uLMen,XNB,aO],[sotwX,LFaeU],[sotwX,LFaeU,aO],[sotwX,LFaeU,XNB],[sotwX,LFaeU,XNB,aO],[sotwX,LFaeU,uLMen],[sotwX,LFaeU,uLMen,aO],[sotwX,LFaeU,uLMen,XNB],[sotwX,LFaeU,uLMen,XNB,aO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1788() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","AFw","hpTf","JrSj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JrSj],[hpTf],[hpTf,JrSj],[AFw],[AFw,JrSj],[AFw,hpTf],[AFw,hpTf,JrSj],[a],[a,JrSj],[a,hpTf],[a,hpTf,JrSj],[a,AFw],[a,AFw,JrSj],[a,AFw,hpTf],[a,AFw,hpTf,JrSj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1789() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QS","bnOh","vwn","KsVM","vC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vC],[KsVM],[KsVM,vC],[vwn],[vwn,vC],[vwn,KsVM],[vwn,KsVM,vC],[bnOh],[bnOh,vC],[bnOh,KsVM],[bnOh,KsVM,vC],[bnOh,vwn],[bnOh,vwn,vC],[bnOh,vwn,KsVM],[bnOh,vwn,KsVM,vC],[QS],[QS,vC],[QS,KsVM],[QS,KsVM,vC],[QS,vwn],[QS,vwn,vC],[QS,vwn,KsVM],[QS,vwn,KsVM,vC],[QS,bnOh],[QS,bnOh,vC],[QS,bnOh,KsVM],[QS,bnOh,KsVM,vC],[QS,bnOh,vwn],[QS,bnOh,vwn,vC],[QS,bnOh,vwn,KsVM],[QS,bnOh,vwn,KsVM,vC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1790() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ktz","JGB","U","vL","SDo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SDo],[vL],[vL,SDo],[U],[U,SDo],[U,vL],[U,vL,SDo],[JGB],[JGB,SDo],[JGB,vL],[JGB,vL,SDo],[JGB,U],[JGB,U,SDo],[JGB,U,vL],[JGB,U,vL,SDo],[Ktz],[Ktz,SDo],[Ktz,vL],[Ktz,vL,SDo],[Ktz,U],[Ktz,U,SDo],[Ktz,U,vL],[Ktz,U,vL,SDo],[Ktz,JGB],[Ktz,JGB,SDo],[Ktz,JGB,vL],[Ktz,JGB,vL,SDo],[Ktz,JGB,U],[Ktz,JGB,U,SDo],[Ktz,JGB,U,vL],[Ktz,JGB,U,vL,SDo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1791() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","hZkc","m","RA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RA],[m],[m,RA],[hZkc],[hZkc,RA],[hZkc,m],[hZkc,m,RA],[q],[q,RA],[q,m],[q,m,RA],[q,hZkc],[q,hZkc,RA],[q,hZkc,m],[q,hZkc,m,RA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1792() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ywlTK","Gcp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gcp],[ywlTK],[ywlTK,Gcp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1793() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kOKh","v","z","dQI","DJDno")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DJDno],[dQI],[dQI,DJDno],[z],[z,DJDno],[z,dQI],[z,dQI,DJDno],[v],[v,DJDno],[v,dQI],[v,dQI,DJDno],[v,z],[v,z,DJDno],[v,z,dQI],[v,z,dQI,DJDno],[kOKh],[kOKh,DJDno],[kOKh,dQI],[kOKh,dQI,DJDno],[kOKh,z],[kOKh,z,DJDno],[kOKh,z,dQI],[kOKh,z,dQI,DJDno],[kOKh,v],[kOKh,v,DJDno],[kOKh,v,dQI],[kOKh,v,dQI,DJDno],[kOKh,v,z],[kOKh,v,z,DJDno],[kOKh,v,z,dQI],[kOKh,v,z,dQI,DJDno]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1794() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pos","G","rDN","rriS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rriS],[rDN],[rDN,rriS],[G],[G,rriS],[G,rDN],[G,rDN,rriS],[pos],[pos,rriS],[pos,rDN],[pos,rDN,rriS],[pos,G],[pos,G,rriS],[pos,G,rDN],[pos,G,rDN,rriS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1795() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GTd","DGfZp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DGfZp],[GTd],[GTd,DGfZp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1796() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","sH","BQNWV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BQNWV],[sH],[sH,BQNWV],[S],[S,BQNWV],[S,sH],[S,sH,BQNWV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1797() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HeeWB","Bn","uUzwb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uUzwb],[Bn],[Bn,uUzwb],[HeeWB],[HeeWB,uUzwb],[HeeWB,Bn],[HeeWB,Bn,uUzwb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1798() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AkcLj","Bav","vqrej")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vqrej],[Bav],[Bav,vqrej],[AkcLj],[AkcLj,vqrej],[AkcLj,Bav],[AkcLj,Bav,vqrej]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1799() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JYSmB","IpP","Qm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qm],[IpP],[IpP,Qm],[JYSmB],[JYSmB,Qm],[JYSmB,IpP],[JYSmB,IpP,Qm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1800() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mrjdn","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[mrjdn],[mrjdn,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1801() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mpEy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mpEy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1802() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[s]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1803() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","WI","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[WI],[WI,f],[B],[B,f],[B,WI],[B,WI,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1804() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pq","u","oOK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oOK],[u],[u,oOK],[Pq],[Pq,oOK],[Pq,u],[Pq,u,oOK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1805() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","t","aX","tcL","uEM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uEM],[tcL],[tcL,uEM],[aX],[aX,uEM],[aX,tcL],[aX,tcL,uEM],[t],[t,uEM],[t,tcL],[t,tcL,uEM],[t,aX],[t,aX,uEM],[t,aX,tcL],[t,aX,tcL,uEM],[S],[S,uEM],[S,tcL],[S,tcL,uEM],[S,aX],[S,aX,uEM],[S,aX,tcL],[S,aX,tcL,uEM],[S,t],[S,t,uEM],[S,t,tcL],[S,t,tcL,uEM],[S,t,aX],[S,t,aX,uEM],[S,t,aX,tcL],[S,t,aX,tcL,uEM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1806() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lf","hPb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hPb],[lf],[lf,hPb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1807() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hhpuM","RBBEZ","ikK","AFTs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AFTs],[ikK],[ikK,AFTs],[RBBEZ],[RBBEZ,AFTs],[RBBEZ,ikK],[RBBEZ,ikK,AFTs],[hhpuM],[hhpuM,AFTs],[hhpuM,ikK],[hhpuM,ikK,AFTs],[hhpuM,RBBEZ],[hhpuM,RBBEZ,AFTs],[hhpuM,RBBEZ,ikK],[hhpuM,RBBEZ,ikK,AFTs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1808() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","c","hogT","Bj","AzBk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AzBk],[Bj],[Bj,AzBk],[hogT],[hogT,AzBk],[hogT,Bj],[hogT,Bj,AzBk],[c],[c,AzBk],[c,Bj],[c,Bj,AzBk],[c,hogT],[c,hogT,AzBk],[c,hogT,Bj],[c,hogT,Bj,AzBk],[r],[r,AzBk],[r,Bj],[r,Bj,AzBk],[r,hogT],[r,hogT,AzBk],[r,hogT,Bj],[r,hogT,Bj,AzBk],[r,c],[r,c,AzBk],[r,c,Bj],[r,c,Bj,AzBk],[r,c,hogT],[r,c,hogT,AzBk],[r,c,hogT,Bj],[r,c,hogT,Bj,AzBk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1809() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1810() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hh","YUGhJ","WwG","iTohK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iTohK],[WwG],[WwG,iTohK],[YUGhJ],[YUGhJ,iTohK],[YUGhJ,WwG],[YUGhJ,WwG,iTohK],[Hh],[Hh,iTohK],[Hh,WwG],[Hh,WwG,iTohK],[Hh,YUGhJ],[Hh,YUGhJ,iTohK],[Hh,YUGhJ,WwG],[Hh,YUGhJ,WwG,iTohK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1811() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iyC","LYhas","URI","sb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sb],[URI],[URI,sb],[LYhas],[LYhas,sb],[LYhas,URI],[LYhas,URI,sb],[iyC],[iyC,sb],[iyC,URI],[iyC,URI,sb],[iyC,LYhas],[iyC,LYhas,sb],[iyC,LYhas,URI],[iyC,LYhas,URI,sb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1812() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pq","Cbxf","pdv","Psw","wbQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wbQ],[Psw],[Psw,wbQ],[pdv],[pdv,wbQ],[pdv,Psw],[pdv,Psw,wbQ],[Cbxf],[Cbxf,wbQ],[Cbxf,Psw],[Cbxf,Psw,wbQ],[Cbxf,pdv],[Cbxf,pdv,wbQ],[Cbxf,pdv,Psw],[Cbxf,pdv,Psw,wbQ],[Pq],[Pq,wbQ],[Pq,Psw],[Pq,Psw,wbQ],[Pq,pdv],[Pq,pdv,wbQ],[Pq,pdv,Psw],[Pq,pdv,Psw,wbQ],[Pq,Cbxf],[Pq,Cbxf,wbQ],[Pq,Cbxf,Psw],[Pq,Cbxf,Psw,wbQ],[Pq,Cbxf,pdv],[Pq,Cbxf,pdv,wbQ],[Pq,Cbxf,pdv,Psw],[Pq,Cbxf,pdv,Psw,wbQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1813() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QpLVu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QpLVu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1814() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Wy","hA","vlfx","vVwxI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vVwxI],[vlfx],[vlfx,vVwxI],[hA],[hA,vVwxI],[hA,vlfx],[hA,vlfx,vVwxI],[Wy],[Wy,vVwxI],[Wy,vlfx],[Wy,vlfx,vVwxI],[Wy,hA],[Wy,hA,vVwxI],[Wy,hA,vlfx],[Wy,hA,vlfx,vVwxI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1815() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aJuYH","r","atrg","EFCJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EFCJ],[atrg],[atrg,EFCJ],[r],[r,EFCJ],[r,atrg],[r,atrg,EFCJ],[aJuYH],[aJuYH,EFCJ],[aJuYH,atrg],[aJuYH,atrg,EFCJ],[aJuYH,r],[aJuYH,r,EFCJ],[aJuYH,r,atrg],[aJuYH,r,atrg,EFCJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1816() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","ruhvG","JNLQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JNLQ],[ruhvG],[ruhvG,JNLQ],[R],[R,JNLQ],[R,ruhvG],[R,ruhvG,JNLQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1817() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1818() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OQ","gjvH","bIOX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bIOX],[gjvH],[gjvH,bIOX],[OQ],[OQ,bIOX],[OQ,gjvH],[OQ,gjvH,bIOX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1819() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NNGj","IE","xAg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xAg],[IE],[IE,xAg],[NNGj],[NNGj,xAg],[NNGj,IE],[NNGj,IE,xAg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1820() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iP","oKt","UgJL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UgJL],[oKt],[oKt,UgJL],[iP],[iP,UgJL],[iP,oKt],[iP,oKt,UgJL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1821() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lwk","f","M","CHdQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CHdQ],[M],[M,CHdQ],[f],[f,CHdQ],[f,M],[f,M,CHdQ],[lwk],[lwk,CHdQ],[lwk,M],[lwk,M,CHdQ],[lwk,f],[lwk,f,CHdQ],[lwk,f,M],[lwk,f,M,CHdQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1822() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zq","hC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hC],[zq],[zq,hC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1823() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JWui","tLm","Bav","iFeEq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iFeEq],[Bav],[Bav,iFeEq],[tLm],[tLm,iFeEq],[tLm,Bav],[tLm,Bav,iFeEq],[JWui],[JWui,iFeEq],[JWui,Bav],[JWui,Bav,iFeEq],[JWui,tLm],[JWui,tLm,iFeEq],[JWui,tLm,Bav],[JWui,tLm,Bav,iFeEq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1824() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EX","e","iS","ZV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZV],[iS],[iS,ZV],[e],[e,ZV],[e,iS],[e,iS,ZV],[EX],[EX,ZV],[EX,iS],[EX,iS,ZV],[EX,e],[EX,e,ZV],[EX,e,iS],[EX,e,iS,ZV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1825() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FK","g","mDq","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[mDq],[mDq,M],[g],[g,M],[g,mDq],[g,mDq,M],[FK],[FK,M],[FK,mDq],[FK,mDq,M],[FK,g],[FK,g,M],[FK,g,mDq],[FK,g,mDq,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1826() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Fz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1827() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NE","ezrVY","XYnC","qKeF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qKeF],[XYnC],[XYnC,qKeF],[ezrVY],[ezrVY,qKeF],[ezrVY,XYnC],[ezrVY,XYnC,qKeF],[NE],[NE,qKeF],[NE,XYnC],[NE,XYnC,qKeF],[NE,ezrVY],[NE,ezrVY,qKeF],[NE,ezrVY,XYnC],[NE,ezrVY,XYnC,qKeF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1828() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fg","jyS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jyS],[fg],[fg,jyS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1829() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JKt","Jnf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jnf],[JKt],[JKt,Jnf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1830() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "haD","moJg","hdKCJ","bGt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bGt],[hdKCJ],[hdKCJ,bGt],[moJg],[moJg,bGt],[moJg,hdKCJ],[moJg,hdKCJ,bGt],[haD],[haD,bGt],[haD,hdKCJ],[haD,hdKCJ,bGt],[haD,moJg],[haD,moJg,bGt],[haD,moJg,hdKCJ],[haD,moJg,hdKCJ,bGt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1831() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Drsu","T","zJd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zJd],[T],[T,zJd],[Drsu],[Drsu,zJd],[Drsu,T],[Drsu,T,zJd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1832() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ggaeu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ggaeu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1833() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iWK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iWK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1834() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","tVpRN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tVpRN],[P],[P,tVpRN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1835() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BAol","IPl","Hxj","MzW","mug")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mug],[MzW],[MzW,mug],[Hxj],[Hxj,mug],[Hxj,MzW],[Hxj,MzW,mug],[IPl],[IPl,mug],[IPl,MzW],[IPl,MzW,mug],[IPl,Hxj],[IPl,Hxj,mug],[IPl,Hxj,MzW],[IPl,Hxj,MzW,mug],[BAol],[BAol,mug],[BAol,MzW],[BAol,MzW,mug],[BAol,Hxj],[BAol,Hxj,mug],[BAol,Hxj,MzW],[BAol,Hxj,MzW,mug],[BAol,IPl],[BAol,IPl,mug],[BAol,IPl,MzW],[BAol,IPl,MzW,mug],[BAol,IPl,Hxj],[BAol,IPl,Hxj,mug],[BAol,IPl,Hxj,MzW],[BAol,IPl,Hxj,MzW,mug]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1836() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lc","jd","xKWN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xKWN],[jd],[jd,xKWN],[Lc],[Lc,xKWN],[Lc,jd],[Lc,jd,xKWN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1837() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JZ","js","TbnAx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TbnAx],[js],[js,TbnAx],[JZ],[JZ,TbnAx],[JZ,js],[JZ,js,TbnAx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1838() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "At","FJxxB","v")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[v],[FJxxB],[FJxxB,v],[At],[At,v],[At,FJxxB],[At,FJxxB,v]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1839() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NO","s","Dy","M","NdApk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NdApk],[M],[M,NdApk],[Dy],[Dy,NdApk],[Dy,M],[Dy,M,NdApk],[s],[s,NdApk],[s,M],[s,M,NdApk],[s,Dy],[s,Dy,NdApk],[s,Dy,M],[s,Dy,M,NdApk],[NO],[NO,NdApk],[NO,M],[NO,M,NdApk],[NO,Dy],[NO,Dy,NdApk],[NO,Dy,M],[NO,Dy,M,NdApk],[NO,s],[NO,s,NdApk],[NO,s,M],[NO,s,M,NdApk],[NO,s,Dy],[NO,s,Dy,NdApk],[NO,s,Dy,M],[NO,s,Dy,M,NdApk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1840() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[b]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1841() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VXMAa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VXMAa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1842() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QHCc","C","gYYe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gYYe],[C],[C,gYYe],[QHCc],[QHCc,gYYe],[QHCc,C],[QHCc,C,gYYe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1843() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ar","fbAtZ","Eygv","GA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GA],[Eygv],[Eygv,GA],[fbAtZ],[fbAtZ,GA],[fbAtZ,Eygv],[fbAtZ,Eygv,GA],[ar],[ar,GA],[ar,Eygv],[ar,Eygv,GA],[ar,fbAtZ],[ar,fbAtZ,GA],[ar,fbAtZ,Eygv],[ar,fbAtZ,Eygv,GA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1844() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eZ","pYfuQ","HSZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HSZ],[pYfuQ],[pYfuQ,HSZ],[eZ],[eZ,HSZ],[eZ,pYfuQ],[eZ,pYfuQ,HSZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1845() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IJQ","GPXS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GPXS],[IJQ],[IJQ,GPXS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1846() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VIRg","tZ","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[tZ],[tZ,M],[VIRg],[VIRg,M],[VIRg,tZ],[VIRg,tZ,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1847() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","Hrz","OObN","ZPID","Yycaa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yycaa],[ZPID],[ZPID,Yycaa],[OObN],[OObN,Yycaa],[OObN,ZPID],[OObN,ZPID,Yycaa],[Hrz],[Hrz,Yycaa],[Hrz,ZPID],[Hrz,ZPID,Yycaa],[Hrz,OObN],[Hrz,OObN,Yycaa],[Hrz,OObN,ZPID],[Hrz,OObN,ZPID,Yycaa],[p],[p,Yycaa],[p,ZPID],[p,ZPID,Yycaa],[p,OObN],[p,OObN,Yycaa],[p,OObN,ZPID],[p,OObN,ZPID,Yycaa],[p,Hrz],[p,Hrz,Yycaa],[p,Hrz,ZPID],[p,Hrz,ZPID,Yycaa],[p,Hrz,OObN],[p,Hrz,OObN,Yycaa],[p,Hrz,OObN,ZPID],[p,Hrz,OObN,ZPID,Yycaa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1848() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rSAU","YqQ","vkkSW","ZJL","Bq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bq],[ZJL],[ZJL,Bq],[vkkSW],[vkkSW,Bq],[vkkSW,ZJL],[vkkSW,ZJL,Bq],[YqQ],[YqQ,Bq],[YqQ,ZJL],[YqQ,ZJL,Bq],[YqQ,vkkSW],[YqQ,vkkSW,Bq],[YqQ,vkkSW,ZJL],[YqQ,vkkSW,ZJL,Bq],[rSAU],[rSAU,Bq],[rSAU,ZJL],[rSAU,ZJL,Bq],[rSAU,vkkSW],[rSAU,vkkSW,Bq],[rSAU,vkkSW,ZJL],[rSAU,vkkSW,ZJL,Bq],[rSAU,YqQ],[rSAU,YqQ,Bq],[rSAU,YqQ,ZJL],[rSAU,YqQ,ZJL,Bq],[rSAU,YqQ,vkkSW],[rSAU,YqQ,vkkSW,Bq],[rSAU,YqQ,vkkSW,ZJL],[rSAU,YqQ,vkkSW,ZJL,Bq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1849() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SAWaZ","JRTIX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JRTIX],[SAWaZ],[SAWaZ,JRTIX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1850() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RR","eIsNs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eIsNs],[RR],[RR,eIsNs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1851() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qJrp","G","J","gu","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[gu],[gu,n],[J],[J,n],[J,gu],[J,gu,n],[G],[G,n],[G,gu],[G,gu,n],[G,J],[G,J,n],[G,J,gu],[G,J,gu,n],[qJrp],[qJrp,n],[qJrp,gu],[qJrp,gu,n],[qJrp,J],[qJrp,J,n],[qJrp,J,gu],[qJrp,J,gu,n],[qJrp,G],[qJrp,G,n],[qJrp,G,gu],[qJrp,G,gu,n],[qJrp,G,J],[qJrp,G,J,n],[qJrp,G,J,gu],[qJrp,G,J,gu,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1852() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FpK","Qb","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[Qb],[Qb,n],[FpK],[FpK,n],[FpK,Qb],[FpK,Qb,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1853() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OECY","tVXT","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[tVXT],[tVXT,O],[OECY],[OECY,O],[OECY,tVXT],[OECY,tVXT,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1854() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jfuI","ybo","ycD","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[ycD],[ycD,N],[ybo],[ybo,N],[ybo,ycD],[ybo,ycD,N],[jfuI],[jfuI,N],[jfuI,ycD],[jfuI,ycD,N],[jfuI,ybo],[jfuI,ybo,N],[jfuI,ybo,ycD],[jfuI,ybo,ycD,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1855() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","EM","MGPb","ONh","kdQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kdQ],[ONh],[ONh,kdQ],[MGPb],[MGPb,kdQ],[MGPb,ONh],[MGPb,ONh,kdQ],[EM],[EM,kdQ],[EM,ONh],[EM,ONh,kdQ],[EM,MGPb],[EM,MGPb,kdQ],[EM,MGPb,ONh],[EM,MGPb,ONh,kdQ],[S],[S,kdQ],[S,ONh],[S,ONh,kdQ],[S,MGPb],[S,MGPb,kdQ],[S,MGPb,ONh],[S,MGPb,ONh,kdQ],[S,EM],[S,EM,kdQ],[S,EM,ONh],[S,EM,ONh,kdQ],[S,EM,MGPb],[S,EM,MGPb,kdQ],[S,EM,MGPb,ONh],[S,EM,MGPb,ONh,kdQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1856() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "egt","bM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bM],[egt],[egt,bM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1857() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KJH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KJH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1858() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "orNCs","HPAd","xYo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xYo],[HPAd],[HPAd,xYo],[orNCs],[orNCs,xYo],[orNCs,HPAd],[orNCs,HPAd,xYo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1859() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gJ","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[gJ],[gJ,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1860() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ql")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ql]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1861() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "di","eQS","mKVM","Tnsv","WihmK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WihmK],[Tnsv],[Tnsv,WihmK],[mKVM],[mKVM,WihmK],[mKVM,Tnsv],[mKVM,Tnsv,WihmK],[eQS],[eQS,WihmK],[eQS,Tnsv],[eQS,Tnsv,WihmK],[eQS,mKVM],[eQS,mKVM,WihmK],[eQS,mKVM,Tnsv],[eQS,mKVM,Tnsv,WihmK],[di],[di,WihmK],[di,Tnsv],[di,Tnsv,WihmK],[di,mKVM],[di,mKVM,WihmK],[di,mKVM,Tnsv],[di,mKVM,Tnsv,WihmK],[di,eQS],[di,eQS,WihmK],[di,eQS,Tnsv],[di,eQS,Tnsv,WihmK],[di,eQS,mKVM],[di,eQS,mKVM,WihmK],[di,eQS,mKVM,Tnsv],[di,eQS,mKVM,Tnsv,WihmK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1862() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DlMb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DlMb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1863() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HUfc","Lt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lt],[HUfc],[HUfc,Lt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1864() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qOb","ip")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ip],[qOb],[qOb,ip]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1865() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jbl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jbl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1866() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QIiDt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QIiDt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1867() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iJWcj","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[iJWcj],[iJWcj,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1868() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ynE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ynE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1869() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZWkFF","Z","GncKp","JsJqF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JsJqF],[GncKp],[GncKp,JsJqF],[Z],[Z,JsJqF],[Z,GncKp],[Z,GncKp,JsJqF],[ZWkFF],[ZWkFF,JsJqF],[ZWkFF,GncKp],[ZWkFF,GncKp,JsJqF],[ZWkFF,Z],[ZWkFF,Z,JsJqF],[ZWkFF,Z,GncKp],[ZWkFF,Z,GncKp,JsJqF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1870() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Oeqw","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[Oeqw],[Oeqw,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1871() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vof","rTmod","Ap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ap],[rTmod],[rTmod,Ap],[Vof],[Vof,Ap],[Vof,rTmod],[Vof,rTmod,Ap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1872() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","ssQp","Ap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ap],[ssQp],[ssQp,Ap],[T],[T,Ap],[T,ssQp],[T,ssQp,Ap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1873() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XX","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[XX],[XX,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1874() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UiFCO","a","z","mh","rA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rA],[mh],[mh,rA],[z],[z,rA],[z,mh],[z,mh,rA],[a],[a,rA],[a,mh],[a,mh,rA],[a,z],[a,z,rA],[a,z,mh],[a,z,mh,rA],[UiFCO],[UiFCO,rA],[UiFCO,mh],[UiFCO,mh,rA],[UiFCO,z],[UiFCO,z,rA],[UiFCO,z,mh],[UiFCO,z,mh,rA],[UiFCO,a],[UiFCO,a,rA],[UiFCO,a,mh],[UiFCO,a,mh,rA],[UiFCO,a,z],[UiFCO,a,z,rA],[UiFCO,a,z,mh],[UiFCO,a,z,mh,rA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1875() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IeS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IeS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1876() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aUliZ","NPpf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NPpf],[aUliZ],[aUliZ,NPpf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1877() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1878() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cPP","Kb","rScEX","DGQt","qiMfh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qiMfh],[DGQt],[DGQt,qiMfh],[rScEX],[rScEX,qiMfh],[rScEX,DGQt],[rScEX,DGQt,qiMfh],[Kb],[Kb,qiMfh],[Kb,DGQt],[Kb,DGQt,qiMfh],[Kb,rScEX],[Kb,rScEX,qiMfh],[Kb,rScEX,DGQt],[Kb,rScEX,DGQt,qiMfh],[cPP],[cPP,qiMfh],[cPP,DGQt],[cPP,DGQt,qiMfh],[cPP,rScEX],[cPP,rScEX,qiMfh],[cPP,rScEX,DGQt],[cPP,rScEX,DGQt,qiMfh],[cPP,Kb],[cPP,Kb,qiMfh],[cPP,Kb,DGQt],[cPP,Kb,DGQt,qiMfh],[cPP,Kb,rScEX],[cPP,Kb,rScEX,qiMfh],[cPP,Kb,rScEX,DGQt],[cPP,Kb,rScEX,DGQt,qiMfh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1879() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","AKxN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AKxN],[s],[s,AKxN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1880() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hBFee","bK","fB","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[fB],[fB,m],[bK],[bK,m],[bK,fB],[bK,fB,m],[hBFee],[hBFee,m],[hBFee,fB],[hBFee,fB,m],[hBFee,bK],[hBFee,bK,m],[hBFee,bK,fB],[hBFee,bK,fB,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1881() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dUIEk","DZd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DZd],[dUIEk],[dUIEk,DZd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1882() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JpqVz","vVshs","Yxiai")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yxiai],[vVshs],[vVshs,Yxiai],[JpqVz],[JpqVz,Yxiai],[JpqVz,vVshs],[JpqVz,vVshs,Yxiai]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1883() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oT","DgIp","UHb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UHb],[DgIp],[DgIp,UHb],[oT],[oT,UHb],[oT,DgIp],[oT,DgIp,UHb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1884() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UiuP","TeOHa","tM","DIM","Iu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Iu],[DIM],[DIM,Iu],[tM],[tM,Iu],[tM,DIM],[tM,DIM,Iu],[TeOHa],[TeOHa,Iu],[TeOHa,DIM],[TeOHa,DIM,Iu],[TeOHa,tM],[TeOHa,tM,Iu],[TeOHa,tM,DIM],[TeOHa,tM,DIM,Iu],[UiuP],[UiuP,Iu],[UiuP,DIM],[UiuP,DIM,Iu],[UiuP,tM],[UiuP,tM,Iu],[UiuP,tM,DIM],[UiuP,tM,DIM,Iu],[UiuP,TeOHa],[UiuP,TeOHa,Iu],[UiuP,TeOHa,DIM],[UiuP,TeOHa,DIM,Iu],[UiuP,TeOHa,tM],[UiuP,TeOHa,tM,Iu],[UiuP,TeOHa,tM,DIM],[UiuP,TeOHa,tM,DIM,Iu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1885() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jnas","wN","x","BiDO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BiDO],[x],[x,BiDO],[wN],[wN,BiDO],[wN,x],[wN,x,BiDO],[Jnas],[Jnas,BiDO],[Jnas,x],[Jnas,x,BiDO],[Jnas,wN],[Jnas,wN,BiDO],[Jnas,wN,x],[Jnas,wN,x,BiDO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1886() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[e],[e,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1887() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xwbcC","Q","h","KIg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KIg],[h],[h,KIg],[Q],[Q,KIg],[Q,h],[Q,h,KIg],[xwbcC],[xwbcC,KIg],[xwbcC,h],[xwbcC,h,KIg],[xwbcC,Q],[xwbcC,Q,KIg],[xwbcC,Q,h],[xwbcC,Q,h,KIg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1888() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GiTr","d","bTaw","GVTm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GVTm],[bTaw],[bTaw,GVTm],[d],[d,GVTm],[d,bTaw],[d,bTaw,GVTm],[GiTr],[GiTr,GVTm],[GiTr,bTaw],[GiTr,bTaw,GVTm],[GiTr,d],[GiTr,d,GVTm],[GiTr,d,bTaw],[GiTr,d,bTaw,GVTm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1889() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zj","Jz","dATt","lAMF","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[lAMF],[lAMF,O],[dATt],[dATt,O],[dATt,lAMF],[dATt,lAMF,O],[Jz],[Jz,O],[Jz,lAMF],[Jz,lAMF,O],[Jz,dATt],[Jz,dATt,O],[Jz,dATt,lAMF],[Jz,dATt,lAMF,O],[Zj],[Zj,O],[Zj,lAMF],[Zj,lAMF,O],[Zj,dATt],[Zj,dATt,O],[Zj,dATt,lAMF],[Zj,dATt,lAMF,O],[Zj,Jz],[Zj,Jz,O],[Zj,Jz,lAMF],[Zj,Jz,lAMF,O],[Zj,Jz,dATt],[Zj,Jz,dATt,O],[Zj,Jz,dATt,lAMF],[Zj,Jz,dATt,lAMF,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1890() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","iK","Kp","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[Kp],[Kp,f],[iK],[iK,f],[iK,Kp],[iK,Kp,f],[p],[p,f],[p,Kp],[p,Kp,f],[p,iK],[p,iK,f],[p,iK,Kp],[p,iK,Kp,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1891() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lTpzn","V","YPc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YPc],[V],[V,YPc],[lTpzn],[lTpzn,YPc],[lTpzn,V],[lTpzn,V,YPc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1892() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iFHSC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iFHSC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1893() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Upl","TeyVt","nJ","dkC","MJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MJ],[dkC],[dkC,MJ],[nJ],[nJ,MJ],[nJ,dkC],[nJ,dkC,MJ],[TeyVt],[TeyVt,MJ],[TeyVt,dkC],[TeyVt,dkC,MJ],[TeyVt,nJ],[TeyVt,nJ,MJ],[TeyVt,nJ,dkC],[TeyVt,nJ,dkC,MJ],[Upl],[Upl,MJ],[Upl,dkC],[Upl,dkC,MJ],[Upl,nJ],[Upl,nJ,MJ],[Upl,nJ,dkC],[Upl,nJ,dkC,MJ],[Upl,TeyVt],[Upl,TeyVt,MJ],[Upl,TeyVt,dkC],[Upl,TeyVt,dkC,MJ],[Upl,TeyVt,nJ],[Upl,TeyVt,nJ,MJ],[Upl,TeyVt,nJ,dkC],[Upl,TeyVt,nJ,dkC,MJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1894() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","GtLvQ","vJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vJ],[GtLvQ],[GtLvQ,vJ],[T],[T,vJ],[T,GtLvQ],[T,GtLvQ,vJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1895() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","H","bGTzY","FmlFu","AzNe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AzNe],[FmlFu],[FmlFu,AzNe],[bGTzY],[bGTzY,AzNe],[bGTzY,FmlFu],[bGTzY,FmlFu,AzNe],[H],[H,AzNe],[H,FmlFu],[H,FmlFu,AzNe],[H,bGTzY],[H,bGTzY,AzNe],[H,bGTzY,FmlFu],[H,bGTzY,FmlFu,AzNe],[e],[e,AzNe],[e,FmlFu],[e,FmlFu,AzNe],[e,bGTzY],[e,bGTzY,AzNe],[e,bGTzY,FmlFu],[e,bGTzY,FmlFu,AzNe],[e,H],[e,H,AzNe],[e,H,FmlFu],[e,H,FmlFu,AzNe],[e,H,bGTzY],[e,H,bGTzY,AzNe],[e,H,bGTzY,FmlFu],[e,H,bGTzY,FmlFu,AzNe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1896() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aXD","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[aXD],[aXD,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1897() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KsJuI","gJrgP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gJrgP],[KsJuI],[KsJuI,gJrgP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1898() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BC","ozk","RH","w","Nz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nz],[w],[w,Nz],[RH],[RH,Nz],[RH,w],[RH,w,Nz],[ozk],[ozk,Nz],[ozk,w],[ozk,w,Nz],[ozk,RH],[ozk,RH,Nz],[ozk,RH,w],[ozk,RH,w,Nz],[BC],[BC,Nz],[BC,w],[BC,w,Nz],[BC,RH],[BC,RH,Nz],[BC,RH,w],[BC,RH,w,Nz],[BC,ozk],[BC,ozk,Nz],[BC,ozk,w],[BC,ozk,w,Nz],[BC,ozk,RH],[BC,ozk,RH,Nz],[BC,ozk,RH,w],[BC,ozk,RH,w,Nz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1899() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KM","U")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[U],[KM],[KM,U]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1900() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SKEbq","txSN","mRwfm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mRwfm],[txSN],[txSN,mRwfm],[SKEbq],[SKEbq,mRwfm],[SKEbq,txSN],[SKEbq,txSN,mRwfm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1901() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sk","pRjE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pRjE],[sk],[sk,pRjE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1902() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qa","Nb","Icjw","F","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[F],[F,X],[Icjw],[Icjw,X],[Icjw,F],[Icjw,F,X],[Nb],[Nb,X],[Nb,F],[Nb,F,X],[Nb,Icjw],[Nb,Icjw,X],[Nb,Icjw,F],[Nb,Icjw,F,X],[qa],[qa,X],[qa,F],[qa,F,X],[qa,Icjw],[qa,Icjw,X],[qa,Icjw,F],[qa,Icjw,F,X],[qa,Nb],[qa,Nb,X],[qa,Nb,F],[qa,Nb,F,X],[qa,Nb,Icjw],[qa,Nb,Icjw,X],[qa,Nb,Icjw,F],[qa,Nb,Icjw,F,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1903() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZCiY","OlO","lu","jsQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jsQ],[lu],[lu,jsQ],[OlO],[OlO,jsQ],[OlO,lu],[OlO,lu,jsQ],[ZCiY],[ZCiY,jsQ],[ZCiY,lu],[ZCiY,lu,jsQ],[ZCiY,OlO],[ZCiY,OlO,jsQ],[ZCiY,OlO,lu],[ZCiY,OlO,lu,jsQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1904() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i","FwK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FwK],[i],[i,FwK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1905() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "znK","yat")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yat],[znK],[znK,yat]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1906() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i","mEs","iEf","UwZHy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UwZHy],[iEf],[iEf,UwZHy],[mEs],[mEs,UwZHy],[mEs,iEf],[mEs,iEf,UwZHy],[i],[i,UwZHy],[i,iEf],[i,iEf,UwZHy],[i,mEs],[i,mEs,UwZHy],[i,mEs,iEf],[i,mEs,iEf,UwZHy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1907() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wqDcp","k","UgxI","YhM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YhM],[UgxI],[UgxI,YhM],[k],[k,YhM],[k,UgxI],[k,UgxI,YhM],[wqDcp],[wqDcp,YhM],[wqDcp,UgxI],[wqDcp,UgxI,YhM],[wqDcp,k],[wqDcp,k,YhM],[wqDcp,k,UgxI],[wqDcp,k,UgxI,YhM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1908() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bqt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bqt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1909() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","VMOe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VMOe],[b],[b,VMOe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1910() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JC","DEvi","LMk","LJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LJ],[LMk],[LMk,LJ],[DEvi],[DEvi,LJ],[DEvi,LMk],[DEvi,LMk,LJ],[JC],[JC,LJ],[JC,LMk],[JC,LMk,LJ],[JC,DEvi],[JC,DEvi,LJ],[JC,DEvi,LMk],[JC,DEvi,LMk,LJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1911() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gx","IbeNQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IbeNQ],[Gx],[Gx,IbeNQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1912() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jAYBh","ZqRIT","nxh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nxh],[ZqRIT],[ZqRIT,nxh],[jAYBh],[jAYBh,nxh],[jAYBh,ZqRIT],[jAYBh,ZqRIT,nxh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1913() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HzC","d","OEZDO","nLAg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nLAg],[OEZDO],[OEZDO,nLAg],[d],[d,nLAg],[d,OEZDO],[d,OEZDO,nLAg],[HzC],[HzC,nLAg],[HzC,OEZDO],[HzC,OEZDO,nLAg],[HzC,d],[HzC,d,nLAg],[HzC,d,OEZDO],[HzC,d,OEZDO,nLAg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1914() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MPD","cjLTL","l","MZuWG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MZuWG],[l],[l,MZuWG],[cjLTL],[cjLTL,MZuWG],[cjLTL,l],[cjLTL,l,MZuWG],[MPD],[MPD,MZuWG],[MPD,l],[MPD,l,MZuWG],[MPD,cjLTL],[MPD,cjLTL,MZuWG],[MPD,cjLTL,l],[MPD,cjLTL,l,MZuWG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1915() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nvH","E","FMr","NI","XqS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XqS],[NI],[NI,XqS],[FMr],[FMr,XqS],[FMr,NI],[FMr,NI,XqS],[E],[E,XqS],[E,NI],[E,NI,XqS],[E,FMr],[E,FMr,XqS],[E,FMr,NI],[E,FMr,NI,XqS],[nvH],[nvH,XqS],[nvH,NI],[nvH,NI,XqS],[nvH,FMr],[nvH,FMr,XqS],[nvH,FMr,NI],[nvH,FMr,NI,XqS],[nvH,E],[nvH,E,XqS],[nvH,E,NI],[nvH,E,NI,XqS],[nvH,E,FMr],[nvH,E,FMr,XqS],[nvH,E,FMr,NI],[nvH,E,FMr,NI,XqS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1916() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","Uo","klTFp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[klTFp],[Uo],[Uo,klTFp],[Y],[Y,klTFp],[Y,Uo],[Y,Uo,klTFp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1917() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GX","lfj","GfT","tvHFt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tvHFt],[GfT],[GfT,tvHFt],[lfj],[lfj,tvHFt],[lfj,GfT],[lfj,GfT,tvHFt],[GX],[GX,tvHFt],[GX,GfT],[GX,GfT,tvHFt],[GX,lfj],[GX,lfj,tvHFt],[GX,lfj,GfT],[GX,lfj,GfT,tvHFt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1918() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RowEN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RowEN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1919() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xa","NacN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NacN],[Xa],[Xa,NacN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1920() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","w","NOAFN","oqyT","bvJcm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bvJcm],[oqyT],[oqyT,bvJcm],[NOAFN],[NOAFN,bvJcm],[NOAFN,oqyT],[NOAFN,oqyT,bvJcm],[w],[w,bvJcm],[w,oqyT],[w,oqyT,bvJcm],[w,NOAFN],[w,NOAFN,bvJcm],[w,NOAFN,oqyT],[w,NOAFN,oqyT,bvJcm],[F],[F,bvJcm],[F,oqyT],[F,oqyT,bvJcm],[F,NOAFN],[F,NOAFN,bvJcm],[F,NOAFN,oqyT],[F,NOAFN,oqyT,bvJcm],[F,w],[F,w,bvJcm],[F,w,oqyT],[F,w,oqyT,bvJcm],[F,w,NOAFN],[F,w,NOAFN,bvJcm],[F,w,NOAFN,oqyT],[F,w,NOAFN,oqyT,bvJcm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1921() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RwlWi","ohQk","stW","YiQOL","tae")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tae],[YiQOL],[YiQOL,tae],[stW],[stW,tae],[stW,YiQOL],[stW,YiQOL,tae],[ohQk],[ohQk,tae],[ohQk,YiQOL],[ohQk,YiQOL,tae],[ohQk,stW],[ohQk,stW,tae],[ohQk,stW,YiQOL],[ohQk,stW,YiQOL,tae],[RwlWi],[RwlWi,tae],[RwlWi,YiQOL],[RwlWi,YiQOL,tae],[RwlWi,stW],[RwlWi,stW,tae],[RwlWi,stW,YiQOL],[RwlWi,stW,YiQOL,tae],[RwlWi,ohQk],[RwlWi,ohQk,tae],[RwlWi,ohQk,YiQOL],[RwlWi,ohQk,YiQOL,tae],[RwlWi,ohQk,stW],[RwlWi,ohQk,stW,tae],[RwlWi,ohQk,stW,YiQOL],[RwlWi,ohQk,stW,YiQOL,tae]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1922() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[a]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1923() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "guQ","V")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[V],[guQ],[guQ,V]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1924() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1925() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","sxdhA","VwrR","k","lh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lh],[k],[k,lh],[VwrR],[VwrR,lh],[VwrR,k],[VwrR,k,lh],[sxdhA],[sxdhA,lh],[sxdhA,k],[sxdhA,k,lh],[sxdhA,VwrR],[sxdhA,VwrR,lh],[sxdhA,VwrR,k],[sxdhA,VwrR,k,lh],[A],[A,lh],[A,k],[A,k,lh],[A,VwrR],[A,VwrR,lh],[A,VwrR,k],[A,VwrR,k,lh],[A,sxdhA],[A,sxdhA,lh],[A,sxdhA,k],[A,sxdhA,k,lh],[A,sxdhA,VwrR],[A,sxdhA,VwrR,lh],[A,sxdhA,VwrR,k],[A,sxdhA,VwrR,k,lh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1926() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","SK","IVW","EaYfn","RhPCT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RhPCT],[EaYfn],[EaYfn,RhPCT],[IVW],[IVW,RhPCT],[IVW,EaYfn],[IVW,EaYfn,RhPCT],[SK],[SK,RhPCT],[SK,EaYfn],[SK,EaYfn,RhPCT],[SK,IVW],[SK,IVW,RhPCT],[SK,IVW,EaYfn],[SK,IVW,EaYfn,RhPCT],[t],[t,RhPCT],[t,EaYfn],[t,EaYfn,RhPCT],[t,IVW],[t,IVW,RhPCT],[t,IVW,EaYfn],[t,IVW,EaYfn,RhPCT],[t,SK],[t,SK,RhPCT],[t,SK,EaYfn],[t,SK,EaYfn,RhPCT],[t,SK,IVW],[t,SK,IVW,RhPCT],[t,SK,IVW,EaYfn],[t,SK,IVW,EaYfn,RhPCT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1927() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "spY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[spY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1928() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1929() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lCV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lCV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1930() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MWKp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MWKp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1931() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FEjeX","lCM","HoqRX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HoqRX],[lCM],[lCM,HoqRX],[FEjeX],[FEjeX,HoqRX],[FEjeX,lCM],[FEjeX,lCM,HoqRX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1932() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FX","U","Ty","vcOP","yt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yt],[vcOP],[vcOP,yt],[Ty],[Ty,yt],[Ty,vcOP],[Ty,vcOP,yt],[U],[U,yt],[U,vcOP],[U,vcOP,yt],[U,Ty],[U,Ty,yt],[U,Ty,vcOP],[U,Ty,vcOP,yt],[FX],[FX,yt],[FX,vcOP],[FX,vcOP,yt],[FX,Ty],[FX,Ty,yt],[FX,Ty,vcOP],[FX,Ty,vcOP,yt],[FX,U],[FX,U,yt],[FX,U,vcOP],[FX,U,vcOP,yt],[FX,U,Ty],[FX,U,Ty,yt],[FX,U,Ty,vcOP],[FX,U,Ty,vcOP,yt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1933() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","d","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[d],[d,K],[S],[S,K],[S,d],[S,d,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1934() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gz","zqHw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zqHw],[gz],[gz,zqHw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1935() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pT","F","JWIP","g","Kx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kx],[g],[g,Kx],[JWIP],[JWIP,Kx],[JWIP,g],[JWIP,g,Kx],[F],[F,Kx],[F,g],[F,g,Kx],[F,JWIP],[F,JWIP,Kx],[F,JWIP,g],[F,JWIP,g,Kx],[pT],[pT,Kx],[pT,g],[pT,g,Kx],[pT,JWIP],[pT,JWIP,Kx],[pT,JWIP,g],[pT,JWIP,g,Kx],[pT,F],[pT,F,Kx],[pT,F,g],[pT,F,g,Kx],[pT,F,JWIP],[pT,F,JWIP,Kx],[pT,F,JWIP,g],[pT,F,JWIP,g,Kx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1936() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pd","E","Gqb","lQp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lQp],[Gqb],[Gqb,lQp],[E],[E,lQp],[E,Gqb],[E,Gqb,lQp],[pd],[pd,lQp],[pd,Gqb],[pd,Gqb,lQp],[pd,E],[pd,E,lQp],[pd,E,Gqb],[pd,E,Gqb,lQp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1937() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1938() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bUYfZ","gQsO","ynOi","vYk","tlSFI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tlSFI],[vYk],[vYk,tlSFI],[ynOi],[ynOi,tlSFI],[ynOi,vYk],[ynOi,vYk,tlSFI],[gQsO],[gQsO,tlSFI],[gQsO,vYk],[gQsO,vYk,tlSFI],[gQsO,ynOi],[gQsO,ynOi,tlSFI],[gQsO,ynOi,vYk],[gQsO,ynOi,vYk,tlSFI],[bUYfZ],[bUYfZ,tlSFI],[bUYfZ,vYk],[bUYfZ,vYk,tlSFI],[bUYfZ,ynOi],[bUYfZ,ynOi,tlSFI],[bUYfZ,ynOi,vYk],[bUYfZ,ynOi,vYk,tlSFI],[bUYfZ,gQsO],[bUYfZ,gQsO,tlSFI],[bUYfZ,gQsO,vYk],[bUYfZ,gQsO,vYk,tlSFI],[bUYfZ,gQsO,ynOi],[bUYfZ,gQsO,ynOi,tlSFI],[bUYfZ,gQsO,ynOi,vYk],[bUYfZ,gQsO,ynOi,vYk,tlSFI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1939() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","OHKYc","FCfq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FCfq],[OHKYc],[OHKYc,FCfq],[F],[F,FCfq],[F,OHKYc],[F,OHKYc,FCfq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1940() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wrW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wrW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1941() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "usZOW","tYqgF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tYqgF],[usZOW],[usZOW,tYqgF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1942() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OjmA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OjmA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1943() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bgaOg","FI","T","k","TrmDS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TrmDS],[k],[k,TrmDS],[T],[T,TrmDS],[T,k],[T,k,TrmDS],[FI],[FI,TrmDS],[FI,k],[FI,k,TrmDS],[FI,T],[FI,T,TrmDS],[FI,T,k],[FI,T,k,TrmDS],[bgaOg],[bgaOg,TrmDS],[bgaOg,k],[bgaOg,k,TrmDS],[bgaOg,T],[bgaOg,T,TrmDS],[bgaOg,T,k],[bgaOg,T,k,TrmDS],[bgaOg,FI],[bgaOg,FI,TrmDS],[bgaOg,FI,k],[bgaOg,FI,k,TrmDS],[bgaOg,FI,T],[bgaOg,FI,T,TrmDS],[bgaOg,FI,T,k],[bgaOg,FI,T,k,TrmDS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1944() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","Ntnd","cFR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cFR],[Ntnd],[Ntnd,cFR],[B],[B,cFR],[B,Ntnd],[B,Ntnd,cFR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1945() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ksS","yjnQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yjnQ],[ksS],[ksS,yjnQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1946() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PPmS","vFe","ZTNF","Vb","Da")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Da],[Vb],[Vb,Da],[ZTNF],[ZTNF,Da],[ZTNF,Vb],[ZTNF,Vb,Da],[vFe],[vFe,Da],[vFe,Vb],[vFe,Vb,Da],[vFe,ZTNF],[vFe,ZTNF,Da],[vFe,ZTNF,Vb],[vFe,ZTNF,Vb,Da],[PPmS],[PPmS,Da],[PPmS,Vb],[PPmS,Vb,Da],[PPmS,ZTNF],[PPmS,ZTNF,Da],[PPmS,ZTNF,Vb],[PPmS,ZTNF,Vb,Da],[PPmS,vFe],[PPmS,vFe,Da],[PPmS,vFe,Vb],[PPmS,vFe,Vb,Da],[PPmS,vFe,ZTNF],[PPmS,vFe,ZTNF,Da],[PPmS,vFe,ZTNF,Vb],[PPmS,vFe,ZTNF,Vb,Da]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1947() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NQ","sv","rWGhz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rWGhz],[sv],[sv,rWGhz],[NQ],[NQ,rWGhz],[NQ,sv],[NQ,sv,rWGhz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1948() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "un","XjZo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XjZo],[un],[un,XjZo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1949() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gumo","r","fvY","ItV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ItV],[fvY],[fvY,ItV],[r],[r,ItV],[r,fvY],[r,fvY,ItV],[gumo],[gumo,ItV],[gumo,fvY],[gumo,fvY,ItV],[gumo,r],[gumo,r,ItV],[gumo,r,fvY],[gumo,r,fvY,ItV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1950() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","JSNU","VN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VN],[JSNU],[JSNU,VN],[Q],[Q,VN],[Q,JSNU],[Q,JSNU,VN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1951() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wN","IMoe","AQdv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AQdv],[IMoe],[IMoe,AQdv],[wN],[wN,AQdv],[wN,IMoe],[wN,IMoe,AQdv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1952() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1953() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AMPa","L","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[L],[L,n],[AMPa],[AMPa,n],[AMPa,L],[AMPa,L,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1954() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VBiHC","NnJbS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NnJbS],[VBiHC],[VBiHC,NnJbS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1955() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CbT","oZst")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oZst],[CbT],[CbT,oZst]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1956() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IZuC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IZuC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1957() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lo","Wp","sP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sP],[Wp],[Wp,sP],[lo],[lo,sP],[lo,Wp],[lo,Wp,sP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1958() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LofqO","ZTos","U","bluuD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bluuD],[U],[U,bluuD],[ZTos],[ZTos,bluuD],[ZTos,U],[ZTos,U,bluuD],[LofqO],[LofqO,bluuD],[LofqO,U],[LofqO,U,bluuD],[LofqO,ZTos],[LofqO,ZTos,bluuD],[LofqO,ZTos,U],[LofqO,ZTos,U,bluuD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1959() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nB","Cwzsj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cwzsj],[nB],[nB,Cwzsj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1960() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "euLy","qxZ","pkWx","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[pkWx],[pkWx,j],[qxZ],[qxZ,j],[qxZ,pkWx],[qxZ,pkWx,j],[euLy],[euLy,j],[euLy,pkWx],[euLy,pkWx,j],[euLy,qxZ],[euLy,qxZ,j],[euLy,qxZ,pkWx],[euLy,qxZ,pkWx,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1961() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GRzP","oTW","KYaI","RmMBs","GSw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GSw],[RmMBs],[RmMBs,GSw],[KYaI],[KYaI,GSw],[KYaI,RmMBs],[KYaI,RmMBs,GSw],[oTW],[oTW,GSw],[oTW,RmMBs],[oTW,RmMBs,GSw],[oTW,KYaI],[oTW,KYaI,GSw],[oTW,KYaI,RmMBs],[oTW,KYaI,RmMBs,GSw],[GRzP],[GRzP,GSw],[GRzP,RmMBs],[GRzP,RmMBs,GSw],[GRzP,KYaI],[GRzP,KYaI,GSw],[GRzP,KYaI,RmMBs],[GRzP,KYaI,RmMBs,GSw],[GRzP,oTW],[GRzP,oTW,GSw],[GRzP,oTW,RmMBs],[GRzP,oTW,RmMBs,GSw],[GRzP,oTW,KYaI],[GRzP,oTW,KYaI,GSw],[GRzP,oTW,KYaI,RmMBs],[GRzP,oTW,KYaI,RmMBs,GSw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1962() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1963() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eCAo","tvhW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tvhW],[eCAo],[eCAo,tvhW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1964() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fqn","U","DZKMG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DZKMG],[U],[U,DZKMG],[Fqn],[Fqn,DZKMG],[Fqn,U],[Fqn,U,DZKMG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1965() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pkuFh","Y","le","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[le],[le,Z],[Y],[Y,Z],[Y,le],[Y,le,Z],[pkuFh],[pkuFh,Z],[pkuFh,le],[pkuFh,le,Z],[pkuFh,Y],[pkuFh,Y,Z],[pkuFh,Y,le],[pkuFh,Y,le,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1966() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZjjGN","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[ZjjGN],[ZjjGN,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1967() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Di","W","H","bN","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[bN],[bN,n],[H],[H,n],[H,bN],[H,bN,n],[W],[W,n],[W,bN],[W,bN,n],[W,H],[W,H,n],[W,H,bN],[W,H,bN,n],[Di],[Di,n],[Di,bN],[Di,bN,n],[Di,H],[Di,H,n],[Di,H,bN],[Di,H,bN,n],[Di,W],[Di,W,n],[Di,W,bN],[Di,W,bN,n],[Di,W,H],[Di,W,H,n],[Di,W,H,bN],[Di,W,H,bN,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1968() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gz","rtwh","w","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[w],[w,l],[rtwh],[rtwh,l],[rtwh,w],[rtwh,w,l],[Gz],[Gz,l],[Gz,w],[Gz,w,l],[Gz,rtwh],[Gz,rtwh,l],[Gz,rtwh,w],[Gz,rtwh,w,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1969() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1970() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hzhv","yGCMJ","k","mOAxx","IwhH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IwhH],[mOAxx],[mOAxx,IwhH],[k],[k,IwhH],[k,mOAxx],[k,mOAxx,IwhH],[yGCMJ],[yGCMJ,IwhH],[yGCMJ,mOAxx],[yGCMJ,mOAxx,IwhH],[yGCMJ,k],[yGCMJ,k,IwhH],[yGCMJ,k,mOAxx],[yGCMJ,k,mOAxx,IwhH],[hzhv],[hzhv,IwhH],[hzhv,mOAxx],[hzhv,mOAxx,IwhH],[hzhv,k],[hzhv,k,IwhH],[hzhv,k,mOAxx],[hzhv,k,mOAxx,IwhH],[hzhv,yGCMJ],[hzhv,yGCMJ,IwhH],[hzhv,yGCMJ,mOAxx],[hzhv,yGCMJ,mOAxx,IwhH],[hzhv,yGCMJ,k],[hzhv,yGCMJ,k,IwhH],[hzhv,yGCMJ,k,mOAxx],[hzhv,yGCMJ,k,mOAxx,IwhH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1971() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","Fyow","oj","CXXQS","lhTD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lhTD],[CXXQS],[CXXQS,lhTD],[oj],[oj,lhTD],[oj,CXXQS],[oj,CXXQS,lhTD],[Fyow],[Fyow,lhTD],[Fyow,CXXQS],[Fyow,CXXQS,lhTD],[Fyow,oj],[Fyow,oj,lhTD],[Fyow,oj,CXXQS],[Fyow,oj,CXXQS,lhTD],[C],[C,lhTD],[C,CXXQS],[C,CXXQS,lhTD],[C,oj],[C,oj,lhTD],[C,oj,CXXQS],[C,oj,CXXQS,lhTD],[C,Fyow],[C,Fyow,lhTD],[C,Fyow,CXXQS],[C,Fyow,CXXQS,lhTD],[C,Fyow,oj],[C,Fyow,oj,lhTD],[C,Fyow,oj,CXXQS],[C,Fyow,oj,CXXQS,lhTD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1972() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MfL","C","D","iOejV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iOejV],[D],[D,iOejV],[C],[C,iOejV],[C,D],[C,D,iOejV],[MfL],[MfL,iOejV],[MfL,D],[MfL,D,iOejV],[MfL,C],[MfL,C,iOejV],[MfL,C,D],[MfL,C,D,iOejV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1973() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","CdYQ","gvf","Qx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qx],[gvf],[gvf,Qx],[CdYQ],[CdYQ,Qx],[CdYQ,gvf],[CdYQ,gvf,Qx],[s],[s,Qx],[s,gvf],[s,gvf,Qx],[s,CdYQ],[s,CdYQ,Qx],[s,CdYQ,gvf],[s,CdYQ,gvf,Qx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1974() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rdrmr","emuC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[emuC],[Rdrmr],[Rdrmr,emuC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1975() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VVlI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VVlI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1976() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TMQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TMQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1977() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1978() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KL","yW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yW],[KL],[KL,yW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1979() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jqZ","xTa","JX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JX],[xTa],[xTa,JX],[jqZ],[jqZ,JX],[jqZ,xTa],[jqZ,xTa,JX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1980() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vGXXF","mqXR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mqXR],[vGXXF],[vGXXF,mqXR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1981() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "beKW","pdrt","kdU","gEM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gEM],[kdU],[kdU,gEM],[pdrt],[pdrt,gEM],[pdrt,kdU],[pdrt,kdU,gEM],[beKW],[beKW,gEM],[beKW,kdU],[beKW,kdU,gEM],[beKW,pdrt],[beKW,pdrt,gEM],[beKW,pdrt,kdU],[beKW,pdrt,kdU,gEM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1982() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tQwQ","fEDnm","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[fEDnm],[fEDnm,I],[tQwQ],[tQwQ,I],[tQwQ,fEDnm],[tQwQ,fEDnm,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1983() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XNWa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XNWa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1984() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lSkN","bIUt","waPMH","rMKJ","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[rMKJ],[rMKJ,o],[waPMH],[waPMH,o],[waPMH,rMKJ],[waPMH,rMKJ,o],[bIUt],[bIUt,o],[bIUt,rMKJ],[bIUt,rMKJ,o],[bIUt,waPMH],[bIUt,waPMH,o],[bIUt,waPMH,rMKJ],[bIUt,waPMH,rMKJ,o],[lSkN],[lSkN,o],[lSkN,rMKJ],[lSkN,rMKJ,o],[lSkN,waPMH],[lSkN,waPMH,o],[lSkN,waPMH,rMKJ],[lSkN,waPMH,rMKJ,o],[lSkN,bIUt],[lSkN,bIUt,o],[lSkN,bIUt,rMKJ],[lSkN,bIUt,rMKJ,o],[lSkN,bIUt,waPMH],[lSkN,bIUt,waPMH,o],[lSkN,bIUt,waPMH,rMKJ],[lSkN,bIUt,waPMH,rMKJ,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1985() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "smj","PATd","vEtfU","LOabS","YrW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YrW],[LOabS],[LOabS,YrW],[vEtfU],[vEtfU,YrW],[vEtfU,LOabS],[vEtfU,LOabS,YrW],[PATd],[PATd,YrW],[PATd,LOabS],[PATd,LOabS,YrW],[PATd,vEtfU],[PATd,vEtfU,YrW],[PATd,vEtfU,LOabS],[PATd,vEtfU,LOabS,YrW],[smj],[smj,YrW],[smj,LOabS],[smj,LOabS,YrW],[smj,vEtfU],[smj,vEtfU,YrW],[smj,vEtfU,LOabS],[smj,vEtfU,LOabS,YrW],[smj,PATd],[smj,PATd,YrW],[smj,PATd,LOabS],[smj,PATd,LOabS,YrW],[smj,PATd,vEtfU],[smj,PATd,vEtfU,YrW],[smj,PATd,vEtfU,LOabS],[smj,PATd,vEtfU,LOabS,YrW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1986() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mrN","OXqs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OXqs],[mrN],[mrN,OXqs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1987() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wOz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wOz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1988() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gw","LKuXC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LKuXC],[gw],[gw,LKuXC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1989() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YM","iHnZN","pXWhr","BA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BA],[pXWhr],[pXWhr,BA],[iHnZN],[iHnZN,BA],[iHnZN,pXWhr],[iHnZN,pXWhr,BA],[YM],[YM,BA],[YM,pXWhr],[YM,pXWhr,BA],[YM,iHnZN],[YM,iHnZN,BA],[YM,iHnZN,pXWhr],[YM,iHnZN,pXWhr,BA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1990() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","S","qhUu","xaQ","pQNE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pQNE],[xaQ],[xaQ,pQNE],[qhUu],[qhUu,pQNE],[qhUu,xaQ],[qhUu,xaQ,pQNE],[S],[S,pQNE],[S,xaQ],[S,xaQ,pQNE],[S,qhUu],[S,qhUu,pQNE],[S,qhUu,xaQ],[S,qhUu,xaQ,pQNE],[a],[a,pQNE],[a,xaQ],[a,xaQ,pQNE],[a,qhUu],[a,qhUu,pQNE],[a,qhUu,xaQ],[a,qhUu,xaQ,pQNE],[a,S],[a,S,pQNE],[a,S,xaQ],[a,S,xaQ,pQNE],[a,S,qhUu],[a,S,qhUu,pQNE],[a,S,qhUu,xaQ],[a,S,qhUu,xaQ,pQNE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1991() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NoB","u","TRiaV","gbC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gbC],[TRiaV],[TRiaV,gbC],[u],[u,gbC],[u,TRiaV],[u,TRiaV,gbC],[NoB],[NoB,gbC],[NoB,TRiaV],[NoB,TRiaV,gbC],[NoB,u],[NoB,u,gbC],[NoB,u,TRiaV],[NoB,u,TRiaV,gbC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1992() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dnpZQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dnpZQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1993() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","oEVxn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oEVxn],[E],[E,oEVxn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1994() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gj","RWj","DloJj","uqqr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uqqr],[DloJj],[DloJj,uqqr],[RWj],[RWj,uqqr],[RWj,DloJj],[RWj,DloJj,uqqr],[Gj],[Gj,uqqr],[Gj,DloJj],[Gj,DloJj,uqqr],[Gj,RWj],[Gj,RWj,uqqr],[Gj,RWj,DloJj],[Gj,RWj,DloJj,uqqr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1995() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VjgyM","gsy","flZE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[flZE],[gsy],[gsy,flZE],[VjgyM],[VjgyM,flZE],[VjgyM,gsy],[VjgyM,gsy,flZE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1996() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Kl","vj","KfXkc","Tm","Nm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nm],[Tm],[Tm,Nm],[KfXkc],[KfXkc,Nm],[KfXkc,Tm],[KfXkc,Tm,Nm],[vj],[vj,Nm],[vj,Tm],[vj,Tm,Nm],[vj,KfXkc],[vj,KfXkc,Nm],[vj,KfXkc,Tm],[vj,KfXkc,Tm,Nm],[Kl],[Kl,Nm],[Kl,Tm],[Kl,Tm,Nm],[Kl,KfXkc],[Kl,KfXkc,Nm],[Kl,KfXkc,Tm],[Kl,KfXkc,Tm,Nm],[Kl,vj],[Kl,vj,Nm],[Kl,vj,Tm],[Kl,vj,Tm,Nm],[Kl,vj,KfXkc],[Kl,vj,KfXkc,Nm],[Kl,vj,KfXkc,Tm],[Kl,vj,KfXkc,Tm,Nm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1997() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qap","TBhlO","ZP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZP],[TBhlO],[TBhlO,ZP],[qap],[qap,ZP],[qap,TBhlO],[qap,TBhlO,ZP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1998() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NU","zyj","rgLr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rgLr],[zyj],[zyj,rgLr],[NU],[NU,rgLr],[NU,zyj],[NU,zyj,rgLr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_1999() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aZc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aZc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2000() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","dE","mN","AK","nJh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nJh],[AK],[AK,nJh],[mN],[mN,nJh],[mN,AK],[mN,AK,nJh],[dE],[dE,nJh],[dE,AK],[dE,AK,nJh],[dE,mN],[dE,mN,nJh],[dE,mN,AK],[dE,mN,AK,nJh],[A],[A,nJh],[A,AK],[A,AK,nJh],[A,mN],[A,mN,nJh],[A,mN,AK],[A,mN,AK,nJh],[A,dE],[A,dE,nJh],[A,dE,AK],[A,dE,AK,nJh],[A,dE,mN],[A,dE,mN,nJh],[A,dE,mN,AK],[A,dE,mN,AK,nJh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2001() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wjGpx","NCg","kT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kT],[NCg],[NCg,kT],[wjGpx],[wjGpx,kT],[wjGpx,NCg],[wjGpx,NCg,kT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2002() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jlIx","yz","q","pty")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pty],[q],[q,pty],[yz],[yz,pty],[yz,q],[yz,q,pty],[jlIx],[jlIx,pty],[jlIx,q],[jlIx,q,pty],[jlIx,yz],[jlIx,yz,pty],[jlIx,yz,q],[jlIx,yz,q,pty]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2003() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xgjkj","huO","DJk","u")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[u],[DJk],[DJk,u],[huO],[huO,u],[huO,DJk],[huO,DJk,u],[Xgjkj],[Xgjkj,u],[Xgjkj,DJk],[Xgjkj,DJk,u],[Xgjkj,huO],[Xgjkj,huO,u],[Xgjkj,huO,DJk],[Xgjkj,huO,DJk,u]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2004() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","VAz","NdD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NdD],[VAz],[VAz,NdD],[q],[q,NdD],[q,VAz],[q,VAz,NdD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2005() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QU","WxGr","alTiq","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[alTiq],[alTiq,L],[WxGr],[WxGr,L],[WxGr,alTiq],[WxGr,alTiq,L],[QU],[QU,L],[QU,alTiq],[QU,alTiq,L],[QU,WxGr],[QU,WxGr,L],[QU,WxGr,alTiq],[QU,WxGr,alTiq,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2006() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cY","nPtf","mLTZ","aj","Gqg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gqg],[aj],[aj,Gqg],[mLTZ],[mLTZ,Gqg],[mLTZ,aj],[mLTZ,aj,Gqg],[nPtf],[nPtf,Gqg],[nPtf,aj],[nPtf,aj,Gqg],[nPtf,mLTZ],[nPtf,mLTZ,Gqg],[nPtf,mLTZ,aj],[nPtf,mLTZ,aj,Gqg],[cY],[cY,Gqg],[cY,aj],[cY,aj,Gqg],[cY,mLTZ],[cY,mLTZ,Gqg],[cY,mLTZ,aj],[cY,mLTZ,aj,Gqg],[cY,nPtf],[cY,nPtf,Gqg],[cY,nPtf,aj],[cY,nPtf,aj,Gqg],[cY,nPtf,mLTZ],[cY,nPtf,mLTZ,Gqg],[cY,nPtf,mLTZ,aj],[cY,nPtf,mLTZ,aj,Gqg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2007() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cZoD","U","kB","VA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VA],[kB],[kB,VA],[U],[U,VA],[U,kB],[U,kB,VA],[cZoD],[cZoD,VA],[cZoD,kB],[cZoD,kB,VA],[cZoD,U],[cZoD,U,VA],[cZoD,U,kB],[cZoD,U,kB,VA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2008() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bc","C","GL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GL],[C],[C,GL],[bc],[bc,GL],[bc,C],[bc,C,GL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2009() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","fM","xCYY","M","FrvtX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FrvtX],[M],[M,FrvtX],[xCYY],[xCYY,FrvtX],[xCYY,M],[xCYY,M,FrvtX],[fM],[fM,FrvtX],[fM,M],[fM,M,FrvtX],[fM,xCYY],[fM,xCYY,FrvtX],[fM,xCYY,M],[fM,xCYY,M,FrvtX],[f],[f,FrvtX],[f,M],[f,M,FrvtX],[f,xCYY],[f,xCYY,FrvtX],[f,xCYY,M],[f,xCYY,M,FrvtX],[f,fM],[f,fM,FrvtX],[f,fM,M],[f,fM,M,FrvtX],[f,fM,xCYY],[f,fM,xCYY,FrvtX],[f,fM,xCYY,M],[f,fM,xCYY,M,FrvtX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2010() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jWR","Bwfy","VRd","NkYah")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NkYah],[VRd],[VRd,NkYah],[Bwfy],[Bwfy,NkYah],[Bwfy,VRd],[Bwfy,VRd,NkYah],[jWR],[jWR,NkYah],[jWR,VRd],[jWR,VRd,NkYah],[jWR,Bwfy],[jWR,Bwfy,NkYah],[jWR,Bwfy,VRd],[jWR,Bwfy,VRd,NkYah]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2011() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kFay","RH","ByCN","IfCu","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[IfCu],[IfCu,n],[ByCN],[ByCN,n],[ByCN,IfCu],[ByCN,IfCu,n],[RH],[RH,n],[RH,IfCu],[RH,IfCu,n],[RH,ByCN],[RH,ByCN,n],[RH,ByCN,IfCu],[RH,ByCN,IfCu,n],[kFay],[kFay,n],[kFay,IfCu],[kFay,IfCu,n],[kFay,ByCN],[kFay,ByCN,n],[kFay,ByCN,IfCu],[kFay,ByCN,IfCu,n],[kFay,RH],[kFay,RH,n],[kFay,RH,IfCu],[kFay,RH,IfCu,n],[kFay,RH,ByCN],[kFay,RH,ByCN,n],[kFay,RH,ByCN,IfCu],[kFay,RH,ByCN,IfCu,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2012() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yFkMj","yK","yodM","zmFq","WLa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WLa],[zmFq],[zmFq,WLa],[yodM],[yodM,WLa],[yodM,zmFq],[yodM,zmFq,WLa],[yK],[yK,WLa],[yK,zmFq],[yK,zmFq,WLa],[yK,yodM],[yK,yodM,WLa],[yK,yodM,zmFq],[yK,yodM,zmFq,WLa],[yFkMj],[yFkMj,WLa],[yFkMj,zmFq],[yFkMj,zmFq,WLa],[yFkMj,yodM],[yFkMj,yodM,WLa],[yFkMj,yodM,zmFq],[yFkMj,yodM,zmFq,WLa],[yFkMj,yK],[yFkMj,yK,WLa],[yFkMj,yK,zmFq],[yFkMj,yK,zmFq,WLa],[yFkMj,yK,yodM],[yFkMj,yK,yodM,WLa],[yFkMj,yK,yodM,zmFq],[yFkMj,yK,yodM,zmFq,WLa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2013() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uim","LPs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LPs],[uim],[uim,LPs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2014() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","hnj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hnj],[U],[U,hnj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2015() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KD","Kff","OJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OJ],[Kff],[Kff,OJ],[KD],[KD,OJ],[KD,Kff],[KD,Kff,OJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2016() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LIM","c","Qlveu","WiJJ","iD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iD],[WiJJ],[WiJJ,iD],[Qlveu],[Qlveu,iD],[Qlveu,WiJJ],[Qlveu,WiJJ,iD],[c],[c,iD],[c,WiJJ],[c,WiJJ,iD],[c,Qlveu],[c,Qlveu,iD],[c,Qlveu,WiJJ],[c,Qlveu,WiJJ,iD],[LIM],[LIM,iD],[LIM,WiJJ],[LIM,WiJJ,iD],[LIM,Qlveu],[LIM,Qlveu,iD],[LIM,Qlveu,WiJJ],[LIM,Qlveu,WiJJ,iD],[LIM,c],[LIM,c,iD],[LIM,c,WiJJ],[LIM,c,WiJJ,iD],[LIM,c,Qlveu],[LIM,c,Qlveu,iD],[LIM,c,Qlveu,WiJJ],[LIM,c,Qlveu,WiJJ,iD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2017() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2018() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aa","OkqSo","brqT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[brqT],[OkqSo],[OkqSo,brqT],[aa],[aa,brqT],[aa,OkqSo],[aa,OkqSo,brqT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2019() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nRaq","xiy","gBc","Xsw","tNY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tNY],[Xsw],[Xsw,tNY],[gBc],[gBc,tNY],[gBc,Xsw],[gBc,Xsw,tNY],[xiy],[xiy,tNY],[xiy,Xsw],[xiy,Xsw,tNY],[xiy,gBc],[xiy,gBc,tNY],[xiy,gBc,Xsw],[xiy,gBc,Xsw,tNY],[nRaq],[nRaq,tNY],[nRaq,Xsw],[nRaq,Xsw,tNY],[nRaq,gBc],[nRaq,gBc,tNY],[nRaq,gBc,Xsw],[nRaq,gBc,Xsw,tNY],[nRaq,xiy],[nRaq,xiy,tNY],[nRaq,xiy,Xsw],[nRaq,xiy,Xsw,tNY],[nRaq,xiy,gBc],[nRaq,xiy,gBc,tNY],[nRaq,xiy,gBc,Xsw],[nRaq,xiy,gBc,Xsw,tNY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2020() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KiGjB","FIiK","nXID","PqVnD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PqVnD],[nXID],[nXID,PqVnD],[FIiK],[FIiK,PqVnD],[FIiK,nXID],[FIiK,nXID,PqVnD],[KiGjB],[KiGjB,PqVnD],[KiGjB,nXID],[KiGjB,nXID,PqVnD],[KiGjB,FIiK],[KiGjB,FIiK,PqVnD],[KiGjB,FIiK,nXID],[KiGjB,FIiK,nXID,PqVnD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2021() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","UVcc","VLyR","PRq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PRq],[VLyR],[VLyR,PRq],[UVcc],[UVcc,PRq],[UVcc,VLyR],[UVcc,VLyR,PRq],[e],[e,PRq],[e,VLyR],[e,VLyR,PRq],[e,UVcc],[e,UVcc,PRq],[e,UVcc,VLyR],[e,UVcc,VLyR,PRq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2022() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2023() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","q","FYwt","uAyt","rUb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rUb],[uAyt],[uAyt,rUb],[FYwt],[FYwt,rUb],[FYwt,uAyt],[FYwt,uAyt,rUb],[q],[q,rUb],[q,uAyt],[q,uAyt,rUb],[q,FYwt],[q,FYwt,rUb],[q,FYwt,uAyt],[q,FYwt,uAyt,rUb],[P],[P,rUb],[P,uAyt],[P,uAyt,rUb],[P,FYwt],[P,FYwt,rUb],[P,FYwt,uAyt],[P,FYwt,uAyt,rUb],[P,q],[P,q,rUb],[P,q,uAyt],[P,q,uAyt,rUb],[P,q,FYwt],[P,q,FYwt,rUb],[P,q,FYwt,uAyt],[P,q,FYwt,uAyt,rUb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2024() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FJGtY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FJGtY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2025() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oT","YTD","iYHt","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[iYHt],[iYHt,M],[YTD],[YTD,M],[YTD,iYHt],[YTD,iYHt,M],[oT],[oT,M],[oT,iYHt],[oT,iYHt,M],[oT,YTD],[oT,YTD,M],[oT,YTD,iYHt],[oT,YTD,iYHt,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2026() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","tsKQX","Ud")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ud],[tsKQX],[tsKQX,Ud],[e],[e,Ud],[e,tsKQX],[e,tsKQX,Ud]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2027() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dQa","zsNA","uQx","M","tpJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tpJ],[M],[M,tpJ],[uQx],[uQx,tpJ],[uQx,M],[uQx,M,tpJ],[zsNA],[zsNA,tpJ],[zsNA,M],[zsNA,M,tpJ],[zsNA,uQx],[zsNA,uQx,tpJ],[zsNA,uQx,M],[zsNA,uQx,M,tpJ],[dQa],[dQa,tpJ],[dQa,M],[dQa,M,tpJ],[dQa,uQx],[dQa,uQx,tpJ],[dQa,uQx,M],[dQa,uQx,M,tpJ],[dQa,zsNA],[dQa,zsNA,tpJ],[dQa,zsNA,M],[dQa,zsNA,M,tpJ],[dQa,zsNA,uQx],[dQa,zsNA,uQx,tpJ],[dQa,zsNA,uQx,M],[dQa,zsNA,uQx,M,tpJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2028() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MlxI","CYBG","xiX","tfRn","mgjX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mgjX],[tfRn],[tfRn,mgjX],[xiX],[xiX,mgjX],[xiX,tfRn],[xiX,tfRn,mgjX],[CYBG],[CYBG,mgjX],[CYBG,tfRn],[CYBG,tfRn,mgjX],[CYBG,xiX],[CYBG,xiX,mgjX],[CYBG,xiX,tfRn],[CYBG,xiX,tfRn,mgjX],[MlxI],[MlxI,mgjX],[MlxI,tfRn],[MlxI,tfRn,mgjX],[MlxI,xiX],[MlxI,xiX,mgjX],[MlxI,xiX,tfRn],[MlxI,xiX,tfRn,mgjX],[MlxI,CYBG],[MlxI,CYBG,mgjX],[MlxI,CYBG,tfRn],[MlxI,CYBG,tfRn,mgjX],[MlxI,CYBG,xiX],[MlxI,CYBG,xiX,mgjX],[MlxI,CYBG,xiX,tfRn],[MlxI,CYBG,xiX,tfRn,mgjX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2029() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gezfq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gezfq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2030() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","Qafv","j","Gq","JiaJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JiaJ],[Gq],[Gq,JiaJ],[j],[j,JiaJ],[j,Gq],[j,Gq,JiaJ],[Qafv],[Qafv,JiaJ],[Qafv,Gq],[Qafv,Gq,JiaJ],[Qafv,j],[Qafv,j,JiaJ],[Qafv,j,Gq],[Qafv,j,Gq,JiaJ],[R],[R,JiaJ],[R,Gq],[R,Gq,JiaJ],[R,j],[R,j,JiaJ],[R,j,Gq],[R,j,Gq,JiaJ],[R,Qafv],[R,Qafv,JiaJ],[R,Qafv,Gq],[R,Qafv,Gq,JiaJ],[R,Qafv,j],[R,Qafv,j,JiaJ],[R,Qafv,j,Gq],[R,Qafv,j,Gq,JiaJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2031() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NS","uiwIa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uiwIa],[NS],[NS,uiwIa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2032() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fG","D","Bug")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bug],[D],[D,Bug],[fG],[fG,Bug],[fG,D],[fG,D,Bug]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2033() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2034() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BB","xj","tCIzI","usX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[usX],[tCIzI],[tCIzI,usX],[xj],[xj,usX],[xj,tCIzI],[xj,tCIzI,usX],[BB],[BB,usX],[BB,tCIzI],[BB,tCIzI,usX],[BB,xj],[BB,xj,usX],[BB,xj,tCIzI],[BB,xj,tCIzI,usX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2035() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BIgHe","BVwLp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BVwLp],[BIgHe],[BIgHe,BVwLp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2036() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","thXJj","aLput")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aLput],[thXJj],[thXJj,aLput],[R],[R,aLput],[R,thXJj],[R,thXJj,aLput]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2037() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uje","UCtOb","KYH","jFi","DVP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DVP],[jFi],[jFi,DVP],[KYH],[KYH,DVP],[KYH,jFi],[KYH,jFi,DVP],[UCtOb],[UCtOb,DVP],[UCtOb,jFi],[UCtOb,jFi,DVP],[UCtOb,KYH],[UCtOb,KYH,DVP],[UCtOb,KYH,jFi],[UCtOb,KYH,jFi,DVP],[uje],[uje,DVP],[uje,jFi],[uje,jFi,DVP],[uje,KYH],[uje,KYH,DVP],[uje,KYH,jFi],[uje,KYH,jFi,DVP],[uje,UCtOb],[uje,UCtOb,DVP],[uje,UCtOb,jFi],[uje,UCtOb,jFi,DVP],[uje,UCtOb,KYH],[uje,UCtOb,KYH,DVP],[uje,UCtOb,KYH,jFi],[uje,UCtOb,KYH,jFi,DVP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2038() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tLAwR","Wp","tYHO","gRE","xiEjM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xiEjM],[gRE],[gRE,xiEjM],[tYHO],[tYHO,xiEjM],[tYHO,gRE],[tYHO,gRE,xiEjM],[Wp],[Wp,xiEjM],[Wp,gRE],[Wp,gRE,xiEjM],[Wp,tYHO],[Wp,tYHO,xiEjM],[Wp,tYHO,gRE],[Wp,tYHO,gRE,xiEjM],[tLAwR],[tLAwR,xiEjM],[tLAwR,gRE],[tLAwR,gRE,xiEjM],[tLAwR,tYHO],[tLAwR,tYHO,xiEjM],[tLAwR,tYHO,gRE],[tLAwR,tYHO,gRE,xiEjM],[tLAwR,Wp],[tLAwR,Wp,xiEjM],[tLAwR,Wp,gRE],[tLAwR,Wp,gRE,xiEjM],[tLAwR,Wp,tYHO],[tLAwR,Wp,tYHO,xiEjM],[tLAwR,Wp,tYHO,gRE],[tLAwR,Wp,tYHO,gRE,xiEjM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2039() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZZZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZZZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2040() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2041() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fagY","W","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[W],[W,G],[fagY],[fagY,G],[fagY,W],[fagY,W,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2042() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","uu","jOfHs","YVi","HGvDD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HGvDD],[YVi],[YVi,HGvDD],[jOfHs],[jOfHs,HGvDD],[jOfHs,YVi],[jOfHs,YVi,HGvDD],[uu],[uu,HGvDD],[uu,YVi],[uu,YVi,HGvDD],[uu,jOfHs],[uu,jOfHs,HGvDD],[uu,jOfHs,YVi],[uu,jOfHs,YVi,HGvDD],[P],[P,HGvDD],[P,YVi],[P,YVi,HGvDD],[P,jOfHs],[P,jOfHs,HGvDD],[P,jOfHs,YVi],[P,jOfHs,YVi,HGvDD],[P,uu],[P,uu,HGvDD],[P,uu,YVi],[P,uu,YVi,HGvDD],[P,uu,jOfHs],[P,uu,jOfHs,HGvDD],[P,uu,jOfHs,YVi],[P,uu,jOfHs,YVi,HGvDD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2043() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","EAWln","fQAxp","Wztx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wztx],[fQAxp],[fQAxp,Wztx],[EAWln],[EAWln,Wztx],[EAWln,fQAxp],[EAWln,fQAxp,Wztx],[b],[b,Wztx],[b,fQAxp],[b,fQAxp,Wztx],[b,EAWln],[b,EAWln,Wztx],[b,EAWln,fQAxp],[b,EAWln,fQAxp,Wztx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2044() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XqZqM","XZ","H","tcXiZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tcXiZ],[H],[H,tcXiZ],[XZ],[XZ,tcXiZ],[XZ,H],[XZ,H,tcXiZ],[XqZqM],[XqZqM,tcXiZ],[XqZqM,H],[XqZqM,H,tcXiZ],[XqZqM,XZ],[XqZqM,XZ,tcXiZ],[XqZqM,XZ,H],[XqZqM,XZ,H,tcXiZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2045() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ycU","DpF","VhnUl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VhnUl],[DpF],[DpF,VhnUl],[ycU],[ycU,VhnUl],[ycU,DpF],[ycU,DpF,VhnUl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2046() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","wJQM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wJQM],[E],[E,wJQM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2047() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Iz","FjJFW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FjJFW],[Iz],[Iz,FjJFW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2048() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vRLV","xZkID","VI","F","ZDgN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZDgN],[F],[F,ZDgN],[VI],[VI,ZDgN],[VI,F],[VI,F,ZDgN],[xZkID],[xZkID,ZDgN],[xZkID,F],[xZkID,F,ZDgN],[xZkID,VI],[xZkID,VI,ZDgN],[xZkID,VI,F],[xZkID,VI,F,ZDgN],[vRLV],[vRLV,ZDgN],[vRLV,F],[vRLV,F,ZDgN],[vRLV,VI],[vRLV,VI,ZDgN],[vRLV,VI,F],[vRLV,VI,F,ZDgN],[vRLV,xZkID],[vRLV,xZkID,ZDgN],[vRLV,xZkID,F],[vRLV,xZkID,F,ZDgN],[vRLV,xZkID,VI],[vRLV,xZkID,VI,ZDgN],[vRLV,xZkID,VI,F],[vRLV,xZkID,VI,F,ZDgN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2049() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ajJ","pIE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pIE],[ajJ],[ajJ,pIE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2050() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[R]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2051() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UHz","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[UHz],[UHz,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2052() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dd","QLkA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QLkA],[Dd],[Dd,QLkA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2053() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","ZyLB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZyLB],[w],[w,ZyLB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2054() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RfEX","UAeN","XWzy","cQorx","OGtv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OGtv],[cQorx],[cQorx,OGtv],[XWzy],[XWzy,OGtv],[XWzy,cQorx],[XWzy,cQorx,OGtv],[UAeN],[UAeN,OGtv],[UAeN,cQorx],[UAeN,cQorx,OGtv],[UAeN,XWzy],[UAeN,XWzy,OGtv],[UAeN,XWzy,cQorx],[UAeN,XWzy,cQorx,OGtv],[RfEX],[RfEX,OGtv],[RfEX,cQorx],[RfEX,cQorx,OGtv],[RfEX,XWzy],[RfEX,XWzy,OGtv],[RfEX,XWzy,cQorx],[RfEX,XWzy,cQorx,OGtv],[RfEX,UAeN],[RfEX,UAeN,OGtv],[RfEX,UAeN,cQorx],[RfEX,UAeN,cQorx,OGtv],[RfEX,UAeN,XWzy],[RfEX,UAeN,XWzy,OGtv],[RfEX,UAeN,XWzy,cQorx],[RfEX,UAeN,XWzy,cQorx,OGtv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2055() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kINim","v","Rz","Eej","Gc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gc],[Eej],[Eej,Gc],[Rz],[Rz,Gc],[Rz,Eej],[Rz,Eej,Gc],[v],[v,Gc],[v,Eej],[v,Eej,Gc],[v,Rz],[v,Rz,Gc],[v,Rz,Eej],[v,Rz,Eej,Gc],[kINim],[kINim,Gc],[kINim,Eej],[kINim,Eej,Gc],[kINim,Rz],[kINim,Rz,Gc],[kINim,Rz,Eej],[kINim,Rz,Eej,Gc],[kINim,v],[kINim,v,Gc],[kINim,v,Eej],[kINim,v,Eej,Gc],[kINim,v,Rz],[kINim,v,Rz,Gc],[kINim,v,Rz,Eej],[kINim,v,Rz,Eej,Gc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2056() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NxFuc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NxFuc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2057() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "no","dMB","l","Lk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lk],[l],[l,Lk],[dMB],[dMB,Lk],[dMB,l],[dMB,l,Lk],[no],[no,Lk],[no,l],[no,l,Lk],[no,dMB],[no,dMB,Lk],[no,dMB,l],[no,dMB,l,Lk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2058() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BjgkD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BjgkD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2059() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KST")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KST]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2060() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OHr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OHr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2061() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PEX","IdD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IdD],[PEX],[PEX,IdD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2062() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zCUiF","HYzf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HYzf],[zCUiF],[zCUiF,HYzf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2063() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nr","CHK","QtmI","Wf","kgz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kgz],[Wf],[Wf,kgz],[QtmI],[QtmI,kgz],[QtmI,Wf],[QtmI,Wf,kgz],[CHK],[CHK,kgz],[CHK,Wf],[CHK,Wf,kgz],[CHK,QtmI],[CHK,QtmI,kgz],[CHK,QtmI,Wf],[CHK,QtmI,Wf,kgz],[Nr],[Nr,kgz],[Nr,Wf],[Nr,Wf,kgz],[Nr,QtmI],[Nr,QtmI,kgz],[Nr,QtmI,Wf],[Nr,QtmI,Wf,kgz],[Nr,CHK],[Nr,CHK,kgz],[Nr,CHK,Wf],[Nr,CHK,Wf,kgz],[Nr,CHK,QtmI],[Nr,CHK,QtmI,kgz],[Nr,CHK,QtmI,Wf],[Nr,CHK,QtmI,Wf,kgz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2064() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[B]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2065() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hsMT","MW","XF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XF],[MW],[MW,XF],[hsMT],[hsMT,XF],[hsMT,MW],[hsMT,MW,XF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2066() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Iiv","Dmqyk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dmqyk],[Iiv],[Iiv,Dmqyk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2067() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VTb","OWhb","rAvz","tlKZA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tlKZA],[rAvz],[rAvz,tlKZA],[OWhb],[OWhb,tlKZA],[OWhb,rAvz],[OWhb,rAvz,tlKZA],[VTb],[VTb,tlKZA],[VTb,rAvz],[VTb,rAvz,tlKZA],[VTb,OWhb],[VTb,OWhb,tlKZA],[VTb,OWhb,rAvz],[VTb,OWhb,rAvz,tlKZA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2068() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XMeBF","IaT","jIFV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jIFV],[IaT],[IaT,jIFV],[XMeBF],[XMeBF,jIFV],[XMeBF,IaT],[XMeBF,IaT,jIFV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2069() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FqGyT","iX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iX],[FqGyT],[FqGyT,iX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2070() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2071() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iWa","jgmh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jgmh],[iWa],[iWa,jgmh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2072() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IlT","ZQr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZQr],[IlT],[IlT,ZQr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2073() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MU","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[MU],[MU,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2074() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oG","y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y],[oG],[oG,y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2075() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xk","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[Xk],[Xk,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2076() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kopr","g","I","FmR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FmR],[I],[I,FmR],[g],[g,FmR],[g,I],[g,I,FmR],[kopr],[kopr,FmR],[kopr,I],[kopr,I,FmR],[kopr,g],[kopr,g,FmR],[kopr,g,I],[kopr,g,I,FmR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2077() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","CUI","gM","UP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UP],[gM],[gM,UP],[CUI],[CUI,UP],[CUI,gM],[CUI,gM,UP],[S],[S,UP],[S,gM],[S,gM,UP],[S,CUI],[S,CUI,UP],[S,CUI,gM],[S,CUI,gM,UP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2078() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "blHm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[blHm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2079() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","Dij","gDf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gDf],[Dij],[Dij,gDf],[R],[R,gDf],[R,Dij],[R,Dij,gDf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2080() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gma","L","Xsw","uOKz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uOKz],[Xsw],[Xsw,uOKz],[L],[L,uOKz],[L,Xsw],[L,Xsw,uOKz],[gma],[gma,uOKz],[gma,Xsw],[gma,Xsw,uOKz],[gma,L],[gma,L,uOKz],[gma,L,Xsw],[gma,L,Xsw,uOKz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2081() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZbJ","dRe","PnKHb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PnKHb],[dRe],[dRe,PnKHb],[ZbJ],[ZbJ,PnKHb],[ZbJ,dRe],[ZbJ,dRe,PnKHb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2082() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","tZ","xW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xW],[tZ],[tZ,xW],[p],[p,xW],[p,tZ],[p,tZ,xW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2083() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zYSiN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zYSiN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2084() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zxA","eeUaE","VusZT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VusZT],[eeUaE],[eeUaE,VusZT],[zxA],[zxA,VusZT],[zxA,eeUaE],[zxA,eeUaE,VusZT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2085() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fsEl","zje")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zje],[fsEl],[fsEl,zje]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2086() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oQ","yn","pmEEh","xkl","zkRF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zkRF],[xkl],[xkl,zkRF],[pmEEh],[pmEEh,zkRF],[pmEEh,xkl],[pmEEh,xkl,zkRF],[yn],[yn,zkRF],[yn,xkl],[yn,xkl,zkRF],[yn,pmEEh],[yn,pmEEh,zkRF],[yn,pmEEh,xkl],[yn,pmEEh,xkl,zkRF],[oQ],[oQ,zkRF],[oQ,xkl],[oQ,xkl,zkRF],[oQ,pmEEh],[oQ,pmEEh,zkRF],[oQ,pmEEh,xkl],[oQ,pmEEh,xkl,zkRF],[oQ,yn],[oQ,yn,zkRF],[oQ,yn,xkl],[oQ,yn,xkl,zkRF],[oQ,yn,pmEEh],[oQ,yn,pmEEh,zkRF],[oQ,yn,pmEEh,xkl],[oQ,yn,pmEEh,xkl,zkRF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2087() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "teysq","nNN","qcaJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qcaJ],[nNN],[nNN,qcaJ],[teysq],[teysq,qcaJ],[teysq,nNN],[teysq,nNN,qcaJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2088() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","FQOBR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FQOBR],[t],[t,FQOBR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2089() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Np","z","NiCdR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NiCdR],[z],[z,NiCdR],[Np],[Np,NiCdR],[Np,z],[Np,z,NiCdR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2090() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UcTS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UcTS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2091() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XOtJ","udBdI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[udBdI],[XOtJ],[XOtJ,udBdI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2092() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","ts","Rhd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rhd],[ts],[ts,Rhd],[S],[S,Rhd],[S,ts],[S,ts,Rhd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2093() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Km","yWs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yWs],[Km],[Km,yWs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2094() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fK","Qry","Kv","wv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wv],[Kv],[Kv,wv],[Qry],[Qry,wv],[Qry,Kv],[Qry,Kv,wv],[fK],[fK,wv],[fK,Kv],[fK,Kv,wv],[fK,Qry],[fK,Qry,wv],[fK,Qry,Kv],[fK,Qry,Kv,wv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2095() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iKNXe","jqr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jqr],[iKNXe],[iKNXe,jqr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2096() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QRS","qgk","t","y","AXs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AXs],[y],[y,AXs],[t],[t,AXs],[t,y],[t,y,AXs],[qgk],[qgk,AXs],[qgk,y],[qgk,y,AXs],[qgk,t],[qgk,t,AXs],[qgk,t,y],[qgk,t,y,AXs],[QRS],[QRS,AXs],[QRS,y],[QRS,y,AXs],[QRS,t],[QRS,t,AXs],[QRS,t,y],[QRS,t,y,AXs],[QRS,qgk],[QRS,qgk,AXs],[QRS,qgk,y],[QRS,qgk,y,AXs],[QRS,qgk,t],[QRS,qgk,t,AXs],[QRS,qgk,t,y],[QRS,qgk,t,y,AXs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2097() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qpln")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qpln]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2098() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QahEF","WS","Ig")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ig],[WS],[WS,Ig],[QahEF],[QahEF,Ig],[QahEF,WS],[QahEF,WS,Ig]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2099() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jzXI","T","JT","kwzW","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[kwzW],[kwzW,n],[JT],[JT,n],[JT,kwzW],[JT,kwzW,n],[T],[T,n],[T,kwzW],[T,kwzW,n],[T,JT],[T,JT,n],[T,JT,kwzW],[T,JT,kwzW,n],[jzXI],[jzXI,n],[jzXI,kwzW],[jzXI,kwzW,n],[jzXI,JT],[jzXI,JT,n],[jzXI,JT,kwzW],[jzXI,JT,kwzW,n],[jzXI,T],[jzXI,T,n],[jzXI,T,kwzW],[jzXI,T,kwzW,n],[jzXI,T,JT],[jzXI,T,JT,n],[jzXI,T,JT,kwzW],[jzXI,T,JT,kwzW,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2100() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DsS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DsS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2101() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aR","RS","Pnuy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pnuy],[RS],[RS,Pnuy],[aR],[aR,Pnuy],[aR,RS],[aR,RS,Pnuy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2102() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","WBQ","BLzh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BLzh],[WBQ],[WBQ,BLzh],[w],[w,BLzh],[w,WBQ],[w,WBQ,BLzh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2103() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LujDh","GGkIL","mIxj","DS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DS],[mIxj],[mIxj,DS],[GGkIL],[GGkIL,DS],[GGkIL,mIxj],[GGkIL,mIxj,DS],[LujDh],[LujDh,DS],[LujDh,mIxj],[LujDh,mIxj,DS],[LujDh,GGkIL],[LujDh,GGkIL,DS],[LujDh,GGkIL,mIxj],[LujDh,GGkIL,mIxj,DS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2104() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ci","ubf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ubf],[Ci],[Ci,ubf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2105() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2106() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iRXTS","P","Zu","tozY","KgCd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KgCd],[tozY],[tozY,KgCd],[Zu],[Zu,KgCd],[Zu,tozY],[Zu,tozY,KgCd],[P],[P,KgCd],[P,tozY],[P,tozY,KgCd],[P,Zu],[P,Zu,KgCd],[P,Zu,tozY],[P,Zu,tozY,KgCd],[iRXTS],[iRXTS,KgCd],[iRXTS,tozY],[iRXTS,tozY,KgCd],[iRXTS,Zu],[iRXTS,Zu,KgCd],[iRXTS,Zu,tozY],[iRXTS,Zu,tozY,KgCd],[iRXTS,P],[iRXTS,P,KgCd],[iRXTS,P,tozY],[iRXTS,P,tozY,KgCd],[iRXTS,P,Zu],[iRXTS,P,Zu,KgCd],[iRXTS,P,Zu,tozY],[iRXTS,P,Zu,tozY,KgCd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2107() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EZ","lgu","Gt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gt],[lgu],[lgu,Gt],[EZ],[EZ,Gt],[EZ,lgu],[EZ,lgu,Gt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2108() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JYRe","yXY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yXY],[JYRe],[JYRe,yXY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2109() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VVR","FIFW","F","omPWJ","Ie")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ie],[omPWJ],[omPWJ,Ie],[F],[F,Ie],[F,omPWJ],[F,omPWJ,Ie],[FIFW],[FIFW,Ie],[FIFW,omPWJ],[FIFW,omPWJ,Ie],[FIFW,F],[FIFW,F,Ie],[FIFW,F,omPWJ],[FIFW,F,omPWJ,Ie],[VVR],[VVR,Ie],[VVR,omPWJ],[VVR,omPWJ,Ie],[VVR,F],[VVR,F,Ie],[VVR,F,omPWJ],[VVR,F,omPWJ,Ie],[VVR,FIFW],[VVR,FIFW,Ie],[VVR,FIFW,omPWJ],[VVR,FIFW,omPWJ,Ie],[VVR,FIFW,F],[VVR,FIFW,F,Ie],[VVR,FIFW,F,omPWJ],[VVR,FIFW,F,omPWJ,Ie]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2110() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BDf","UqRd","YP","eP","PJBq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PJBq],[eP],[eP,PJBq],[YP],[YP,PJBq],[YP,eP],[YP,eP,PJBq],[UqRd],[UqRd,PJBq],[UqRd,eP],[UqRd,eP,PJBq],[UqRd,YP],[UqRd,YP,PJBq],[UqRd,YP,eP],[UqRd,YP,eP,PJBq],[BDf],[BDf,PJBq],[BDf,eP],[BDf,eP,PJBq],[BDf,YP],[BDf,YP,PJBq],[BDf,YP,eP],[BDf,YP,eP,PJBq],[BDf,UqRd],[BDf,UqRd,PJBq],[BDf,UqRd,eP],[BDf,UqRd,eP,PJBq],[BDf,UqRd,YP],[BDf,UqRd,YP,PJBq],[BDf,UqRd,YP,eP],[BDf,UqRd,YP,eP,PJBq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2111() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ikVD","VA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VA],[ikVD],[ikVD,VA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2112() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ECkse","KPIlH","LT","ezTqE","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[ezTqE],[ezTqE,N],[LT],[LT,N],[LT,ezTqE],[LT,ezTqE,N],[KPIlH],[KPIlH,N],[KPIlH,ezTqE],[KPIlH,ezTqE,N],[KPIlH,LT],[KPIlH,LT,N],[KPIlH,LT,ezTqE],[KPIlH,LT,ezTqE,N],[ECkse],[ECkse,N],[ECkse,ezTqE],[ECkse,ezTqE,N],[ECkse,LT],[ECkse,LT,N],[ECkse,LT,ezTqE],[ECkse,LT,ezTqE,N],[ECkse,KPIlH],[ECkse,KPIlH,N],[ECkse,KPIlH,ezTqE],[ECkse,KPIlH,ezTqE,N],[ECkse,KPIlH,LT],[ECkse,KPIlH,LT,N],[ECkse,KPIlH,LT,ezTqE],[ECkse,KPIlH,LT,ezTqE,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2113() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hiT","d","ia","i","VscI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VscI],[i],[i,VscI],[ia],[ia,VscI],[ia,i],[ia,i,VscI],[d],[d,VscI],[d,i],[d,i,VscI],[d,ia],[d,ia,VscI],[d,ia,i],[d,ia,i,VscI],[hiT],[hiT,VscI],[hiT,i],[hiT,i,VscI],[hiT,ia],[hiT,ia,VscI],[hiT,ia,i],[hiT,ia,i,VscI],[hiT,d],[hiT,d,VscI],[hiT,d,i],[hiT,d,i,VscI],[hiT,d,ia],[hiT,d,ia,VscI],[hiT,d,ia,i],[hiT,d,ia,i,VscI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2114() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yKtMb","UVdl","jIkvA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jIkvA],[UVdl],[UVdl,jIkvA],[yKtMb],[yKtMb,jIkvA],[yKtMb,UVdl],[yKtMb,UVdl,jIkvA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2115() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","z","yhdz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yhdz],[z],[z,yhdz],[Q],[Q,yhdz],[Q,z],[Q,z,yhdz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2116() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2117() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KP","JxRo","XQG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XQG],[JxRo],[JxRo,XQG],[KP],[KP,XQG],[KP,JxRo],[KP,JxRo,XQG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2118() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2119() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","vI","lB","kvs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kvs],[lB],[lB,kvs],[vI],[vI,kvs],[vI,lB],[vI,lB,kvs],[S],[S,kvs],[S,lB],[S,lB,kvs],[S,vI],[S,vI,kvs],[S,vI,lB],[S,vI,lB,kvs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2120() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CKJdX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CKJdX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2121() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GY","ew","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[ew],[ew,g],[GY],[GY,g],[GY,ew],[GY,ew,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2122() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bEp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bEp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2123() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RIRM","dJ","hN","Y","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[Y],[Y,n],[hN],[hN,n],[hN,Y],[hN,Y,n],[dJ],[dJ,n],[dJ,Y],[dJ,Y,n],[dJ,hN],[dJ,hN,n],[dJ,hN,Y],[dJ,hN,Y,n],[RIRM],[RIRM,n],[RIRM,Y],[RIRM,Y,n],[RIRM,hN],[RIRM,hN,n],[RIRM,hN,Y],[RIRM,hN,Y,n],[RIRM,dJ],[RIRM,dJ,n],[RIRM,dJ,Y],[RIRM,dJ,Y,n],[RIRM,dJ,hN],[RIRM,dJ,hN,n],[RIRM,dJ,hN,Y],[RIRM,dJ,hN,Y,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2124() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","FRc","BOQJ","UuN","kxTD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kxTD],[UuN],[UuN,kxTD],[BOQJ],[BOQJ,kxTD],[BOQJ,UuN],[BOQJ,UuN,kxTD],[FRc],[FRc,kxTD],[FRc,UuN],[FRc,UuN,kxTD],[FRc,BOQJ],[FRc,BOQJ,kxTD],[FRc,BOQJ,UuN],[FRc,BOQJ,UuN,kxTD],[a],[a,kxTD],[a,UuN],[a,UuN,kxTD],[a,BOQJ],[a,BOQJ,kxTD],[a,BOQJ,UuN],[a,BOQJ,UuN,kxTD],[a,FRc],[a,FRc,kxTD],[a,FRc,UuN],[a,FRc,UuN,kxTD],[a,FRc,BOQJ],[a,FRc,BOQJ,kxTD],[a,FRc,BOQJ,UuN],[a,FRc,BOQJ,UuN,kxTD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2125() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d],[C],[C,d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2126() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X","Zti","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[Zti],[Zti,O],[X],[X,O],[X,Zti],[X,Zti,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2127() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZwO","wPFo","jzrw","htY","yG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yG],[htY],[htY,yG],[jzrw],[jzrw,yG],[jzrw,htY],[jzrw,htY,yG],[wPFo],[wPFo,yG],[wPFo,htY],[wPFo,htY,yG],[wPFo,jzrw],[wPFo,jzrw,yG],[wPFo,jzrw,htY],[wPFo,jzrw,htY,yG],[ZwO],[ZwO,yG],[ZwO,htY],[ZwO,htY,yG],[ZwO,jzrw],[ZwO,jzrw,yG],[ZwO,jzrw,htY],[ZwO,jzrw,htY,yG],[ZwO,wPFo],[ZwO,wPFo,yG],[ZwO,wPFo,htY],[ZwO,wPFo,htY,yG],[ZwO,wPFo,jzrw],[ZwO,wPFo,jzrw,yG],[ZwO,wPFo,jzrw,htY],[ZwO,wPFo,jzrw,htY,yG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2128() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sJFYX","VZZh","XV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XV],[VZZh],[VZZh,XV],[sJFYX],[sJFYX,XV],[sJFYX,VZZh],[sJFYX,VZZh,XV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2129() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kyBt","s","ka","mrdXr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mrdXr],[ka],[ka,mrdXr],[s],[s,mrdXr],[s,ka],[s,ka,mrdXr],[kyBt],[kyBt,mrdXr],[kyBt,ka],[kyBt,ka,mrdXr],[kyBt,s],[kyBt,s,mrdXr],[kyBt,s,ka],[kyBt,s,ka,mrdXr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2130() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","xp","EQ","iVxHz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iVxHz],[EQ],[EQ,iVxHz],[xp],[xp,iVxHz],[xp,EQ],[xp,EQ,iVxHz],[g],[g,iVxHz],[g,EQ],[g,EQ,iVxHz],[g,xp],[g,xp,iVxHz],[g,xp,EQ],[g,xp,EQ,iVxHz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2131() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GTQ","W","EM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EM],[W],[W,EM],[GTQ],[GTQ,EM],[GTQ,W],[GTQ,W,EM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2132() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[S]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2133() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zqpt","wkI","ige","rrLTy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rrLTy],[ige],[ige,rrLTy],[wkI],[wkI,rrLTy],[wkI,ige],[wkI,ige,rrLTy],[Zqpt],[Zqpt,rrLTy],[Zqpt,ige],[Zqpt,ige,rrLTy],[Zqpt,wkI],[Zqpt,wkI,rrLTy],[Zqpt,wkI,ige],[Zqpt,wkI,ige,rrLTy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2134() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Yy","ABKN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ABKN],[Yy],[Yy,ABKN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2135() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sud","kPdJL","hnzl","cN","TwrTq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TwrTq],[cN],[cN,TwrTq],[hnzl],[hnzl,TwrTq],[hnzl,cN],[hnzl,cN,TwrTq],[kPdJL],[kPdJL,TwrTq],[kPdJL,cN],[kPdJL,cN,TwrTq],[kPdJL,hnzl],[kPdJL,hnzl,TwrTq],[kPdJL,hnzl,cN],[kPdJL,hnzl,cN,TwrTq],[Sud],[Sud,TwrTq],[Sud,cN],[Sud,cN,TwrTq],[Sud,hnzl],[Sud,hnzl,TwrTq],[Sud,hnzl,cN],[Sud,hnzl,cN,TwrTq],[Sud,kPdJL],[Sud,kPdJL,TwrTq],[Sud,kPdJL,cN],[Sud,kPdJL,cN,TwrTq],[Sud,kPdJL,hnzl],[Sud,kPdJL,hnzl,TwrTq],[Sud,kPdJL,hnzl,cN],[Sud,kPdJL,hnzl,cN,TwrTq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2136() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vpQL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vpQL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2137() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wvkx","eDMSy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eDMSy],[wvkx],[wvkx,eDMSy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2138() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","cHLo","L","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[L],[L,N],[cHLo],[cHLo,N],[cHLo,L],[cHLo,L,N],[D],[D,N],[D,L],[D,L,N],[D,cHLo],[D,cHLo,N],[D,cHLo,L],[D,cHLo,L,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2139() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cveP","eKAuN","AyfGn","yOJG","hE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hE],[yOJG],[yOJG,hE],[AyfGn],[AyfGn,hE],[AyfGn,yOJG],[AyfGn,yOJG,hE],[eKAuN],[eKAuN,hE],[eKAuN,yOJG],[eKAuN,yOJG,hE],[eKAuN,AyfGn],[eKAuN,AyfGn,hE],[eKAuN,AyfGn,yOJG],[eKAuN,AyfGn,yOJG,hE],[cveP],[cveP,hE],[cveP,yOJG],[cveP,yOJG,hE],[cveP,AyfGn],[cveP,AyfGn,hE],[cveP,AyfGn,yOJG],[cveP,AyfGn,yOJG,hE],[cveP,eKAuN],[cveP,eKAuN,hE],[cveP,eKAuN,yOJG],[cveP,eKAuN,yOJG,hE],[cveP,eKAuN,AyfGn],[cveP,eKAuN,AyfGn,hE],[cveP,eKAuN,AyfGn,yOJG],[cveP,eKAuN,AyfGn,yOJG,hE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2140() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kPMux","VqqLo","j","IF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IF],[j],[j,IF],[VqqLo],[VqqLo,IF],[VqqLo,j],[VqqLo,j,IF],[kPMux],[kPMux,IF],[kPMux,j],[kPMux,j,IF],[kPMux,VqqLo],[kPMux,VqqLo,IF],[kPMux,VqqLo,j],[kPMux,VqqLo,j,IF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2141() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qWBy","ynBps","UR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UR],[ynBps],[ynBps,UR],[qWBy],[qWBy,UR],[qWBy,ynBps],[qWBy,ynBps,UR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2142() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VMfR","rwGnm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rwGnm],[VMfR],[VMfR,rwGnm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2143() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sNGg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sNGg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2144() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ol","gZook")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gZook],[Ol],[Ol,gZook]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2145() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EPRw","r","naJmr","Ccj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ccj],[naJmr],[naJmr,Ccj],[r],[r,Ccj],[r,naJmr],[r,naJmr,Ccj],[EPRw],[EPRw,Ccj],[EPRw,naJmr],[EPRw,naJmr,Ccj],[EPRw,r],[EPRw,r,Ccj],[EPRw,r,naJmr],[EPRw,r,naJmr,Ccj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2146() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rt","nVdjY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nVdjY],[rt],[rt,nVdjY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2147() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2148() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ExW","Sh","bKg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bKg],[Sh],[Sh,bKg],[ExW],[ExW,bKg],[ExW,Sh],[ExW,Sh,bKg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2149() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EFpLJ","p","R","HXUhW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HXUhW],[R],[R,HXUhW],[p],[p,HXUhW],[p,R],[p,R,HXUhW],[EFpLJ],[EFpLJ,HXUhW],[EFpLJ,R],[EFpLJ,R,HXUhW],[EFpLJ,p],[EFpLJ,p,HXUhW],[EFpLJ,p,R],[EFpLJ,p,R,HXUhW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2150() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vWE","TQj","TA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TA],[TQj],[TQj,TA],[vWE],[vWE,TA],[vWE,TQj],[vWE,TQj,TA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2151() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2152() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bexdt","rU","Y","ncB","Ub")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ub],[ncB],[ncB,Ub],[Y],[Y,Ub],[Y,ncB],[Y,ncB,Ub],[rU],[rU,Ub],[rU,ncB],[rU,ncB,Ub],[rU,Y],[rU,Y,Ub],[rU,Y,ncB],[rU,Y,ncB,Ub],[bexdt],[bexdt,Ub],[bexdt,ncB],[bexdt,ncB,Ub],[bexdt,Y],[bexdt,Y,Ub],[bexdt,Y,ncB],[bexdt,Y,ncB,Ub],[bexdt,rU],[bexdt,rU,Ub],[bexdt,rU,ncB],[bexdt,rU,ncB,Ub],[bexdt,rU,Y],[bexdt,rU,Y,Ub],[bexdt,rU,Y,ncB],[bexdt,rU,Y,ncB,Ub]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2153() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2154() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VyabI","DCMhs","uGj","rmPHx","sRAZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sRAZ],[rmPHx],[rmPHx,sRAZ],[uGj],[uGj,sRAZ],[uGj,rmPHx],[uGj,rmPHx,sRAZ],[DCMhs],[DCMhs,sRAZ],[DCMhs,rmPHx],[DCMhs,rmPHx,sRAZ],[DCMhs,uGj],[DCMhs,uGj,sRAZ],[DCMhs,uGj,rmPHx],[DCMhs,uGj,rmPHx,sRAZ],[VyabI],[VyabI,sRAZ],[VyabI,rmPHx],[VyabI,rmPHx,sRAZ],[VyabI,uGj],[VyabI,uGj,sRAZ],[VyabI,uGj,rmPHx],[VyabI,uGj,rmPHx,sRAZ],[VyabI,DCMhs],[VyabI,DCMhs,sRAZ],[VyabI,DCMhs,rmPHx],[VyabI,DCMhs,rmPHx,sRAZ],[VyabI,DCMhs,uGj],[VyabI,DCMhs,uGj,sRAZ],[VyabI,DCMhs,uGj,rmPHx],[VyabI,DCMhs,uGj,rmPHx,sRAZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2155() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WaOee","HO","paZ","adEsy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[adEsy],[paZ],[paZ,adEsy],[HO],[HO,adEsy],[HO,paZ],[HO,paZ,adEsy],[WaOee],[WaOee,adEsy],[WaOee,paZ],[WaOee,paZ,adEsy],[WaOee,HO],[WaOee,HO,adEsy],[WaOee,HO,paZ],[WaOee,HO,paZ,adEsy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2156() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[P]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2157() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "meI","HTC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HTC],[meI],[meI,HTC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2158() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vPlh","ELfe","VO","fpU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fpU],[VO],[VO,fpU],[ELfe],[ELfe,fpU],[ELfe,VO],[ELfe,VO,fpU],[vPlh],[vPlh,fpU],[vPlh,VO],[vPlh,VO,fpU],[vPlh,ELfe],[vPlh,ELfe,fpU],[vPlh,ELfe,VO],[vPlh,ELfe,VO,fpU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2159() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gbxwG","cx","I","GoQV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GoQV],[I],[I,GoQV],[cx],[cx,GoQV],[cx,I],[cx,I,GoQV],[gbxwG],[gbxwG,GoQV],[gbxwG,I],[gbxwG,I,GoQV],[gbxwG,cx],[gbxwG,cx,GoQV],[gbxwG,cx,I],[gbxwG,cx,I,GoQV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2160() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mDJ","swI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[swI],[mDJ],[mDJ,swI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2161() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fAsqw","E","hRvs","hEPB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hEPB],[hRvs],[hRvs,hEPB],[E],[E,hEPB],[E,hRvs],[E,hRvs,hEPB],[fAsqw],[fAsqw,hEPB],[fAsqw,hRvs],[fAsqw,hRvs,hEPB],[fAsqw,E],[fAsqw,E,hEPB],[fAsqw,E,hRvs],[fAsqw,E,hRvs,hEPB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2162() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","CjYz","tl","zqB","We")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[We],[zqB],[zqB,We],[tl],[tl,We],[tl,zqB],[tl,zqB,We],[CjYz],[CjYz,We],[CjYz,zqB],[CjYz,zqB,We],[CjYz,tl],[CjYz,tl,We],[CjYz,tl,zqB],[CjYz,tl,zqB,We],[S],[S,We],[S,zqB],[S,zqB,We],[S,tl],[S,tl,We],[S,tl,zqB],[S,tl,zqB,We],[S,CjYz],[S,CjYz,We],[S,CjYz,zqB],[S,CjYz,zqB,We],[S,CjYz,tl],[S,CjYz,tl,We],[S,CjYz,tl,zqB],[S,CjYz,tl,zqB,We]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2163() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SefE","cpu","vq","hgwg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hgwg],[vq],[vq,hgwg],[cpu],[cpu,hgwg],[cpu,vq],[cpu,vq,hgwg],[SefE],[SefE,hgwg],[SefE,vq],[SefE,vq,hgwg],[SefE,cpu],[SefE,cpu,hgwg],[SefE,cpu,vq],[SefE,cpu,vq,hgwg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2164() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2165() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","lFo","kA","my","OfU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OfU],[my],[my,OfU],[kA],[kA,OfU],[kA,my],[kA,my,OfU],[lFo],[lFo,OfU],[lFo,my],[lFo,my,OfU],[lFo,kA],[lFo,kA,OfU],[lFo,kA,my],[lFo,kA,my,OfU],[T],[T,OfU],[T,my],[T,my,OfU],[T,kA],[T,kA,OfU],[T,kA,my],[T,kA,my,OfU],[T,lFo],[T,lFo,OfU],[T,lFo,my],[T,lFo,my,OfU],[T,lFo,kA],[T,lFo,kA,OfU],[T,lFo,kA,my],[T,lFo,kA,my,OfU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2166() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PHvC","XYOY","f","iaHZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iaHZ],[f],[f,iaHZ],[XYOY],[XYOY,iaHZ],[XYOY,f],[XYOY,f,iaHZ],[PHvC],[PHvC,iaHZ],[PHvC,f],[PHvC,f,iaHZ],[PHvC,XYOY],[PHvC,XYOY,iaHZ],[PHvC,XYOY,f],[PHvC,XYOY,f,iaHZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2167() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","j","ZfbG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZfbG],[j],[j,ZfbG],[u],[u,ZfbG],[u,j],[u,j,ZfbG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2168() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QasE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QasE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2169() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SsA","aEq","fZB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fZB],[aEq],[aEq,fZB],[SsA],[SsA,fZB],[SsA,aEq],[SsA,aEq,fZB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2170() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fWaz","oz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oz],[fWaz],[fWaz,oz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2171() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hJbw","YYF","FBW","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[FBW],[FBW,n],[YYF],[YYF,n],[YYF,FBW],[YYF,FBW,n],[hJbw],[hJbw,n],[hJbw,FBW],[hJbw,FBW,n],[hJbw,YYF],[hJbw,YYF,n],[hJbw,YYF,FBW],[hJbw,YYF,FBW,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2172() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wH","SwAZv","mwRc","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[mwRc],[mwRc,i],[SwAZv],[SwAZv,i],[SwAZv,mwRc],[SwAZv,mwRc,i],[wH],[wH,i],[wH,mwRc],[wH,mwRc,i],[wH,SwAZv],[wH,SwAZv,i],[wH,SwAZv,mwRc],[wH,SwAZv,mwRc,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2173() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rVsGp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rVsGp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2174() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","x","ZKelv","fU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fU],[ZKelv],[ZKelv,fU],[x],[x,fU],[x,ZKelv],[x,ZKelv,fU],[c],[c,fU],[c,ZKelv],[c,ZKelv,fU],[c,x],[c,x,fU],[c,x,ZKelv],[c,x,ZKelv,fU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2175() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZKONv","HoWnl","MOj","MvDub")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MvDub],[MOj],[MOj,MvDub],[HoWnl],[HoWnl,MvDub],[HoWnl,MOj],[HoWnl,MOj,MvDub],[ZKONv],[ZKONv,MvDub],[ZKONv,MOj],[ZKONv,MOj,MvDub],[ZKONv,HoWnl],[ZKONv,HoWnl,MvDub],[ZKONv,HoWnl,MOj],[ZKONv,HoWnl,MOj,MvDub]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2176() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QbiO","vH","hZ","MlRJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MlRJ],[hZ],[hZ,MlRJ],[vH],[vH,MlRJ],[vH,hZ],[vH,hZ,MlRJ],[QbiO],[QbiO,MlRJ],[QbiO,hZ],[QbiO,hZ,MlRJ],[QbiO,vH],[QbiO,vH,MlRJ],[QbiO,vH,hZ],[QbiO,vH,hZ,MlRJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2177() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qsd","w","M","ft")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ft],[M],[M,ft],[w],[w,ft],[w,M],[w,M,ft],[qsd],[qsd,ft],[qsd,M],[qsd,M,ft],[qsd,w],[qsd,w,ft],[qsd,w,M],[qsd,w,M,ft]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2178() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2179() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JcWQt","X","ni")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ni],[X],[X,ni],[JcWQt],[JcWQt,ni],[JcWQt,X],[JcWQt,X,ni]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2180() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WGIvE","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[WGIvE],[WGIvE,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2181() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H","dYcD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dYcD],[H],[H,dYcD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2182() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","odcF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[odcF],[Q],[Q,odcF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2183() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2184() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J","qpSkM","Lg","ATVH","zx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zx],[ATVH],[ATVH,zx],[Lg],[Lg,zx],[Lg,ATVH],[Lg,ATVH,zx],[qpSkM],[qpSkM,zx],[qpSkM,ATVH],[qpSkM,ATVH,zx],[qpSkM,Lg],[qpSkM,Lg,zx],[qpSkM,Lg,ATVH],[qpSkM,Lg,ATVH,zx],[J],[J,zx],[J,ATVH],[J,ATVH,zx],[J,Lg],[J,Lg,zx],[J,Lg,ATVH],[J,Lg,ATVH,zx],[J,qpSkM],[J,qpSkM,zx],[J,qpSkM,ATVH],[J,qpSkM,ATVH,zx],[J,qpSkM,Lg],[J,qpSkM,Lg,zx],[J,qpSkM,Lg,ATVH],[J,qpSkM,Lg,ATVH,zx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2185() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GST")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GST]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2186() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yj","Q","dx","f","aCBJI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aCBJI],[f],[f,aCBJI],[dx],[dx,aCBJI],[dx,f],[dx,f,aCBJI],[Q],[Q,aCBJI],[Q,f],[Q,f,aCBJI],[Q,dx],[Q,dx,aCBJI],[Q,dx,f],[Q,dx,f,aCBJI],[yj],[yj,aCBJI],[yj,f],[yj,f,aCBJI],[yj,dx],[yj,dx,aCBJI],[yj,dx,f],[yj,dx,f,aCBJI],[yj,Q],[yj,Q,aCBJI],[yj,Q,f],[yj,Q,f,aCBJI],[yj,Q,dx],[yj,Q,dx,aCBJI],[yj,Q,dx,f],[yj,Q,dx,f,aCBJI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2187() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","ezRjb","JFn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JFn],[ezRjb],[ezRjb,JFn],[r],[r,JFn],[r,ezRjb],[r,ezRjb,JFn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2188() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[s]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2189() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YL","NKWK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NKWK],[YL],[YL,NKWK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2190() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rD","Vc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vc],[rD],[rD,Vc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2191() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gl","Z","eEz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eEz],[Z],[Z,eEz],[Gl],[Gl,eEz],[Gl,Z],[Gl,Z,eEz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2192() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","MSm","CtjP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CtjP],[MSm],[MSm,CtjP],[r],[r,CtjP],[r,MSm],[r,MSm,CtjP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2193() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2194() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nT","TBkwn","Pvbng")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pvbng],[TBkwn],[TBkwn,Pvbng],[nT],[nT,Pvbng],[nT,TBkwn],[nT,TBkwn,Pvbng]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2195() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ivGq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ivGq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2196() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xjtCl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xjtCl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2197() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cc","b","WuXG","W","yaC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yaC],[W],[W,yaC],[WuXG],[WuXG,yaC],[WuXG,W],[WuXG,W,yaC],[b],[b,yaC],[b,W],[b,W,yaC],[b,WuXG],[b,WuXG,yaC],[b,WuXG,W],[b,WuXG,W,yaC],[cc],[cc,yaC],[cc,W],[cc,W,yaC],[cc,WuXG],[cc,WuXG,yaC],[cc,WuXG,W],[cc,WuXG,W,yaC],[cc,b],[cc,b,yaC],[cc,b,W],[cc,b,W,yaC],[cc,b,WuXG],[cc,b,WuXG,yaC],[cc,b,WuXG,W],[cc,b,WuXG,W,yaC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2198() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bkYqk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bkYqk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2199() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QA","HZDYH","D")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[D],[HZDYH],[HZDYH,D],[QA],[QA,D],[QA,HZDYH],[QA,HZDYH,D]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2200() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CT","Sv","xO","Wf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wf],[xO],[xO,Wf],[Sv],[Sv,Wf],[Sv,xO],[Sv,xO,Wf],[CT],[CT,Wf],[CT,xO],[CT,xO,Wf],[CT,Sv],[CT,Sv,Wf],[CT,Sv,xO],[CT,Sv,xO,Wf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2201() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","c","LJWp","QPvZ","yaP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yaP],[QPvZ],[QPvZ,yaP],[LJWp],[LJWp,yaP],[LJWp,QPvZ],[LJWp,QPvZ,yaP],[c],[c,yaP],[c,QPvZ],[c,QPvZ,yaP],[c,LJWp],[c,LJWp,yaP],[c,LJWp,QPvZ],[c,LJWp,QPvZ,yaP],[Q],[Q,yaP],[Q,QPvZ],[Q,QPvZ,yaP],[Q,LJWp],[Q,LJWp,yaP],[Q,LJWp,QPvZ],[Q,LJWp,QPvZ,yaP],[Q,c],[Q,c,yaP],[Q,c,QPvZ],[Q,c,QPvZ,yaP],[Q,c,LJWp],[Q,c,LJWp,yaP],[Q,c,LJWp,QPvZ],[Q,c,LJWp,QPvZ,yaP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2202() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rFNkv","CMAx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CMAx],[rFNkv],[rFNkv,CMAx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2203() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dyf","MuZ","zO","sMphA","rvNyc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rvNyc],[sMphA],[sMphA,rvNyc],[zO],[zO,rvNyc],[zO,sMphA],[zO,sMphA,rvNyc],[MuZ],[MuZ,rvNyc],[MuZ,sMphA],[MuZ,sMphA,rvNyc],[MuZ,zO],[MuZ,zO,rvNyc],[MuZ,zO,sMphA],[MuZ,zO,sMphA,rvNyc],[dyf],[dyf,rvNyc],[dyf,sMphA],[dyf,sMphA,rvNyc],[dyf,zO],[dyf,zO,rvNyc],[dyf,zO,sMphA],[dyf,zO,sMphA,rvNyc],[dyf,MuZ],[dyf,MuZ,rvNyc],[dyf,MuZ,sMphA],[dyf,MuZ,sMphA,rvNyc],[dyf,MuZ,zO],[dyf,MuZ,zO,rvNyc],[dyf,MuZ,zO,sMphA],[dyf,MuZ,zO,sMphA,rvNyc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2204() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","STs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[STs],[b],[b,STs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2205() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fX","QBV","CsjOu","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[CsjOu],[CsjOu,X],[QBV],[QBV,X],[QBV,CsjOu],[QBV,CsjOu,X],[fX],[fX,X],[fX,CsjOu],[fX,CsjOu,X],[fX,QBV],[fX,QBV,X],[fX,QBV,CsjOu],[fX,QBV,CsjOu,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2206() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GJoQ","T","QtpkJ","nySgz","oLRa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oLRa],[nySgz],[nySgz,oLRa],[QtpkJ],[QtpkJ,oLRa],[QtpkJ,nySgz],[QtpkJ,nySgz,oLRa],[T],[T,oLRa],[T,nySgz],[T,nySgz,oLRa],[T,QtpkJ],[T,QtpkJ,oLRa],[T,QtpkJ,nySgz],[T,QtpkJ,nySgz,oLRa],[GJoQ],[GJoQ,oLRa],[GJoQ,nySgz],[GJoQ,nySgz,oLRa],[GJoQ,QtpkJ],[GJoQ,QtpkJ,oLRa],[GJoQ,QtpkJ,nySgz],[GJoQ,QtpkJ,nySgz,oLRa],[GJoQ,T],[GJoQ,T,oLRa],[GJoQ,T,nySgz],[GJoQ,T,nySgz,oLRa],[GJoQ,T,QtpkJ],[GJoQ,T,QtpkJ,oLRa],[GJoQ,T,QtpkJ,nySgz],[GJoQ,T,QtpkJ,nySgz,oLRa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2207() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QrJ","SQHC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SQHC],[QrJ],[QrJ,SQHC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2208() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "paQ","Nu","IWbl","ItiM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ItiM],[IWbl],[IWbl,ItiM],[Nu],[Nu,ItiM],[Nu,IWbl],[Nu,IWbl,ItiM],[paQ],[paQ,ItiM],[paQ,IWbl],[paQ,IWbl,ItiM],[paQ,Nu],[paQ,Nu,ItiM],[paQ,Nu,IWbl],[paQ,Nu,IWbl,ItiM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2209() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2210() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rs","qeitt","UgY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UgY],[qeitt],[qeitt,UgY],[Rs],[Rs,UgY],[Rs,qeitt],[Rs,qeitt,UgY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2211() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","ReC","sbd","Gn","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[Gn],[Gn,o],[sbd],[sbd,o],[sbd,Gn],[sbd,Gn,o],[ReC],[ReC,o],[ReC,Gn],[ReC,Gn,o],[ReC,sbd],[ReC,sbd,o],[ReC,sbd,Gn],[ReC,sbd,Gn,o],[Q],[Q,o],[Q,Gn],[Q,Gn,o],[Q,sbd],[Q,sbd,o],[Q,sbd,Gn],[Q,sbd,Gn,o],[Q,ReC],[Q,ReC,o],[Q,ReC,Gn],[Q,ReC,Gn,o],[Q,ReC,sbd],[Q,ReC,sbd,o],[Q,ReC,sbd,Gn],[Q,ReC,sbd,Gn,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2212() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","npPi","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[npPi],[npPi,n],[t],[t,n],[t,npPi],[t,npPi,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2213() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZjR","zpGMh","hnEm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hnEm],[zpGMh],[zpGMh,hnEm],[ZjR],[ZjR,hnEm],[ZjR,zpGMh],[ZjR,zpGMh,hnEm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2214() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cmqmx","G","sM","sEYU","ulq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ulq],[sEYU],[sEYU,ulq],[sM],[sM,ulq],[sM,sEYU],[sM,sEYU,ulq],[G],[G,ulq],[G,sEYU],[G,sEYU,ulq],[G,sM],[G,sM,ulq],[G,sM,sEYU],[G,sM,sEYU,ulq],[cmqmx],[cmqmx,ulq],[cmqmx,sEYU],[cmqmx,sEYU,ulq],[cmqmx,sM],[cmqmx,sM,ulq],[cmqmx,sM,sEYU],[cmqmx,sM,sEYU,ulq],[cmqmx,G],[cmqmx,G,ulq],[cmqmx,G,sEYU],[cmqmx,G,sEYU,ulq],[cmqmx,G,sM],[cmqmx,G,sM,ulq],[cmqmx,G,sM,sEYU],[cmqmx,G,sM,sEYU,ulq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2215() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","vy","Xbi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xbi],[vy],[vy,Xbi],[c],[c,Xbi],[c,vy],[c,vy,Xbi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2216() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qfx","BqpqU","VtmP","wZGoH","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[wZGoH],[wZGoH,M],[VtmP],[VtmP,M],[VtmP,wZGoH],[VtmP,wZGoH,M],[BqpqU],[BqpqU,M],[BqpqU,wZGoH],[BqpqU,wZGoH,M],[BqpqU,VtmP],[BqpqU,VtmP,M],[BqpqU,VtmP,wZGoH],[BqpqU,VtmP,wZGoH,M],[Qfx],[Qfx,M],[Qfx,wZGoH],[Qfx,wZGoH,M],[Qfx,VtmP],[Qfx,VtmP,M],[Qfx,VtmP,wZGoH],[Qfx,VtmP,wZGoH,M],[Qfx,BqpqU],[Qfx,BqpqU,M],[Qfx,BqpqU,wZGoH],[Qfx,BqpqU,wZGoH,M],[Qfx,BqpqU,VtmP],[Qfx,BqpqU,VtmP,M],[Qfx,BqpqU,VtmP,wZGoH],[Qfx,BqpqU,VtmP,wZGoH,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2217() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bVm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bVm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2218() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VSqcV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VSqcV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2219() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZIKgO","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[ZIKgO],[ZIKgO,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2220() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vm","shgTa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[shgTa],[vm],[vm,shgTa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2221() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SW","E")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[E],[SW],[SW,E]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2222() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lA","FtoW","YtcXu","Z","xiK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xiK],[Z],[Z,xiK],[YtcXu],[YtcXu,xiK],[YtcXu,Z],[YtcXu,Z,xiK],[FtoW],[FtoW,xiK],[FtoW,Z],[FtoW,Z,xiK],[FtoW,YtcXu],[FtoW,YtcXu,xiK],[FtoW,YtcXu,Z],[FtoW,YtcXu,Z,xiK],[lA],[lA,xiK],[lA,Z],[lA,Z,xiK],[lA,YtcXu],[lA,YtcXu,xiK],[lA,YtcXu,Z],[lA,YtcXu,Z,xiK],[lA,FtoW],[lA,FtoW,xiK],[lA,FtoW,Z],[lA,FtoW,Z,xiK],[lA,FtoW,YtcXu],[lA,FtoW,YtcXu,xiK],[lA,FtoW,YtcXu,Z],[lA,FtoW,YtcXu,Z,xiK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2223() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2224() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fXw","E","KBC","NzBq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NzBq],[KBC],[KBC,NzBq],[E],[E,NzBq],[E,KBC],[E,KBC,NzBq],[fXw],[fXw,NzBq],[fXw,KBC],[fXw,KBC,NzBq],[fXw,E],[fXw,E,NzBq],[fXw,E,KBC],[fXw,E,KBC,NzBq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2225() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uDHLU","IfB","kHf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kHf],[IfB],[IfB,kHf],[uDHLU],[uDHLU,kHf],[uDHLU,IfB],[uDHLU,IfB,kHf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2226() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wSQ","YbxbB","EdgiX","UD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UD],[EdgiX],[EdgiX,UD],[YbxbB],[YbxbB,UD],[YbxbB,EdgiX],[YbxbB,EdgiX,UD],[wSQ],[wSQ,UD],[wSQ,EdgiX],[wSQ,EdgiX,UD],[wSQ,YbxbB],[wSQ,YbxbB,UD],[wSQ,YbxbB,EdgiX],[wSQ,YbxbB,EdgiX,UD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2227() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nPwCp","h","K","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[K],[K,k],[h],[h,k],[h,K],[h,K,k],[nPwCp],[nPwCp,k],[nPwCp,K],[nPwCp,K,k],[nPwCp,h],[nPwCp,h,k],[nPwCp,h,K],[nPwCp,h,K,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2228() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nEdWt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nEdWt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2229() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QupIJ","fpIN","Hfl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hfl],[fpIN],[fpIN,Hfl],[QupIJ],[QupIJ,Hfl],[QupIJ,fpIN],[QupIJ,fpIN,Hfl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2230() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PBg","zMM","mnYqv","XaKy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XaKy],[mnYqv],[mnYqv,XaKy],[zMM],[zMM,XaKy],[zMM,mnYqv],[zMM,mnYqv,XaKy],[PBg],[PBg,XaKy],[PBg,mnYqv],[PBg,mnYqv,XaKy],[PBg,zMM],[PBg,zMM,XaKy],[PBg,zMM,mnYqv],[PBg,zMM,mnYqv,XaKy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2231() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","R","tfI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tfI],[R],[R,tfI],[P],[P,tfI],[P,R],[P,R,tfI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2232() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xxR","u","uBvH","kfYLV","pAZje")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pAZje],[kfYLV],[kfYLV,pAZje],[uBvH],[uBvH,pAZje],[uBvH,kfYLV],[uBvH,kfYLV,pAZje],[u],[u,pAZje],[u,kfYLV],[u,kfYLV,pAZje],[u,uBvH],[u,uBvH,pAZje],[u,uBvH,kfYLV],[u,uBvH,kfYLV,pAZje],[xxR],[xxR,pAZje],[xxR,kfYLV],[xxR,kfYLV,pAZje],[xxR,uBvH],[xxR,uBvH,pAZje],[xxR,uBvH,kfYLV],[xxR,uBvH,kfYLV,pAZje],[xxR,u],[xxR,u,pAZje],[xxR,u,kfYLV],[xxR,u,kfYLV,pAZje],[xxR,u,uBvH],[xxR,u,uBvH,pAZje],[xxR,u,uBvH,kfYLV],[xxR,u,uBvH,kfYLV,pAZje]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2233() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YAAs","YHRFP","L","TiD","txB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[txB],[TiD],[TiD,txB],[L],[L,txB],[L,TiD],[L,TiD,txB],[YHRFP],[YHRFP,txB],[YHRFP,TiD],[YHRFP,TiD,txB],[YHRFP,L],[YHRFP,L,txB],[YHRFP,L,TiD],[YHRFP,L,TiD,txB],[YAAs],[YAAs,txB],[YAAs,TiD],[YAAs,TiD,txB],[YAAs,L],[YAAs,L,txB],[YAAs,L,TiD],[YAAs,L,TiD,txB],[YAAs,YHRFP],[YAAs,YHRFP,txB],[YAAs,YHRFP,TiD],[YAAs,YHRFP,TiD,txB],[YAAs,YHRFP,L],[YAAs,YHRFP,L,txB],[YAAs,YHRFP,L,TiD],[YAAs,YHRFP,L,TiD,txB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2234() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vEmx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vEmx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2235() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GOG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GOG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2236() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vmzt","WBFYU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WBFYU],[vmzt],[vmzt,WBFYU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2237() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aDQsL","WALSJ","D","iRD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iRD],[D],[D,iRD],[WALSJ],[WALSJ,iRD],[WALSJ,D],[WALSJ,D,iRD],[aDQsL],[aDQsL,iRD],[aDQsL,D],[aDQsL,D,iRD],[aDQsL,WALSJ],[aDQsL,WALSJ,iRD],[aDQsL,WALSJ,D],[aDQsL,WALSJ,D,iRD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2238() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","vm","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[vm],[vm,X],[b],[b,X],[b,vm],[b,vm,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2239() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xNDWw","DEE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DEE],[xNDWw],[xNDWw,DEE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2240() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EOXN","vzy","dz","BCClv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BCClv],[dz],[dz,BCClv],[vzy],[vzy,BCClv],[vzy,dz],[vzy,dz,BCClv],[EOXN],[EOXN,BCClv],[EOXN,dz],[EOXN,dz,BCClv],[EOXN,vzy],[EOXN,vzy,BCClv],[EOXN,vzy,dz],[EOXN,vzy,dz,BCClv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2241() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","WDrmf","CbF","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[CbF],[CbF,J],[WDrmf],[WDrmf,J],[WDrmf,CbF],[WDrmf,CbF,J],[R],[R,J],[R,CbF],[R,CbF,J],[R,WDrmf],[R,WDrmf,J],[R,WDrmf,CbF],[R,WDrmf,CbF,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2242() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WnX","hlRc","bG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bG],[hlRc],[hlRc,bG],[WnX],[WnX,bG],[WnX,hlRc],[WnX,hlRc,bG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2243() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dh","IZiAo","uq","kghy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kghy],[uq],[uq,kghy],[IZiAo],[IZiAo,kghy],[IZiAo,uq],[IZiAo,uq,kghy],[Dh],[Dh,kghy],[Dh,uq],[Dh,uq,kghy],[Dh,IZiAo],[Dh,IZiAo,kghy],[Dh,IZiAo,uq],[Dh,IZiAo,uq,kghy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2244() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PnpVo","Yj","jkz","snFu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[snFu],[jkz],[jkz,snFu],[Yj],[Yj,snFu],[Yj,jkz],[Yj,jkz,snFu],[PnpVo],[PnpVo,snFu],[PnpVo,jkz],[PnpVo,jkz,snFu],[PnpVo,Yj],[PnpVo,Yj,snFu],[PnpVo,Yj,jkz],[PnpVo,Yj,jkz,snFu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2245() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qM","RgB","MMLt","N","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[N],[N,o],[MMLt],[MMLt,o],[MMLt,N],[MMLt,N,o],[RgB],[RgB,o],[RgB,N],[RgB,N,o],[RgB,MMLt],[RgB,MMLt,o],[RgB,MMLt,N],[RgB,MMLt,N,o],[qM],[qM,o],[qM,N],[qM,N,o],[qM,MMLt],[qM,MMLt,o],[qM,MMLt,N],[qM,MMLt,N,o],[qM,RgB],[qM,RgB,o],[qM,RgB,N],[qM,RgB,N,o],[qM,RgB,MMLt],[qM,RgB,MMLt,o],[qM,RgB,MMLt,N],[qM,RgB,MMLt,N,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2246() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RiX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RiX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2247() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mjwu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mjwu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2248() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uFt","oR","F","IIOAp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IIOAp],[F],[F,IIOAp],[oR],[oR,IIOAp],[oR,F],[oR,F,IIOAp],[uFt],[uFt,IIOAp],[uFt,F],[uFt,F,IIOAp],[uFt,oR],[uFt,oR,IIOAp],[uFt,oR,F],[uFt,oR,F,IIOAp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2249() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kDI","XjCjT","ZAbNT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZAbNT],[XjCjT],[XjCjT,ZAbNT],[kDI],[kDI,ZAbNT],[kDI,XjCjT],[kDI,XjCjT,ZAbNT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2250() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vSn","yB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yB],[vSn],[vSn,yB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2251() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","NuK","iO","SMDJ","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[SMDJ],[SMDJ,M],[iO],[iO,M],[iO,SMDJ],[iO,SMDJ,M],[NuK],[NuK,M],[NuK,SMDJ],[NuK,SMDJ,M],[NuK,iO],[NuK,iO,M],[NuK,iO,SMDJ],[NuK,iO,SMDJ,M],[D],[D,M],[D,SMDJ],[D,SMDJ,M],[D,iO],[D,iO,M],[D,iO,SMDJ],[D,iO,SMDJ,M],[D,NuK],[D,NuK,M],[D,NuK,SMDJ],[D,NuK,SMDJ,M],[D,NuK,iO],[D,NuK,iO,M],[D,NuK,iO,SMDJ],[D,NuK,iO,SMDJ,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2252() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","Eg","ugh","vIM","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[vIM],[vIM,m],[ugh],[ugh,m],[ugh,vIM],[ugh,vIM,m],[Eg],[Eg,m],[Eg,vIM],[Eg,vIM,m],[Eg,ugh],[Eg,ugh,m],[Eg,ugh,vIM],[Eg,ugh,vIM,m],[P],[P,m],[P,vIM],[P,vIM,m],[P,ugh],[P,ugh,m],[P,ugh,vIM],[P,ugh,vIM,m],[P,Eg],[P,Eg,m],[P,Eg,vIM],[P,Eg,vIM,m],[P,Eg,ugh],[P,Eg,ugh,m],[P,Eg,ugh,vIM],[P,Eg,ugh,vIM,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2253() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xqm","wegVQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wegVQ],[Xqm],[Xqm,wegVQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2254() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","UidD","prn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[prn],[UidD],[UidD,prn],[w],[w,prn],[w,UidD],[w,UidD,prn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2255() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fdq","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[Fdq],[Fdq,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2256() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Knih")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Knih]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2257() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "puILk","J","LvhI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LvhI],[J],[J,LvhI],[puILk],[puILk,LvhI],[puILk,J],[puILk,J,LvhI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2258() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zaHEd","Otk","UWgMG","RAGD","sp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sp],[RAGD],[RAGD,sp],[UWgMG],[UWgMG,sp],[UWgMG,RAGD],[UWgMG,RAGD,sp],[Otk],[Otk,sp],[Otk,RAGD],[Otk,RAGD,sp],[Otk,UWgMG],[Otk,UWgMG,sp],[Otk,UWgMG,RAGD],[Otk,UWgMG,RAGD,sp],[zaHEd],[zaHEd,sp],[zaHEd,RAGD],[zaHEd,RAGD,sp],[zaHEd,UWgMG],[zaHEd,UWgMG,sp],[zaHEd,UWgMG,RAGD],[zaHEd,UWgMG,RAGD,sp],[zaHEd,Otk],[zaHEd,Otk,sp],[zaHEd,Otk,RAGD],[zaHEd,Otk,RAGD,sp],[zaHEd,Otk,UWgMG],[zaHEd,Otk,UWgMG,sp],[zaHEd,Otk,UWgMG,RAGD],[zaHEd,Otk,UWgMG,RAGD,sp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2259() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xh","VWdln","Bz","gtqBK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gtqBK],[Bz],[Bz,gtqBK],[VWdln],[VWdln,gtqBK],[VWdln,Bz],[VWdln,Bz,gtqBK],[xh],[xh,gtqBK],[xh,Bz],[xh,Bz,gtqBK],[xh,VWdln],[xh,VWdln,gtqBK],[xh,VWdln,Bz],[xh,VWdln,Bz,gtqBK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2260() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BngH","IQQs","ZoM","gE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gE],[ZoM],[ZoM,gE],[IQQs],[IQQs,gE],[IQQs,ZoM],[IQQs,ZoM,gE],[BngH],[BngH,gE],[BngH,ZoM],[BngH,ZoM,gE],[BngH,IQQs],[BngH,IQQs,gE],[BngH,IQQs,ZoM],[BngH,IQQs,ZoM,gE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2261() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","BXX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BXX],[r],[r,BXX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2262() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SSMNY","m","TR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TR],[m],[m,TR],[SSMNY],[SSMNY,TR],[SSMNY,m],[SSMNY,m,TR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2263() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","zRpbD","QByBW","AXcp","RZNN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RZNN],[AXcp],[AXcp,RZNN],[QByBW],[QByBW,RZNN],[QByBW,AXcp],[QByBW,AXcp,RZNN],[zRpbD],[zRpbD,RZNN],[zRpbD,AXcp],[zRpbD,AXcp,RZNN],[zRpbD,QByBW],[zRpbD,QByBW,RZNN],[zRpbD,QByBW,AXcp],[zRpbD,QByBW,AXcp,RZNN],[b],[b,RZNN],[b,AXcp],[b,AXcp,RZNN],[b,QByBW],[b,QByBW,RZNN],[b,QByBW,AXcp],[b,QByBW,AXcp,RZNN],[b,zRpbD],[b,zRpbD,RZNN],[b,zRpbD,AXcp],[b,zRpbD,AXcp,RZNN],[b,zRpbD,QByBW],[b,zRpbD,QByBW,RZNN],[b,zRpbD,QByBW,AXcp],[b,zRpbD,QByBW,AXcp,RZNN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2264() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SvF","TCIdc","dmoo","IsApZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IsApZ],[dmoo],[dmoo,IsApZ],[TCIdc],[TCIdc,IsApZ],[TCIdc,dmoo],[TCIdc,dmoo,IsApZ],[SvF],[SvF,IsApZ],[SvF,dmoo],[SvF,dmoo,IsApZ],[SvF,TCIdc],[SvF,TCIdc,IsApZ],[SvF,TCIdc,dmoo],[SvF,TCIdc,dmoo,IsApZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2265() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2266() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2267() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nzuys","fP","sbm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sbm],[fP],[fP,sbm],[Nzuys],[Nzuys,sbm],[Nzuys,fP],[Nzuys,fP,sbm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2268() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ETQ","baVpz","Y","kkRqx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kkRqx],[Y],[Y,kkRqx],[baVpz],[baVpz,kkRqx],[baVpz,Y],[baVpz,Y,kkRqx],[ETQ],[ETQ,kkRqx],[ETQ,Y],[ETQ,Y,kkRqx],[ETQ,baVpz],[ETQ,baVpz,kkRqx],[ETQ,baVpz,Y],[ETQ,baVpz,Y,kkRqx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2269() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IHzav","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[IHzav],[IHzav,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2270() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xz","uFYyn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uFYyn],[xz],[xz,uFYyn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2271() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BSoke","lNGv","yziX","OvbHv","zU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zU],[OvbHv],[OvbHv,zU],[yziX],[yziX,zU],[yziX,OvbHv],[yziX,OvbHv,zU],[lNGv],[lNGv,zU],[lNGv,OvbHv],[lNGv,OvbHv,zU],[lNGv,yziX],[lNGv,yziX,zU],[lNGv,yziX,OvbHv],[lNGv,yziX,OvbHv,zU],[BSoke],[BSoke,zU],[BSoke,OvbHv],[BSoke,OvbHv,zU],[BSoke,yziX],[BSoke,yziX,zU],[BSoke,yziX,OvbHv],[BSoke,yziX,OvbHv,zU],[BSoke,lNGv],[BSoke,lNGv,zU],[BSoke,lNGv,OvbHv],[BSoke,lNGv,OvbHv,zU],[BSoke,lNGv,yziX],[BSoke,lNGv,yziX,zU],[BSoke,lNGv,yziX,OvbHv],[BSoke,lNGv,yziX,OvbHv,zU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2272() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xKZ","TEfu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TEfu],[xKZ],[xKZ,TEfu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2273() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DzucG","uTfgn","va")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[va],[uTfgn],[uTfgn,va],[DzucG],[DzucG,va],[DzucG,uTfgn],[DzucG,uTfgn,va]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2274() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HAHb","Ojh","cdXY","dwp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dwp],[cdXY],[cdXY,dwp],[Ojh],[Ojh,dwp],[Ojh,cdXY],[Ojh,cdXY,dwp],[HAHb],[HAHb,dwp],[HAHb,cdXY],[HAHb,cdXY,dwp],[HAHb,Ojh],[HAHb,Ojh,dwp],[HAHb,Ojh,cdXY],[HAHb,Ojh,cdXY,dwp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2275() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xi","jP","EQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EQ],[jP],[jP,EQ],[xi],[xi,EQ],[xi,jP],[xi,jP,EQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2276() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZgrJI","yfn","wW","R")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[R],[wW],[wW,R],[yfn],[yfn,R],[yfn,wW],[yfn,wW,R],[ZgrJI],[ZgrJI,R],[ZgrJI,wW],[ZgrJI,wW,R],[ZgrJI,yfn],[ZgrJI,yfn,R],[ZgrJI,yfn,wW],[ZgrJI,yfn,wW,R]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2277() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sfg","HD","mWV","rABrI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rABrI],[mWV],[mWV,rABrI],[HD],[HD,rABrI],[HD,mWV],[HD,mWV,rABrI],[Sfg],[Sfg,rABrI],[Sfg,mWV],[Sfg,mWV,rABrI],[Sfg,HD],[Sfg,HD,rABrI],[Sfg,HD,mWV],[Sfg,HD,mWV,rABrI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2278() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oluXZ","F","QFK","Iu","flHxy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[flHxy],[Iu],[Iu,flHxy],[QFK],[QFK,flHxy],[QFK,Iu],[QFK,Iu,flHxy],[F],[F,flHxy],[F,Iu],[F,Iu,flHxy],[F,QFK],[F,QFK,flHxy],[F,QFK,Iu],[F,QFK,Iu,flHxy],[oluXZ],[oluXZ,flHxy],[oluXZ,Iu],[oluXZ,Iu,flHxy],[oluXZ,QFK],[oluXZ,QFK,flHxy],[oluXZ,QFK,Iu],[oluXZ,QFK,Iu,flHxy],[oluXZ,F],[oluXZ,F,flHxy],[oluXZ,F,Iu],[oluXZ,F,Iu,flHxy],[oluXZ,F,QFK],[oluXZ,F,QFK,flHxy],[oluXZ,F,QFK,Iu],[oluXZ,F,QFK,Iu,flHxy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2279() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[F],[F,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2280() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Wokm","mIs","HyJ","mid","gDVZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gDVZ],[mid],[mid,gDVZ],[HyJ],[HyJ,gDVZ],[HyJ,mid],[HyJ,mid,gDVZ],[mIs],[mIs,gDVZ],[mIs,mid],[mIs,mid,gDVZ],[mIs,HyJ],[mIs,HyJ,gDVZ],[mIs,HyJ,mid],[mIs,HyJ,mid,gDVZ],[Wokm],[Wokm,gDVZ],[Wokm,mid],[Wokm,mid,gDVZ],[Wokm,HyJ],[Wokm,HyJ,gDVZ],[Wokm,HyJ,mid],[Wokm,HyJ,mid,gDVZ],[Wokm,mIs],[Wokm,mIs,gDVZ],[Wokm,mIs,mid],[Wokm,mIs,mid,gDVZ],[Wokm,mIs,HyJ],[Wokm,mIs,HyJ,gDVZ],[Wokm,mIs,HyJ,mid],[Wokm,mIs,HyJ,mid,gDVZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2281() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sd","czhl","FHH","kF","bpKPX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bpKPX],[kF],[kF,bpKPX],[FHH],[FHH,bpKPX],[FHH,kF],[FHH,kF,bpKPX],[czhl],[czhl,bpKPX],[czhl,kF],[czhl,kF,bpKPX],[czhl,FHH],[czhl,FHH,bpKPX],[czhl,FHH,kF],[czhl,FHH,kF,bpKPX],[sd],[sd,bpKPX],[sd,kF],[sd,kF,bpKPX],[sd,FHH],[sd,FHH,bpKPX],[sd,FHH,kF],[sd,FHH,kF,bpKPX],[sd,czhl],[sd,czhl,bpKPX],[sd,czhl,kF],[sd,czhl,kF,bpKPX],[sd,czhl,FHH],[sd,czhl,FHH,bpKPX],[sd,czhl,FHH,kF],[sd,czhl,FHH,kF,bpKPX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2282() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nZs","iR","J","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[J],[J,L],[iR],[iR,L],[iR,J],[iR,J,L],[nZs],[nZs,L],[nZs,J],[nZs,J,L],[nZs,iR],[nZs,iR,L],[nZs,iR,J],[nZs,iR,J,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2283() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jqx","WV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WV],[Jqx],[Jqx,WV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2284() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VI","ZT","sMSr","SO","Umehy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Umehy],[SO],[SO,Umehy],[sMSr],[sMSr,Umehy],[sMSr,SO],[sMSr,SO,Umehy],[ZT],[ZT,Umehy],[ZT,SO],[ZT,SO,Umehy],[ZT,sMSr],[ZT,sMSr,Umehy],[ZT,sMSr,SO],[ZT,sMSr,SO,Umehy],[VI],[VI,Umehy],[VI,SO],[VI,SO,Umehy],[VI,sMSr],[VI,sMSr,Umehy],[VI,sMSr,SO],[VI,sMSr,SO,Umehy],[VI,ZT],[VI,ZT,Umehy],[VI,ZT,SO],[VI,ZT,SO,Umehy],[VI,ZT,sMSr],[VI,ZT,sMSr,Umehy],[VI,ZT,sMSr,SO],[VI,ZT,sMSr,SO,Umehy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2285() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TXh","Pf","lcR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lcR],[Pf],[Pf,lcR],[TXh],[TXh,lcR],[TXh,Pf],[TXh,Pf,lcR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2286() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KVlLV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KVlLV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2287() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","CGmtw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CGmtw],[u],[u,CGmtw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2288() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PmvBC","uuX","Wtx","VC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VC],[Wtx],[Wtx,VC],[uuX],[uuX,VC],[uuX,Wtx],[uuX,Wtx,VC],[PmvBC],[PmvBC,VC],[PmvBC,Wtx],[PmvBC,Wtx,VC],[PmvBC,uuX],[PmvBC,uuX,VC],[PmvBC,uuX,Wtx],[PmvBC,uuX,Wtx,VC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2289() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uHs","glSD","JcLp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JcLp],[glSD],[glSD,JcLp],[uHs],[uHs,JcLp],[uHs,glSD],[uHs,glSD,JcLp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2290() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GNN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GNN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2291() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oq","jsn","gq","svn","EA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EA],[svn],[svn,EA],[gq],[gq,EA],[gq,svn],[gq,svn,EA],[jsn],[jsn,EA],[jsn,svn],[jsn,svn,EA],[jsn,gq],[jsn,gq,EA],[jsn,gq,svn],[jsn,gq,svn,EA],[oq],[oq,EA],[oq,svn],[oq,svn,EA],[oq,gq],[oq,gq,EA],[oq,gq,svn],[oq,gq,svn,EA],[oq,jsn],[oq,jsn,EA],[oq,jsn,svn],[oq,jsn,svn,EA],[oq,jsn,gq],[oq,jsn,gq,EA],[oq,jsn,gq,svn],[oq,jsn,gq,svn,EA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2292() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CNL","PdUA","yRlmI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yRlmI],[PdUA],[PdUA,yRlmI],[CNL],[CNL,yRlmI],[CNL,PdUA],[CNL,PdUA,yRlmI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2293() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gDlhL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gDlhL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2294() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BYVp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BYVp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2295() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BH","OZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OZ],[BH],[BH,OZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2296() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hx","W","NI","tQL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tQL],[NI],[NI,tQL],[W],[W,tQL],[W,NI],[W,NI,tQL],[Hx],[Hx,tQL],[Hx,NI],[Hx,NI,tQL],[Hx,W],[Hx,W,tQL],[Hx,W,NI],[Hx,W,NI,tQL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2297() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[B]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2298() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bGOS","Za","qy","lBU","WLhfD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WLhfD],[lBU],[lBU,WLhfD],[qy],[qy,WLhfD],[qy,lBU],[qy,lBU,WLhfD],[Za],[Za,WLhfD],[Za,lBU],[Za,lBU,WLhfD],[Za,qy],[Za,qy,WLhfD],[Za,qy,lBU],[Za,qy,lBU,WLhfD],[bGOS],[bGOS,WLhfD],[bGOS,lBU],[bGOS,lBU,WLhfD],[bGOS,qy],[bGOS,qy,WLhfD],[bGOS,qy,lBU],[bGOS,qy,lBU,WLhfD],[bGOS,Za],[bGOS,Za,WLhfD],[bGOS,Za,lBU],[bGOS,Za,lBU,WLhfD],[bGOS,Za,qy],[bGOS,Za,qy,WLhfD],[bGOS,Za,qy,lBU],[bGOS,Za,qy,lBU,WLhfD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2299() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","QSxU","phwiK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[phwiK],[QSxU],[QSxU,phwiK],[C],[C,phwiK],[C,QSxU],[C,QSxU,phwiK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2300() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iyw","nYafP","En","TSLlK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TSLlK],[En],[En,TSLlK],[nYafP],[nYafP,TSLlK],[nYafP,En],[nYafP,En,TSLlK],[iyw],[iyw,TSLlK],[iyw,En],[iyw,En,TSLlK],[iyw,nYafP],[iyw,nYafP,TSLlK],[iyw,nYafP,En],[iyw,nYafP,En,TSLlK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2301() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","b")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[b],[p],[p,b]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2302() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TVU","FrN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FrN],[TVU],[TVU,FrN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2303() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","iW","YoMRb","Iqw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Iqw],[YoMRb],[YoMRb,Iqw],[iW],[iW,Iqw],[iW,YoMRb],[iW,YoMRb,Iqw],[E],[E,Iqw],[E,YoMRb],[E,YoMRb,Iqw],[E,iW],[E,iW,Iqw],[E,iW,YoMRb],[E,iW,YoMRb,Iqw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2304() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jdiKA","bkihz","fO","SqUzr","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[SqUzr],[SqUzr,L],[fO],[fO,L],[fO,SqUzr],[fO,SqUzr,L],[bkihz],[bkihz,L],[bkihz,SqUzr],[bkihz,SqUzr,L],[bkihz,fO],[bkihz,fO,L],[bkihz,fO,SqUzr],[bkihz,fO,SqUzr,L],[jdiKA],[jdiKA,L],[jdiKA,SqUzr],[jdiKA,SqUzr,L],[jdiKA,fO],[jdiKA,fO,L],[jdiKA,fO,SqUzr],[jdiKA,fO,SqUzr,L],[jdiKA,bkihz],[jdiKA,bkihz,L],[jdiKA,bkihz,SqUzr],[jdiKA,bkihz,SqUzr,L],[jdiKA,bkihz,fO],[jdiKA,bkihz,fO,L],[jdiKA,bkihz,fO,SqUzr],[jdiKA,bkihz,fO,SqUzr,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2305() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","DY","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[DY],[DY,h],[D],[D,h],[D,DY],[D,DY,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2306() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "moG","ga","oJ","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[oJ],[oJ,L],[ga],[ga,L],[ga,oJ],[ga,oJ,L],[moG],[moG,L],[moG,oJ],[moG,oJ,L],[moG,ga],[moG,ga,L],[moG,ga,oJ],[moG,ga,oJ,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2307() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "inEhf","mKU","Z","gt","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[gt],[gt,N],[Z],[Z,N],[Z,gt],[Z,gt,N],[mKU],[mKU,N],[mKU,gt],[mKU,gt,N],[mKU,Z],[mKU,Z,N],[mKU,Z,gt],[mKU,Z,gt,N],[inEhf],[inEhf,N],[inEhf,gt],[inEhf,gt,N],[inEhf,Z],[inEhf,Z,N],[inEhf,Z,gt],[inEhf,Z,gt,N],[inEhf,mKU],[inEhf,mKU,N],[inEhf,mKU,gt],[inEhf,mKU,gt,N],[inEhf,mKU,Z],[inEhf,mKU,Z,N],[inEhf,mKU,Z,gt],[inEhf,mKU,Z,gt,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2308() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","CZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CZ],[a],[a,CZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2309() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QC","OaIx","h","pcVxu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pcVxu],[h],[h,pcVxu],[OaIx],[OaIx,pcVxu],[OaIx,h],[OaIx,h,pcVxu],[QC],[QC,pcVxu],[QC,h],[QC,h,pcVxu],[QC,OaIx],[QC,OaIx,pcVxu],[QC,OaIx,h],[QC,OaIx,h,pcVxu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2310() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qno","bNWv","lXc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lXc],[bNWv],[bNWv,lXc],[qno],[qno,lXc],[qno,bNWv],[qno,bNWv,lXc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2311() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hq","l","Xhn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xhn],[l],[l,Xhn],[hq],[hq,Xhn],[hq,l],[hq,l,Xhn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2312() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rR","jjp","igkf","PK","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[PK],[PK,N],[igkf],[igkf,N],[igkf,PK],[igkf,PK,N],[jjp],[jjp,N],[jjp,PK],[jjp,PK,N],[jjp,igkf],[jjp,igkf,N],[jjp,igkf,PK],[jjp,igkf,PK,N],[rR],[rR,N],[rR,PK],[rR,PK,N],[rR,igkf],[rR,igkf,N],[rR,igkf,PK],[rR,igkf,PK,N],[rR,jjp],[rR,jjp,N],[rR,jjp,PK],[rR,jjp,PK,N],[rR,jjp,igkf],[rR,jjp,igkf,N],[rR,jjp,igkf,PK],[rR,jjp,igkf,PK,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2313() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IWEJ","tvzI","Zljz","EQF","WppL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WppL],[EQF],[EQF,WppL],[Zljz],[Zljz,WppL],[Zljz,EQF],[Zljz,EQF,WppL],[tvzI],[tvzI,WppL],[tvzI,EQF],[tvzI,EQF,WppL],[tvzI,Zljz],[tvzI,Zljz,WppL],[tvzI,Zljz,EQF],[tvzI,Zljz,EQF,WppL],[IWEJ],[IWEJ,WppL],[IWEJ,EQF],[IWEJ,EQF,WppL],[IWEJ,Zljz],[IWEJ,Zljz,WppL],[IWEJ,Zljz,EQF],[IWEJ,Zljz,EQF,WppL],[IWEJ,tvzI],[IWEJ,tvzI,WppL],[IWEJ,tvzI,EQF],[IWEJ,tvzI,EQF,WppL],[IWEJ,tvzI,Zljz],[IWEJ,tvzI,Zljz,WppL],[IWEJ,tvzI,Zljz,EQF],[IWEJ,tvzI,Zljz,EQF,WppL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2314() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hopQU","VPz","f","G","kIOif")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kIOif],[G],[G,kIOif],[f],[f,kIOif],[f,G],[f,G,kIOif],[VPz],[VPz,kIOif],[VPz,G],[VPz,G,kIOif],[VPz,f],[VPz,f,kIOif],[VPz,f,G],[VPz,f,G,kIOif],[hopQU],[hopQU,kIOif],[hopQU,G],[hopQU,G,kIOif],[hopQU,f],[hopQU,f,kIOif],[hopQU,f,G],[hopQU,f,G,kIOif],[hopQU,VPz],[hopQU,VPz,kIOif],[hopQU,VPz,G],[hopQU,VPz,G,kIOif],[hopQU,VPz,f],[hopQU,VPz,f,kIOif],[hopQU,VPz,f,G],[hopQU,VPz,f,G,kIOif]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2315() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "APkU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[APkU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2316() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vHYM","w","yFcJW","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[yFcJW],[yFcJW,Y],[w],[w,Y],[w,yFcJW],[w,yFcJW,Y],[vHYM],[vHYM,Y],[vHYM,yFcJW],[vHYM,yFcJW,Y],[vHYM,w],[vHYM,w,Y],[vHYM,w,yFcJW],[vHYM,w,yFcJW,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2317() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dqDf","QDWnP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QDWnP],[dqDf],[dqDf,QDWnP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2318() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wTT","byYjO","gYIa","NIW","xG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xG],[NIW],[NIW,xG],[gYIa],[gYIa,xG],[gYIa,NIW],[gYIa,NIW,xG],[byYjO],[byYjO,xG],[byYjO,NIW],[byYjO,NIW,xG],[byYjO,gYIa],[byYjO,gYIa,xG],[byYjO,gYIa,NIW],[byYjO,gYIa,NIW,xG],[wTT],[wTT,xG],[wTT,NIW],[wTT,NIW,xG],[wTT,gYIa],[wTT,gYIa,xG],[wTT,gYIa,NIW],[wTT,gYIa,NIW,xG],[wTT,byYjO],[wTT,byYjO,xG],[wTT,byYjO,NIW],[wTT,byYjO,NIW,xG],[wTT,byYjO,gYIa],[wTT,byYjO,gYIa,xG],[wTT,byYjO,gYIa,NIW],[wTT,byYjO,gYIa,NIW,xG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2319() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZO","nlgo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nlgo],[ZO],[ZO,nlgo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2320() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AjDOH","ik","H","Js")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Js],[H],[H,Js],[ik],[ik,Js],[ik,H],[ik,H,Js],[AjDOH],[AjDOH,Js],[AjDOH,H],[AjDOH,H,Js],[AjDOH,ik],[AjDOH,ik,Js],[AjDOH,ik,H],[AjDOH,ik,H,Js]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2321() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fx","gVxa","x","I","rFO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rFO],[I],[I,rFO],[x],[x,rFO],[x,I],[x,I,rFO],[gVxa],[gVxa,rFO],[gVxa,I],[gVxa,I,rFO],[gVxa,x],[gVxa,x,rFO],[gVxa,x,I],[gVxa,x,I,rFO],[fx],[fx,rFO],[fx,I],[fx,I,rFO],[fx,x],[fx,x,rFO],[fx,x,I],[fx,x,I,rFO],[fx,gVxa],[fx,gVxa,rFO],[fx,gVxa,I],[fx,gVxa,I,rFO],[fx,gVxa,x],[fx,gVxa,x,rFO],[fx,gVxa,x,I],[fx,gVxa,x,I,rFO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2322() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","Jk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jk],[a],[a,Jk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2323() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MPdE","KOUdx","Qf","zt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zt],[Qf],[Qf,zt],[KOUdx],[KOUdx,zt],[KOUdx,Qf],[KOUdx,Qf,zt],[MPdE],[MPdE,zt],[MPdE,Qf],[MPdE,Qf,zt],[MPdE,KOUdx],[MPdE,KOUdx,zt],[MPdE,KOUdx,Qf],[MPdE,KOUdx,Qf,zt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2324() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yLTmF","Ysfy","rBHf","hbY","gGrr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gGrr],[hbY],[hbY,gGrr],[rBHf],[rBHf,gGrr],[rBHf,hbY],[rBHf,hbY,gGrr],[Ysfy],[Ysfy,gGrr],[Ysfy,hbY],[Ysfy,hbY,gGrr],[Ysfy,rBHf],[Ysfy,rBHf,gGrr],[Ysfy,rBHf,hbY],[Ysfy,rBHf,hbY,gGrr],[yLTmF],[yLTmF,gGrr],[yLTmF,hbY],[yLTmF,hbY,gGrr],[yLTmF,rBHf],[yLTmF,rBHf,gGrr],[yLTmF,rBHf,hbY],[yLTmF,rBHf,hbY,gGrr],[yLTmF,Ysfy],[yLTmF,Ysfy,gGrr],[yLTmF,Ysfy,hbY],[yLTmF,Ysfy,hbY,gGrr],[yLTmF,Ysfy,rBHf],[yLTmF,Ysfy,rBHf,gGrr],[yLTmF,Ysfy,rBHf,hbY],[yLTmF,Ysfy,rBHf,hbY,gGrr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2325() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dhzCc","lrVAR","iG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iG],[lrVAR],[lrVAR,iG],[dhzCc],[dhzCc,iG],[dhzCc,lrVAR],[dhzCc,lrVAR,iG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2326() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QHh","GX","NaAq","pLwW","tZTw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tZTw],[pLwW],[pLwW,tZTw],[NaAq],[NaAq,tZTw],[NaAq,pLwW],[NaAq,pLwW,tZTw],[GX],[GX,tZTw],[GX,pLwW],[GX,pLwW,tZTw],[GX,NaAq],[GX,NaAq,tZTw],[GX,NaAq,pLwW],[GX,NaAq,pLwW,tZTw],[QHh],[QHh,tZTw],[QHh,pLwW],[QHh,pLwW,tZTw],[QHh,NaAq],[QHh,NaAq,tZTw],[QHh,NaAq,pLwW],[QHh,NaAq,pLwW,tZTw],[QHh,GX],[QHh,GX,tZTw],[QHh,GX,pLwW],[QHh,GX,pLwW,tZTw],[QHh,GX,NaAq],[QHh,GX,NaAq,tZTw],[QHh,GX,NaAq,pLwW],[QHh,GX,NaAq,pLwW,tZTw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2327() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JJ","s")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[s],[JJ],[JJ,s]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2328() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Iqi","Q","EtBre","NC","BXEWE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BXEWE],[NC],[NC,BXEWE],[EtBre],[EtBre,BXEWE],[EtBre,NC],[EtBre,NC,BXEWE],[Q],[Q,BXEWE],[Q,NC],[Q,NC,BXEWE],[Q,EtBre],[Q,EtBre,BXEWE],[Q,EtBre,NC],[Q,EtBre,NC,BXEWE],[Iqi],[Iqi,BXEWE],[Iqi,NC],[Iqi,NC,BXEWE],[Iqi,EtBre],[Iqi,EtBre,BXEWE],[Iqi,EtBre,NC],[Iqi,EtBre,NC,BXEWE],[Iqi,Q],[Iqi,Q,BXEWE],[Iqi,Q,NC],[Iqi,Q,NC,BXEWE],[Iqi,Q,EtBre],[Iqi,Q,EtBre,BXEWE],[Iqi,Q,EtBre,NC],[Iqi,Q,EtBre,NC,BXEWE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2329() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VQuT","mYX","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[mYX],[mYX,N],[VQuT],[VQuT,N],[VQuT,mYX],[VQuT,mYX,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2330() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bStlt","h","NFb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NFb],[h],[h,NFb],[bStlt],[bStlt,NFb],[bStlt,h],[bStlt,h,NFb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2331() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","XGj","kv","rSP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rSP],[kv],[kv,rSP],[XGj],[XGj,rSP],[XGj,kv],[XGj,kv,rSP],[a],[a,rSP],[a,kv],[a,kv,rSP],[a,XGj],[a,XGj,rSP],[a,XGj,kv],[a,XGj,kv,rSP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2332() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OvI","EGm","vrdsV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vrdsV],[EGm],[EGm,vrdsV],[OvI],[OvI,vrdsV],[OvI,EGm],[OvI,EGm,vrdsV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2333() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wzUv","C","LHT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LHT],[C],[C,LHT],[wzUv],[wzUv,LHT],[wzUv,C],[wzUv,C,LHT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2334() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vNwq","t","DQdq","Xg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xg],[DQdq],[DQdq,Xg],[t],[t,Xg],[t,DQdq],[t,DQdq,Xg],[vNwq],[vNwq,Xg],[vNwq,DQdq],[vNwq,DQdq,Xg],[vNwq,t],[vNwq,t,Xg],[vNwq,t,DQdq],[vNwq,t,DQdq,Xg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2335() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "goH","qxJG","W","iitO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iitO],[W],[W,iitO],[qxJG],[qxJG,iitO],[qxJG,W],[qxJG,W,iitO],[goH],[goH,iitO],[goH,W],[goH,W,iitO],[goH,qxJG],[goH,qxJG,iitO],[goH,qxJG,W],[goH,qxJG,W,iitO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2336() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dta","KkTbQ","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[KkTbQ],[KkTbQ,i],[dta],[dta,i],[dta,KkTbQ],[dta,KkTbQ,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2337() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yYxB","reRK","OWuXx","UbCsQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UbCsQ],[OWuXx],[OWuXx,UbCsQ],[reRK],[reRK,UbCsQ],[reRK,OWuXx],[reRK,OWuXx,UbCsQ],[yYxB],[yYxB,UbCsQ],[yYxB,OWuXx],[yYxB,OWuXx,UbCsQ],[yYxB,reRK],[yYxB,reRK,UbCsQ],[yYxB,reRK,OWuXx],[yYxB,reRK,OWuXx,UbCsQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2338() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","Ytr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ytr],[S],[S,Ytr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2339() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ONP","fJXsB","CsM","mjCd","UD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UD],[mjCd],[mjCd,UD],[CsM],[CsM,UD],[CsM,mjCd],[CsM,mjCd,UD],[fJXsB],[fJXsB,UD],[fJXsB,mjCd],[fJXsB,mjCd,UD],[fJXsB,CsM],[fJXsB,CsM,UD],[fJXsB,CsM,mjCd],[fJXsB,CsM,mjCd,UD],[ONP],[ONP,UD],[ONP,mjCd],[ONP,mjCd,UD],[ONP,CsM],[ONP,CsM,UD],[ONP,CsM,mjCd],[ONP,CsM,mjCd,UD],[ONP,fJXsB],[ONP,fJXsB,UD],[ONP,fJXsB,mjCd],[ONP,fJXsB,mjCd,UD],[ONP,fJXsB,CsM],[ONP,fJXsB,CsM,UD],[ONP,fJXsB,CsM,mjCd],[ONP,fJXsB,CsM,mjCd,UD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2340() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xz","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[xz],[xz,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2341() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sbsd","pyp","ebT","ZA","kH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kH],[ZA],[ZA,kH],[ebT],[ebT,kH],[ebT,ZA],[ebT,ZA,kH],[pyp],[pyp,kH],[pyp,ZA],[pyp,ZA,kH],[pyp,ebT],[pyp,ebT,kH],[pyp,ebT,ZA],[pyp,ebT,ZA,kH],[sbsd],[sbsd,kH],[sbsd,ZA],[sbsd,ZA,kH],[sbsd,ebT],[sbsd,ebT,kH],[sbsd,ebT,ZA],[sbsd,ebT,ZA,kH],[sbsd,pyp],[sbsd,pyp,kH],[sbsd,pyp,ZA],[sbsd,pyp,ZA,kH],[sbsd,pyp,ebT],[sbsd,pyp,ebT,kH],[sbsd,pyp,ebT,ZA],[sbsd,pyp,ebT,ZA,kH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2342() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "exKt","eIJOM","AyCT","jEXF","JBqNt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JBqNt],[jEXF],[jEXF,JBqNt],[AyCT],[AyCT,JBqNt],[AyCT,jEXF],[AyCT,jEXF,JBqNt],[eIJOM],[eIJOM,JBqNt],[eIJOM,jEXF],[eIJOM,jEXF,JBqNt],[eIJOM,AyCT],[eIJOM,AyCT,JBqNt],[eIJOM,AyCT,jEXF],[eIJOM,AyCT,jEXF,JBqNt],[exKt],[exKt,JBqNt],[exKt,jEXF],[exKt,jEXF,JBqNt],[exKt,AyCT],[exKt,AyCT,JBqNt],[exKt,AyCT,jEXF],[exKt,AyCT,jEXF,JBqNt],[exKt,eIJOM],[exKt,eIJOM,JBqNt],[exKt,eIJOM,jEXF],[exKt,eIJOM,jEXF,JBqNt],[exKt,eIJOM,AyCT],[exKt,eIJOM,AyCT,JBqNt],[exKt,eIJOM,AyCT,jEXF],[exKt,eIJOM,AyCT,jEXF,JBqNt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2343() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2344() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yiNok","sxdJU","dPV","lAr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lAr],[dPV],[dPV,lAr],[sxdJU],[sxdJU,lAr],[sxdJU,dPV],[sxdJU,dPV,lAr],[yiNok],[yiNok,lAr],[yiNok,dPV],[yiNok,dPV,lAr],[yiNok,sxdJU],[yiNok,sxdJU,lAr],[yiNok,sxdJU,dPV],[yiNok,sxdJU,dPV,lAr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2345() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MP","U","UwYV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UwYV],[U],[U,UwYV],[MP],[MP,UwYV],[MP,U],[MP,U,UwYV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2346() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xRqw","XKTcu","QfUmI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QfUmI],[XKTcu],[XKTcu,QfUmI],[xRqw],[xRqw,QfUmI],[xRqw,XKTcu],[xRqw,XKTcu,QfUmI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2347() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","Y","rVoCM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rVoCM],[Y],[Y,rVoCM],[D],[D,rVoCM],[D,Y],[D,Y,rVoCM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2348() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2349() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CJmIV","HEhN","E","kVW","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[kVW],[kVW,o],[E],[E,o],[E,kVW],[E,kVW,o],[HEhN],[HEhN,o],[HEhN,kVW],[HEhN,kVW,o],[HEhN,E],[HEhN,E,o],[HEhN,E,kVW],[HEhN,E,kVW,o],[CJmIV],[CJmIV,o],[CJmIV,kVW],[CJmIV,kVW,o],[CJmIV,E],[CJmIV,E,o],[CJmIV,E,kVW],[CJmIV,E,kVW,o],[CJmIV,HEhN],[CJmIV,HEhN,o],[CJmIV,HEhN,kVW],[CJmIV,HEhN,kVW,o],[CJmIV,HEhN,E],[CJmIV,HEhN,E,o],[CJmIV,HEhN,E,kVW],[CJmIV,HEhN,E,kVW,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2350() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "prmwG","aY","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[aY],[aY,M],[prmwG],[prmwG,M],[prmwG,aY],[prmwG,aY,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2351() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SElF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SElF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2352() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "svaUp","VY","oCyU","baG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[baG],[oCyU],[oCyU,baG],[VY],[VY,baG],[VY,oCyU],[VY,oCyU,baG],[svaUp],[svaUp,baG],[svaUp,oCyU],[svaUp,oCyU,baG],[svaUp,VY],[svaUp,VY,baG],[svaUp,VY,oCyU],[svaUp,VY,oCyU,baG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2353() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dgT","yCNn","ZbMq","Tbz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tbz],[ZbMq],[ZbMq,Tbz],[yCNn],[yCNn,Tbz],[yCNn,ZbMq],[yCNn,ZbMq,Tbz],[dgT],[dgT,Tbz],[dgT,ZbMq],[dgT,ZbMq,Tbz],[dgT,yCNn],[dgT,yCNn,Tbz],[dgT,yCNn,ZbMq],[dgT,yCNn,ZbMq,Tbz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2354() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wZpM","tLQ","DNrBD","zG","SxD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SxD],[zG],[zG,SxD],[DNrBD],[DNrBD,SxD],[DNrBD,zG],[DNrBD,zG,SxD],[tLQ],[tLQ,SxD],[tLQ,zG],[tLQ,zG,SxD],[tLQ,DNrBD],[tLQ,DNrBD,SxD],[tLQ,DNrBD,zG],[tLQ,DNrBD,zG,SxD],[wZpM],[wZpM,SxD],[wZpM,zG],[wZpM,zG,SxD],[wZpM,DNrBD],[wZpM,DNrBD,SxD],[wZpM,DNrBD,zG],[wZpM,DNrBD,zG,SxD],[wZpM,tLQ],[wZpM,tLQ,SxD],[wZpM,tLQ,zG],[wZpM,tLQ,zG,SxD],[wZpM,tLQ,DNrBD],[wZpM,tLQ,DNrBD,SxD],[wZpM,tLQ,DNrBD,zG],[wZpM,tLQ,DNrBD,zG,SxD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2355() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rt","T","mOnnc","Jkx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jkx],[mOnnc],[mOnnc,Jkx],[T],[T,Jkx],[T,mOnnc],[T,mOnnc,Jkx],[rt],[rt,Jkx],[rt,mOnnc],[rt,mOnnc,Jkx],[rt,T],[rt,T,Jkx],[rt,T,mOnnc],[rt,T,mOnnc,Jkx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2356() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zwcn","UG","TqX","XW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XW],[TqX],[TqX,XW],[UG],[UG,XW],[UG,TqX],[UG,TqX,XW],[zwcn],[zwcn,XW],[zwcn,TqX],[zwcn,TqX,XW],[zwcn,UG],[zwcn,UG,XW],[zwcn,UG,TqX],[zwcn,UG,TqX,XW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2357() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JRZ","QkGKQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QkGKQ],[JRZ],[JRZ,QkGKQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2358() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2359() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vfD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vfD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2360() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "krqQz","AYRO","VPNVq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VPNVq],[AYRO],[AYRO,VPNVq],[krqQz],[krqQz,VPNVq],[krqQz,AYRO],[krqQz,AYRO,VPNVq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2361() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2362() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yHX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yHX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2363() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IMbE","Lh","cuQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cuQ],[Lh],[Lh,cuQ],[IMbE],[IMbE,cuQ],[IMbE,Lh],[IMbE,Lh,cuQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2364() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YLd","Mr","e","GMTzW","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[GMTzW],[GMTzW,Z],[e],[e,Z],[e,GMTzW],[e,GMTzW,Z],[Mr],[Mr,Z],[Mr,GMTzW],[Mr,GMTzW,Z],[Mr,e],[Mr,e,Z],[Mr,e,GMTzW],[Mr,e,GMTzW,Z],[YLd],[YLd,Z],[YLd,GMTzW],[YLd,GMTzW,Z],[YLd,e],[YLd,e,Z],[YLd,e,GMTzW],[YLd,e,GMTzW,Z],[YLd,Mr],[YLd,Mr,Z],[YLd,Mr,GMTzW],[YLd,Mr,GMTzW,Z],[YLd,Mr,e],[YLd,Mr,e,Z],[YLd,Mr,e,GMTzW],[YLd,Mr,e,GMTzW,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2365() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uZgg","DMtLU","rFj","Lh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lh],[rFj],[rFj,Lh],[DMtLU],[DMtLU,Lh],[DMtLU,rFj],[DMtLU,rFj,Lh],[uZgg],[uZgg,Lh],[uZgg,rFj],[uZgg,rFj,Lh],[uZgg,DMtLU],[uZgg,DMtLU,Lh],[uZgg,DMtLU,rFj],[uZgg,DMtLU,rFj,Lh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2366() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[C]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2367() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PEh","aoc","lvMHr","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[lvMHr],[lvMHr,L],[aoc],[aoc,L],[aoc,lvMHr],[aoc,lvMHr,L],[PEh],[PEh,L],[PEh,lvMHr],[PEh,lvMHr,L],[PEh,aoc],[PEh,aoc,L],[PEh,aoc,lvMHr],[PEh,aoc,lvMHr,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2368() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2369() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2370() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nqrfN","Eqi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Eqi],[nqrfN],[nqrfN,Eqi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2371() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ivvz","EIV","XSo","pzkhR","fzn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fzn],[pzkhR],[pzkhR,fzn],[XSo],[XSo,fzn],[XSo,pzkhR],[XSo,pzkhR,fzn],[EIV],[EIV,fzn],[EIV,pzkhR],[EIV,pzkhR,fzn],[EIV,XSo],[EIV,XSo,fzn],[EIV,XSo,pzkhR],[EIV,XSo,pzkhR,fzn],[Ivvz],[Ivvz,fzn],[Ivvz,pzkhR],[Ivvz,pzkhR,fzn],[Ivvz,XSo],[Ivvz,XSo,fzn],[Ivvz,XSo,pzkhR],[Ivvz,XSo,pzkhR,fzn],[Ivvz,EIV],[Ivvz,EIV,fzn],[Ivvz,EIV,pzkhR],[Ivvz,EIV,pzkhR,fzn],[Ivvz,EIV,XSo],[Ivvz,EIV,XSo,fzn],[Ivvz,EIV,XSo,pzkhR],[Ivvz,EIV,XSo,pzkhR,fzn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2372() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","Yq","yf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yf],[Yq],[Yq,yf],[v],[v,yf],[v,Yq],[v,Yq,yf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2373() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vwL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vwL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2374() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QWY","OpX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OpX],[QWY],[QWY,OpX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2375() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CMzJj","io","lIc","i","lQhTu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lQhTu],[i],[i,lQhTu],[lIc],[lIc,lQhTu],[lIc,i],[lIc,i,lQhTu],[io],[io,lQhTu],[io,i],[io,i,lQhTu],[io,lIc],[io,lIc,lQhTu],[io,lIc,i],[io,lIc,i,lQhTu],[CMzJj],[CMzJj,lQhTu],[CMzJj,i],[CMzJj,i,lQhTu],[CMzJj,lIc],[CMzJj,lIc,lQhTu],[CMzJj,lIc,i],[CMzJj,lIc,i,lQhTu],[CMzJj,io],[CMzJj,io,lQhTu],[CMzJj,io,i],[CMzJj,io,i,lQhTu],[CMzJj,io,lIc],[CMzJj,io,lIc,lQhTu],[CMzJj,io,lIc,i],[CMzJj,io,lIc,i,lQhTu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2376() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[H]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2377() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[U]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2378() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2379() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VlW","qkqd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qkqd],[VlW],[VlW,qkqd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2380() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UGm","XBZLU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XBZLU],[UGm],[UGm,XBZLU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2381() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pd","PoRXS","YPHs","m","rGS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rGS],[m],[m,rGS],[YPHs],[YPHs,rGS],[YPHs,m],[YPHs,m,rGS],[PoRXS],[PoRXS,rGS],[PoRXS,m],[PoRXS,m,rGS],[PoRXS,YPHs],[PoRXS,YPHs,rGS],[PoRXS,YPHs,m],[PoRXS,YPHs,m,rGS],[pd],[pd,rGS],[pd,m],[pd,m,rGS],[pd,YPHs],[pd,YPHs,rGS],[pd,YPHs,m],[pd,YPHs,m,rGS],[pd,PoRXS],[pd,PoRXS,rGS],[pd,PoRXS,m],[pd,PoRXS,m,rGS],[pd,PoRXS,YPHs],[pd,PoRXS,YPHs,rGS],[pd,PoRXS,YPHs,m],[pd,PoRXS,YPHs,m,rGS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2382() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fxhru","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[fxhru],[fxhru,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2383() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","it")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[it],[V],[V,it]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2384() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "j","JG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JG],[j],[j,JG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2385() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hvp","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[Hvp],[Hvp,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2386() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gql","tNdph","EkyKn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EkyKn],[tNdph],[tNdph,EkyKn],[gql],[gql,EkyKn],[gql,tNdph],[gql,tNdph,EkyKn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2387() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jQbL","DDWn","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[DDWn],[DDWn,X],[jQbL],[jQbL,X],[jQbL,DDWn],[jQbL,DDWn,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2388() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xaXw","bYFC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bYFC],[xaXw],[xaXw,bYFC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2389() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gNK","ZPTjj","WGMHw","zpc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zpc],[WGMHw],[WGMHw,zpc],[ZPTjj],[ZPTjj,zpc],[ZPTjj,WGMHw],[ZPTjj,WGMHw,zpc],[gNK],[gNK,zpc],[gNK,WGMHw],[gNK,WGMHw,zpc],[gNK,ZPTjj],[gNK,ZPTjj,zpc],[gNK,ZPTjj,WGMHw],[gNK,ZPTjj,WGMHw,zpc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2390() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2391() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CDFer")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CDFer]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2392() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LDH","oqJIB","MJMM","HrR","jNo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jNo],[HrR],[HrR,jNo],[MJMM],[MJMM,jNo],[MJMM,HrR],[MJMM,HrR,jNo],[oqJIB],[oqJIB,jNo],[oqJIB,HrR],[oqJIB,HrR,jNo],[oqJIB,MJMM],[oqJIB,MJMM,jNo],[oqJIB,MJMM,HrR],[oqJIB,MJMM,HrR,jNo],[LDH],[LDH,jNo],[LDH,HrR],[LDH,HrR,jNo],[LDH,MJMM],[LDH,MJMM,jNo],[LDH,MJMM,HrR],[LDH,MJMM,HrR,jNo],[LDH,oqJIB],[LDH,oqJIB,jNo],[LDH,oqJIB,HrR],[LDH,oqJIB,HrR,jNo],[LDH,oqJIB,MJMM],[LDH,oqJIB,MJMM,jNo],[LDH,oqJIB,MJMM,HrR],[LDH,oqJIB,MJMM,HrR,jNo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2393() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jk","ufeU","Jkl","mi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mi],[Jkl],[Jkl,mi],[ufeU],[ufeU,mi],[ufeU,Jkl],[ufeU,Jkl,mi],[Jk],[Jk,mi],[Jk,Jkl],[Jk,Jkl,mi],[Jk,ufeU],[Jk,ufeU,mi],[Jk,ufeU,Jkl],[Jk,ufeU,Jkl,mi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2394() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","bqkL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bqkL],[T],[T,bqkL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2395() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OWGd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OWGd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2396() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "y","Kj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kj],[y],[y,Kj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2397() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qfd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qfd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2398() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","KcE","RYRnF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RYRnF],[KcE],[KcE,RYRnF],[Y],[Y,RYRnF],[Y,KcE],[Y,KcE,RYRnF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2399() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2400() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iLI","XRG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XRG],[iLI],[iLI,XRG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2401() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LNy","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[LNy],[LNy,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2402() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EQcPl","Uj","kPBA","UdBh","cB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cB],[UdBh],[UdBh,cB],[kPBA],[kPBA,cB],[kPBA,UdBh],[kPBA,UdBh,cB],[Uj],[Uj,cB],[Uj,UdBh],[Uj,UdBh,cB],[Uj,kPBA],[Uj,kPBA,cB],[Uj,kPBA,UdBh],[Uj,kPBA,UdBh,cB],[EQcPl],[EQcPl,cB],[EQcPl,UdBh],[EQcPl,UdBh,cB],[EQcPl,kPBA],[EQcPl,kPBA,cB],[EQcPl,kPBA,UdBh],[EQcPl,kPBA,UdBh,cB],[EQcPl,Uj],[EQcPl,Uj,cB],[EQcPl,Uj,UdBh],[EQcPl,Uj,UdBh,cB],[EQcPl,Uj,kPBA],[EQcPl,Uj,kPBA,cB],[EQcPl,Uj,kPBA,UdBh],[EQcPl,Uj,kPBA,UdBh,cB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2403() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TSg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TSg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2404() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ikxS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ikxS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2405() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FIoA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FIoA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2406() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "koJAy","HJM","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[HJM],[HJM,l],[koJAy],[koJAy,l],[koJAy,HJM],[koJAy,HJM,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2407() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JOHnm","OsDlS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OsDlS],[JOHnm],[JOHnm,OsDlS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2408() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qnJq","TpB","kNuhd","SUJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SUJ],[kNuhd],[kNuhd,SUJ],[TpB],[TpB,SUJ],[TpB,kNuhd],[TpB,kNuhd,SUJ],[qnJq],[qnJq,SUJ],[qnJq,kNuhd],[qnJq,kNuhd,SUJ],[qnJq,TpB],[qnJq,TpB,SUJ],[qnJq,TpB,kNuhd],[qnJq,TpB,kNuhd,SUJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2409() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","vDzpZ","J","M","SheJf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SheJf],[M],[M,SheJf],[J],[J,SheJf],[J,M],[J,M,SheJf],[vDzpZ],[vDzpZ,SheJf],[vDzpZ,M],[vDzpZ,M,SheJf],[vDzpZ,J],[vDzpZ,J,SheJf],[vDzpZ,J,M],[vDzpZ,J,M,SheJf],[g],[g,SheJf],[g,M],[g,M,SheJf],[g,J],[g,J,SheJf],[g,J,M],[g,J,M,SheJf],[g,vDzpZ],[g,vDzpZ,SheJf],[g,vDzpZ,M],[g,vDzpZ,M,SheJf],[g,vDzpZ,J],[g,vDzpZ,J,SheJf],[g,vDzpZ,J,M],[g,vDzpZ,J,M,SheJf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2410() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MsWCS","seiA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[seiA],[MsWCS],[MsWCS,seiA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2411() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kk","B","sP","PLj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PLj],[sP],[sP,PLj],[B],[B,PLj],[B,sP],[B,sP,PLj],[kk],[kk,PLj],[kk,sP],[kk,sP,PLj],[kk,B],[kk,B,PLj],[kk,B,sP],[kk,B,sP,PLj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2412() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2413() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dHe","jANG","rqJk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rqJk],[jANG],[jANG,rqJk],[dHe],[dHe,rqJk],[dHe,jANG],[dHe,jANG,rqJk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2414() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nqE","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[nqE],[nqE,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2415() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","UWD","G","KG","Gd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gd],[KG],[KG,Gd],[G],[G,Gd],[G,KG],[G,KG,Gd],[UWD],[UWD,Gd],[UWD,KG],[UWD,KG,Gd],[UWD,G],[UWD,G,Gd],[UWD,G,KG],[UWD,G,KG,Gd],[R],[R,Gd],[R,KG],[R,KG,Gd],[R,G],[R,G,Gd],[R,G,KG],[R,G,KG,Gd],[R,UWD],[R,UWD,Gd],[R,UWD,KG],[R,UWD,KG,Gd],[R,UWD,G],[R,UWD,G,Gd],[R,UWD,G,KG],[R,UWD,G,KG,Gd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2416() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nt","XSRX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XSRX],[Nt],[Nt,XSRX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2417() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qfse","DUh","qj","xkCSt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xkCSt],[qj],[qj,xkCSt],[DUh],[DUh,xkCSt],[DUh,qj],[DUh,qj,xkCSt],[qfse],[qfse,xkCSt],[qfse,qj],[qfse,qj,xkCSt],[qfse,DUh],[qfse,DUh,xkCSt],[qfse,DUh,qj],[qfse,DUh,qj,xkCSt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2418() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IJSPs","t","AY","SN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SN],[AY],[AY,SN],[t],[t,SN],[t,AY],[t,AY,SN],[IJSPs],[IJSPs,SN],[IJSPs,AY],[IJSPs,AY,SN],[IJSPs,t],[IJSPs,t,SN],[IJSPs,t,AY],[IJSPs,t,AY,SN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2419() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GkjW","V","cHCT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cHCT],[V],[V,cHCT],[GkjW],[GkjW,cHCT],[GkjW,V],[GkjW,V,cHCT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2420() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2421() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vfqj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vfqj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2422() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ecWsR","jCmmh","UuNp","If","LRYO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LRYO],[If],[If,LRYO],[UuNp],[UuNp,LRYO],[UuNp,If],[UuNp,If,LRYO],[jCmmh],[jCmmh,LRYO],[jCmmh,If],[jCmmh,If,LRYO],[jCmmh,UuNp],[jCmmh,UuNp,LRYO],[jCmmh,UuNp,If],[jCmmh,UuNp,If,LRYO],[ecWsR],[ecWsR,LRYO],[ecWsR,If],[ecWsR,If,LRYO],[ecWsR,UuNp],[ecWsR,UuNp,LRYO],[ecWsR,UuNp,If],[ecWsR,UuNp,If,LRYO],[ecWsR,jCmmh],[ecWsR,jCmmh,LRYO],[ecWsR,jCmmh,If],[ecWsR,jCmmh,If,LRYO],[ecWsR,jCmmh,UuNp],[ecWsR,jCmmh,UuNp,LRYO],[ecWsR,jCmmh,UuNp,If],[ecWsR,jCmmh,UuNp,If,LRYO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2423() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EXT","MGNjB","QDgT","zQ","ywm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ywm],[zQ],[zQ,ywm],[QDgT],[QDgT,ywm],[QDgT,zQ],[QDgT,zQ,ywm],[MGNjB],[MGNjB,ywm],[MGNjB,zQ],[MGNjB,zQ,ywm],[MGNjB,QDgT],[MGNjB,QDgT,ywm],[MGNjB,QDgT,zQ],[MGNjB,QDgT,zQ,ywm],[EXT],[EXT,ywm],[EXT,zQ],[EXT,zQ,ywm],[EXT,QDgT],[EXT,QDgT,ywm],[EXT,QDgT,zQ],[EXT,QDgT,zQ,ywm],[EXT,MGNjB],[EXT,MGNjB,ywm],[EXT,MGNjB,zQ],[EXT,MGNjB,zQ,ywm],[EXT,MGNjB,QDgT],[EXT,MGNjB,QDgT,ywm],[EXT,MGNjB,QDgT,zQ],[EXT,MGNjB,QDgT,zQ,ywm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2424() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jiae","cH","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[cH],[cH,f],[Jiae],[Jiae,f],[Jiae,cH],[Jiae,cH,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2425() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","orvS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[orvS],[r],[r,orvS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2426() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "enLJL","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[enLJL],[enLJL,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2427() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xefde","oAR","pCWkC","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[pCWkC],[pCWkC,L],[oAR],[oAR,L],[oAR,pCWkC],[oAR,pCWkC,L],[xefde],[xefde,L],[xefde,pCWkC],[xefde,pCWkC,L],[xefde,oAR],[xefde,oAR,L],[xefde,oAR,pCWkC],[xefde,oAR,pCWkC,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2428() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qelBT","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[qelBT],[qelBT,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2429() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "k","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[k],[k,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2430() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JYtOF","LbNde","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[LbNde],[LbNde,G],[JYtOF],[JYtOF,G],[JYtOF,LbNde],[JYtOF,LbNde,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2431() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2432() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qbei","XTiG","Jrqpb","STfEC","Xe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xe],[STfEC],[STfEC,Xe],[Jrqpb],[Jrqpb,Xe],[Jrqpb,STfEC],[Jrqpb,STfEC,Xe],[XTiG],[XTiG,Xe],[XTiG,STfEC],[XTiG,STfEC,Xe],[XTiG,Jrqpb],[XTiG,Jrqpb,Xe],[XTiG,Jrqpb,STfEC],[XTiG,Jrqpb,STfEC,Xe],[Qbei],[Qbei,Xe],[Qbei,STfEC],[Qbei,STfEC,Xe],[Qbei,Jrqpb],[Qbei,Jrqpb,Xe],[Qbei,Jrqpb,STfEC],[Qbei,Jrqpb,STfEC,Xe],[Qbei,XTiG],[Qbei,XTiG,Xe],[Qbei,XTiG,STfEC],[Qbei,XTiG,STfEC,Xe],[Qbei,XTiG,Jrqpb],[Qbei,XTiG,Jrqpb,Xe],[Qbei,XTiG,Jrqpb,STfEC],[Qbei,XTiG,Jrqpb,STfEC,Xe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2433() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NsK","Awc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Awc],[NsK],[NsK,Awc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2434() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "unzlo","PXG","Vmv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vmv],[PXG],[PXG,Vmv],[unzlo],[unzlo,Vmv],[unzlo,PXG],[unzlo,PXG,Vmv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2435() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","ZJlh","MbWvP","FgW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FgW],[MbWvP],[MbWvP,FgW],[ZJlh],[ZJlh,FgW],[ZJlh,MbWvP],[ZJlh,MbWvP,FgW],[a],[a,FgW],[a,MbWvP],[a,MbWvP,FgW],[a,ZJlh],[a,ZJlh,FgW],[a,ZJlh,MbWvP],[a,ZJlh,MbWvP,FgW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2436() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aA","EisAM","X","kgvE","TkJo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TkJo],[kgvE],[kgvE,TkJo],[X],[X,TkJo],[X,kgvE],[X,kgvE,TkJo],[EisAM],[EisAM,TkJo],[EisAM,kgvE],[EisAM,kgvE,TkJo],[EisAM,X],[EisAM,X,TkJo],[EisAM,X,kgvE],[EisAM,X,kgvE,TkJo],[aA],[aA,TkJo],[aA,kgvE],[aA,kgvE,TkJo],[aA,X],[aA,X,TkJo],[aA,X,kgvE],[aA,X,kgvE,TkJo],[aA,EisAM],[aA,EisAM,TkJo],[aA,EisAM,kgvE],[aA,EisAM,kgvE,TkJo],[aA,EisAM,X],[aA,EisAM,X,TkJo],[aA,EisAM,X,kgvE],[aA,EisAM,X,kgvE,TkJo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2437() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","HpTp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HpTp],[R],[R,HpTp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2438() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uVHiK","oez","WWfzO","Vzm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vzm],[WWfzO],[WWfzO,Vzm],[oez],[oez,Vzm],[oez,WWfzO],[oez,WWfzO,Vzm],[uVHiK],[uVHiK,Vzm],[uVHiK,WWfzO],[uVHiK,WWfzO,Vzm],[uVHiK,oez],[uVHiK,oez,Vzm],[uVHiK,oez,WWfzO],[uVHiK,oez,WWfzO,Vzm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2439() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pwaMF","TEumu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TEumu],[pwaMF],[pwaMF,TEumu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2440() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tFAMS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tFAMS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2441() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bv","wu","Ytz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ytz],[wu],[wu,Ytz],[bv],[bv,Ytz],[bv,wu],[bv,wu,Ytz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2442() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ILuu","IK","fgBZ","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[fgBZ],[fgBZ,O],[IK],[IK,O],[IK,fgBZ],[IK,fgBZ,O],[ILuu],[ILuu,O],[ILuu,fgBZ],[ILuu,fgBZ,O],[ILuu,IK],[ILuu,IK,O],[ILuu,IK,fgBZ],[ILuu,IK,fgBZ,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2443() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QOq","Mp","u","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[u],[u,w],[Mp],[Mp,w],[Mp,u],[Mp,u,w],[QOq],[QOq,w],[QOq,u],[QOq,u,w],[QOq,Mp],[QOq,Mp,w],[QOq,Mp,u],[QOq,Mp,u,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2444() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","Ne","sEL","Zue","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[Zue],[Zue,m],[sEL],[sEL,m],[sEL,Zue],[sEL,Zue,m],[Ne],[Ne,m],[Ne,Zue],[Ne,Zue,m],[Ne,sEL],[Ne,sEL,m],[Ne,sEL,Zue],[Ne,sEL,Zue,m],[q],[q,m],[q,Zue],[q,Zue,m],[q,sEL],[q,sEL,m],[q,sEL,Zue],[q,sEL,Zue,m],[q,Ne],[q,Ne,m],[q,Ne,Zue],[q,Ne,Zue,m],[q,Ne,sEL],[q,Ne,sEL,m],[q,Ne,sEL,Zue],[q,Ne,sEL,Zue,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2445() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MM","xNzi","T","eNwkI","Zdyu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zdyu],[eNwkI],[eNwkI,Zdyu],[T],[T,Zdyu],[T,eNwkI],[T,eNwkI,Zdyu],[xNzi],[xNzi,Zdyu],[xNzi,eNwkI],[xNzi,eNwkI,Zdyu],[xNzi,T],[xNzi,T,Zdyu],[xNzi,T,eNwkI],[xNzi,T,eNwkI,Zdyu],[MM],[MM,Zdyu],[MM,eNwkI],[MM,eNwkI,Zdyu],[MM,T],[MM,T,Zdyu],[MM,T,eNwkI],[MM,T,eNwkI,Zdyu],[MM,xNzi],[MM,xNzi,Zdyu],[MM,xNzi,eNwkI],[MM,xNzi,eNwkI,Zdyu],[MM,xNzi,T],[MM,xNzi,T,Zdyu],[MM,xNzi,T,eNwkI],[MM,xNzi,T,eNwkI,Zdyu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2446() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DF","YQ","TLc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TLc],[YQ],[YQ,TLc],[DF],[DF,TLc],[DF,YQ],[DF,YQ,TLc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2447() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gzj","zzxxI","EIsMr","K","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[K],[K,n],[EIsMr],[EIsMr,n],[EIsMr,K],[EIsMr,K,n],[zzxxI],[zzxxI,n],[zzxxI,K],[zzxxI,K,n],[zzxxI,EIsMr],[zzxxI,EIsMr,n],[zzxxI,EIsMr,K],[zzxxI,EIsMr,K,n],[gzj],[gzj,n],[gzj,K],[gzj,K,n],[gzj,EIsMr],[gzj,EIsMr,n],[gzj,EIsMr,K],[gzj,EIsMr,K,n],[gzj,zzxxI],[gzj,zzxxI,n],[gzj,zzxxI,K],[gzj,zzxxI,K,n],[gzj,zzxxI,EIsMr],[gzj,zzxxI,EIsMr,n],[gzj,zzxxI,EIsMr,K],[gzj,zzxxI,EIsMr,K,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2448() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TzX","mIOqo","sI","VQW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VQW],[sI],[sI,VQW],[mIOqo],[mIOqo,VQW],[mIOqo,sI],[mIOqo,sI,VQW],[TzX],[TzX,VQW],[TzX,sI],[TzX,sI,VQW],[TzX,mIOqo],[TzX,mIOqo,VQW],[TzX,mIOqo,sI],[TzX,mIOqo,sI,VQW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2449() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rsLr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rsLr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2450() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nA","jLRL","CXMqO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CXMqO],[jLRL],[jLRL,CXMqO],[nA],[nA,CXMqO],[nA,jLRL],[nA,jLRL,CXMqO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2451() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qOMb","X","h","Lg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lg],[h],[h,Lg],[X],[X,Lg],[X,h],[X,h,Lg],[qOMb],[qOMb,Lg],[qOMb,h],[qOMb,h,Lg],[qOMb,X],[qOMb,X,Lg],[qOMb,X,h],[qOMb,X,h,Lg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2452() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mdB","YXLO","CP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CP],[YXLO],[YXLO,CP],[mdB],[mdB,CP],[mdB,YXLO],[mdB,YXLO,CP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2453() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tWyja")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tWyja]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2454() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eS","vT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vT],[eS],[eS,vT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2455() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","HO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HO],[D],[D,HO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2456() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LQRT","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[LQRT],[LQRT,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2457() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2458() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "St","v","KDdV","jrVsi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jrVsi],[KDdV],[KDdV,jrVsi],[v],[v,jrVsi],[v,KDdV],[v,KDdV,jrVsi],[St],[St,jrVsi],[St,KDdV],[St,KDdV,jrVsi],[St,v],[St,v,jrVsi],[St,v,KDdV],[St,v,KDdV,jrVsi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2459() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OTImJ","v","hLqEL","tzn","uYDae")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uYDae],[tzn],[tzn,uYDae],[hLqEL],[hLqEL,uYDae],[hLqEL,tzn],[hLqEL,tzn,uYDae],[v],[v,uYDae],[v,tzn],[v,tzn,uYDae],[v,hLqEL],[v,hLqEL,uYDae],[v,hLqEL,tzn],[v,hLqEL,tzn,uYDae],[OTImJ],[OTImJ,uYDae],[OTImJ,tzn],[OTImJ,tzn,uYDae],[OTImJ,hLqEL],[OTImJ,hLqEL,uYDae],[OTImJ,hLqEL,tzn],[OTImJ,hLqEL,tzn,uYDae],[OTImJ,v],[OTImJ,v,uYDae],[OTImJ,v,tzn],[OTImJ,v,tzn,uYDae],[OTImJ,v,hLqEL],[OTImJ,v,hLqEL,uYDae],[OTImJ,v,hLqEL,tzn],[OTImJ,v,hLqEL,tzn,uYDae]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2460() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CKR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CKR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2461() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kTKol","D","YAE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YAE],[D],[D,YAE],[kTKol],[kTKol,YAE],[kTKol,D],[kTKol,D,YAE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2462() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","Gl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gl],[r],[r,Gl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2463() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oP","uoDAA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uoDAA],[oP],[oP,uoDAA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2464() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mR","e","SA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SA],[e],[e,SA],[mR],[mR,SA],[mR,e],[mR,e,SA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2465() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2466() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ddsb","vTQ","x","ZAxw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZAxw],[x],[x,ZAxw],[vTQ],[vTQ,ZAxw],[vTQ,x],[vTQ,x,ZAxw],[ddsb],[ddsb,ZAxw],[ddsb,x],[ddsb,x,ZAxw],[ddsb,vTQ],[ddsb,vTQ,ZAxw],[ddsb,vTQ,x],[ddsb,vTQ,x,ZAxw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2467() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hfXLD","CGfb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CGfb],[hfXLD],[hfXLD,CGfb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2468() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "muKu","oc","Uopgj","qM","yg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yg],[qM],[qM,yg],[Uopgj],[Uopgj,yg],[Uopgj,qM],[Uopgj,qM,yg],[oc],[oc,yg],[oc,qM],[oc,qM,yg],[oc,Uopgj],[oc,Uopgj,yg],[oc,Uopgj,qM],[oc,Uopgj,qM,yg],[muKu],[muKu,yg],[muKu,qM],[muKu,qM,yg],[muKu,Uopgj],[muKu,Uopgj,yg],[muKu,Uopgj,qM],[muKu,Uopgj,qM,yg],[muKu,oc],[muKu,oc,yg],[muKu,oc,qM],[muKu,oc,qM,yg],[muKu,oc,Uopgj],[muKu,oc,Uopgj,yg],[muKu,oc,Uopgj,qM],[muKu,oc,Uopgj,qM,yg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2469() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "toa","cAXpP","OUsF","vnzhe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vnzhe],[OUsF],[OUsF,vnzhe],[cAXpP],[cAXpP,vnzhe],[cAXpP,OUsF],[cAXpP,OUsF,vnzhe],[toa],[toa,vnzhe],[toa,OUsF],[toa,OUsF,vnzhe],[toa,cAXpP],[toa,cAXpP,vnzhe],[toa,cAXpP,OUsF],[toa,cAXpP,OUsF,vnzhe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2470() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OHj","oVK","vFZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vFZ],[oVK],[oVK,vFZ],[OHj],[OHj,vFZ],[OHj,oVK],[OHj,oVK,vFZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2471() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uFTy","QA","hrwTT","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[hrwTT],[hrwTT,W],[QA],[QA,W],[QA,hrwTT],[QA,hrwTT,W],[uFTy],[uFTy,W],[uFTy,hrwTT],[uFTy,hrwTT,W],[uFTy,QA],[uFTy,QA,W],[uFTy,QA,hrwTT],[uFTy,QA,hrwTT,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2472() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fXklz","Bu","xp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xp],[Bu],[Bu,xp],[fXklz],[fXklz,xp],[fXklz,Bu],[fXklz,Bu,xp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2473() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dtin","oxBF","Zhy","gHVMK","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[gHVMK],[gHVMK,O],[Zhy],[Zhy,O],[Zhy,gHVMK],[Zhy,gHVMK,O],[oxBF],[oxBF,O],[oxBF,gHVMK],[oxBF,gHVMK,O],[oxBF,Zhy],[oxBF,Zhy,O],[oxBF,Zhy,gHVMK],[oxBF,Zhy,gHVMK,O],[Dtin],[Dtin,O],[Dtin,gHVMK],[Dtin,gHVMK,O],[Dtin,Zhy],[Dtin,Zhy,O],[Dtin,Zhy,gHVMK],[Dtin,Zhy,gHVMK,O],[Dtin,oxBF],[Dtin,oxBF,O],[Dtin,oxBF,gHVMK],[Dtin,oxBF,gHVMK,O],[Dtin,oxBF,Zhy],[Dtin,oxBF,Zhy,O],[Dtin,oxBF,Zhy,gHVMK],[Dtin,oxBF,Zhy,gHVMK,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2474() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LwR","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[LwR],[LwR,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2475() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AQ","ikuS","uhvS","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[uhvS],[uhvS,W],[ikuS],[ikuS,W],[ikuS,uhvS],[ikuS,uhvS,W],[AQ],[AQ,W],[AQ,uhvS],[AQ,uhvS,W],[AQ,ikuS],[AQ,ikuS,W],[AQ,ikuS,uhvS],[AQ,ikuS,uhvS,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2476() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rIqA","RmD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RmD],[rIqA],[rIqA,RmD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2477() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aft")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Aft]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2478() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dvlz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dvlz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2479() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xnH","x","YhGn","lOQNy","sB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sB],[lOQNy],[lOQNy,sB],[YhGn],[YhGn,sB],[YhGn,lOQNy],[YhGn,lOQNy,sB],[x],[x,sB],[x,lOQNy],[x,lOQNy,sB],[x,YhGn],[x,YhGn,sB],[x,YhGn,lOQNy],[x,YhGn,lOQNy,sB],[xnH],[xnH,sB],[xnH,lOQNy],[xnH,lOQNy,sB],[xnH,YhGn],[xnH,YhGn,sB],[xnH,YhGn,lOQNy],[xnH,YhGn,lOQNy,sB],[xnH,x],[xnH,x,sB],[xnH,x,lOQNy],[xnH,x,lOQNy,sB],[xnH,x,YhGn],[xnH,x,YhGn,sB],[xnH,x,YhGn,lOQNy],[xnH,x,YhGn,lOQNy,sB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2480() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fPeF","fjXG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fjXG],[fPeF],[fPeF,fjXG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2481() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","irvgl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[irvgl],[S],[S,irvgl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2482() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gbz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gbz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2483() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AvveB","W","FM","oDmU","easg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[easg],[oDmU],[oDmU,easg],[FM],[FM,easg],[FM,oDmU],[FM,oDmU,easg],[W],[W,easg],[W,oDmU],[W,oDmU,easg],[W,FM],[W,FM,easg],[W,FM,oDmU],[W,FM,oDmU,easg],[AvveB],[AvveB,easg],[AvveB,oDmU],[AvveB,oDmU,easg],[AvveB,FM],[AvveB,FM,easg],[AvveB,FM,oDmU],[AvveB,FM,oDmU,easg],[AvveB,W],[AvveB,W,easg],[AvveB,W,oDmU],[AvveB,W,oDmU,easg],[AvveB,W,FM],[AvveB,W,FM,easg],[AvveB,W,FM,oDmU],[AvveB,W,FM,oDmU,easg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2484() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sANKR","rdSM","LqtN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LqtN],[rdSM],[rdSM,LqtN],[sANKR],[sANKR,LqtN],[sANKR,rdSM],[sANKR,rdSM,LqtN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2485() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cMlZ","OjNnr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OjNnr],[cMlZ],[cMlZ,OjNnr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2486() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sEeg","T","TMa","gA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gA],[TMa],[TMa,gA],[T],[T,gA],[T,TMa],[T,TMa,gA],[sEeg],[sEeg,gA],[sEeg,TMa],[sEeg,TMa,gA],[sEeg,T],[sEeg,T,gA],[sEeg,T,TMa],[sEeg,T,TMa,gA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2487() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ILshP","ugTi","bxJk","y","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[y],[y,J],[bxJk],[bxJk,J],[bxJk,y],[bxJk,y,J],[ugTi],[ugTi,J],[ugTi,y],[ugTi,y,J],[ugTi,bxJk],[ugTi,bxJk,J],[ugTi,bxJk,y],[ugTi,bxJk,y,J],[ILshP],[ILshP,J],[ILshP,y],[ILshP,y,J],[ILshP,bxJk],[ILshP,bxJk,J],[ILshP,bxJk,y],[ILshP,bxJk,y,J],[ILshP,ugTi],[ILshP,ugTi,J],[ILshP,ugTi,y],[ILshP,ugTi,y,J],[ILshP,ugTi,bxJk],[ILshP,ugTi,bxJk,J],[ILshP,ugTi,bxJk,y],[ILshP,ugTi,bxJk,y,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2488() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2489() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kjFY","rEkbQ","F","OX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OX],[F],[F,OX],[rEkbQ],[rEkbQ,OX],[rEkbQ,F],[rEkbQ,F,OX],[kjFY],[kjFY,OX],[kjFY,F],[kjFY,F,OX],[kjFY,rEkbQ],[kjFY,rEkbQ,OX],[kjFY,rEkbQ,F],[kjFY,rEkbQ,F,OX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2490() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tEuFs","YWu","G","jBzj","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[jBzj],[jBzj,L],[G],[G,L],[G,jBzj],[G,jBzj,L],[YWu],[YWu,L],[YWu,jBzj],[YWu,jBzj,L],[YWu,G],[YWu,G,L],[YWu,G,jBzj],[YWu,G,jBzj,L],[tEuFs],[tEuFs,L],[tEuFs,jBzj],[tEuFs,jBzj,L],[tEuFs,G],[tEuFs,G,L],[tEuFs,G,jBzj],[tEuFs,G,jBzj,L],[tEuFs,YWu],[tEuFs,YWu,L],[tEuFs,YWu,jBzj],[tEuFs,YWu,jBzj,L],[tEuFs,YWu,G],[tEuFs,YWu,G,L],[tEuFs,YWu,G,jBzj],[tEuFs,YWu,G,jBzj,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2491() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zM","eq","hw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hw],[eq],[eq,hw],[zM],[zM,hw],[zM,eq],[zM,eq,hw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2492() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jldK","OdnYW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OdnYW],[jldK],[jldK,OdnYW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2493() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[u],[u,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2494() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sgJRp","Bq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bq],[sgJRp],[sgJRp,Bq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2495() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","YNokx","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[YNokx],[YNokx,l],[r],[r,l],[r,YNokx],[r,YNokx,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2496() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OFDX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OFDX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2497() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tbL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tbL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2498() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DMy","JL","RGyn","Mzj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mzj],[RGyn],[RGyn,Mzj],[JL],[JL,Mzj],[JL,RGyn],[JL,RGyn,Mzj],[DMy],[DMy,Mzj],[DMy,RGyn],[DMy,RGyn,Mzj],[DMy,JL],[DMy,JL,Mzj],[DMy,JL,RGyn],[DMy,JL,RGyn,Mzj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2499() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OIQbn","sm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sm],[OIQbn],[OIQbn,sm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2500() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","JfeVT","qHUHw","zALv","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[zALv],[zALv,Z],[qHUHw],[qHUHw,Z],[qHUHw,zALv],[qHUHw,zALv,Z],[JfeVT],[JfeVT,Z],[JfeVT,zALv],[JfeVT,zALv,Z],[JfeVT,qHUHw],[JfeVT,qHUHw,Z],[JfeVT,qHUHw,zALv],[JfeVT,qHUHw,zALv,Z],[p],[p,Z],[p,zALv],[p,zALv,Z],[p,qHUHw],[p,qHUHw,Z],[p,qHUHw,zALv],[p,qHUHw,zALv,Z],[p,JfeVT],[p,JfeVT,Z],[p,JfeVT,zALv],[p,JfeVT,zALv,Z],[p,JfeVT,qHUHw],[p,JfeVT,qHUHw,Z],[p,JfeVT,qHUHw,zALv],[p,JfeVT,qHUHw,zALv,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2501() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rf","sZ","w","FphSy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FphSy],[w],[w,FphSy],[sZ],[sZ,FphSy],[sZ,w],[sZ,w,FphSy],[rf],[rf,FphSy],[rf,w],[rf,w,FphSy],[rf,sZ],[rf,sZ,FphSy],[rf,sZ,w],[rf,sZ,w,FphSy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2502() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QfaN","yykJ","muZAz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[muZAz],[yykJ],[yykJ,muZAz],[QfaN],[QfaN,muZAz],[QfaN,yykJ],[QfaN,yykJ,muZAz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2503() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fyv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Fyv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2504() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BPU","V","G","zwdx","YYhZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YYhZ],[zwdx],[zwdx,YYhZ],[G],[G,YYhZ],[G,zwdx],[G,zwdx,YYhZ],[V],[V,YYhZ],[V,zwdx],[V,zwdx,YYhZ],[V,G],[V,G,YYhZ],[V,G,zwdx],[V,G,zwdx,YYhZ],[BPU],[BPU,YYhZ],[BPU,zwdx],[BPU,zwdx,YYhZ],[BPU,G],[BPU,G,YYhZ],[BPU,G,zwdx],[BPU,G,zwdx,YYhZ],[BPU,V],[BPU,V,YYhZ],[BPU,V,zwdx],[BPU,V,zwdx,YYhZ],[BPU,V,G],[BPU,V,G,YYhZ],[BPU,V,G,zwdx],[BPU,V,G,zwdx,YYhZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2505() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","ffy","PGd","oobQk","ao")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ao],[oobQk],[oobQk,ao],[PGd],[PGd,ao],[PGd,oobQk],[PGd,oobQk,ao],[ffy],[ffy,ao],[ffy,oobQk],[ffy,oobQk,ao],[ffy,PGd],[ffy,PGd,ao],[ffy,PGd,oobQk],[ffy,PGd,oobQk,ao],[v],[v,ao],[v,oobQk],[v,oobQk,ao],[v,PGd],[v,PGd,ao],[v,PGd,oobQk],[v,PGd,oobQk,ao],[v,ffy],[v,ffy,ao],[v,ffy,oobQk],[v,ffy,oobQk,ao],[v,ffy,PGd],[v,ffy,PGd,ao],[v,ffy,PGd,oobQk],[v,ffy,PGd,oobQk,ao]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2506() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2507() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tk","k","hRQE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hRQE],[k],[k,hRQE],[Tk],[Tk,hRQE],[Tk,k],[Tk,k,hRQE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2508() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fvc","V","Imyn","tqJH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tqJH],[Imyn],[Imyn,tqJH],[V],[V,tqJH],[V,Imyn],[V,Imyn,tqJH],[fvc],[fvc,tqJH],[fvc,Imyn],[fvc,Imyn,tqJH],[fvc,V],[fvc,V,tqJH],[fvc,V,Imyn],[fvc,V,Imyn,tqJH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2509() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xRWNb","xkv","Lp","dNn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dNn],[Lp],[Lp,dNn],[xkv],[xkv,dNn],[xkv,Lp],[xkv,Lp,dNn],[xRWNb],[xRWNb,dNn],[xRWNb,Lp],[xRWNb,Lp,dNn],[xRWNb,xkv],[xRWNb,xkv,dNn],[xRWNb,xkv,Lp],[xRWNb,xkv,Lp,dNn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2510() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pWh","JdUJN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JdUJN],[pWh],[pWh,JdUJN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2511() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ooYAp","SEZvy","BOUi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BOUi],[SEZvy],[SEZvy,BOUi],[ooYAp],[ooYAp,BOUi],[ooYAp,SEZvy],[ooYAp,SEZvy,BOUi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2512() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PTt","bUlap","Hb","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[Hb],[Hb,O],[bUlap],[bUlap,O],[bUlap,Hb],[bUlap,Hb,O],[PTt],[PTt,O],[PTt,Hb],[PTt,Hb,O],[PTt,bUlap],[PTt,bUlap,O],[PTt,bUlap,Hb],[PTt,bUlap,Hb,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2513() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TXHRP","KV","xc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xc],[KV],[KV,xc],[TXHRP],[TXHRP,xc],[TXHRP,KV],[TXHRP,KV,xc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2514() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CF","oHRA","rWim","amLFj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[amLFj],[rWim],[rWim,amLFj],[oHRA],[oHRA,amLFj],[oHRA,rWim],[oHRA,rWim,amLFj],[CF],[CF,amLFj],[CF,rWim],[CF,rWim,amLFj],[CF,oHRA],[CF,oHRA,amLFj],[CF,oHRA,rWim],[CF,oHRA,rWim,amLFj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2515() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rUhI","sOyC","Y","J","QwXCr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QwXCr],[J],[J,QwXCr],[Y],[Y,QwXCr],[Y,J],[Y,J,QwXCr],[sOyC],[sOyC,QwXCr],[sOyC,J],[sOyC,J,QwXCr],[sOyC,Y],[sOyC,Y,QwXCr],[sOyC,Y,J],[sOyC,Y,J,QwXCr],[rUhI],[rUhI,QwXCr],[rUhI,J],[rUhI,J,QwXCr],[rUhI,Y],[rUhI,Y,QwXCr],[rUhI,Y,J],[rUhI,Y,J,QwXCr],[rUhI,sOyC],[rUhI,sOyC,QwXCr],[rUhI,sOyC,J],[rUhI,sOyC,J,QwXCr],[rUhI,sOyC,Y],[rUhI,sOyC,Y,QwXCr],[rUhI,sOyC,Y,J],[rUhI,sOyC,Y,J,QwXCr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2516() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VMgQa","vzGFv","rQu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rQu],[vzGFv],[vzGFv,rQu],[VMgQa],[VMgQa,rQu],[VMgQa,vzGFv],[VMgQa,vzGFv,rQu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2517() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CEd","TOFUL","W","G","QsiP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QsiP],[G],[G,QsiP],[W],[W,QsiP],[W,G],[W,G,QsiP],[TOFUL],[TOFUL,QsiP],[TOFUL,G],[TOFUL,G,QsiP],[TOFUL,W],[TOFUL,W,QsiP],[TOFUL,W,G],[TOFUL,W,G,QsiP],[CEd],[CEd,QsiP],[CEd,G],[CEd,G,QsiP],[CEd,W],[CEd,W,QsiP],[CEd,W,G],[CEd,W,G,QsiP],[CEd,TOFUL],[CEd,TOFUL,QsiP],[CEd,TOFUL,G],[CEd,TOFUL,G,QsiP],[CEd,TOFUL,W],[CEd,TOFUL,W,QsiP],[CEd,TOFUL,W,G],[CEd,TOFUL,W,G,QsiP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2518() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aiuhm","J","QUTtK","M","lVSU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lVSU],[M],[M,lVSU],[QUTtK],[QUTtK,lVSU],[QUTtK,M],[QUTtK,M,lVSU],[J],[J,lVSU],[J,M],[J,M,lVSU],[J,QUTtK],[J,QUTtK,lVSU],[J,QUTtK,M],[J,QUTtK,M,lVSU],[Aiuhm],[Aiuhm,lVSU],[Aiuhm,M],[Aiuhm,M,lVSU],[Aiuhm,QUTtK],[Aiuhm,QUTtK,lVSU],[Aiuhm,QUTtK,M],[Aiuhm,QUTtK,M,lVSU],[Aiuhm,J],[Aiuhm,J,lVSU],[Aiuhm,J,M],[Aiuhm,J,M,lVSU],[Aiuhm,J,QUTtK],[Aiuhm,J,QUTtK,lVSU],[Aiuhm,J,QUTtK,M],[Aiuhm,J,QUTtK,M,lVSU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2519() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CuSdx","y","auUev")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[auUev],[y],[y,auUev],[CuSdx],[CuSdx,auUev],[CuSdx,y],[CuSdx,y,auUev]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2520() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cyPK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cyPK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2521() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zl","ltsaQ","T","Ic","uHnS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uHnS],[Ic],[Ic,uHnS],[T],[T,uHnS],[T,Ic],[T,Ic,uHnS],[ltsaQ],[ltsaQ,uHnS],[ltsaQ,Ic],[ltsaQ,Ic,uHnS],[ltsaQ,T],[ltsaQ,T,uHnS],[ltsaQ,T,Ic],[ltsaQ,T,Ic,uHnS],[zl],[zl,uHnS],[zl,Ic],[zl,Ic,uHnS],[zl,T],[zl,T,uHnS],[zl,T,Ic],[zl,T,Ic,uHnS],[zl,ltsaQ],[zl,ltsaQ,uHnS],[zl,ltsaQ,Ic],[zl,ltsaQ,Ic,uHnS],[zl,ltsaQ,T],[zl,ltsaQ,T,uHnS],[zl,ltsaQ,T,Ic],[zl,ltsaQ,T,Ic,uHnS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2522() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EtQS","E","Tsg","ZLMR","gf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gf],[ZLMR],[ZLMR,gf],[Tsg],[Tsg,gf],[Tsg,ZLMR],[Tsg,ZLMR,gf],[E],[E,gf],[E,ZLMR],[E,ZLMR,gf],[E,Tsg],[E,Tsg,gf],[E,Tsg,ZLMR],[E,Tsg,ZLMR,gf],[EtQS],[EtQS,gf],[EtQS,ZLMR],[EtQS,ZLMR,gf],[EtQS,Tsg],[EtQS,Tsg,gf],[EtQS,Tsg,ZLMR],[EtQS,Tsg,ZLMR,gf],[EtQS,E],[EtQS,E,gf],[EtQS,E,ZLMR],[EtQS,E,ZLMR,gf],[EtQS,E,Tsg],[EtQS,E,Tsg,gf],[EtQS,E,Tsg,ZLMR],[EtQS,E,Tsg,ZLMR,gf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2523() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vrq","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[Vrq],[Vrq,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2524() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OQ","S","rcv","Bg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bg],[rcv],[rcv,Bg],[S],[S,Bg],[S,rcv],[S,rcv,Bg],[OQ],[OQ,Bg],[OQ,rcv],[OQ,rcv,Bg],[OQ,S],[OQ,S,Bg],[OQ,S,rcv],[OQ,S,rcv,Bg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2525() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FtaZZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FtaZZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2526() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","E","McB","MRD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MRD],[McB],[McB,MRD],[E],[E,MRD],[E,McB],[E,McB,MRD],[P],[P,MRD],[P,McB],[P,McB,MRD],[P,E],[P,E,MRD],[P,E,McB],[P,E,McB,MRD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2527() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DkG","FLHd","faXG","cqx","Wmkl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wmkl],[cqx],[cqx,Wmkl],[faXG],[faXG,Wmkl],[faXG,cqx],[faXG,cqx,Wmkl],[FLHd],[FLHd,Wmkl],[FLHd,cqx],[FLHd,cqx,Wmkl],[FLHd,faXG],[FLHd,faXG,Wmkl],[FLHd,faXG,cqx],[FLHd,faXG,cqx,Wmkl],[DkG],[DkG,Wmkl],[DkG,cqx],[DkG,cqx,Wmkl],[DkG,faXG],[DkG,faXG,Wmkl],[DkG,faXG,cqx],[DkG,faXG,cqx,Wmkl],[DkG,FLHd],[DkG,FLHd,Wmkl],[DkG,FLHd,cqx],[DkG,FLHd,cqx,Wmkl],[DkG,FLHd,faXG],[DkG,FLHd,faXG,Wmkl],[DkG,FLHd,faXG,cqx],[DkG,FLHd,faXG,cqx,Wmkl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2528() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nshgx","pogC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pogC],[Nshgx],[Nshgx,pogC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2529() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yZa","liM","x","hQd","ny")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ny],[hQd],[hQd,ny],[x],[x,ny],[x,hQd],[x,hQd,ny],[liM],[liM,ny],[liM,hQd],[liM,hQd,ny],[liM,x],[liM,x,ny],[liM,x,hQd],[liM,x,hQd,ny],[yZa],[yZa,ny],[yZa,hQd],[yZa,hQd,ny],[yZa,x],[yZa,x,ny],[yZa,x,hQd],[yZa,x,hQd,ny],[yZa,liM],[yZa,liM,ny],[yZa,liM,hQd],[yZa,liM,hQd,ny],[yZa,liM,x],[yZa,liM,x,ny],[yZa,liM,x,hQd],[yZa,liM,x,hQd,ny]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2530() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kEqGe","eh","hO","I","uAk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uAk],[I],[I,uAk],[hO],[hO,uAk],[hO,I],[hO,I,uAk],[eh],[eh,uAk],[eh,I],[eh,I,uAk],[eh,hO],[eh,hO,uAk],[eh,hO,I],[eh,hO,I,uAk],[kEqGe],[kEqGe,uAk],[kEqGe,I],[kEqGe,I,uAk],[kEqGe,hO],[kEqGe,hO,uAk],[kEqGe,hO,I],[kEqGe,hO,I,uAk],[kEqGe,eh],[kEqGe,eh,uAk],[kEqGe,eh,I],[kEqGe,eh,I,uAk],[kEqGe,eh,hO],[kEqGe,eh,hO,uAk],[kEqGe,eh,hO,I],[kEqGe,eh,hO,I,uAk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2531() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ybmTv","FhaJy","DqFA","nOXE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nOXE],[DqFA],[DqFA,nOXE],[FhaJy],[FhaJy,nOXE],[FhaJy,DqFA],[FhaJy,DqFA,nOXE],[ybmTv],[ybmTv,nOXE],[ybmTv,DqFA],[ybmTv,DqFA,nOXE],[ybmTv,FhaJy],[ybmTv,FhaJy,nOXE],[ybmTv,FhaJy,DqFA],[ybmTv,FhaJy,DqFA,nOXE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2532() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BS","BX","uC","cIt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cIt],[uC],[uC,cIt],[BX],[BX,cIt],[BX,uC],[BX,uC,cIt],[BS],[BS,cIt],[BS,uC],[BS,uC,cIt],[BS,BX],[BS,BX,cIt],[BS,BX,uC],[BS,BX,uC,cIt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2533() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[r]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2534() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","apc","j","xF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xF],[j],[j,xF],[apc],[apc,xF],[apc,j],[apc,j,xF],[B],[B,xF],[B,j],[B,j,xF],[B,apc],[B,apc,xF],[B,apc,j],[B,apc,j,xF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2535() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GvIl","KiN","KDYyM","DAq","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[DAq],[DAq,i],[KDYyM],[KDYyM,i],[KDYyM,DAq],[KDYyM,DAq,i],[KiN],[KiN,i],[KiN,DAq],[KiN,DAq,i],[KiN,KDYyM],[KiN,KDYyM,i],[KiN,KDYyM,DAq],[KiN,KDYyM,DAq,i],[GvIl],[GvIl,i],[GvIl,DAq],[GvIl,DAq,i],[GvIl,KDYyM],[GvIl,KDYyM,i],[GvIl,KDYyM,DAq],[GvIl,KDYyM,DAq,i],[GvIl,KiN],[GvIl,KiN,i],[GvIl,KiN,DAq],[GvIl,KiN,DAq,i],[GvIl,KiN,KDYyM],[GvIl,KiN,KDYyM,i],[GvIl,KiN,KDYyM,DAq],[GvIl,KiN,KDYyM,DAq,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2536() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","rVBz","qjpP","GDBwY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GDBwY],[qjpP],[qjpP,GDBwY],[rVBz],[rVBz,GDBwY],[rVBz,qjpP],[rVBz,qjpP,GDBwY],[r],[r,GDBwY],[r,qjpP],[r,qjpP,GDBwY],[r,rVBz],[r,rVBz,GDBwY],[r,rVBz,qjpP],[r,rVBz,qjpP,GDBwY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2537() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IL","ErPW","IX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IX],[ErPW],[ErPW,IX],[IL],[IL,IX],[IL,ErPW],[IL,ErPW,IX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2538() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uG","rd","PrUJr","XDd","Xw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xw],[XDd],[XDd,Xw],[PrUJr],[PrUJr,Xw],[PrUJr,XDd],[PrUJr,XDd,Xw],[rd],[rd,Xw],[rd,XDd],[rd,XDd,Xw],[rd,PrUJr],[rd,PrUJr,Xw],[rd,PrUJr,XDd],[rd,PrUJr,XDd,Xw],[uG],[uG,Xw],[uG,XDd],[uG,XDd,Xw],[uG,PrUJr],[uG,PrUJr,Xw],[uG,PrUJr,XDd],[uG,PrUJr,XDd,Xw],[uG,rd],[uG,rd,Xw],[uG,rd,XDd],[uG,rd,XDd,Xw],[uG,rd,PrUJr],[uG,rd,PrUJr,Xw],[uG,rd,PrUJr,XDd],[uG,rd,PrUJr,XDd,Xw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2539() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FNOf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FNOf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2540() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ifwog","vIrm","y","ItI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ItI],[y],[y,ItI],[vIrm],[vIrm,ItI],[vIrm,y],[vIrm,y,ItI],[Ifwog],[Ifwog,ItI],[Ifwog,y],[Ifwog,y,ItI],[Ifwog,vIrm],[Ifwog,vIrm,ItI],[Ifwog,vIrm,y],[Ifwog,vIrm,y,ItI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2541() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2542() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","Gs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gs],[R],[R,Gs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2543() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YhUR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YhUR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2544() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","eedvH","TDmx","aGE","mGnSn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mGnSn],[aGE],[aGE,mGnSn],[TDmx],[TDmx,mGnSn],[TDmx,aGE],[TDmx,aGE,mGnSn],[eedvH],[eedvH,mGnSn],[eedvH,aGE],[eedvH,aGE,mGnSn],[eedvH,TDmx],[eedvH,TDmx,mGnSn],[eedvH,TDmx,aGE],[eedvH,TDmx,aGE,mGnSn],[g],[g,mGnSn],[g,aGE],[g,aGE,mGnSn],[g,TDmx],[g,TDmx,mGnSn],[g,TDmx,aGE],[g,TDmx,aGE,mGnSn],[g,eedvH],[g,eedvH,mGnSn],[g,eedvH,aGE],[g,eedvH,aGE,mGnSn],[g,eedvH,TDmx],[g,eedvH,TDmx,mGnSn],[g,eedvH,TDmx,aGE],[g,eedvH,TDmx,aGE,mGnSn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2545() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "THQ","GIn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GIn],[THQ],[THQ,GIn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2546() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","sJRN","ZQ","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[ZQ],[ZQ,L],[sJRN],[sJRN,L],[sJRN,ZQ],[sJRN,ZQ,L],[A],[A,L],[A,ZQ],[A,ZQ,L],[A,sJRN],[A,sJRN,L],[A,sJRN,ZQ],[A,sJRN,ZQ,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2547() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WRT","fU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fU],[WRT],[WRT,fU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2548() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","FA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FA],[p],[p,FA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2549() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YCbB","WTuqp","wgX","dqauI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dqauI],[wgX],[wgX,dqauI],[WTuqp],[WTuqp,dqauI],[WTuqp,wgX],[WTuqp,wgX,dqauI],[YCbB],[YCbB,dqauI],[YCbB,wgX],[YCbB,wgX,dqauI],[YCbB,WTuqp],[YCbB,WTuqp,dqauI],[YCbB,WTuqp,wgX],[YCbB,WTuqp,wgX,dqauI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2550() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vZSzz","V","vt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vt],[V],[V,vt],[vZSzz],[vZSzz,vt],[vZSzz,V],[vZSzz,V,vt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2551() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eVLJ","b","XK","HRMUi","iD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iD],[HRMUi],[HRMUi,iD],[XK],[XK,iD],[XK,HRMUi],[XK,HRMUi,iD],[b],[b,iD],[b,HRMUi],[b,HRMUi,iD],[b,XK],[b,XK,iD],[b,XK,HRMUi],[b,XK,HRMUi,iD],[eVLJ],[eVLJ,iD],[eVLJ,HRMUi],[eVLJ,HRMUi,iD],[eVLJ,XK],[eVLJ,XK,iD],[eVLJ,XK,HRMUi],[eVLJ,XK,HRMUi,iD],[eVLJ,b],[eVLJ,b,iD],[eVLJ,b,HRMUi],[eVLJ,b,HRMUi,iD],[eVLJ,b,XK],[eVLJ,b,XK,iD],[eVLJ,b,XK,HRMUi],[eVLJ,b,XK,HRMUi,iD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2552() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dHe","YsOrx","Lt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lt],[YsOrx],[YsOrx,Lt],[dHe],[dHe,Lt],[dHe,YsOrx],[dHe,YsOrx,Lt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2553() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","S","C","w","GV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GV],[w],[w,GV],[C],[C,GV],[C,w],[C,w,GV],[S],[S,GV],[S,w],[S,w,GV],[S,C],[S,C,GV],[S,C,w],[S,C,w,GV],[a],[a,GV],[a,w],[a,w,GV],[a,C],[a,C,GV],[a,C,w],[a,C,w,GV],[a,S],[a,S,GV],[a,S,w],[a,S,w,GV],[a,S,C],[a,S,C,GV],[a,S,C,w],[a,S,C,w,GV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2554() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lIXl","g","IcE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IcE],[g],[g,IcE],[lIXl],[lIXl,IcE],[lIXl,g],[lIXl,g,IcE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2555() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","zWMl","OE","TZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TZ],[OE],[OE,TZ],[zWMl],[zWMl,TZ],[zWMl,OE],[zWMl,OE,TZ],[s],[s,TZ],[s,OE],[s,OE,TZ],[s,zWMl],[s,zWMl,TZ],[s,zWMl,OE],[s,zWMl,OE,TZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2556() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qU","e","UoBN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UoBN],[e],[e,UoBN],[qU],[qU,UoBN],[qU,e],[qU,e,UoBN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2557() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","t","HEA","g","kaS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kaS],[g],[g,kaS],[HEA],[HEA,kaS],[HEA,g],[HEA,g,kaS],[t],[t,kaS],[t,g],[t,g,kaS],[t,HEA],[t,HEA,kaS],[t,HEA,g],[t,HEA,g,kaS],[P],[P,kaS],[P,g],[P,g,kaS],[P,HEA],[P,HEA,kaS],[P,HEA,g],[P,HEA,g,kaS],[P,t],[P,t,kaS],[P,t,g],[P,t,g,kaS],[P,t,HEA],[P,t,HEA,kaS],[P,t,HEA,g],[P,t,HEA,g,kaS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2558() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2559() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2560() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","v","pK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pK],[v],[v,pK],[q],[q,pK],[q,v],[q,v,pK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2561() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SDK","aiT","TC","SXDG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SXDG],[TC],[TC,SXDG],[aiT],[aiT,SXDG],[aiT,TC],[aiT,TC,SXDG],[SDK],[SDK,SXDG],[SDK,TC],[SDK,TC,SXDG],[SDK,aiT],[SDK,aiT,SXDG],[SDK,aiT,TC],[SDK,aiT,TC,SXDG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2562() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dfCM","zMrlU","IzJ","dWL","PRfGi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PRfGi],[dWL],[dWL,PRfGi],[IzJ],[IzJ,PRfGi],[IzJ,dWL],[IzJ,dWL,PRfGi],[zMrlU],[zMrlU,PRfGi],[zMrlU,dWL],[zMrlU,dWL,PRfGi],[zMrlU,IzJ],[zMrlU,IzJ,PRfGi],[zMrlU,IzJ,dWL],[zMrlU,IzJ,dWL,PRfGi],[dfCM],[dfCM,PRfGi],[dfCM,dWL],[dfCM,dWL,PRfGi],[dfCM,IzJ],[dfCM,IzJ,PRfGi],[dfCM,IzJ,dWL],[dfCM,IzJ,dWL,PRfGi],[dfCM,zMrlU],[dfCM,zMrlU,PRfGi],[dfCM,zMrlU,dWL],[dfCM,zMrlU,dWL,PRfGi],[dfCM,zMrlU,IzJ],[dfCM,zMrlU,IzJ,PRfGi],[dfCM,zMrlU,IzJ,dWL],[dfCM,zMrlU,IzJ,dWL,PRfGi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2563() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lIlu","iYIa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iYIa],[lIlu],[lIlu,iYIa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2564() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2565() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "syX","T","Kkw","g","KJY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KJY],[g],[g,KJY],[Kkw],[Kkw,KJY],[Kkw,g],[Kkw,g,KJY],[T],[T,KJY],[T,g],[T,g,KJY],[T,Kkw],[T,Kkw,KJY],[T,Kkw,g],[T,Kkw,g,KJY],[syX],[syX,KJY],[syX,g],[syX,g,KJY],[syX,Kkw],[syX,Kkw,KJY],[syX,Kkw,g],[syX,Kkw,g,KJY],[syX,T],[syX,T,KJY],[syX,T,g],[syX,T,g,KJY],[syX,T,Kkw],[syX,T,Kkw,KJY],[syX,T,Kkw,g],[syX,T,Kkw,g,KJY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2566() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","T","DP","hEi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hEi],[DP],[DP,hEi],[T],[T,hEi],[T,DP],[T,DP,hEi],[S],[S,hEi],[S,DP],[S,DP,hEi],[S,T],[S,T,hEi],[S,T,DP],[S,T,DP,hEi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2567() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ej","kY","vhp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vhp],[kY],[kY,vhp],[Ej],[Ej,vhp],[Ej,kY],[Ej,kY,vhp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2568() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sLZq","rkO","LU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LU],[rkO],[rkO,LU],[sLZq],[sLZq,LU],[sLZq,rkO],[sLZq,rkO,LU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2569() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dpnx","wo","Nwt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nwt],[wo],[wo,Nwt],[Dpnx],[Dpnx,Nwt],[Dpnx,wo],[Dpnx,wo,Nwt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2570() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XNr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XNr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2571() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lRG","vG","YP","YF","LZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LZ],[YF],[YF,LZ],[YP],[YP,LZ],[YP,YF],[YP,YF,LZ],[vG],[vG,LZ],[vG,YF],[vG,YF,LZ],[vG,YP],[vG,YP,LZ],[vG,YP,YF],[vG,YP,YF,LZ],[lRG],[lRG,LZ],[lRG,YF],[lRG,YF,LZ],[lRG,YP],[lRG,YP,LZ],[lRG,YP,YF],[lRG,YP,YF,LZ],[lRG,vG],[lRG,vG,LZ],[lRG,vG,YF],[lRG,vG,YF,LZ],[lRG,vG,YP],[lRG,vG,YP,LZ],[lRG,vG,YP,YF],[lRG,vG,YP,YF,LZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2572() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lIEqx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lIEqx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2573() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nLB","eaXB","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[eaXB],[eaXB,z],[nLB],[nLB,z],[nLB,eaXB],[nLB,eaXB,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2574() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bHI","h","hvwT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hvwT],[h],[h,hvwT],[bHI],[bHI,hvwT],[bHI,h],[bHI,h,hvwT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2575() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q],[Q],[Q,q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2576() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "urKAH","A","TPtj","mxIg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mxIg],[TPtj],[TPtj,mxIg],[A],[A,mxIg],[A,TPtj],[A,TPtj,mxIg],[urKAH],[urKAH,mxIg],[urKAH,TPtj],[urKAH,TPtj,mxIg],[urKAH,A],[urKAH,A,mxIg],[urKAH,A,TPtj],[urKAH,A,TPtj,mxIg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2577() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nZAo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nZAo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2578() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "reYcM","iq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iq],[reYcM],[reYcM,iq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2579() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "elUEZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[elUEZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2580() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mJeE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mJeE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2581() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OWJKY","dFRuA","EjD","SWXtt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SWXtt],[EjD],[EjD,SWXtt],[dFRuA],[dFRuA,SWXtt],[dFRuA,EjD],[dFRuA,EjD,SWXtt],[OWJKY],[OWJKY,SWXtt],[OWJKY,EjD],[OWJKY,EjD,SWXtt],[OWJKY,dFRuA],[OWJKY,dFRuA,SWXtt],[OWJKY,dFRuA,EjD],[OWJKY,dFRuA,EjD,SWXtt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2582() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sQkA","zk","MQAD","EVk","oncWC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oncWC],[EVk],[EVk,oncWC],[MQAD],[MQAD,oncWC],[MQAD,EVk],[MQAD,EVk,oncWC],[zk],[zk,oncWC],[zk,EVk],[zk,EVk,oncWC],[zk,MQAD],[zk,MQAD,oncWC],[zk,MQAD,EVk],[zk,MQAD,EVk,oncWC],[sQkA],[sQkA,oncWC],[sQkA,EVk],[sQkA,EVk,oncWC],[sQkA,MQAD],[sQkA,MQAD,oncWC],[sQkA,MQAD,EVk],[sQkA,MQAD,EVk,oncWC],[sQkA,zk],[sQkA,zk,oncWC],[sQkA,zk,EVk],[sQkA,zk,EVk,oncWC],[sQkA,zk,MQAD],[sQkA,zk,MQAD,oncWC],[sQkA,zk,MQAD,EVk],[sQkA,zk,MQAD,EVk,oncWC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2583() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hUqT","GDnvc","az","VP","ftUv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ftUv],[VP],[VP,ftUv],[az],[az,ftUv],[az,VP],[az,VP,ftUv],[GDnvc],[GDnvc,ftUv],[GDnvc,VP],[GDnvc,VP,ftUv],[GDnvc,az],[GDnvc,az,ftUv],[GDnvc,az,VP],[GDnvc,az,VP,ftUv],[hUqT],[hUqT,ftUv],[hUqT,VP],[hUqT,VP,ftUv],[hUqT,az],[hUqT,az,ftUv],[hUqT,az,VP],[hUqT,az,VP,ftUv],[hUqT,GDnvc],[hUqT,GDnvc,ftUv],[hUqT,GDnvc,VP],[hUqT,GDnvc,VP,ftUv],[hUqT,GDnvc,az],[hUqT,GDnvc,az,ftUv],[hUqT,GDnvc,az,VP],[hUqT,GDnvc,az,VP,ftUv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2584() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JZr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JZr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2585() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eWWr","CDZu","RG","tz","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[tz],[tz,h],[RG],[RG,h],[RG,tz],[RG,tz,h],[CDZu],[CDZu,h],[CDZu,tz],[CDZu,tz,h],[CDZu,RG],[CDZu,RG,h],[CDZu,RG,tz],[CDZu,RG,tz,h],[eWWr],[eWWr,h],[eWWr,tz],[eWWr,tz,h],[eWWr,RG],[eWWr,RG,h],[eWWr,RG,tz],[eWWr,RG,tz,h],[eWWr,CDZu],[eWWr,CDZu,h],[eWWr,CDZu,tz],[eWWr,CDZu,tz,h],[eWWr,CDZu,RG],[eWWr,CDZu,RG,h],[eWWr,CDZu,RG,tz],[eWWr,CDZu,RG,tz,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2586() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eC","GUzK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GUzK],[eC],[eC,GUzK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2587() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","SF","C")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[C],[SF],[SF,C],[B],[B,C],[B,SF],[B,SF,C]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2588() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YJF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YJF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2589() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qS","WXUP","eJ","KSR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KSR],[eJ],[eJ,KSR],[WXUP],[WXUP,KSR],[WXUP,eJ],[WXUP,eJ,KSR],[qS],[qS,KSR],[qS,eJ],[qS,eJ,KSR],[qS,WXUP],[qS,WXUP,KSR],[qS,WXUP,eJ],[qS,WXUP,eJ,KSR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2590() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uWbf","suU","YpK","qhUX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qhUX],[YpK],[YpK,qhUX],[suU],[suU,qhUX],[suU,YpK],[suU,YpK,qhUX],[uWbf],[uWbf,qhUX],[uWbf,YpK],[uWbf,YpK,qhUX],[uWbf,suU],[uWbf,suU,qhUX],[uWbf,suU,YpK],[uWbf,suU,YpK,qhUX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2591() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fZ","PtYOM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PtYOM],[fZ],[fZ,PtYOM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2592() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i","da")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[da],[i],[i,da]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2593() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","FbB","aUL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aUL],[FbB],[FbB,aUL],[v],[v,aUL],[v,FbB],[v,FbB,aUL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2594() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tU","fy","L","m","xU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xU],[m],[m,xU],[L],[L,xU],[L,m],[L,m,xU],[fy],[fy,xU],[fy,m],[fy,m,xU],[fy,L],[fy,L,xU],[fy,L,m],[fy,L,m,xU],[tU],[tU,xU],[tU,m],[tU,m,xU],[tU,L],[tU,L,xU],[tU,L,m],[tU,L,m,xU],[tU,fy],[tU,fy,xU],[tU,fy,m],[tU,fy,m,xU],[tU,fy,L],[tU,fy,L,xU],[tU,fy,L,m],[tU,fy,L,m,xU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2595() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gbp","XlBq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XlBq],[Gbp],[Gbp,XlBq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2596() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rHzi","G","IHoLf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IHoLf],[G],[G,IHoLf],[rHzi],[rHzi,IHoLf],[rHzi,G],[rHzi,G,IHoLf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2597() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MgIyV","cNm","d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d],[cNm],[cNm,d],[MgIyV],[MgIyV,d],[MgIyV,cNm],[MgIyV,cNm,d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2598() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","zEbe","AdO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AdO],[zEbe],[zEbe,AdO],[C],[C,AdO],[C,zEbe],[C,zEbe,AdO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2599() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","oUM","x","thAKh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[thAKh],[x],[x,thAKh],[oUM],[oUM,thAKh],[oUM,x],[oUM,x,thAKh],[v],[v,thAKh],[v,x],[v,x,thAKh],[v,oUM],[v,oUM,thAKh],[v,oUM,x],[v,oUM,x,thAKh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2600() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fRtw","zIR","QNq","HQ","uP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uP],[HQ],[HQ,uP],[QNq],[QNq,uP],[QNq,HQ],[QNq,HQ,uP],[zIR],[zIR,uP],[zIR,HQ],[zIR,HQ,uP],[zIR,QNq],[zIR,QNq,uP],[zIR,QNq,HQ],[zIR,QNq,HQ,uP],[fRtw],[fRtw,uP],[fRtw,HQ],[fRtw,HQ,uP],[fRtw,QNq],[fRtw,QNq,uP],[fRtw,QNq,HQ],[fRtw,QNq,HQ,uP],[fRtw,zIR],[fRtw,zIR,uP],[fRtw,zIR,HQ],[fRtw,zIR,HQ,uP],[fRtw,zIR,QNq],[fRtw,zIR,QNq,uP],[fRtw,zIR,QNq,HQ],[fRtw,zIR,QNq,HQ,uP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2601() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tCND","bMXRM","CU","v","JlM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JlM],[v],[v,JlM],[CU],[CU,JlM],[CU,v],[CU,v,JlM],[bMXRM],[bMXRM,JlM],[bMXRM,v],[bMXRM,v,JlM],[bMXRM,CU],[bMXRM,CU,JlM],[bMXRM,CU,v],[bMXRM,CU,v,JlM],[tCND],[tCND,JlM],[tCND,v],[tCND,v,JlM],[tCND,CU],[tCND,CU,JlM],[tCND,CU,v],[tCND,CU,v,JlM],[tCND,bMXRM],[tCND,bMXRM,JlM],[tCND,bMXRM,v],[tCND,bMXRM,v,JlM],[tCND,bMXRM,CU],[tCND,bMXRM,CU,JlM],[tCND,bMXRM,CU,v],[tCND,bMXRM,CU,v,JlM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2602() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HOFA","HJQiY","sBlkZ","WT","FjTRV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FjTRV],[WT],[WT,FjTRV],[sBlkZ],[sBlkZ,FjTRV],[sBlkZ,WT],[sBlkZ,WT,FjTRV],[HJQiY],[HJQiY,FjTRV],[HJQiY,WT],[HJQiY,WT,FjTRV],[HJQiY,sBlkZ],[HJQiY,sBlkZ,FjTRV],[HJQiY,sBlkZ,WT],[HJQiY,sBlkZ,WT,FjTRV],[HOFA],[HOFA,FjTRV],[HOFA,WT],[HOFA,WT,FjTRV],[HOFA,sBlkZ],[HOFA,sBlkZ,FjTRV],[HOFA,sBlkZ,WT],[HOFA,sBlkZ,WT,FjTRV],[HOFA,HJQiY],[HOFA,HJQiY,FjTRV],[HOFA,HJQiY,WT],[HOFA,HJQiY,WT,FjTRV],[HOFA,HJQiY,sBlkZ],[HOFA,HJQiY,sBlkZ,FjTRV],[HOFA,HJQiY,sBlkZ,WT],[HOFA,HJQiY,sBlkZ,WT,FjTRV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2603() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xgWs","VAENj","mwqc","RYmfb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RYmfb],[mwqc],[mwqc,RYmfb],[VAENj],[VAENj,RYmfb],[VAENj,mwqc],[VAENj,mwqc,RYmfb],[xgWs],[xgWs,RYmfb],[xgWs,mwqc],[xgWs,mwqc,RYmfb],[xgWs,VAENj],[xgWs,VAENj,RYmfb],[xgWs,VAENj,mwqc],[xgWs,VAENj,mwqc,RYmfb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2604() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VhDj","PHp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PHp],[VhDj],[VhDj,PHp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2605() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TRIJ","le")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[le],[TRIJ],[TRIJ,le]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2606() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","hXrCv","jtocC","lV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lV],[jtocC],[jtocC,lV],[hXrCv],[hXrCv,lV],[hXrCv,jtocC],[hXrCv,jtocC,lV],[B],[B,lV],[B,jtocC],[B,jtocC,lV],[B,hXrCv],[B,hXrCv,lV],[B,hXrCv,jtocC],[B,hXrCv,jtocC,lV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2607() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","R")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[R],[a],[a,R]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2608() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yWt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yWt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2609() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rHGA","NsN","euaG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[euaG],[NsN],[NsN,euaG],[rHGA],[rHGA,euaG],[rHGA,NsN],[rHGA,NsN,euaG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2610() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nGm","y","Cm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cm],[y],[y,Cm],[nGm],[nGm,Cm],[nGm,y],[nGm,y,Cm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2611() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AwUYA","dwq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dwq],[AwUYA],[AwUYA,dwq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2612() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zyS","UEoUK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UEoUK],[zyS],[zyS,UEoUK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2613() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IGMsw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IGMsw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2614() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2615() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","Dg","T","IKlE","IOZGE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IOZGE],[IKlE],[IKlE,IOZGE],[T],[T,IOZGE],[T,IKlE],[T,IKlE,IOZGE],[Dg],[Dg,IOZGE],[Dg,IKlE],[Dg,IKlE,IOZGE],[Dg,T],[Dg,T,IOZGE],[Dg,T,IKlE],[Dg,T,IKlE,IOZGE],[q],[q,IOZGE],[q,IKlE],[q,IKlE,IOZGE],[q,T],[q,T,IOZGE],[q,T,IKlE],[q,T,IKlE,IOZGE],[q,Dg],[q,Dg,IOZGE],[q,Dg,IKlE],[q,Dg,IKlE,IOZGE],[q,Dg,T],[q,Dg,T,IOZGE],[q,Dg,T,IKlE],[q,Dg,T,IKlE,IOZGE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2616() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NO","XY","wrjE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wrjE],[XY],[XY,wrjE],[NO],[NO,wrjE],[NO,XY],[NO,XY,wrjE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2617() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QRZ","Tng")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tng],[QRZ],[QRZ,Tng]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2618() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "okL","rE","aZfKs","ujGQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ujGQ],[aZfKs],[aZfKs,ujGQ],[rE],[rE,ujGQ],[rE,aZfKs],[rE,aZfKs,ujGQ],[okL],[okL,ujGQ],[okL,aZfKs],[okL,aZfKs,ujGQ],[okL,rE],[okL,rE,ujGQ],[okL,rE,aZfKs],[okL,rE,aZfKs,ujGQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2619() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZNbH","wpNoO","JkF","USt","Ak")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ak],[USt],[USt,Ak],[JkF],[JkF,Ak],[JkF,USt],[JkF,USt,Ak],[wpNoO],[wpNoO,Ak],[wpNoO,USt],[wpNoO,USt,Ak],[wpNoO,JkF],[wpNoO,JkF,Ak],[wpNoO,JkF,USt],[wpNoO,JkF,USt,Ak],[ZNbH],[ZNbH,Ak],[ZNbH,USt],[ZNbH,USt,Ak],[ZNbH,JkF],[ZNbH,JkF,Ak],[ZNbH,JkF,USt],[ZNbH,JkF,USt,Ak],[ZNbH,wpNoO],[ZNbH,wpNoO,Ak],[ZNbH,wpNoO,USt],[ZNbH,wpNoO,USt,Ak],[ZNbH,wpNoO,JkF],[ZNbH,wpNoO,JkF,Ak],[ZNbH,wpNoO,JkF,USt],[ZNbH,wpNoO,JkF,USt,Ak]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2620() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ce","uEuv","QCk","I","VDZQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VDZQ],[I],[I,VDZQ],[QCk],[QCk,VDZQ],[QCk,I],[QCk,I,VDZQ],[uEuv],[uEuv,VDZQ],[uEuv,I],[uEuv,I,VDZQ],[uEuv,QCk],[uEuv,QCk,VDZQ],[uEuv,QCk,I],[uEuv,QCk,I,VDZQ],[Ce],[Ce,VDZQ],[Ce,I],[Ce,I,VDZQ],[Ce,QCk],[Ce,QCk,VDZQ],[Ce,QCk,I],[Ce,QCk,I,VDZQ],[Ce,uEuv],[Ce,uEuv,VDZQ],[Ce,uEuv,I],[Ce,uEuv,I,VDZQ],[Ce,uEuv,QCk],[Ce,uEuv,QCk,VDZQ],[Ce,uEuv,QCk,I],[Ce,uEuv,QCk,I,VDZQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2621() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ggtIS","At","gP","Z","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[Z],[Z,O],[gP],[gP,O],[gP,Z],[gP,Z,O],[At],[At,O],[At,Z],[At,Z,O],[At,gP],[At,gP,O],[At,gP,Z],[At,gP,Z,O],[ggtIS],[ggtIS,O],[ggtIS,Z],[ggtIS,Z,O],[ggtIS,gP],[ggtIS,gP,O],[ggtIS,gP,Z],[ggtIS,gP,Z,O],[ggtIS,At],[ggtIS,At,O],[ggtIS,At,Z],[ggtIS,At,Z,O],[ggtIS,At,gP],[ggtIS,At,gP,O],[ggtIS,At,gP,Z],[ggtIS,At,gP,Z,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2622() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sao")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sao]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2623() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","X","lE","LEG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LEG],[lE],[lE,LEG],[X],[X,LEG],[X,lE],[X,lE,LEG],[E],[E,LEG],[E,lE],[E,lE,LEG],[E,X],[E,X,LEG],[E,X,lE],[E,X,lE,LEG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2624() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2625() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KAdNH","UL","qHwL","K","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[K],[K,n],[qHwL],[qHwL,n],[qHwL,K],[qHwL,K,n],[UL],[UL,n],[UL,K],[UL,K,n],[UL,qHwL],[UL,qHwL,n],[UL,qHwL,K],[UL,qHwL,K,n],[KAdNH],[KAdNH,n],[KAdNH,K],[KAdNH,K,n],[KAdNH,qHwL],[KAdNH,qHwL,n],[KAdNH,qHwL,K],[KAdNH,qHwL,K,n],[KAdNH,UL],[KAdNH,UL,n],[KAdNH,UL,K],[KAdNH,UL,K,n],[KAdNH,UL,qHwL],[KAdNH,UL,qHwL,n],[KAdNH,UL,qHwL,K],[KAdNH,UL,qHwL,K,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2626() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lag","Yo","BJ","qoEMW","WlKz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WlKz],[qoEMW],[qoEMW,WlKz],[BJ],[BJ,WlKz],[BJ,qoEMW],[BJ,qoEMW,WlKz],[Yo],[Yo,WlKz],[Yo,qoEMW],[Yo,qoEMW,WlKz],[Yo,BJ],[Yo,BJ,WlKz],[Yo,BJ,qoEMW],[Yo,BJ,qoEMW,WlKz],[Lag],[Lag,WlKz],[Lag,qoEMW],[Lag,qoEMW,WlKz],[Lag,BJ],[Lag,BJ,WlKz],[Lag,BJ,qoEMW],[Lag,BJ,qoEMW,WlKz],[Lag,Yo],[Lag,Yo,WlKz],[Lag,Yo,qoEMW],[Lag,Yo,qoEMW,WlKz],[Lag,Yo,BJ],[Lag,Yo,BJ,WlKz],[Lag,Yo,BJ,qoEMW],[Lag,Yo,BJ,qoEMW,WlKz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2627() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "khhME","JxOTe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JxOTe],[khhME],[khhME,JxOTe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2628() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tv","IE","doccS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[doccS],[IE],[IE,doccS],[Tv],[Tv,doccS],[Tv,IE],[Tv,IE,doccS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2629() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KQwpc","G","pg","PWoW","CQRe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CQRe],[PWoW],[PWoW,CQRe],[pg],[pg,CQRe],[pg,PWoW],[pg,PWoW,CQRe],[G],[G,CQRe],[G,PWoW],[G,PWoW,CQRe],[G,pg],[G,pg,CQRe],[G,pg,PWoW],[G,pg,PWoW,CQRe],[KQwpc],[KQwpc,CQRe],[KQwpc,PWoW],[KQwpc,PWoW,CQRe],[KQwpc,pg],[KQwpc,pg,CQRe],[KQwpc,pg,PWoW],[KQwpc,pg,PWoW,CQRe],[KQwpc,G],[KQwpc,G,CQRe],[KQwpc,G,PWoW],[KQwpc,G,PWoW,CQRe],[KQwpc,G,pg],[KQwpc,G,pg,CQRe],[KQwpc,G,pg,PWoW],[KQwpc,G,pg,PWoW,CQRe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2630() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","xZa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xZa],[c],[c,xZa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2631() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jL","B","HSEL","opV","Yq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yq],[opV],[opV,Yq],[HSEL],[HSEL,Yq],[HSEL,opV],[HSEL,opV,Yq],[B],[B,Yq],[B,opV],[B,opV,Yq],[B,HSEL],[B,HSEL,Yq],[B,HSEL,opV],[B,HSEL,opV,Yq],[jL],[jL,Yq],[jL,opV],[jL,opV,Yq],[jL,HSEL],[jL,HSEL,Yq],[jL,HSEL,opV],[jL,HSEL,opV,Yq],[jL,B],[jL,B,Yq],[jL,B,opV],[jL,B,opV,Yq],[jL,B,HSEL],[jL,B,HSEL,Yq],[jL,B,HSEL,opV],[jL,B,HSEL,opV,Yq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2632() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bGv","B","GKQLx","IMz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IMz],[GKQLx],[GKQLx,IMz],[B],[B,IMz],[B,GKQLx],[B,GKQLx,IMz],[bGv],[bGv,IMz],[bGv,GKQLx],[bGv,GKQLx,IMz],[bGv,B],[bGv,B,IMz],[bGv,B,GKQLx],[bGv,B,GKQLx,IMz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2633() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PQZGg","f","DRG","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[DRG],[DRG,m],[f],[f,m],[f,DRG],[f,DRG,m],[PQZGg],[PQZGg,m],[PQZGg,DRG],[PQZGg,DRG,m],[PQZGg,f],[PQZGg,f,m],[PQZGg,f,DRG],[PQZGg,f,DRG,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2634() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MuzI","Sw","UbT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UbT],[Sw],[Sw,UbT],[MuzI],[MuzI,UbT],[MuzI,Sw],[MuzI,Sw,UbT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2635() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QejHv","qIAk","izZ","dyQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dyQ],[izZ],[izZ,dyQ],[qIAk],[qIAk,dyQ],[qIAk,izZ],[qIAk,izZ,dyQ],[QejHv],[QejHv,dyQ],[QejHv,izZ],[QejHv,izZ,dyQ],[QejHv,qIAk],[QejHv,qIAk,dyQ],[QejHv,qIAk,izZ],[QejHv,qIAk,izZ,dyQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2636() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TV","PfJ","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[PfJ],[PfJ,h],[TV],[TV,h],[TV,PfJ],[TV,PfJ,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2637() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[D]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2638() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2639() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MCVjE","rxyo","OEA","bQl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bQl],[OEA],[OEA,bQl],[rxyo],[rxyo,bQl],[rxyo,OEA],[rxyo,OEA,bQl],[MCVjE],[MCVjE,bQl],[MCVjE,OEA],[MCVjE,OEA,bQl],[MCVjE,rxyo],[MCVjE,rxyo,bQl],[MCVjE,rxyo,OEA],[MCVjE,rxyo,OEA,bQl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2640() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","xRe","yU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yU],[xRe],[xRe,yU],[t],[t,yU],[t,xRe],[t,xRe,yU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2641() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xrim","DLP","M","cQ","FEueC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FEueC],[cQ],[cQ,FEueC],[M],[M,FEueC],[M,cQ],[M,cQ,FEueC],[DLP],[DLP,FEueC],[DLP,cQ],[DLP,cQ,FEueC],[DLP,M],[DLP,M,FEueC],[DLP,M,cQ],[DLP,M,cQ,FEueC],[Xrim],[Xrim,FEueC],[Xrim,cQ],[Xrim,cQ,FEueC],[Xrim,M],[Xrim,M,FEueC],[Xrim,M,cQ],[Xrim,M,cQ,FEueC],[Xrim,DLP],[Xrim,DLP,FEueC],[Xrim,DLP,cQ],[Xrim,DLP,cQ,FEueC],[Xrim,DLP,M],[Xrim,DLP,M,FEueC],[Xrim,DLP,M,cQ],[Xrim,DLP,M,cQ,FEueC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2642() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","kC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kC],[Q],[Q,kC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2643() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FHC","Ep","xt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xt],[Ep],[Ep,xt],[FHC],[FHC,xt],[FHC,Ep],[FHC,Ep,xt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2644() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H","etdi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[etdi],[H],[H,etdi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2645() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TrQud","w","H")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[H],[w],[w,H],[TrQud],[TrQud,H],[TrQud,w],[TrQud,w,H]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2646() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2647() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pD","Gehr","vkPbs","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[vkPbs],[vkPbs,M],[Gehr],[Gehr,M],[Gehr,vkPbs],[Gehr,vkPbs,M],[pD],[pD,M],[pD,vkPbs],[pD,vkPbs,M],[pD,Gehr],[pD,Gehr,M],[pD,Gehr,vkPbs],[pD,Gehr,vkPbs,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2648() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iL","rh","wD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wD],[rh],[rh,wD],[iL],[iL,wD],[iL,rh],[iL,rh,wD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2649() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nn","MF","OtOx","L","YIl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YIl],[L],[L,YIl],[OtOx],[OtOx,YIl],[OtOx,L],[OtOx,L,YIl],[MF],[MF,YIl],[MF,L],[MF,L,YIl],[MF,OtOx],[MF,OtOx,YIl],[MF,OtOx,L],[MF,OtOx,L,YIl],[nn],[nn,YIl],[nn,L],[nn,L,YIl],[nn,OtOx],[nn,OtOx,YIl],[nn,OtOx,L],[nn,OtOx,L,YIl],[nn,MF],[nn,MF,YIl],[nn,MF,L],[nn,MF,L,YIl],[nn,MF,OtOx],[nn,MF,OtOx,YIl],[nn,MF,OtOx,L],[nn,MF,OtOx,L,YIl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2650() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kZQoZ","rG","HB","gB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gB],[HB],[HB,gB],[rG],[rG,gB],[rG,HB],[rG,HB,gB],[kZQoZ],[kZQoZ,gB],[kZQoZ,HB],[kZQoZ,HB,gB],[kZQoZ,rG],[kZQoZ,rG,gB],[kZQoZ,rG,HB],[kZQoZ,rG,HB,gB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2651() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YVs","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[YVs],[YVs,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2652() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","EbA","DN","SXreX","aXbbv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aXbbv],[SXreX],[SXreX,aXbbv],[DN],[DN,aXbbv],[DN,SXreX],[DN,SXreX,aXbbv],[EbA],[EbA,aXbbv],[EbA,SXreX],[EbA,SXreX,aXbbv],[EbA,DN],[EbA,DN,aXbbv],[EbA,DN,SXreX],[EbA,DN,SXreX,aXbbv],[r],[r,aXbbv],[r,SXreX],[r,SXreX,aXbbv],[r,DN],[r,DN,aXbbv],[r,DN,SXreX],[r,DN,SXreX,aXbbv],[r,EbA],[r,EbA,aXbbv],[r,EbA,SXreX],[r,EbA,SXreX,aXbbv],[r,EbA,DN],[r,EbA,DN,aXbbv],[r,EbA,DN,SXreX],[r,EbA,DN,SXreX,aXbbv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2653() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","VUZBK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VUZBK],[a],[a,VUZBK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2654() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ot","Mf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mf],[ot],[ot,Mf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2655() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2656() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MhRP","EjT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EjT],[MhRP],[MhRP,EjT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2657() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","BRnXz","RrN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RrN],[BRnXz],[BRnXz,RrN],[Q],[Q,RrN],[Q,BRnXz],[Q,BRnXz,RrN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2658() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JMv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JMv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2659() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sbp","xbNM","wAP","ggqZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ggqZ],[wAP],[wAP,ggqZ],[xbNM],[xbNM,ggqZ],[xbNM,wAP],[xbNM,wAP,ggqZ],[Sbp],[Sbp,ggqZ],[Sbp,wAP],[Sbp,wAP,ggqZ],[Sbp,xbNM],[Sbp,xbNM,ggqZ],[Sbp,xbNM,wAP],[Sbp,xbNM,wAP,ggqZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2660() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","Gkh","i","FC","ZwqWu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZwqWu],[FC],[FC,ZwqWu],[i],[i,ZwqWu],[i,FC],[i,FC,ZwqWu],[Gkh],[Gkh,ZwqWu],[Gkh,FC],[Gkh,FC,ZwqWu],[Gkh,i],[Gkh,i,ZwqWu],[Gkh,i,FC],[Gkh,i,FC,ZwqWu],[C],[C,ZwqWu],[C,FC],[C,FC,ZwqWu],[C,i],[C,i,ZwqWu],[C,i,FC],[C,i,FC,ZwqWu],[C,Gkh],[C,Gkh,ZwqWu],[C,Gkh,FC],[C,Gkh,FC,ZwqWu],[C,Gkh,i],[C,Gkh,i,ZwqWu],[C,Gkh,i,FC],[C,Gkh,i,FC,ZwqWu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2661() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YR","DeKuL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DeKuL],[YR],[YR,DeKuL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2662() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DPm","t","XpCSC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XpCSC],[t],[t,XpCSC],[DPm],[DPm,XpCSC],[DPm,t],[DPm,t,XpCSC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2663() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FS","cp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cp],[FS],[FS,cp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2664() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vnFU","iax","yQ","j","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[j],[j,l],[yQ],[yQ,l],[yQ,j],[yQ,j,l],[iax],[iax,l],[iax,j],[iax,j,l],[iax,yQ],[iax,yQ,l],[iax,yQ,j],[iax,yQ,j,l],[vnFU],[vnFU,l],[vnFU,j],[vnFU,j,l],[vnFU,yQ],[vnFU,yQ,l],[vnFU,yQ,j],[vnFU,yQ,j,l],[vnFU,iax],[vnFU,iax,l],[vnFU,iax,j],[vnFU,iax,j,l],[vnFU,iax,yQ],[vnFU,iax,yQ,l],[vnFU,iax,yQ,j],[vnFU,iax,yQ,j,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2665() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LclWP","bpYF","hzKFH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hzKFH],[bpYF],[bpYF,hzKFH],[LclWP],[LclWP,hzKFH],[LclWP,bpYF],[LclWP,bpYF,hzKFH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2666() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dzzbf","D","hpO","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[hpO],[hpO,w],[D],[D,w],[D,hpO],[D,hpO,w],[dzzbf],[dzzbf,w],[dzzbf,hpO],[dzzbf,hpO,w],[dzzbf,D],[dzzbf,D,w],[dzzbf,D,hpO],[dzzbf,D,hpO,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2667() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cdfIJ","cWFJ","w","uyXAR","vZUz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vZUz],[uyXAR],[uyXAR,vZUz],[w],[w,vZUz],[w,uyXAR],[w,uyXAR,vZUz],[cWFJ],[cWFJ,vZUz],[cWFJ,uyXAR],[cWFJ,uyXAR,vZUz],[cWFJ,w],[cWFJ,w,vZUz],[cWFJ,w,uyXAR],[cWFJ,w,uyXAR,vZUz],[cdfIJ],[cdfIJ,vZUz],[cdfIJ,uyXAR],[cdfIJ,uyXAR,vZUz],[cdfIJ,w],[cdfIJ,w,vZUz],[cdfIJ,w,uyXAR],[cdfIJ,w,uyXAR,vZUz],[cdfIJ,cWFJ],[cdfIJ,cWFJ,vZUz],[cdfIJ,cWFJ,uyXAR],[cdfIJ,cWFJ,uyXAR,vZUz],[cdfIJ,cWFJ,w],[cdfIJ,cWFJ,w,vZUz],[cdfIJ,cWFJ,w,uyXAR],[cdfIJ,cWFJ,w,uyXAR,vZUz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2668() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oXacO","Lt","cm","Vs","Yv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yv],[Vs],[Vs,Yv],[cm],[cm,Yv],[cm,Vs],[cm,Vs,Yv],[Lt],[Lt,Yv],[Lt,Vs],[Lt,Vs,Yv],[Lt,cm],[Lt,cm,Yv],[Lt,cm,Vs],[Lt,cm,Vs,Yv],[oXacO],[oXacO,Yv],[oXacO,Vs],[oXacO,Vs,Yv],[oXacO,cm],[oXacO,cm,Yv],[oXacO,cm,Vs],[oXacO,cm,Vs,Yv],[oXacO,Lt],[oXacO,Lt,Yv],[oXacO,Lt,Vs],[oXacO,Lt,Vs,Yv],[oXacO,Lt,cm],[oXacO,Lt,cm,Yv],[oXacO,Lt,cm,Vs],[oXacO,Lt,cm,Vs,Yv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2669() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OF","I","L","MMpOm","erk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[erk],[MMpOm],[MMpOm,erk],[L],[L,erk],[L,MMpOm],[L,MMpOm,erk],[I],[I,erk],[I,MMpOm],[I,MMpOm,erk],[I,L],[I,L,erk],[I,L,MMpOm],[I,L,MMpOm,erk],[OF],[OF,erk],[OF,MMpOm],[OF,MMpOm,erk],[OF,L],[OF,L,erk],[OF,L,MMpOm],[OF,L,MMpOm,erk],[OF,I],[OF,I,erk],[OF,I,MMpOm],[OF,I,MMpOm,erk],[OF,I,L],[OF,I,L,erk],[OF,I,L,MMpOm],[OF,I,L,MMpOm,erk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2670() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DNPao","vB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vB],[DNPao],[DNPao,vB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2671() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "l","GT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GT],[l],[l,GT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2672() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AVJ","pVE","cpL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cpL],[pVE],[pVE,cpL],[AVJ],[AVJ,cpL],[AVJ,pVE],[AVJ,pVE,cpL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2673() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zTk","iwJY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iwJY],[zTk],[zTk,iwJY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2674() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dd","FrPFX","Gp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gp],[FrPFX],[FrPFX,Gp],[Dd],[Dd,Gp],[Dd,FrPFX],[Dd,FrPFX,Gp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2675() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DoGM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DoGM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2676() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xaUu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xaUu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2677() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","YuQW","FaD","vP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vP],[FaD],[FaD,vP],[YuQW],[YuQW,vP],[YuQW,FaD],[YuQW,FaD,vP],[A],[A,vP],[A,FaD],[A,FaD,vP],[A,YuQW],[A,YuQW,vP],[A,YuQW,FaD],[A,YuQW,FaD,vP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2678() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aTCoV","vGkSx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vGkSx],[aTCoV],[aTCoV,vGkSx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2679() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G","EaEq","QaxPp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QaxPp],[EaEq],[EaEq,QaxPp],[G],[G,QaxPp],[G,EaEq],[G,EaEq,QaxPp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2680() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","NQPJ","tN","KdaHU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KdaHU],[tN],[tN,KdaHU],[NQPJ],[NQPJ,KdaHU],[NQPJ,tN],[NQPJ,tN,KdaHU],[U],[U,KdaHU],[U,tN],[U,tN,KdaHU],[U,NQPJ],[U,NQPJ,KdaHU],[U,NQPJ,tN],[U,NQPJ,tN,KdaHU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2681() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XvgkQ","u")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[u],[XvgkQ],[XvgkQ,u]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2682() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ilgs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ilgs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2683() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","P","dW","Pfl","VSY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VSY],[Pfl],[Pfl,VSY],[dW],[dW,VSY],[dW,Pfl],[dW,Pfl,VSY],[P],[P,VSY],[P,Pfl],[P,Pfl,VSY],[P,dW],[P,dW,VSY],[P,dW,Pfl],[P,dW,Pfl,VSY],[p],[p,VSY],[p,Pfl],[p,Pfl,VSY],[p,dW],[p,dW,VSY],[p,dW,Pfl],[p,dW,Pfl,VSY],[p,P],[p,P,VSY],[p,P,Pfl],[p,P,Pfl,VSY],[p,P,dW],[p,P,dW,VSY],[p,P,dW,Pfl],[p,P,dW,Pfl,VSY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2684() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RcYbm","sX","SIoJ","yZQS","OZH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OZH],[yZQS],[yZQS,OZH],[SIoJ],[SIoJ,OZH],[SIoJ,yZQS],[SIoJ,yZQS,OZH],[sX],[sX,OZH],[sX,yZQS],[sX,yZQS,OZH],[sX,SIoJ],[sX,SIoJ,OZH],[sX,SIoJ,yZQS],[sX,SIoJ,yZQS,OZH],[RcYbm],[RcYbm,OZH],[RcYbm,yZQS],[RcYbm,yZQS,OZH],[RcYbm,SIoJ],[RcYbm,SIoJ,OZH],[RcYbm,SIoJ,yZQS],[RcYbm,SIoJ,yZQS,OZH],[RcYbm,sX],[RcYbm,sX,OZH],[RcYbm,sX,yZQS],[RcYbm,sX,yZQS,OZH],[RcYbm,sX,SIoJ],[RcYbm,sX,SIoJ,OZH],[RcYbm,sX,SIoJ,yZQS],[RcYbm,sX,SIoJ,yZQS,OZH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2685() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FukL","uqa","j","nm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nm],[j],[j,nm],[uqa],[uqa,nm],[uqa,j],[uqa,j,nm],[FukL],[FukL,nm],[FukL,j],[FukL,j,nm],[FukL,uqa],[FukL,uqa,nm],[FukL,uqa,j],[FukL,uqa,j,nm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2686() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rvG","CHALI","rtRAG","Thdiv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Thdiv],[rtRAG],[rtRAG,Thdiv],[CHALI],[CHALI,Thdiv],[CHALI,rtRAG],[CHALI,rtRAG,Thdiv],[rvG],[rvG,Thdiv],[rvG,rtRAG],[rvG,rtRAG,Thdiv],[rvG,CHALI],[rvG,CHALI,Thdiv],[rvG,CHALI,rtRAG],[rvG,CHALI,rtRAG,Thdiv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2687() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wfuL","OuXr","rbrRN","EWaoh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EWaoh],[rbrRN],[rbrRN,EWaoh],[OuXr],[OuXr,EWaoh],[OuXr,rbrRN],[OuXr,rbrRN,EWaoh],[wfuL],[wfuL,EWaoh],[wfuL,rbrRN],[wfuL,rbrRN,EWaoh],[wfuL,OuXr],[wfuL,OuXr,EWaoh],[wfuL,OuXr,rbrRN],[wfuL,OuXr,rbrRN,EWaoh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2688() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fH","oNYe","rDjqH","kavzT","QMZQZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QMZQZ],[kavzT],[kavzT,QMZQZ],[rDjqH],[rDjqH,QMZQZ],[rDjqH,kavzT],[rDjqH,kavzT,QMZQZ],[oNYe],[oNYe,QMZQZ],[oNYe,kavzT],[oNYe,kavzT,QMZQZ],[oNYe,rDjqH],[oNYe,rDjqH,QMZQZ],[oNYe,rDjqH,kavzT],[oNYe,rDjqH,kavzT,QMZQZ],[fH],[fH,QMZQZ],[fH,kavzT],[fH,kavzT,QMZQZ],[fH,rDjqH],[fH,rDjqH,QMZQZ],[fH,rDjqH,kavzT],[fH,rDjqH,kavzT,QMZQZ],[fH,oNYe],[fH,oNYe,QMZQZ],[fH,oNYe,kavzT],[fH,oNYe,kavzT,QMZQZ],[fH,oNYe,rDjqH],[fH,oNYe,rDjqH,QMZQZ],[fH,oNYe,rDjqH,kavzT],[fH,oNYe,rDjqH,kavzT,QMZQZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2689() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gpsWd","VP","DZyp","Vt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vt],[DZyp],[DZyp,Vt],[VP],[VP,Vt],[VP,DZyp],[VP,DZyp,Vt],[gpsWd],[gpsWd,Vt],[gpsWd,DZyp],[gpsWd,DZyp,Vt],[gpsWd,VP],[gpsWd,VP,Vt],[gpsWd,VP,DZyp],[gpsWd,VP,DZyp,Vt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2690() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2691() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sZj","gnuDb","mOXAq","kyoME","Qj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qj],[kyoME],[kyoME,Qj],[mOXAq],[mOXAq,Qj],[mOXAq,kyoME],[mOXAq,kyoME,Qj],[gnuDb],[gnuDb,Qj],[gnuDb,kyoME],[gnuDb,kyoME,Qj],[gnuDb,mOXAq],[gnuDb,mOXAq,Qj],[gnuDb,mOXAq,kyoME],[gnuDb,mOXAq,kyoME,Qj],[sZj],[sZj,Qj],[sZj,kyoME],[sZj,kyoME,Qj],[sZj,mOXAq],[sZj,mOXAq,Qj],[sZj,mOXAq,kyoME],[sZj,mOXAq,kyoME,Qj],[sZj,gnuDb],[sZj,gnuDb,Qj],[sZj,gnuDb,kyoME],[sZj,gnuDb,kyoME,Qj],[sZj,gnuDb,mOXAq],[sZj,gnuDb,mOXAq,Qj],[sZj,gnuDb,mOXAq,kyoME],[sZj,gnuDb,mOXAq,kyoME,Qj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2692() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eN","gMqMm","EPG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EPG],[gMqMm],[gMqMm,EPG],[eN],[eN,EPG],[eN,gMqMm],[eN,gMqMm,EPG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2693() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZflVX","asFDT","GvjT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GvjT],[asFDT],[asFDT,GvjT],[ZflVX],[ZflVX,GvjT],[ZflVX,asFDT],[ZflVX,asFDT,GvjT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2694() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jfNr","i","mv","nm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nm],[mv],[mv,nm],[i],[i,nm],[i,mv],[i,mv,nm],[jfNr],[jfNr,nm],[jfNr,mv],[jfNr,mv,nm],[jfNr,i],[jfNr,i,nm],[jfNr,i,mv],[jfNr,i,mv,nm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2695() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GVe","AUIXv","fYl","ELdXt","Gv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gv],[ELdXt],[ELdXt,Gv],[fYl],[fYl,Gv],[fYl,ELdXt],[fYl,ELdXt,Gv],[AUIXv],[AUIXv,Gv],[AUIXv,ELdXt],[AUIXv,ELdXt,Gv],[AUIXv,fYl],[AUIXv,fYl,Gv],[AUIXv,fYl,ELdXt],[AUIXv,fYl,ELdXt,Gv],[GVe],[GVe,Gv],[GVe,ELdXt],[GVe,ELdXt,Gv],[GVe,fYl],[GVe,fYl,Gv],[GVe,fYl,ELdXt],[GVe,fYl,ELdXt,Gv],[GVe,AUIXv],[GVe,AUIXv,Gv],[GVe,AUIXv,ELdXt],[GVe,AUIXv,ELdXt,Gv],[GVe,AUIXv,fYl],[GVe,AUIXv,fYl,Gv],[GVe,AUIXv,fYl,ELdXt],[GVe,AUIXv,fYl,ELdXt,Gv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2696() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KDuMA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KDuMA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2697() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","Jpdw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jpdw],[b],[b,Jpdw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2698() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PP","b","ybpnf","xrPj","uRz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uRz],[xrPj],[xrPj,uRz],[ybpnf],[ybpnf,uRz],[ybpnf,xrPj],[ybpnf,xrPj,uRz],[b],[b,uRz],[b,xrPj],[b,xrPj,uRz],[b,ybpnf],[b,ybpnf,uRz],[b,ybpnf,xrPj],[b,ybpnf,xrPj,uRz],[PP],[PP,uRz],[PP,xrPj],[PP,xrPj,uRz],[PP,ybpnf],[PP,ybpnf,uRz],[PP,ybpnf,xrPj],[PP,ybpnf,xrPj,uRz],[PP,b],[PP,b,uRz],[PP,b,xrPj],[PP,b,xrPj,uRz],[PP,b,ybpnf],[PP,b,ybpnf,uRz],[PP,b,ybpnf,xrPj],[PP,b,ybpnf,xrPj,uRz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2699() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gzx","N","LAc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LAc],[N],[N,LAc],[gzx],[gzx,LAc],[gzx,N],[gzx,N,LAc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2700() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2701() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aTi","dXo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dXo],[aTi],[aTi,dXo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2702() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ddm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ddm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2703() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","kft","L","OII")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OII],[L],[L,OII],[kft],[kft,OII],[kft,L],[kft,L,OII],[g],[g,OII],[g,L],[g,L,OII],[g,kft],[g,kft,OII],[g,kft,L],[g,kft,L,OII]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2704() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NRHX","lkMa","OsydO","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[OsydO],[OsydO,O],[lkMa],[lkMa,O],[lkMa,OsydO],[lkMa,OsydO,O],[NRHX],[NRHX,O],[NRHX,OsydO],[NRHX,OsydO,O],[NRHX,lkMa],[NRHX,lkMa,O],[NRHX,lkMa,OsydO],[NRHX,lkMa,OsydO,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2705() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yy","T")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[T],[yy],[yy,T]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2706() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aS","emo","ullZm","Ylxz","tnJi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tnJi],[Ylxz],[Ylxz,tnJi],[ullZm],[ullZm,tnJi],[ullZm,Ylxz],[ullZm,Ylxz,tnJi],[emo],[emo,tnJi],[emo,Ylxz],[emo,Ylxz,tnJi],[emo,ullZm],[emo,ullZm,tnJi],[emo,ullZm,Ylxz],[emo,ullZm,Ylxz,tnJi],[aS],[aS,tnJi],[aS,Ylxz],[aS,Ylxz,tnJi],[aS,ullZm],[aS,ullZm,tnJi],[aS,ullZm,Ylxz],[aS,ullZm,Ylxz,tnJi],[aS,emo],[aS,emo,tnJi],[aS,emo,Ylxz],[aS,emo,Ylxz,tnJi],[aS,emo,ullZm],[aS,emo,ullZm,tnJi],[aS,emo,ullZm,Ylxz],[aS,emo,ullZm,Ylxz,tnJi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2707() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DOiI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DOiI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2708() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CXHP","LYq","yjH","V")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[V],[yjH],[yjH,V],[LYq],[LYq,V],[LYq,yjH],[LYq,yjH,V],[CXHP],[CXHP,V],[CXHP,yjH],[CXHP,yjH,V],[CXHP,LYq],[CXHP,LYq,V],[CXHP,LYq,yjH],[CXHP,LYq,yjH,V]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2709() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZEc","K","bxesW","vbmdE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vbmdE],[bxesW],[bxesW,vbmdE],[K],[K,vbmdE],[K,bxesW],[K,bxesW,vbmdE],[ZEc],[ZEc,vbmdE],[ZEc,bxesW],[ZEc,bxesW,vbmdE],[ZEc,K],[ZEc,K,vbmdE],[ZEc,K,bxesW],[ZEc,K,bxesW,vbmdE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2710() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GG","B","KFC","adqt","hlWa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hlWa],[adqt],[adqt,hlWa],[KFC],[KFC,hlWa],[KFC,adqt],[KFC,adqt,hlWa],[B],[B,hlWa],[B,adqt],[B,adqt,hlWa],[B,KFC],[B,KFC,hlWa],[B,KFC,adqt],[B,KFC,adqt,hlWa],[GG],[GG,hlWa],[GG,adqt],[GG,adqt,hlWa],[GG,KFC],[GG,KFC,hlWa],[GG,KFC,adqt],[GG,KFC,adqt,hlWa],[GG,B],[GG,B,hlWa],[GG,B,adqt],[GG,B,adqt,hlWa],[GG,B,KFC],[GG,B,KFC,hlWa],[GG,B,KFC,adqt],[GG,B,KFC,adqt,hlWa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2711() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FUiRz","l","Hg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hg],[l],[l,Hg],[FUiRz],[FUiRz,Hg],[FUiRz,l],[FUiRz,l,Hg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2712() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LmnfY","XXR","xwErJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xwErJ],[XXR],[XXR,xwErJ],[LmnfY],[LmnfY,xwErJ],[LmnfY,XXR],[LmnfY,XXR,xwErJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2713() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MoPo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MoPo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2714() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cC","HQy","I","CR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CR],[I],[I,CR],[HQy],[HQy,CR],[HQy,I],[HQy,I,CR],[cC],[cC,CR],[cC,I],[cC,I,CR],[cC,HQy],[cC,HQy,CR],[cC,HQy,I],[cC,HQy,I,CR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2715() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wSFKY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wSFKY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2716() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","Sk","hR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hR],[Sk],[Sk,hR],[c],[c,hR],[c,Sk],[c,Sk,hR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2717() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DtLI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DtLI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2718() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pHMSh","Uq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uq],[pHMSh],[pHMSh,Uq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2719() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[E],[E,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2720() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xJSbj","Zp","Nrm","Z","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[Z],[Z,L],[Nrm],[Nrm,L],[Nrm,Z],[Nrm,Z,L],[Zp],[Zp,L],[Zp,Z],[Zp,Z,L],[Zp,Nrm],[Zp,Nrm,L],[Zp,Nrm,Z],[Zp,Nrm,Z,L],[xJSbj],[xJSbj,L],[xJSbj,Z],[xJSbj,Z,L],[xJSbj,Nrm],[xJSbj,Nrm,L],[xJSbj,Nrm,Z],[xJSbj,Nrm,Z,L],[xJSbj,Zp],[xJSbj,Zp,L],[xJSbj,Zp,Z],[xJSbj,Zp,Z,L],[xJSbj,Zp,Nrm],[xJSbj,Zp,Nrm,L],[xJSbj,Zp,Nrm,Z],[xJSbj,Zp,Nrm,Z,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2721() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zMd","A","bGrOG","qw","WXLJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WXLJ],[qw],[qw,WXLJ],[bGrOG],[bGrOG,WXLJ],[bGrOG,qw],[bGrOG,qw,WXLJ],[A],[A,WXLJ],[A,qw],[A,qw,WXLJ],[A,bGrOG],[A,bGrOG,WXLJ],[A,bGrOG,qw],[A,bGrOG,qw,WXLJ],[zMd],[zMd,WXLJ],[zMd,qw],[zMd,qw,WXLJ],[zMd,bGrOG],[zMd,bGrOG,WXLJ],[zMd,bGrOG,qw],[zMd,bGrOG,qw,WXLJ],[zMd,A],[zMd,A,WXLJ],[zMd,A,qw],[zMd,A,qw,WXLJ],[zMd,A,bGrOG],[zMd,A,bGrOG,WXLJ],[zMd,A,bGrOG,qw],[zMd,A,bGrOG,qw,WXLJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2722() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","qSBF","cvBSN","ZH","UT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UT],[ZH],[ZH,UT],[cvBSN],[cvBSN,UT],[cvBSN,ZH],[cvBSN,ZH,UT],[qSBF],[qSBF,UT],[qSBF,ZH],[qSBF,ZH,UT],[qSBF,cvBSN],[qSBF,cvBSN,UT],[qSBF,cvBSN,ZH],[qSBF,cvBSN,ZH,UT],[A],[A,UT],[A,ZH],[A,ZH,UT],[A,cvBSN],[A,cvBSN,UT],[A,cvBSN,ZH],[A,cvBSN,ZH,UT],[A,qSBF],[A,qSBF,UT],[A,qSBF,ZH],[A,qSBF,ZH,UT],[A,qSBF,cvBSN],[A,qSBF,cvBSN,UT],[A,qSBF,cvBSN,ZH],[A,qSBF,cvBSN,ZH,UT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2723() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CVU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CVU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2724() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fLvao")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fLvao]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2725() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ii","xjhA","ou","KnHi","yx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yx],[KnHi],[KnHi,yx],[ou],[ou,yx],[ou,KnHi],[ou,KnHi,yx],[xjhA],[xjhA,yx],[xjhA,KnHi],[xjhA,KnHi,yx],[xjhA,ou],[xjhA,ou,yx],[xjhA,ou,KnHi],[xjhA,ou,KnHi,yx],[ii],[ii,yx],[ii,KnHi],[ii,KnHi,yx],[ii,ou],[ii,ou,yx],[ii,ou,KnHi],[ii,ou,KnHi,yx],[ii,xjhA],[ii,xjhA,yx],[ii,xjhA,KnHi],[ii,xjhA,KnHi,yx],[ii,xjhA,ou],[ii,xjhA,ou,yx],[ii,xjhA,ou,KnHi],[ii,xjhA,ou,KnHi,yx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2726() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","zBo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zBo],[S],[S,zBo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2727() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[p]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2728() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","Q","LIM","Kem","Tov")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tov],[Kem],[Kem,Tov],[LIM],[LIM,Tov],[LIM,Kem],[LIM,Kem,Tov],[Q],[Q,Tov],[Q,Kem],[Q,Kem,Tov],[Q,LIM],[Q,LIM,Tov],[Q,LIM,Kem],[Q,LIM,Kem,Tov],[P],[P,Tov],[P,Kem],[P,Kem,Tov],[P,LIM],[P,LIM,Tov],[P,LIM,Kem],[P,LIM,Kem,Tov],[P,Q],[P,Q,Tov],[P,Q,Kem],[P,Q,Kem,Tov],[P,Q,LIM],[P,Q,LIM,Tov],[P,Q,LIM,Kem],[P,Q,LIM,Kem,Tov]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2729() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MRj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MRj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2730() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "orv","GA","Xr","zkm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zkm],[Xr],[Xr,zkm],[GA],[GA,zkm],[GA,Xr],[GA,Xr,zkm],[orv],[orv,zkm],[orv,Xr],[orv,Xr,zkm],[orv,GA],[orv,GA,zkm],[orv,GA,Xr],[orv,GA,Xr,zkm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2731() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CCQo","Vi","Th","un","SXLFf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SXLFf],[un],[un,SXLFf],[Th],[Th,SXLFf],[Th,un],[Th,un,SXLFf],[Vi],[Vi,SXLFf],[Vi,un],[Vi,un,SXLFf],[Vi,Th],[Vi,Th,SXLFf],[Vi,Th,un],[Vi,Th,un,SXLFf],[CCQo],[CCQo,SXLFf],[CCQo,un],[CCQo,un,SXLFf],[CCQo,Th],[CCQo,Th,SXLFf],[CCQo,Th,un],[CCQo,Th,un,SXLFf],[CCQo,Vi],[CCQo,Vi,SXLFf],[CCQo,Vi,un],[CCQo,Vi,un,SXLFf],[CCQo,Vi,Th],[CCQo,Vi,Th,SXLFf],[CCQo,Vi,Th,un],[CCQo,Vi,Th,un,SXLFf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2732() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","UKyJY","bMmUE","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[bMmUE],[bMmUE,m],[UKyJY],[UKyJY,m],[UKyJY,bMmUE],[UKyJY,bMmUE,m],[p],[p,m],[p,bMmUE],[p,bMmUE,m],[p,UKyJY],[p,UKyJY,m],[p,UKyJY,bMmUE],[p,UKyJY,bMmUE,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2733() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","g","HHO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HHO],[g],[g,HHO],[w],[w,HHO],[w,g],[w,g,HHO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2734() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PLu","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[PLu],[PLu,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2735() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hhkNn","HKZfx","DGqUk","xSPb","CLrjy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CLrjy],[xSPb],[xSPb,CLrjy],[DGqUk],[DGqUk,CLrjy],[DGqUk,xSPb],[DGqUk,xSPb,CLrjy],[HKZfx],[HKZfx,CLrjy],[HKZfx,xSPb],[HKZfx,xSPb,CLrjy],[HKZfx,DGqUk],[HKZfx,DGqUk,CLrjy],[HKZfx,DGqUk,xSPb],[HKZfx,DGqUk,xSPb,CLrjy],[hhkNn],[hhkNn,CLrjy],[hhkNn,xSPb],[hhkNn,xSPb,CLrjy],[hhkNn,DGqUk],[hhkNn,DGqUk,CLrjy],[hhkNn,DGqUk,xSPb],[hhkNn,DGqUk,xSPb,CLrjy],[hhkNn,HKZfx],[hhkNn,HKZfx,CLrjy],[hhkNn,HKZfx,xSPb],[hhkNn,HKZfx,xSPb,CLrjy],[hhkNn,HKZfx,DGqUk],[hhkNn,HKZfx,DGqUk,CLrjy],[hhkNn,HKZfx,DGqUk,xSPb],[hhkNn,HKZfx,DGqUk,xSPb,CLrjy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2736() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2737() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "STfg","W","Kybx","AZ","IuST")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IuST],[AZ],[AZ,IuST],[Kybx],[Kybx,IuST],[Kybx,AZ],[Kybx,AZ,IuST],[W],[W,IuST],[W,AZ],[W,AZ,IuST],[W,Kybx],[W,Kybx,IuST],[W,Kybx,AZ],[W,Kybx,AZ,IuST],[STfg],[STfg,IuST],[STfg,AZ],[STfg,AZ,IuST],[STfg,Kybx],[STfg,Kybx,IuST],[STfg,Kybx,AZ],[STfg,Kybx,AZ,IuST],[STfg,W],[STfg,W,IuST],[STfg,W,AZ],[STfg,W,AZ,IuST],[STfg,W,Kybx],[STfg,W,Kybx,IuST],[STfg,W,Kybx,AZ],[STfg,W,Kybx,AZ,IuST]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2738() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2739() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HaoLs","ywQiP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ywQiP],[HaoLs],[HaoLs,ywQiP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2740() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ckr","fhZj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fhZj],[Ckr],[Ckr,fhZj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2741() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LPsB","a","pwO","aK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aK],[pwO],[pwO,aK],[a],[a,aK],[a,pwO],[a,pwO,aK],[LPsB],[LPsB,aK],[LPsB,pwO],[LPsB,pwO,aK],[LPsB,a],[LPsB,a,aK],[LPsB,a,pwO],[LPsB,a,pwO,aK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2742() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[s]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2743() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TwNZD","joUvt","JyGKP","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[JyGKP],[JyGKP,Z],[joUvt],[joUvt,Z],[joUvt,JyGKP],[joUvt,JyGKP,Z],[TwNZD],[TwNZD,Z],[TwNZD,JyGKP],[TwNZD,JyGKP,Z],[TwNZD,joUvt],[TwNZD,joUvt,Z],[TwNZD,joUvt,JyGKP],[TwNZD,joUvt,JyGKP,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2744() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OR","DL","zU","qLCOm","RHUG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RHUG],[qLCOm],[qLCOm,RHUG],[zU],[zU,RHUG],[zU,qLCOm],[zU,qLCOm,RHUG],[DL],[DL,RHUG],[DL,qLCOm],[DL,qLCOm,RHUG],[DL,zU],[DL,zU,RHUG],[DL,zU,qLCOm],[DL,zU,qLCOm,RHUG],[OR],[OR,RHUG],[OR,qLCOm],[OR,qLCOm,RHUG],[OR,zU],[OR,zU,RHUG],[OR,zU,qLCOm],[OR,zU,qLCOm,RHUG],[OR,DL],[OR,DL,RHUG],[OR,DL,qLCOm],[OR,DL,qLCOm,RHUG],[OR,DL,zU],[OR,DL,zU,RHUG],[OR,DL,zU,qLCOm],[OR,DL,zU,qLCOm,RHUG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2745() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mimEr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mimEr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2746() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VppZC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VppZC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2747() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","H")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[H],[B],[B,H]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2748() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wPk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wPk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2749() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZXEOm","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[ZXEOm],[ZXEOm,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2750() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MEqx","WrIOQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WrIOQ],[MEqx],[MEqx,WrIOQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2751() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DsWo","hhjzS","iv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iv],[hhjzS],[hhjzS,iv],[DsWo],[DsWo,iv],[DsWo,hhjzS],[DsWo,hhjzS,iv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2752() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cWGJr","dxH","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[dxH],[dxH,I],[cWGJr],[cWGJr,I],[cWGJr,dxH],[cWGJr,dxH,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2753() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hLz","PbX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PbX],[hLz],[hLz,PbX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2754() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uf","D","qlmE","G","vT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vT],[G],[G,vT],[qlmE],[qlmE,vT],[qlmE,G],[qlmE,G,vT],[D],[D,vT],[D,G],[D,G,vT],[D,qlmE],[D,qlmE,vT],[D,qlmE,G],[D,qlmE,G,vT],[uf],[uf,vT],[uf,G],[uf,G,vT],[uf,qlmE],[uf,qlmE,vT],[uf,qlmE,G],[uf,qlmE,G,vT],[uf,D],[uf,D,vT],[uf,D,G],[uf,D,G,vT],[uf,D,qlmE],[uf,D,qlmE,vT],[uf,D,qlmE,G],[uf,D,qlmE,G,vT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2755() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mlxA","KG","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[KG],[KG,N],[mlxA],[mlxA,N],[mlxA,KG],[mlxA,KG,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2756() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2757() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qat","MLh","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[MLh],[MLh,k],[qat],[qat,k],[qat,MLh],[qat,MLh,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2758() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2759() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lnv","ifq","pcNJt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pcNJt],[ifq],[ifq,pcNJt],[Lnv],[Lnv,pcNJt],[Lnv,ifq],[Lnv,ifq,pcNJt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2760() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zoRhs","dzBS","VWBt","JvFI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JvFI],[VWBt],[VWBt,JvFI],[dzBS],[dzBS,JvFI],[dzBS,VWBt],[dzBS,VWBt,JvFI],[zoRhs],[zoRhs,JvFI],[zoRhs,VWBt],[zoRhs,VWBt,JvFI],[zoRhs,dzBS],[zoRhs,dzBS,JvFI],[zoRhs,dzBS,VWBt],[zoRhs,dzBS,VWBt,JvFI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2761() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ddDlg","olpDK","jkGbL","uaD","PZt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PZt],[uaD],[uaD,PZt],[jkGbL],[jkGbL,PZt],[jkGbL,uaD],[jkGbL,uaD,PZt],[olpDK],[olpDK,PZt],[olpDK,uaD],[olpDK,uaD,PZt],[olpDK,jkGbL],[olpDK,jkGbL,PZt],[olpDK,jkGbL,uaD],[olpDK,jkGbL,uaD,PZt],[ddDlg],[ddDlg,PZt],[ddDlg,uaD],[ddDlg,uaD,PZt],[ddDlg,jkGbL],[ddDlg,jkGbL,PZt],[ddDlg,jkGbL,uaD],[ddDlg,jkGbL,uaD,PZt],[ddDlg,olpDK],[ddDlg,olpDK,PZt],[ddDlg,olpDK,uaD],[ddDlg,olpDK,uaD,PZt],[ddDlg,olpDK,jkGbL],[ddDlg,olpDK,jkGbL,PZt],[ddDlg,olpDK,jkGbL,uaD],[ddDlg,olpDK,jkGbL,uaD,PZt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2762() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qvttq","uaVrM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uaVrM],[qvttq],[qvttq,uaVrM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2763() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","xrOI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xrOI],[w],[w,xrOI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2764() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Me","BNX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BNX],[Me],[Me,BNX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2765() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UWiJ","ILeF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ILeF],[UWiJ],[UWiJ,ILeF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2766() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aSr","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[aSr],[aSr,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2767() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","eJM","ZfLa","kf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kf],[ZfLa],[ZfLa,kf],[eJM],[eJM,kf],[eJM,ZfLa],[eJM,ZfLa,kf],[p],[p,kf],[p,ZfLa],[p,ZfLa,kf],[p,eJM],[p,eJM,kf],[p,eJM,ZfLa],[p,eJM,ZfLa,kf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2768() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FNmyT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FNmyT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2769() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GtdjR","s","d","ul","xPhKJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xPhKJ],[ul],[ul,xPhKJ],[d],[d,xPhKJ],[d,ul],[d,ul,xPhKJ],[s],[s,xPhKJ],[s,ul],[s,ul,xPhKJ],[s,d],[s,d,xPhKJ],[s,d,ul],[s,d,ul,xPhKJ],[GtdjR],[GtdjR,xPhKJ],[GtdjR,ul],[GtdjR,ul,xPhKJ],[GtdjR,d],[GtdjR,d,xPhKJ],[GtdjR,d,ul],[GtdjR,d,ul,xPhKJ],[GtdjR,s],[GtdjR,s,xPhKJ],[GtdjR,s,ul],[GtdjR,s,ul,xPhKJ],[GtdjR,s,d],[GtdjR,s,d,xPhKJ],[GtdjR,s,d,ul],[GtdjR,s,d,ul,xPhKJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2770() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kTqG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kTqG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2771() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kTt","SUpjp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SUpjp],[kTt],[kTt,SUpjp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2772() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GxK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GxK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2773() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OinTd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OinTd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2774() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aYgyr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aYgyr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2775() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H","Saf","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[Saf],[Saf,L],[H],[H,L],[H,Saf],[H,Saf,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2776() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SS","peYqz","clO","UIm","OjKou")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OjKou],[UIm],[UIm,OjKou],[clO],[clO,OjKou],[clO,UIm],[clO,UIm,OjKou],[peYqz],[peYqz,OjKou],[peYqz,UIm],[peYqz,UIm,OjKou],[peYqz,clO],[peYqz,clO,OjKou],[peYqz,clO,UIm],[peYqz,clO,UIm,OjKou],[SS],[SS,OjKou],[SS,UIm],[SS,UIm,OjKou],[SS,clO],[SS,clO,OjKou],[SS,clO,UIm],[SS,clO,UIm,OjKou],[SS,peYqz],[SS,peYqz,OjKou],[SS,peYqz,UIm],[SS,peYqz,UIm,OjKou],[SS,peYqz,clO],[SS,peYqz,clO,OjKou],[SS,peYqz,clO,UIm],[SS,peYqz,clO,UIm,OjKou]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2777() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zqt","tqnga","rp","n","ih")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ih],[n],[n,ih],[rp],[rp,ih],[rp,n],[rp,n,ih],[tqnga],[tqnga,ih],[tqnga,n],[tqnga,n,ih],[tqnga,rp],[tqnga,rp,ih],[tqnga,rp,n],[tqnga,rp,n,ih],[Zqt],[Zqt,ih],[Zqt,n],[Zqt,n,ih],[Zqt,rp],[Zqt,rp,ih],[Zqt,rp,n],[Zqt,rp,n,ih],[Zqt,tqnga],[Zqt,tqnga,ih],[Zqt,tqnga,n],[Zqt,tqnga,n,ih],[Zqt,tqnga,rp],[Zqt,tqnga,rp,ih],[Zqt,tqnga,rp,n],[Zqt,tqnga,rp,n,ih]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2778() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xL","e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e],[xL],[xL,e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2779() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","bi","KxL","iqBkc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iqBkc],[KxL],[KxL,iqBkc],[bi],[bi,iqBkc],[bi,KxL],[bi,KxL,iqBkc],[F],[F,iqBkc],[F,KxL],[F,KxL,iqBkc],[F,bi],[F,bi,iqBkc],[F,bi,KxL],[F,bi,KxL,iqBkc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2780() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GXd","FFls","pM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pM],[FFls],[FFls,pM],[GXd],[GXd,pM],[GXd,FFls],[GXd,FFls,pM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2781() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dT","U","Vl","Jdrq","LWvG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LWvG],[Jdrq],[Jdrq,LWvG],[Vl],[Vl,LWvG],[Vl,Jdrq],[Vl,Jdrq,LWvG],[U],[U,LWvG],[U,Jdrq],[U,Jdrq,LWvG],[U,Vl],[U,Vl,LWvG],[U,Vl,Jdrq],[U,Vl,Jdrq,LWvG],[dT],[dT,LWvG],[dT,Jdrq],[dT,Jdrq,LWvG],[dT,Vl],[dT,Vl,LWvG],[dT,Vl,Jdrq],[dT,Vl,Jdrq,LWvG],[dT,U],[dT,U,LWvG],[dT,U,Jdrq],[dT,U,Jdrq,LWvG],[dT,U,Vl],[dT,U,Vl,LWvG],[dT,U,Vl,Jdrq],[dT,U,Vl,Jdrq,LWvG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2782() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Kjo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kjo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2783() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gDxS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gDxS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2784() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bw","WxaTs","YpKY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YpKY],[WxaTs],[WxaTs,YpKY],[bw],[bw,YpKY],[bw,WxaTs],[bw,WxaTs,YpKY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2785() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cOMy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cOMy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2786() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mXDp","sXUlV","HyVC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HyVC],[sXUlV],[sXUlV,HyVC],[mXDp],[mXDp,HyVC],[mXDp,sXUlV],[mXDp,sXUlV,HyVC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2787() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WEbTn","dj","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[dj],[dj,k],[WEbTn],[WEbTn,k],[WEbTn,dj],[WEbTn,dj,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2788() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2789() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","pxFbv","UI","PlhKu","VR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VR],[PlhKu],[PlhKu,VR],[UI],[UI,VR],[UI,PlhKu],[UI,PlhKu,VR],[pxFbv],[pxFbv,VR],[pxFbv,PlhKu],[pxFbv,PlhKu,VR],[pxFbv,UI],[pxFbv,UI,VR],[pxFbv,UI,PlhKu],[pxFbv,UI,PlhKu,VR],[p],[p,VR],[p,PlhKu],[p,PlhKu,VR],[p,UI],[p,UI,VR],[p,UI,PlhKu],[p,UI,PlhKu,VR],[p,pxFbv],[p,pxFbv,VR],[p,pxFbv,PlhKu],[p,pxFbv,PlhKu,VR],[p,pxFbv,UI],[p,pxFbv,UI,VR],[p,pxFbv,UI,PlhKu],[p,pxFbv,UI,PlhKu,VR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2790() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2791() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sc","b","t","Mza","mYI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mYI],[Mza],[Mza,mYI],[t],[t,mYI],[t,Mza],[t,Mza,mYI],[b],[b,mYI],[b,Mza],[b,Mza,mYI],[b,t],[b,t,mYI],[b,t,Mza],[b,t,Mza,mYI],[Sc],[Sc,mYI],[Sc,Mza],[Sc,Mza,mYI],[Sc,t],[Sc,t,mYI],[Sc,t,Mza],[Sc,t,Mza,mYI],[Sc,b],[Sc,b,mYI],[Sc,b,Mza],[Sc,b,Mza,mYI],[Sc,b,t],[Sc,b,t,mYI],[Sc,b,t,Mza],[Sc,b,t,Mza,mYI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2792() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","iaq","FqCYc","DBk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DBk],[FqCYc],[FqCYc,DBk],[iaq],[iaq,DBk],[iaq,FqCYc],[iaq,FqCYc,DBk],[V],[V,DBk],[V,FqCYc],[V,FqCYc,DBk],[V,iaq],[V,iaq,DBk],[V,iaq,FqCYc],[V,iaq,FqCYc,DBk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2793() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "I","lh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lh],[I],[I,lh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2794() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OecOq","kZfIk","enQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[enQ],[kZfIk],[kZfIk,enQ],[OecOq],[OecOq,enQ],[OecOq,kZfIk],[OecOq,kZfIk,enQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2795() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h","I","Z","Mte")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mte],[Z],[Z,Mte],[I],[I,Mte],[I,Z],[I,Z,Mte],[h],[h,Mte],[h,Z],[h,Z,Mte],[h,I],[h,I,Mte],[h,I,Z],[h,I,Z,Mte]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2796() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CKsj","zlkj","eo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eo],[zlkj],[zlkj,eo],[CKsj],[CKsj,eo],[CKsj,zlkj],[CKsj,zlkj,eo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2797() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zOeXQ","PJ","yXz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yXz],[PJ],[PJ,yXz],[zOeXQ],[zOeXQ,yXz],[zOeXQ,PJ],[zOeXQ,PJ,yXz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2798() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dd","pIr","BnSL","k","YNYK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YNYK],[k],[k,YNYK],[BnSL],[BnSL,YNYK],[BnSL,k],[BnSL,k,YNYK],[pIr],[pIr,YNYK],[pIr,k],[pIr,k,YNYK],[pIr,BnSL],[pIr,BnSL,YNYK],[pIr,BnSL,k],[pIr,BnSL,k,YNYK],[dd],[dd,YNYK],[dd,k],[dd,k,YNYK],[dd,BnSL],[dd,BnSL,YNYK],[dd,BnSL,k],[dd,BnSL,k,YNYK],[dd,pIr],[dd,pIr,YNYK],[dd,pIr,k],[dd,pIr,k,YNYK],[dd,pIr,BnSL],[dd,pIr,BnSL,YNYK],[dd,pIr,BnSL,k],[dd,pIr,BnSL,k,YNYK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2799() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gMUpn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gMUpn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2800() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AS","lo","WfdZc","rOlJN","OX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OX],[rOlJN],[rOlJN,OX],[WfdZc],[WfdZc,OX],[WfdZc,rOlJN],[WfdZc,rOlJN,OX],[lo],[lo,OX],[lo,rOlJN],[lo,rOlJN,OX],[lo,WfdZc],[lo,WfdZc,OX],[lo,WfdZc,rOlJN],[lo,WfdZc,rOlJN,OX],[AS],[AS,OX],[AS,rOlJN],[AS,rOlJN,OX],[AS,WfdZc],[AS,WfdZc,OX],[AS,WfdZc,rOlJN],[AS,WfdZc,rOlJN,OX],[AS,lo],[AS,lo,OX],[AS,lo,rOlJN],[AS,lo,rOlJN,OX],[AS,lo,WfdZc],[AS,lo,WfdZc,OX],[AS,lo,WfdZc,rOlJN],[AS,lo,WfdZc,rOlJN,OX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2801() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PrzbF","Hi","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[Hi],[Hi,W],[PrzbF],[PrzbF,W],[PrzbF,Hi],[PrzbF,Hi,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2802() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JdA","kSHO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kSHO],[JdA],[JdA,kSHO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2803() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eVS","hg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hg],[eVS],[eVS,hg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2804() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vh","owqvM","Ttu","WySCi","REfjF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[REfjF],[WySCi],[WySCi,REfjF],[Ttu],[Ttu,REfjF],[Ttu,WySCi],[Ttu,WySCi,REfjF],[owqvM],[owqvM,REfjF],[owqvM,WySCi],[owqvM,WySCi,REfjF],[owqvM,Ttu],[owqvM,Ttu,REfjF],[owqvM,Ttu,WySCi],[owqvM,Ttu,WySCi,REfjF],[Vh],[Vh,REfjF],[Vh,WySCi],[Vh,WySCi,REfjF],[Vh,Ttu],[Vh,Ttu,REfjF],[Vh,Ttu,WySCi],[Vh,Ttu,WySCi,REfjF],[Vh,owqvM],[Vh,owqvM,REfjF],[Vh,owqvM,WySCi],[Vh,owqvM,WySCi,REfjF],[Vh,owqvM,Ttu],[Vh,owqvM,Ttu,REfjF],[Vh,owqvM,Ttu,WySCi],[Vh,owqvM,Ttu,WySCi,REfjF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2805() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ylt","ZTsno")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZTsno],[ylt],[ylt,ZTsno]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2806() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ePbvb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ePbvb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2807() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hJX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hJX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2808() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[c]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2809() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","Duv","oqJ","WR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WR],[oqJ],[oqJ,WR],[Duv],[Duv,WR],[Duv,oqJ],[Duv,oqJ,WR],[c],[c,WR],[c,oqJ],[c,oqJ,WR],[c,Duv],[c,Duv,WR],[c,Duv,oqJ],[c,Duv,oqJ,WR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2810() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ufd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ufd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2811() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dbOrL","E","h","awP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[awP],[h],[h,awP],[E],[E,awP],[E,h],[E,h,awP],[dbOrL],[dbOrL,awP],[dbOrL,h],[dbOrL,h,awP],[dbOrL,E],[dbOrL,E,awP],[dbOrL,E,h],[dbOrL,E,h,awP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2812() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "N","aAiSR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aAiSR],[N],[N,aAiSR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2813() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VYYE","nf","kd","tQIvM","mUnDt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mUnDt],[tQIvM],[tQIvM,mUnDt],[kd],[kd,mUnDt],[kd,tQIvM],[kd,tQIvM,mUnDt],[nf],[nf,mUnDt],[nf,tQIvM],[nf,tQIvM,mUnDt],[nf,kd],[nf,kd,mUnDt],[nf,kd,tQIvM],[nf,kd,tQIvM,mUnDt],[VYYE],[VYYE,mUnDt],[VYYE,tQIvM],[VYYE,tQIvM,mUnDt],[VYYE,kd],[VYYE,kd,mUnDt],[VYYE,kd,tQIvM],[VYYE,kd,tQIvM,mUnDt],[VYYE,nf],[VYYE,nf,mUnDt],[VYYE,nf,tQIvM],[VYYE,nf,tQIvM,mUnDt],[VYYE,nf,kd],[VYYE,nf,kd,mUnDt],[VYYE,nf,kd,tQIvM],[VYYE,nf,kd,tQIvM,mUnDt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2814() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Itk","s","KdIWP","hB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hB],[KdIWP],[KdIWP,hB],[s],[s,hB],[s,KdIWP],[s,KdIWP,hB],[Itk],[Itk,hB],[Itk,KdIWP],[Itk,KdIWP,hB],[Itk,s],[Itk,s,hB],[Itk,s,KdIWP],[Itk,s,KdIWP,hB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2815() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gyR","S","io","jT","RQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RQ],[jT],[jT,RQ],[io],[io,RQ],[io,jT],[io,jT,RQ],[S],[S,RQ],[S,jT],[S,jT,RQ],[S,io],[S,io,RQ],[S,io,jT],[S,io,jT,RQ],[gyR],[gyR,RQ],[gyR,jT],[gyR,jT,RQ],[gyR,io],[gyR,io,RQ],[gyR,io,jT],[gyR,io,jT,RQ],[gyR,S],[gyR,S,RQ],[gyR,S,jT],[gyR,S,jT,RQ],[gyR,S,io],[gyR,S,io,RQ],[gyR,S,io,jT],[gyR,S,io,jT,RQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2816() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FcsH","nnlFO","ySGQI","PAvM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PAvM],[ySGQI],[ySGQI,PAvM],[nnlFO],[nnlFO,PAvM],[nnlFO,ySGQI],[nnlFO,ySGQI,PAvM],[FcsH],[FcsH,PAvM],[FcsH,ySGQI],[FcsH,ySGQI,PAvM],[FcsH,nnlFO],[FcsH,nnlFO,PAvM],[FcsH,nnlFO,ySGQI],[FcsH,nnlFO,ySGQI,PAvM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2817() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lle","L","ZQpyG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZQpyG],[L],[L,ZQpyG],[lle],[lle,ZQpyG],[lle,L],[lle,L,ZQpyG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2818() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yhHv","YSCW","I","cB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cB],[I],[I,cB],[YSCW],[YSCW,cB],[YSCW,I],[YSCW,I,cB],[yhHv],[yhHv,cB],[yhHv,I],[yhHv,I,cB],[yhHv,YSCW],[yhHv,YSCW,cB],[yhHv,YSCW,I],[yhHv,YSCW,I,cB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2819() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","eDGXt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eDGXt],[R],[R,eDGXt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2820() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xJI","DAzb","XPGkS","OKhZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OKhZ],[XPGkS],[XPGkS,OKhZ],[DAzb],[DAzb,OKhZ],[DAzb,XPGkS],[DAzb,XPGkS,OKhZ],[xJI],[xJI,OKhZ],[xJI,XPGkS],[xJI,XPGkS,OKhZ],[xJI,DAzb],[xJI,DAzb,OKhZ],[xJI,DAzb,XPGkS],[xJI,DAzb,XPGkS,OKhZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2821() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rpsmt","VyFX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VyFX],[Rpsmt],[Rpsmt,VyFX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2822() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pEc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pEc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2823() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PCD","Ef","t","kHH","qXCT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qXCT],[kHH],[kHH,qXCT],[t],[t,qXCT],[t,kHH],[t,kHH,qXCT],[Ef],[Ef,qXCT],[Ef,kHH],[Ef,kHH,qXCT],[Ef,t],[Ef,t,qXCT],[Ef,t,kHH],[Ef,t,kHH,qXCT],[PCD],[PCD,qXCT],[PCD,kHH],[PCD,kHH,qXCT],[PCD,t],[PCD,t,qXCT],[PCD,t,kHH],[PCD,t,kHH,qXCT],[PCD,Ef],[PCD,Ef,qXCT],[PCD,Ef,kHH],[PCD,Ef,kHH,qXCT],[PCD,Ef,t],[PCD,Ef,t,qXCT],[PCD,Ef,t,kHH],[PCD,Ef,t,kHH,qXCT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2824() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rs","SELuV","CAJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CAJ],[SELuV],[SELuV,CAJ],[rs],[rs,CAJ],[rs,SELuV],[rs,SELuV,CAJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2825() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pvge","nLuUh","juBp","PpABW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PpABW],[juBp],[juBp,PpABW],[nLuUh],[nLuUh,PpABW],[nLuUh,juBp],[nLuUh,juBp,PpABW],[pvge],[pvge,PpABW],[pvge,juBp],[pvge,juBp,PpABW],[pvge,nLuUh],[pvge,nLuUh,PpABW],[pvge,nLuUh,juBp],[pvge,nLuUh,juBp,PpABW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2826() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lSJ","U","MNN","noAvS","zim")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zim],[noAvS],[noAvS,zim],[MNN],[MNN,zim],[MNN,noAvS],[MNN,noAvS,zim],[U],[U,zim],[U,noAvS],[U,noAvS,zim],[U,MNN],[U,MNN,zim],[U,MNN,noAvS],[U,MNN,noAvS,zim],[lSJ],[lSJ,zim],[lSJ,noAvS],[lSJ,noAvS,zim],[lSJ,MNN],[lSJ,MNN,zim],[lSJ,MNN,noAvS],[lSJ,MNN,noAvS,zim],[lSJ,U],[lSJ,U,zim],[lSJ,U,noAvS],[lSJ,U,noAvS,zim],[lSJ,U,MNN],[lSJ,U,MNN,zim],[lSJ,U,MNN,noAvS],[lSJ,U,MNN,noAvS,zim]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2827() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QBik","MBm","yKgUG","ohV","ELc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ELc],[ohV],[ohV,ELc],[yKgUG],[yKgUG,ELc],[yKgUG,ohV],[yKgUG,ohV,ELc],[MBm],[MBm,ELc],[MBm,ohV],[MBm,ohV,ELc],[MBm,yKgUG],[MBm,yKgUG,ELc],[MBm,yKgUG,ohV],[MBm,yKgUG,ohV,ELc],[QBik],[QBik,ELc],[QBik,ohV],[QBik,ohV,ELc],[QBik,yKgUG],[QBik,yKgUG,ELc],[QBik,yKgUG,ohV],[QBik,yKgUG,ohV,ELc],[QBik,MBm],[QBik,MBm,ELc],[QBik,MBm,ohV],[QBik,MBm,ohV,ELc],[QBik,MBm,yKgUG],[QBik,MBm,yKgUG,ELc],[QBik,MBm,yKgUG,ohV],[QBik,MBm,yKgUG,ohV,ELc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2828() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oC","j","oLX","iE","ok")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ok],[iE],[iE,ok],[oLX],[oLX,ok],[oLX,iE],[oLX,iE,ok],[j],[j,ok],[j,iE],[j,iE,ok],[j,oLX],[j,oLX,ok],[j,oLX,iE],[j,oLX,iE,ok],[oC],[oC,ok],[oC,iE],[oC,iE,ok],[oC,oLX],[oC,oLX,ok],[oC,oLX,iE],[oC,oLX,iE,ok],[oC,j],[oC,j,ok],[oC,j,iE],[oC,j,iE,ok],[oC,j,oLX],[oC,j,oLX,ok],[oC,j,oLX,iE],[oC,j,oLX,iE,ok]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2829() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xFvK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xFvK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2830() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","JLK","QL","so")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[so],[QL],[QL,so],[JLK],[JLK,so],[JLK,QL],[JLK,QL,so],[w],[w,so],[w,QL],[w,QL,so],[w,JLK],[w,JLK,so],[w,JLK,QL],[w,JLK,QL,so]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2831() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YYx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YYx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2832() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rJb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rJb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2833() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dqo","Ei","wU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wU],[Ei],[Ei,wU],[dqo],[dqo,wU],[dqo,Ei],[dqo,Ei,wU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2834() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vni")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vni]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2835() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WxAk","ZdB","MwMK","OKFB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OKFB],[MwMK],[MwMK,OKFB],[ZdB],[ZdB,OKFB],[ZdB,MwMK],[ZdB,MwMK,OKFB],[WxAk],[WxAk,OKFB],[WxAk,MwMK],[WxAk,MwMK,OKFB],[WxAk,ZdB],[WxAk,ZdB,OKFB],[WxAk,ZdB,MwMK],[WxAk,ZdB,MwMK,OKFB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2836() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qCwQ","HHiD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HHiD],[qCwQ],[qCwQ,HHiD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2837() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yu","rYRc","nkFJs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nkFJs],[rYRc],[rYRc,nkFJs],[yu],[yu,nkFJs],[yu,rYRc],[yu,rYRc,nkFJs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2838() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xYT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xYT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2839() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XD","Pwd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pwd],[XD],[XD,Pwd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2840() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "skjI","B","sY","HnExk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HnExk],[sY],[sY,HnExk],[B],[B,HnExk],[B,sY],[B,sY,HnExk],[skjI],[skjI,HnExk],[skjI,sY],[skjI,sY,HnExk],[skjI,B],[skjI,B,HnExk],[skjI,B,sY],[skjI,B,sY,HnExk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2841() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tOsrc","s","T","ASM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ASM],[T],[T,ASM],[s],[s,ASM],[s,T],[s,T,ASM],[tOsrc],[tOsrc,ASM],[tOsrc,T],[tOsrc,T,ASM],[tOsrc,s],[tOsrc,s,ASM],[tOsrc,s,T],[tOsrc,s,T,ASM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2842() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yFMNI","dcVF","r")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[r],[dcVF],[dcVF,r],[yFMNI],[yFMNI,r],[yFMNI,dcVF],[yFMNI,dcVF,r]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2843() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sdR","yJlG","tn","J","BA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BA],[J],[J,BA],[tn],[tn,BA],[tn,J],[tn,J,BA],[yJlG],[yJlG,BA],[yJlG,J],[yJlG,J,BA],[yJlG,tn],[yJlG,tn,BA],[yJlG,tn,J],[yJlG,tn,J,BA],[sdR],[sdR,BA],[sdR,J],[sdR,J,BA],[sdR,tn],[sdR,tn,BA],[sdR,tn,J],[sdR,tn,J,BA],[sdR,yJlG],[sdR,yJlG,BA],[sdR,yJlG,J],[sdR,yJlG,J,BA],[sdR,yJlG,tn],[sdR,yJlG,tn,BA],[sdR,yJlG,tn,J],[sdR,yJlG,tn,J,BA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2844() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KhZ","Da","wMB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wMB],[Da],[Da,wMB],[KhZ],[KhZ,wMB],[KhZ,Da],[KhZ,Da,wMB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2845() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xOW","QixjN","OEAR","TDDlt","HGCX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HGCX],[TDDlt],[TDDlt,HGCX],[OEAR],[OEAR,HGCX],[OEAR,TDDlt],[OEAR,TDDlt,HGCX],[QixjN],[QixjN,HGCX],[QixjN,TDDlt],[QixjN,TDDlt,HGCX],[QixjN,OEAR],[QixjN,OEAR,HGCX],[QixjN,OEAR,TDDlt],[QixjN,OEAR,TDDlt,HGCX],[xOW],[xOW,HGCX],[xOW,TDDlt],[xOW,TDDlt,HGCX],[xOW,OEAR],[xOW,OEAR,HGCX],[xOW,OEAR,TDDlt],[xOW,OEAR,TDDlt,HGCX],[xOW,QixjN],[xOW,QixjN,HGCX],[xOW,QixjN,TDDlt],[xOW,QixjN,TDDlt,HGCX],[xOW,QixjN,OEAR],[xOW,QixjN,OEAR,HGCX],[xOW,QixjN,OEAR,TDDlt],[xOW,QixjN,OEAR,TDDlt,HGCX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2846() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KfMio")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KfMio]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2847() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Do","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[Do],[Do,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2848() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jOoz","H","Vc","qUB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qUB],[Vc],[Vc,qUB],[H],[H,qUB],[H,Vc],[H,Vc,qUB],[jOoz],[jOoz,qUB],[jOoz,Vc],[jOoz,Vc,qUB],[jOoz,H],[jOoz,H,qUB],[jOoz,H,Vc],[jOoz,H,Vc,qUB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2849() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NzN","ksC","gu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gu],[ksC],[ksC,gu],[NzN],[NzN,gu],[NzN,ksC],[NzN,ksC,gu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2850() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VIS","LmnC","d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d],[LmnC],[LmnC,d],[VIS],[VIS,d],[VIS,LmnC],[VIS,LmnC,d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2851() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NS","FuQDX","vhM","CXO","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[CXO],[CXO,M],[vhM],[vhM,M],[vhM,CXO],[vhM,CXO,M],[FuQDX],[FuQDX,M],[FuQDX,CXO],[FuQDX,CXO,M],[FuQDX,vhM],[FuQDX,vhM,M],[FuQDX,vhM,CXO],[FuQDX,vhM,CXO,M],[NS],[NS,M],[NS,CXO],[NS,CXO,M],[NS,vhM],[NS,vhM,M],[NS,vhM,CXO],[NS,vhM,CXO,M],[NS,FuQDX],[NS,FuQDX,M],[NS,FuQDX,CXO],[NS,FuQDX,CXO,M],[NS,FuQDX,vhM],[NS,FuQDX,vhM,M],[NS,FuQDX,vhM,CXO],[NS,FuQDX,vhM,CXO,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2852() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QbN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QbN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2853() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ovg","uH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uH],[Ovg],[Ovg,uH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2854() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yfQv","ZqkWe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZqkWe],[yfQv],[yfQv,ZqkWe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2855() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2856() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TBJvl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TBJvl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2857() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TGX","QLUbg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QLUbg],[TGX],[TGX,QLUbg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2858() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dJRv","hM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hM],[dJRv],[dJRv,hM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2859() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "msA","wbIEx","Wb","aM","cDfOG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cDfOG],[aM],[aM,cDfOG],[Wb],[Wb,cDfOG],[Wb,aM],[Wb,aM,cDfOG],[wbIEx],[wbIEx,cDfOG],[wbIEx,aM],[wbIEx,aM,cDfOG],[wbIEx,Wb],[wbIEx,Wb,cDfOG],[wbIEx,Wb,aM],[wbIEx,Wb,aM,cDfOG],[msA],[msA,cDfOG],[msA,aM],[msA,aM,cDfOG],[msA,Wb],[msA,Wb,cDfOG],[msA,Wb,aM],[msA,Wb,aM,cDfOG],[msA,wbIEx],[msA,wbIEx,cDfOG],[msA,wbIEx,aM],[msA,wbIEx,aM,cDfOG],[msA,wbIEx,Wb],[msA,wbIEx,Wb,cDfOG],[msA,wbIEx,Wb,aM],[msA,wbIEx,Wb,aM,cDfOG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2860() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YgQt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YgQt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2861() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hGkN","ZYMM","LsPW","fWAP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fWAP],[LsPW],[LsPW,fWAP],[ZYMM],[ZYMM,fWAP],[ZYMM,LsPW],[ZYMM,LsPW,fWAP],[hGkN],[hGkN,fWAP],[hGkN,LsPW],[hGkN,LsPW,fWAP],[hGkN,ZYMM],[hGkN,ZYMM,fWAP],[hGkN,ZYMM,LsPW],[hGkN,ZYMM,LsPW,fWAP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2862() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ImXjt","tcxpb","Yd","Xjl","AhVdp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AhVdp],[Xjl],[Xjl,AhVdp],[Yd],[Yd,AhVdp],[Yd,Xjl],[Yd,Xjl,AhVdp],[tcxpb],[tcxpb,AhVdp],[tcxpb,Xjl],[tcxpb,Xjl,AhVdp],[tcxpb,Yd],[tcxpb,Yd,AhVdp],[tcxpb,Yd,Xjl],[tcxpb,Yd,Xjl,AhVdp],[ImXjt],[ImXjt,AhVdp],[ImXjt,Xjl],[ImXjt,Xjl,AhVdp],[ImXjt,Yd],[ImXjt,Yd,AhVdp],[ImXjt,Yd,Xjl],[ImXjt,Yd,Xjl,AhVdp],[ImXjt,tcxpb],[ImXjt,tcxpb,AhVdp],[ImXjt,tcxpb,Xjl],[ImXjt,tcxpb,Xjl,AhVdp],[ImXjt,tcxpb,Yd],[ImXjt,tcxpb,Yd,AhVdp],[ImXjt,tcxpb,Yd,Xjl],[ImXjt,tcxpb,Yd,Xjl,AhVdp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2863() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NvI","JWzO","gl","vDMw","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[vDMw],[vDMw,O],[gl],[gl,O],[gl,vDMw],[gl,vDMw,O],[JWzO],[JWzO,O],[JWzO,vDMw],[JWzO,vDMw,O],[JWzO,gl],[JWzO,gl,O],[JWzO,gl,vDMw],[JWzO,gl,vDMw,O],[NvI],[NvI,O],[NvI,vDMw],[NvI,vDMw,O],[NvI,gl],[NvI,gl,O],[NvI,gl,vDMw],[NvI,gl,vDMw,O],[NvI,JWzO],[NvI,JWzO,O],[NvI,JWzO,vDMw],[NvI,JWzO,vDMw,O],[NvI,JWzO,gl],[NvI,JWzO,gl,O],[NvI,JWzO,gl,vDMw],[NvI,JWzO,gl,vDMw,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2864() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","FUAn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FUAn],[d],[d,FUAn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2865() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "usy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[usy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2866() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BYkai","WasW","Bgk","GfKV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GfKV],[Bgk],[Bgk,GfKV],[WasW],[WasW,GfKV],[WasW,Bgk],[WasW,Bgk,GfKV],[BYkai],[BYkai,GfKV],[BYkai,Bgk],[BYkai,Bgk,GfKV],[BYkai,WasW],[BYkai,WasW,GfKV],[BYkai,WasW,Bgk],[BYkai,WasW,Bgk,GfKV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2867() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","mCXSf","gKQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gKQ],[mCXSf],[mCXSf,gKQ],[B],[B,gKQ],[B,mCXSf],[B,mCXSf,gKQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2868() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DWNKS","x","DKb","es")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[es],[DKb],[DKb,es],[x],[x,es],[x,DKb],[x,DKb,es],[DWNKS],[DWNKS,es],[DWNKS,DKb],[DWNKS,DKb,es],[DWNKS,x],[DWNKS,x,es],[DWNKS,x,DKb],[DWNKS,x,DKb,es]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2869() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IqiWo","a","njQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[njQ],[a],[a,njQ],[IqiWo],[IqiWo,njQ],[IqiWo,a],[IqiWo,a,njQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2870() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EOCKl","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[EOCKl],[EOCKl,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2871() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2872() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rstW","S","Giw","wNfA","Rp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rp],[wNfA],[wNfA,Rp],[Giw],[Giw,Rp],[Giw,wNfA],[Giw,wNfA,Rp],[S],[S,Rp],[S,wNfA],[S,wNfA,Rp],[S,Giw],[S,Giw,Rp],[S,Giw,wNfA],[S,Giw,wNfA,Rp],[rstW],[rstW,Rp],[rstW,wNfA],[rstW,wNfA,Rp],[rstW,Giw],[rstW,Giw,Rp],[rstW,Giw,wNfA],[rstW,Giw,wNfA,Rp],[rstW,S],[rstW,S,Rp],[rstW,S,wNfA],[rstW,S,wNfA,Rp],[rstW,S,Giw],[rstW,S,Giw,Rp],[rstW,S,Giw,wNfA],[rstW,S,Giw,wNfA,Rp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2873() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RihG","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[RihG],[RihG,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2874() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ydk","ZA","IKQg","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[IKQg],[IKQg,j],[ZA],[ZA,j],[ZA,IKQg],[ZA,IKQg,j],[Ydk],[Ydk,j],[Ydk,IKQg],[Ydk,IKQg,j],[Ydk,ZA],[Ydk,ZA,j],[Ydk,ZA,IKQg],[Ydk,ZA,IKQg,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2875() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NQNUJ","V","wotK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wotK],[V],[V,wotK],[NQNUJ],[NQNUJ,wotK],[NQNUJ,V],[NQNUJ,V,wotK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2876() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cWhp","KSvN","Dj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dj],[KSvN],[KSvN,Dj],[cWhp],[cWhp,Dj],[cWhp,KSvN],[cWhp,KSvN,Dj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2877() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hA","zFG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zFG],[hA],[hA,zFG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2878() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UJz","mrHUe","SxNiu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SxNiu],[mrHUe],[mrHUe,SxNiu],[UJz],[UJz,SxNiu],[UJz,mrHUe],[UJz,mrHUe,SxNiu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2879() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lkp","GQM","lbhj","DR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DR],[lbhj],[lbhj,DR],[GQM],[GQM,DR],[GQM,lbhj],[GQM,lbhj,DR],[Lkp],[Lkp,DR],[Lkp,lbhj],[Lkp,lbhj,DR],[Lkp,GQM],[Lkp,GQM,DR],[Lkp,GQM,lbhj],[Lkp,GQM,lbhj,DR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2880() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rfncf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rfncf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2881() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","PJo","TGLY","H","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[H],[H,h],[TGLY],[TGLY,h],[TGLY,H],[TGLY,H,h],[PJo],[PJo,h],[PJo,H],[PJo,H,h],[PJo,TGLY],[PJo,TGLY,h],[PJo,TGLY,H],[PJo,TGLY,H,h],[Q],[Q,h],[Q,H],[Q,H,h],[Q,TGLY],[Q,TGLY,h],[Q,TGLY,H],[Q,TGLY,H,h],[Q,PJo],[Q,PJo,h],[Q,PJo,H],[Q,PJo,H,h],[Q,PJo,TGLY],[Q,PJo,TGLY,h],[Q,PJo,TGLY,H],[Q,PJo,TGLY,H,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2882() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ScNa","mAoRB","vgH","nwr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nwr],[vgH],[vgH,nwr],[mAoRB],[mAoRB,nwr],[mAoRB,vgH],[mAoRB,vgH,nwr],[ScNa],[ScNa,nwr],[ScNa,vgH],[ScNa,vgH,nwr],[ScNa,mAoRB],[ScNa,mAoRB,nwr],[ScNa,mAoRB,vgH],[ScNa,mAoRB,vgH,nwr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2883() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MuX","GTErR","g","jLFfS","sUnsl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sUnsl],[jLFfS],[jLFfS,sUnsl],[g],[g,sUnsl],[g,jLFfS],[g,jLFfS,sUnsl],[GTErR],[GTErR,sUnsl],[GTErR,jLFfS],[GTErR,jLFfS,sUnsl],[GTErR,g],[GTErR,g,sUnsl],[GTErR,g,jLFfS],[GTErR,g,jLFfS,sUnsl],[MuX],[MuX,sUnsl],[MuX,jLFfS],[MuX,jLFfS,sUnsl],[MuX,g],[MuX,g,sUnsl],[MuX,g,jLFfS],[MuX,g,jLFfS,sUnsl],[MuX,GTErR],[MuX,GTErR,sUnsl],[MuX,GTErR,jLFfS],[MuX,GTErR,jLFfS,sUnsl],[MuX,GTErR,g],[MuX,GTErR,g,sUnsl],[MuX,GTErR,g,jLFfS],[MuX,GTErR,g,jLFfS,sUnsl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2884() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","yXhus")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yXhus],[q],[q,yXhus]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2885() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GgciN","PEJ","kyr","ifiaF","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[ifiaF],[ifiaF,k],[kyr],[kyr,k],[kyr,ifiaF],[kyr,ifiaF,k],[PEJ],[PEJ,k],[PEJ,ifiaF],[PEJ,ifiaF,k],[PEJ,kyr],[PEJ,kyr,k],[PEJ,kyr,ifiaF],[PEJ,kyr,ifiaF,k],[GgciN],[GgciN,k],[GgciN,ifiaF],[GgciN,ifiaF,k],[GgciN,kyr],[GgciN,kyr,k],[GgciN,kyr,ifiaF],[GgciN,kyr,ifiaF,k],[GgciN,PEJ],[GgciN,PEJ,k],[GgciN,PEJ,ifiaF],[GgciN,PEJ,ifiaF,k],[GgciN,PEJ,kyr],[GgciN,PEJ,kyr,k],[GgciN,PEJ,kyr,ifiaF],[GgciN,PEJ,kyr,ifiaF,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2886() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","adfiR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[adfiR],[V],[V,adfiR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2887() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MRzK","Yu","kz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kz],[Yu],[Yu,kz],[MRzK],[MRzK,kz],[MRzK,Yu],[MRzK,Yu,kz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2888() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "czFYE","TFzAx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TFzAx],[czFYE],[czFYE,TFzAx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2889() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SBY","hd","Ctpuq","O","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[O],[O,o],[Ctpuq],[Ctpuq,o],[Ctpuq,O],[Ctpuq,O,o],[hd],[hd,o],[hd,O],[hd,O,o],[hd,Ctpuq],[hd,Ctpuq,o],[hd,Ctpuq,O],[hd,Ctpuq,O,o],[SBY],[SBY,o],[SBY,O],[SBY,O,o],[SBY,Ctpuq],[SBY,Ctpuq,o],[SBY,Ctpuq,O],[SBY,Ctpuq,O,o],[SBY,hd],[SBY,hd,o],[SBY,hd,O],[SBY,hd,O,o],[SBY,hd,Ctpuq],[SBY,hd,Ctpuq,o],[SBY,hd,Ctpuq,O],[SBY,hd,Ctpuq,O,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2890() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2891() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aSk","lgFh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lgFh],[aSk],[aSk,lgFh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2892() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iCYb","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[iCYb],[iCYb,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2893() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zm","s","fxH","LdYj","EujVi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EujVi],[LdYj],[LdYj,EujVi],[fxH],[fxH,EujVi],[fxH,LdYj],[fxH,LdYj,EujVi],[s],[s,EujVi],[s,LdYj],[s,LdYj,EujVi],[s,fxH],[s,fxH,EujVi],[s,fxH,LdYj],[s,fxH,LdYj,EujVi],[zm],[zm,EujVi],[zm,LdYj],[zm,LdYj,EujVi],[zm,fxH],[zm,fxH,EujVi],[zm,fxH,LdYj],[zm,fxH,LdYj,EujVi],[zm,s],[zm,s,EujVi],[zm,s,LdYj],[zm,s,LdYj,EujVi],[zm,s,fxH],[zm,s,fxH,EujVi],[zm,s,fxH,LdYj],[zm,s,fxH,LdYj,EujVi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2894() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EYW","cJ","CawWB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CawWB],[cJ],[cJ,CawWB],[EYW],[EYW,CawWB],[EYW,cJ],[EYW,cJ,CawWB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2895() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hy","Ekav")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ekav],[hy],[hy,Ekav]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2896() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jfQuQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jfQuQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2897() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[B]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2898() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UhkcO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UhkcO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2899() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qJHu","HFtEb","ccPFt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ccPFt],[HFtEb],[HFtEb,ccPFt],[qJHu],[qJHu,ccPFt],[qJHu,HFtEb],[qJHu,HFtEb,ccPFt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2900() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","Ul","ayebI","oj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oj],[ayebI],[ayebI,oj],[Ul],[Ul,oj],[Ul,ayebI],[Ul,ayebI,oj],[D],[D,oj],[D,ayebI],[D,ayebI,oj],[D,Ul],[D,Ul,oj],[D,Ul,ayebI],[D,Ul,ayebI,oj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2901() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2902() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bop","S","OI","uP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uP],[OI],[OI,uP],[S],[S,uP],[S,OI],[S,OI,uP],[Bop],[Bop,uP],[Bop,OI],[Bop,OI,uP],[Bop,S],[Bop,S,uP],[Bop,S,OI],[Bop,S,OI,uP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2903() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EQJm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EQJm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2904() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pcuPI","SZJJo","udVL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[udVL],[SZJJo],[SZJJo,udVL],[pcuPI],[pcuPI,udVL],[pcuPI,SZJJo],[pcuPI,SZJJo,udVL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2905() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nFjW","nnrA","xqkYh","mgx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mgx],[xqkYh],[xqkYh,mgx],[nnrA],[nnrA,mgx],[nnrA,xqkYh],[nnrA,xqkYh,mgx],[nFjW],[nFjW,mgx],[nFjW,xqkYh],[nFjW,xqkYh,mgx],[nFjW,nnrA],[nFjW,nnrA,mgx],[nFjW,nnrA,xqkYh],[nFjW,nnrA,xqkYh,mgx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2906() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2907() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uK","xq","UzfF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UzfF],[xq],[xq,UzfF],[uK],[uK,UzfF],[uK,xq],[uK,xq,UzfF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2908() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ednBG","VMD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VMD],[ednBG],[ednBG,VMD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2909() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VY","qv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qv],[VY],[VY,qv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2910() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DfvoC","Am","oLlm","aId","MsE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MsE],[aId],[aId,MsE],[oLlm],[oLlm,MsE],[oLlm,aId],[oLlm,aId,MsE],[Am],[Am,MsE],[Am,aId],[Am,aId,MsE],[Am,oLlm],[Am,oLlm,MsE],[Am,oLlm,aId],[Am,oLlm,aId,MsE],[DfvoC],[DfvoC,MsE],[DfvoC,aId],[DfvoC,aId,MsE],[DfvoC,oLlm],[DfvoC,oLlm,MsE],[DfvoC,oLlm,aId],[DfvoC,oLlm,aId,MsE],[DfvoC,Am],[DfvoC,Am,MsE],[DfvoC,Am,aId],[DfvoC,Am,aId,MsE],[DfvoC,Am,oLlm],[DfvoC,Am,oLlm,MsE],[DfvoC,Am,oLlm,aId],[DfvoC,Am,oLlm,aId,MsE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2911() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "x","AEqb","ris")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ris],[AEqb],[AEqb,ris],[x],[x,ris],[x,AEqb],[x,AEqb,ris]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2912() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","L","adB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[adB],[L],[L,adB],[F],[F,adB],[F,L],[F,L,adB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2913() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ohck","xGj","MeQX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MeQX],[xGj],[xGj,MeQX],[ohck],[ohck,MeQX],[ohck,xGj],[ohck,xGj,MeQX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2914() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UKEqo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UKEqo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2915() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","wHWE","Dju")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dju],[wHWE],[wHWE,Dju],[g],[g,Dju],[g,wHWE],[g,wHWE,Dju]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2916() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gzU","alNy","OxIz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OxIz],[alNy],[alNy,OxIz],[gzU],[gzU,OxIz],[gzU,alNy],[gzU,alNy,OxIz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2917() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nDjt","rp","hyO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hyO],[rp],[rp,hyO],[nDjt],[nDjt,hyO],[nDjt,rp],[nDjt,rp,hyO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2918() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zHI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zHI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2919() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qzl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qzl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2920() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","j","GrPMN","fc","cp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cp],[fc],[fc,cp],[GrPMN],[GrPMN,cp],[GrPMN,fc],[GrPMN,fc,cp],[j],[j,cp],[j,fc],[j,fc,cp],[j,GrPMN],[j,GrPMN,cp],[j,GrPMN,fc],[j,GrPMN,fc,cp],[r],[r,cp],[r,fc],[r,fc,cp],[r,GrPMN],[r,GrPMN,cp],[r,GrPMN,fc],[r,GrPMN,fc,cp],[r,j],[r,j,cp],[r,j,fc],[r,j,fc,cp],[r,j,GrPMN],[r,j,GrPMN,cp],[r,j,GrPMN,fc],[r,j,GrPMN,fc,cp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2921() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2922() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sSLDF","v","Ul","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[Ul],[Ul,m],[v],[v,m],[v,Ul],[v,Ul,m],[sSLDF],[sSLDF,m],[sSLDF,Ul],[sSLDF,Ul,m],[sSLDF,v],[sSLDF,v,m],[sSLDF,v,Ul],[sSLDF,v,Ul,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2923() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ui","jfz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jfz],[ui],[ui,jfz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2924() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vi","gcf","TeVM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TeVM],[gcf],[gcf,TeVM],[vi],[vi,TeVM],[vi,gcf],[vi,gcf,TeVM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2925() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2926() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rs","SxLrF","qf","qyit","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[qyit],[qyit,Y],[qf],[qf,Y],[qf,qyit],[qf,qyit,Y],[SxLrF],[SxLrF,Y],[SxLrF,qyit],[SxLrF,qyit,Y],[SxLrF,qf],[SxLrF,qf,Y],[SxLrF,qf,qyit],[SxLrF,qf,qyit,Y],[Rs],[Rs,Y],[Rs,qyit],[Rs,qyit,Y],[Rs,qf],[Rs,qf,Y],[Rs,qf,qyit],[Rs,qf,qyit,Y],[Rs,SxLrF],[Rs,SxLrF,Y],[Rs,SxLrF,qyit],[Rs,SxLrF,qyit,Y],[Rs,SxLrF,qf],[Rs,SxLrF,qf,Y],[Rs,SxLrF,qf,qyit],[Rs,SxLrF,qf,qyit,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2927() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","OPTTS","mL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mL],[OPTTS],[OPTTS,mL],[U],[U,mL],[U,OPTTS],[U,OPTTS,mL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2928() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","VZeea")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VZeea],[c],[c,VZeea]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2929() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LIT","azP","CtZa","z","xf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xf],[z],[z,xf],[CtZa],[CtZa,xf],[CtZa,z],[CtZa,z,xf],[azP],[azP,xf],[azP,z],[azP,z,xf],[azP,CtZa],[azP,CtZa,xf],[azP,CtZa,z],[azP,CtZa,z,xf],[LIT],[LIT,xf],[LIT,z],[LIT,z,xf],[LIT,CtZa],[LIT,CtZa,xf],[LIT,CtZa,z],[LIT,CtZa,z,xf],[LIT,azP],[LIT,azP,xf],[LIT,azP,z],[LIT,azP,z,xf],[LIT,azP,CtZa],[LIT,azP,CtZa,xf],[LIT,azP,CtZa,z],[LIT,azP,CtZa,z,xf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2930() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wJO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wJO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2931() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iyD","bdNRE","gT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gT],[bdNRE],[bdNRE,gT],[iyD],[iyD,gT],[iyD,bdNRE],[iyD,bdNRE,gT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2932() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","Nh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nh],[s],[s,Nh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2933() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QZqbl","Hj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hj],[QZqbl],[QZqbl,Hj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2934() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J","CA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CA],[J],[J,CA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2935() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BS","C","XKg","i","gA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gA],[i],[i,gA],[XKg],[XKg,gA],[XKg,i],[XKg,i,gA],[C],[C,gA],[C,i],[C,i,gA],[C,XKg],[C,XKg,gA],[C,XKg,i],[C,XKg,i,gA],[BS],[BS,gA],[BS,i],[BS,i,gA],[BS,XKg],[BS,XKg,gA],[BS,XKg,i],[BS,XKg,i,gA],[BS,C],[BS,C,gA],[BS,C,i],[BS,C,i,gA],[BS,C,XKg],[BS,C,XKg,gA],[BS,C,XKg,i],[BS,C,XKg,i,gA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2936() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "twqR","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[twqR],[twqR,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2937() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xx","Y","jD","aM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aM],[jD],[jD,aM],[Y],[Y,aM],[Y,jD],[Y,jD,aM],[Xx],[Xx,aM],[Xx,jD],[Xx,jD,aM],[Xx,Y],[Xx,Y,aM],[Xx,Y,jD],[Xx,Y,jD,aM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2938() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","C","HQft","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[HQft],[HQft,f],[C],[C,f],[C,HQft],[C,HQft,f],[p],[p,f],[p,HQft],[p,HQft,f],[p,C],[p,C,f],[p,C,HQft],[p,C,HQft,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2939() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vx","RMc","k","HW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HW],[k],[k,HW],[RMc],[RMc,HW],[RMc,k],[RMc,k,HW],[vx],[vx,HW],[vx,k],[vx,k,HW],[vx,RMc],[vx,RMc,HW],[vx,RMc,k],[vx,RMc,k,HW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2940() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "afU","Q","EPR","g","y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y],[g],[g,y],[EPR],[EPR,y],[EPR,g],[EPR,g,y],[Q],[Q,y],[Q,g],[Q,g,y],[Q,EPR],[Q,EPR,y],[Q,EPR,g],[Q,EPR,g,y],[afU],[afU,y],[afU,g],[afU,g,y],[afU,EPR],[afU,EPR,y],[afU,EPR,g],[afU,EPR,g,y],[afU,Q],[afU,Q,y],[afU,Q,g],[afU,Q,g,y],[afU,Q,EPR],[afU,Q,EPR,y],[afU,Q,EPR,g],[afU,Q,EPR,g,y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2941() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "At","ygB","egTxP","Oz","nbP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nbP],[Oz],[Oz,nbP],[egTxP],[egTxP,nbP],[egTxP,Oz],[egTxP,Oz,nbP],[ygB],[ygB,nbP],[ygB,Oz],[ygB,Oz,nbP],[ygB,egTxP],[ygB,egTxP,nbP],[ygB,egTxP,Oz],[ygB,egTxP,Oz,nbP],[At],[At,nbP],[At,Oz],[At,Oz,nbP],[At,egTxP],[At,egTxP,nbP],[At,egTxP,Oz],[At,egTxP,Oz,nbP],[At,ygB],[At,ygB,nbP],[At,ygB,Oz],[At,ygB,Oz,nbP],[At,ygB,egTxP],[At,ygB,egTxP,nbP],[At,ygB,egTxP,Oz],[At,ygB,egTxP,Oz,nbP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2942() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gND")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gND]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2943() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bjK","c","ecR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ecR],[c],[c,ecR],[bjK],[bjK,ecR],[bjK,c],[bjK,c,ecR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2944() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vMiG","wzH","hp","WslwK","IX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IX],[WslwK],[WslwK,IX],[hp],[hp,IX],[hp,WslwK],[hp,WslwK,IX],[wzH],[wzH,IX],[wzH,WslwK],[wzH,WslwK,IX],[wzH,hp],[wzH,hp,IX],[wzH,hp,WslwK],[wzH,hp,WslwK,IX],[vMiG],[vMiG,IX],[vMiG,WslwK],[vMiG,WslwK,IX],[vMiG,hp],[vMiG,hp,IX],[vMiG,hp,WslwK],[vMiG,hp,WslwK,IX],[vMiG,wzH],[vMiG,wzH,IX],[vMiG,wzH,WslwK],[vMiG,wzH,WslwK,IX],[vMiG,wzH,hp],[vMiG,wzH,hp,IX],[vMiG,wzH,hp,WslwK],[vMiG,wzH,hp,WslwK,IX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2945() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Anzin")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Anzin]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2946() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h","Y","jBaW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jBaW],[Y],[Y,jBaW],[h],[h,jBaW],[h,Y],[h,Y,jBaW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2947() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2948() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DLBjs","NeLtM","v")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[v],[NeLtM],[NeLtM,v],[DLBjs],[DLBjs,v],[DLBjs,NeLtM],[DLBjs,NeLtM,v]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2949() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bR","oK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oK],[bR],[bR,oK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2950() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HY","bPkbA","W","Bz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bz],[W],[W,Bz],[bPkbA],[bPkbA,Bz],[bPkbA,W],[bPkbA,W,Bz],[HY],[HY,Bz],[HY,W],[HY,W,Bz],[HY,bPkbA],[HY,bPkbA,Bz],[HY,bPkbA,W],[HY,bPkbA,W,Bz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2951() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QoBoV","Dj","TccR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TccR],[Dj],[Dj,TccR],[QoBoV],[QoBoV,TccR],[QoBoV,Dj],[QoBoV,Dj,TccR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2952() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jOF","TCb","c")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[c],[TCb],[TCb,c],[jOF],[jOF,c],[jOF,TCb],[jOF,TCb,c]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2953() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YUqp","vJh","dQF","J","TmsCr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TmsCr],[J],[J,TmsCr],[dQF],[dQF,TmsCr],[dQF,J],[dQF,J,TmsCr],[vJh],[vJh,TmsCr],[vJh,J],[vJh,J,TmsCr],[vJh,dQF],[vJh,dQF,TmsCr],[vJh,dQF,J],[vJh,dQF,J,TmsCr],[YUqp],[YUqp,TmsCr],[YUqp,J],[YUqp,J,TmsCr],[YUqp,dQF],[YUqp,dQF,TmsCr],[YUqp,dQF,J],[YUqp,dQF,J,TmsCr],[YUqp,vJh],[YUqp,vJh,TmsCr],[YUqp,vJh,J],[YUqp,vJh,J,TmsCr],[YUqp,vJh,dQF],[YUqp,vJh,dQF,TmsCr],[YUqp,vJh,dQF,J],[YUqp,vJh,dQF,J,TmsCr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2954() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mC","ekiY","TddaR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TddaR],[ekiY],[ekiY,TddaR],[mC],[mC,TddaR],[mC,ekiY],[mC,ekiY,TddaR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2955() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SaeDJ","sIOXY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sIOXY],[SaeDJ],[SaeDJ,sIOXY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2956() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i","Xg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xg],[i],[i,Xg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2957() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zLasr","FEg","Anrza","aTEs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aTEs],[Anrza],[Anrza,aTEs],[FEg],[FEg,aTEs],[FEg,Anrza],[FEg,Anrza,aTEs],[zLasr],[zLasr,aTEs],[zLasr,Anrza],[zLasr,Anrza,aTEs],[zLasr,FEg],[zLasr,FEg,aTEs],[zLasr,FEg,Anrza],[zLasr,FEg,Anrza,aTEs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2958() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TtD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TtD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2959() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2960() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iY","GciB","i","zt","WF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WF],[zt],[zt,WF],[i],[i,WF],[i,zt],[i,zt,WF],[GciB],[GciB,WF],[GciB,zt],[GciB,zt,WF],[GciB,i],[GciB,i,WF],[GciB,i,zt],[GciB,i,zt,WF],[iY],[iY,WF],[iY,zt],[iY,zt,WF],[iY,i],[iY,i,WF],[iY,i,zt],[iY,i,zt,WF],[iY,GciB],[iY,GciB,WF],[iY,GciB,zt],[iY,GciB,zt,WF],[iY,GciB,i],[iY,GciB,i,WF],[iY,GciB,i,zt],[iY,GciB,i,zt,WF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2961() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dv","dUs","or")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[or],[dUs],[dUs,or],[Dv],[Dv,or],[Dv,dUs],[Dv,dUs,or]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2962() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AQqp","ez","wAuk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wAuk],[ez],[ez,wAuk],[AQqp],[AQqp,wAuk],[AQqp,ez],[AQqp,ez,wAuk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2963() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","hGFt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hGFt],[q],[q,hGFt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2964() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GIHV","FNil","EGQeG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EGQeG],[FNil],[FNil,EGQeG],[GIHV],[GIHV,EGQeG],[GIHV,FNil],[GIHV,FNil,EGQeG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2965() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lp","cH","y","RL","pSHBX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pSHBX],[RL],[RL,pSHBX],[y],[y,pSHBX],[y,RL],[y,RL,pSHBX],[cH],[cH,pSHBX],[cH,RL],[cH,RL,pSHBX],[cH,y],[cH,y,pSHBX],[cH,y,RL],[cH,y,RL,pSHBX],[Lp],[Lp,pSHBX],[Lp,RL],[Lp,RL,pSHBX],[Lp,y],[Lp,y,pSHBX],[Lp,y,RL],[Lp,y,RL,pSHBX],[Lp,cH],[Lp,cH,pSHBX],[Lp,cH,RL],[Lp,cH,RL,pSHBX],[Lp,cH,y],[Lp,cH,y,pSHBX],[Lp,cH,y,RL],[Lp,cH,y,RL,pSHBX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2966() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jNIqg","dAR","WsPwj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WsPwj],[dAR],[dAR,WsPwj],[jNIqg],[jNIqg,WsPwj],[jNIqg,dAR],[jNIqg,dAR,WsPwj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2967() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YK","hmFPc","unE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[unE],[hmFPc],[hmFPc,unE],[YK],[YK,unE],[YK,hmFPc],[YK,hmFPc,unE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2968() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "orK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[orK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2969() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bod")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bod]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2970() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BwtN","JBsM","IAGh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IAGh],[JBsM],[JBsM,IAGh],[BwtN],[BwtN,IAGh],[BwtN,JBsM],[BwtN,JBsM,IAGh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2971() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2972() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CCF","ClAMT","bJG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bJG],[ClAMT],[ClAMT,bJG],[CCF],[CCF,bJG],[CCF,ClAMT],[CCF,ClAMT,bJG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2973() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RXQu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RXQu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2974() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2975() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WEh","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[WEh],[WEh,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2976() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","CdVRx","ceV","Ng","rnbp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rnbp],[Ng],[Ng,rnbp],[ceV],[ceV,rnbp],[ceV,Ng],[ceV,Ng,rnbp],[CdVRx],[CdVRx,rnbp],[CdVRx,Ng],[CdVRx,Ng,rnbp],[CdVRx,ceV],[CdVRx,ceV,rnbp],[CdVRx,ceV,Ng],[CdVRx,ceV,Ng,rnbp],[T],[T,rnbp],[T,Ng],[T,Ng,rnbp],[T,ceV],[T,ceV,rnbp],[T,ceV,Ng],[T,ceV,Ng,rnbp],[T,CdVRx],[T,CdVRx,rnbp],[T,CdVRx,Ng],[T,CdVRx,Ng,rnbp],[T,CdVRx,ceV],[T,CdVRx,ceV,rnbp],[T,CdVRx,ceV,Ng],[T,CdVRx,ceV,Ng,rnbp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2977() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "crMTq","t","aj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aj],[t],[t,aj],[crMTq],[crMTq,aj],[crMTq,t],[crMTq,t,aj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2978() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eWvs","r","fBbz","vC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vC],[fBbz],[fBbz,vC],[r],[r,vC],[r,fBbz],[r,fBbz,vC],[eWvs],[eWvs,vC],[eWvs,fBbz],[eWvs,fBbz,vC],[eWvs,r],[eWvs,r,vC],[eWvs,r,fBbz],[eWvs,r,fBbz,vC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2979() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qB","T","TN","TPRHZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TPRHZ],[TN],[TN,TPRHZ],[T],[T,TPRHZ],[T,TN],[T,TN,TPRHZ],[qB],[qB,TPRHZ],[qB,TN],[qB,TN,TPRHZ],[qB,T],[qB,T,TPRHZ],[qB,T,TN],[qB,T,TN,TPRHZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2980() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VrN","PxUez","CDo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CDo],[PxUez],[PxUez,CDo],[VrN],[VrN,CDo],[VrN,PxUez],[VrN,PxUez,CDo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2981() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eRn","yXo","GX","lp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lp],[GX],[GX,lp],[yXo],[yXo,lp],[yXo,GX],[yXo,GX,lp],[eRn],[eRn,lp],[eRn,GX],[eRn,GX,lp],[eRn,yXo],[eRn,yXo,lp],[eRn,yXo,GX],[eRn,yXo,GX,lp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2982() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2983() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","uuOo","oz","FzSPn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FzSPn],[oz],[oz,FzSPn],[uuOo],[uuOo,FzSPn],[uuOo,oz],[uuOo,oz,FzSPn],[b],[b,FzSPn],[b,oz],[b,oz,FzSPn],[b,uuOo],[b,uuOo,FzSPn],[b,uuOo,oz],[b,uuOo,oz,FzSPn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2984() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ViE","e","YChE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YChE],[e],[e,YChE],[ViE],[ViE,YChE],[ViE,e],[ViE,e,YChE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2985() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","mb","opn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[opn],[mb],[mb,opn],[P],[P,opn],[P,mb],[P,mb,opn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2986() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zpV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zpV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2987() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QCoC","CH","xwaMR","mxMPn","BYd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BYd],[mxMPn],[mxMPn,BYd],[xwaMR],[xwaMR,BYd],[xwaMR,mxMPn],[xwaMR,mxMPn,BYd],[CH],[CH,BYd],[CH,mxMPn],[CH,mxMPn,BYd],[CH,xwaMR],[CH,xwaMR,BYd],[CH,xwaMR,mxMPn],[CH,xwaMR,mxMPn,BYd],[QCoC],[QCoC,BYd],[QCoC,mxMPn],[QCoC,mxMPn,BYd],[QCoC,xwaMR],[QCoC,xwaMR,BYd],[QCoC,xwaMR,mxMPn],[QCoC,xwaMR,mxMPn,BYd],[QCoC,CH],[QCoC,CH,BYd],[QCoC,CH,mxMPn],[QCoC,CH,mxMPn,BYd],[QCoC,CH,xwaMR],[QCoC,CH,xwaMR,BYd],[QCoC,CH,xwaMR,mxMPn],[QCoC,CH,xwaMR,mxMPn,BYd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2988() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nn","Doyp","OZayn","rl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rl],[OZayn],[OZayn,rl],[Doyp],[Doyp,rl],[Doyp,OZayn],[Doyp,OZayn,rl],[Nn],[Nn,rl],[Nn,OZayn],[Nn,OZayn,rl],[Nn,Doyp],[Nn,Doyp,rl],[Nn,Doyp,OZayn],[Nn,Doyp,OZayn,rl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2989() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nfX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nfX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2990() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LHC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LHC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2991() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","w","zWJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zWJ],[w],[w,zWJ],[D],[D,zWJ],[D,w],[D,w,zWJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2992() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "woy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[woy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2993() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "I","xNs","guJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[guJ],[xNs],[xNs,guJ],[I],[I,guJ],[I,xNs],[I,xNs,guJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2994() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","bhZOc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bhZOc],[d],[d,bhZOc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2995() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EQNc","npiIu","OXLdx","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[OXLdx],[OXLdx,o],[npiIu],[npiIu,o],[npiIu,OXLdx],[npiIu,OXLdx,o],[EQNc],[EQNc,o],[EQNc,OXLdx],[EQNc,OXLdx,o],[EQNc,npiIu],[EQNc,npiIu,o],[EQNc,npiIu,OXLdx],[EQNc,npiIu,OXLdx,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2996() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BHwHK","f","G","H","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[H],[H,I],[G],[G,I],[G,H],[G,H,I],[f],[f,I],[f,H],[f,H,I],[f,G],[f,G,I],[f,G,H],[f,G,H,I],[BHwHK],[BHwHK,I],[BHwHK,H],[BHwHK,H,I],[BHwHK,G],[BHwHK,G,I],[BHwHK,G,H],[BHwHK,G,H,I],[BHwHK,f],[BHwHK,f,I],[BHwHK,f,H],[BHwHK,f,H,I],[BHwHK,f,G],[BHwHK,f,G,I],[BHwHK,f,G,H],[BHwHK,f,G,H,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2997() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oiscE","bJIl","y","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[y],[y,m],[bJIl],[bJIl,m],[bJIl,y],[bJIl,y,m],[oiscE],[oiscE,m],[oiscE,y],[oiscE,y,m],[oiscE,bJIl],[oiscE,bJIl,m],[oiscE,bJIl,y],[oiscE,bJIl,y,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2998() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AXI","ynyr","ZBLe","vRT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vRT],[ZBLe],[ZBLe,vRT],[ynyr],[ynyr,vRT],[ynyr,ZBLe],[ynyr,ZBLe,vRT],[AXI],[AXI,vRT],[AXI,ZBLe],[AXI,ZBLe,vRT],[AXI,ynyr],[AXI,ynyr,vRT],[AXI,ynyr,ZBLe],[AXI,ynyr,ZBLe,vRT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_2999() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vOhyU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vOhyU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3000() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","xl","gpeiH","Sbzje","OzZJW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OzZJW],[Sbzje],[Sbzje,OzZJW],[gpeiH],[gpeiH,OzZJW],[gpeiH,Sbzje],[gpeiH,Sbzje,OzZJW],[xl],[xl,OzZJW],[xl,Sbzje],[xl,Sbzje,OzZJW],[xl,gpeiH],[xl,gpeiH,OzZJW],[xl,gpeiH,Sbzje],[xl,gpeiH,Sbzje,OzZJW],[C],[C,OzZJW],[C,Sbzje],[C,Sbzje,OzZJW],[C,gpeiH],[C,gpeiH,OzZJW],[C,gpeiH,Sbzje],[C,gpeiH,Sbzje,OzZJW],[C,xl],[C,xl,OzZJW],[C,xl,Sbzje],[C,xl,Sbzje,OzZJW],[C,xl,gpeiH],[C,xl,gpeiH,OzZJW],[C,xl,gpeiH,Sbzje],[C,xl,gpeiH,Sbzje,OzZJW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3001() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","YFOld","bcba")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bcba],[YFOld],[YFOld,bcba],[a],[a,bcba],[a,YFOld],[a,YFOld,bcba]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3002() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zNW","BbUSC","yE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yE],[BbUSC],[BbUSC,yE],[zNW],[zNW,yE],[zNW,BbUSC],[zNW,BbUSC,yE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3003() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xJ","bpm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bpm],[xJ],[xJ,bpm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3004() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dg","giI","K","ZaEdt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZaEdt],[K],[K,ZaEdt],[giI],[giI,ZaEdt],[giI,K],[giI,K,ZaEdt],[Dg],[Dg,ZaEdt],[Dg,K],[Dg,K,ZaEdt],[Dg,giI],[Dg,giI,ZaEdt],[Dg,giI,K],[Dg,giI,K,ZaEdt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3005() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3006() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "smfNx","v","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[v],[v,Y],[smfNx],[smfNx,Y],[smfNx,v],[smfNx,v,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3007() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K","Hd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hd],[K],[K,Hd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3008() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3009() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gx","B","OIv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OIv],[B],[B,OIv],[gx],[gx,OIv],[gx,B],[gx,B,OIv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3010() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "y","Ze","K","Qlw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qlw],[K],[K,Qlw],[Ze],[Ze,Qlw],[Ze,K],[Ze,K,Qlw],[y],[y,Qlw],[y,K],[y,K,Qlw],[y,Ze],[y,Ze,Qlw],[y,Ze,K],[y,Ze,K,Qlw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3011() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dvy","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[Dvy],[Dvy,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3012() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[g],[g,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3013() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[u]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3014() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PnNB","Ieg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ieg],[PnNB],[PnNB,Ieg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3015() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SFv","V","Wcv","K","Ap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ap],[K],[K,Ap],[Wcv],[Wcv,Ap],[Wcv,K],[Wcv,K,Ap],[V],[V,Ap],[V,K],[V,K,Ap],[V,Wcv],[V,Wcv,Ap],[V,Wcv,K],[V,Wcv,K,Ap],[SFv],[SFv,Ap],[SFv,K],[SFv,K,Ap],[SFv,Wcv],[SFv,Wcv,Ap],[SFv,Wcv,K],[SFv,Wcv,K,Ap],[SFv,V],[SFv,V,Ap],[SFv,V,K],[SFv,V,K,Ap],[SFv,V,Wcv],[SFv,V,Wcv,Ap],[SFv,V,Wcv,K],[SFv,V,Wcv,K,Ap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3016() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CTTXR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CTTXR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3017() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EEvI","QzbxY","RFsY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RFsY],[QzbxY],[QzbxY,RFsY],[EEvI],[EEvI,RFsY],[EEvI,QzbxY],[EEvI,QzbxY,RFsY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3018() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VQNVM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VQNVM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3019() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ESq","dX","Hn","YMpyC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YMpyC],[Hn],[Hn,YMpyC],[dX],[dX,YMpyC],[dX,Hn],[dX,Hn,YMpyC],[ESq],[ESq,YMpyC],[ESq,Hn],[ESq,Hn,YMpyC],[ESq,dX],[ESq,dX,YMpyC],[ESq,dX,Hn],[ESq,dX,Hn,YMpyC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3020() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JAz","iHPXF","qIGB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qIGB],[iHPXF],[iHPXF,qIGB],[JAz],[JAz,qIGB],[JAz,iHPXF],[JAz,iHPXF,qIGB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3021() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Kzp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kzp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3022() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bLFX","T","iP","GLEla","pUQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pUQ],[GLEla],[GLEla,pUQ],[iP],[iP,pUQ],[iP,GLEla],[iP,GLEla,pUQ],[T],[T,pUQ],[T,GLEla],[T,GLEla,pUQ],[T,iP],[T,iP,pUQ],[T,iP,GLEla],[T,iP,GLEla,pUQ],[bLFX],[bLFX,pUQ],[bLFX,GLEla],[bLFX,GLEla,pUQ],[bLFX,iP],[bLFX,iP,pUQ],[bLFX,iP,GLEla],[bLFX,iP,GLEla,pUQ],[bLFX,T],[bLFX,T,pUQ],[bLFX,T,GLEla],[bLFX,T,GLEla,pUQ],[bLFX,T,iP],[bLFX,T,iP,pUQ],[bLFX,T,iP,GLEla],[bLFX,T,iP,GLEla,pUQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3023() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aLAHP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aLAHP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3024() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wZzYU","VaOg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VaOg],[wZzYU],[wZzYU,VaOg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3025() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ee","rrhh","EM","kWsf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kWsf],[EM],[EM,kWsf],[rrhh],[rrhh,kWsf],[rrhh,EM],[rrhh,EM,kWsf],[Ee],[Ee,kWsf],[Ee,EM],[Ee,EM,kWsf],[Ee,rrhh],[Ee,rrhh,kWsf],[Ee,rrhh,EM],[Ee,rrhh,EM,kWsf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3026() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3027() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UlRH","PtRsM","uFzv","am")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[am],[uFzv],[uFzv,am],[PtRsM],[PtRsM,am],[PtRsM,uFzv],[PtRsM,uFzv,am],[UlRH],[UlRH,am],[UlRH,uFzv],[UlRH,uFzv,am],[UlRH,PtRsM],[UlRH,PtRsM,am],[UlRH,PtRsM,uFzv],[UlRH,PtRsM,uFzv,am]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3028() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3029() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3030() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QTvqz","AesX","h","BrdnF","gTYk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gTYk],[BrdnF],[BrdnF,gTYk],[h],[h,gTYk],[h,BrdnF],[h,BrdnF,gTYk],[AesX],[AesX,gTYk],[AesX,BrdnF],[AesX,BrdnF,gTYk],[AesX,h],[AesX,h,gTYk],[AesX,h,BrdnF],[AesX,h,BrdnF,gTYk],[QTvqz],[QTvqz,gTYk],[QTvqz,BrdnF],[QTvqz,BrdnF,gTYk],[QTvqz,h],[QTvqz,h,gTYk],[QTvqz,h,BrdnF],[QTvqz,h,BrdnF,gTYk],[QTvqz,AesX],[QTvqz,AesX,gTYk],[QTvqz,AesX,BrdnF],[QTvqz,AesX,BrdnF,gTYk],[QTvqz,AesX,h],[QTvqz,AesX,h,gTYk],[QTvqz,AesX,h,BrdnF],[QTvqz,AesX,h,BrdnF,gTYk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3031() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XPuJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XPuJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3032() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Md","ZhRi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZhRi],[Md],[Md,ZhRi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3033() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","WML","GcTg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GcTg],[WML],[WML,GcTg],[t],[t,GcTg],[t,WML],[t,WML,GcTg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3034() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GJmSE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GJmSE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3035() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fxse","w","kRq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kRq],[w],[w,kRq],[Fxse],[Fxse,kRq],[Fxse,w],[Fxse,w,kRq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3036() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zmSL","ArSY","yONSb","lyXi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lyXi],[yONSb],[yONSb,lyXi],[ArSY],[ArSY,lyXi],[ArSY,yONSb],[ArSY,yONSb,lyXi],[zmSL],[zmSL,lyXi],[zmSL,yONSb],[zmSL,yONSb,lyXi],[zmSL,ArSY],[zmSL,ArSY,lyXi],[zmSL,ArSY,yONSb],[zmSL,ArSY,yONSb,lyXi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3037() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JjNq","hB","sKR","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[sKR],[sKR,m],[hB],[hB,m],[hB,sKR],[hB,sKR,m],[JjNq],[JjNq,m],[JjNq,sKR],[JjNq,sKR,m],[JjNq,hB],[JjNq,hB,m],[JjNq,hB,sKR],[JjNq,hB,sKR,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3038() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jSIX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jSIX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3039() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "grtUA","zc","MDq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MDq],[zc],[zc,MDq],[grtUA],[grtUA,MDq],[grtUA,zc],[grtUA,zc,MDq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3040() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CkY","Lr","oyxl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oyxl],[Lr],[Lr,oyxl],[CkY],[CkY,oyxl],[CkY,Lr],[CkY,Lr,oyxl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3041() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uIdjP","hAdSx","Jaefq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jaefq],[hAdSx],[hAdSx,Jaefq],[uIdjP],[uIdjP,Jaefq],[uIdjP,hAdSx],[uIdjP,hAdSx,Jaefq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3042() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eU","NRxgZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NRxgZ],[eU],[eU,NRxgZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3043() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IHYjW","QuTc","G","bpg","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[bpg],[bpg,I],[G],[G,I],[G,bpg],[G,bpg,I],[QuTc],[QuTc,I],[QuTc,bpg],[QuTc,bpg,I],[QuTc,G],[QuTc,G,I],[QuTc,G,bpg],[QuTc,G,bpg,I],[IHYjW],[IHYjW,I],[IHYjW,bpg],[IHYjW,bpg,I],[IHYjW,G],[IHYjW,G,I],[IHYjW,G,bpg],[IHYjW,G,bpg,I],[IHYjW,QuTc],[IHYjW,QuTc,I],[IHYjW,QuTc,bpg],[IHYjW,QuTc,bpg,I],[IHYjW,QuTc,G],[IHYjW,QuTc,G,I],[IHYjW,QuTc,G,bpg],[IHYjW,QuTc,G,bpg,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3044() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FNXzX","nvaJ","nF","nDAIN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nDAIN],[nF],[nF,nDAIN],[nvaJ],[nvaJ,nDAIN],[nvaJ,nF],[nvaJ,nF,nDAIN],[FNXzX],[FNXzX,nDAIN],[FNXzX,nF],[FNXzX,nF,nDAIN],[FNXzX,nvaJ],[FNXzX,nvaJ,nDAIN],[FNXzX,nvaJ,nF],[FNXzX,nvaJ,nF,nDAIN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3045() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xR","FbXg","hik")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hik],[FbXg],[FbXg,hik],[xR],[xR,hik],[xR,FbXg],[xR,FbXg,hik]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3046() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wX","XNqYW","kbVt","KObH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KObH],[kbVt],[kbVt,KObH],[XNqYW],[XNqYW,KObH],[XNqYW,kbVt],[XNqYW,kbVt,KObH],[wX],[wX,KObH],[wX,kbVt],[wX,kbVt,KObH],[wX,XNqYW],[wX,XNqYW,KObH],[wX,XNqYW,kbVt],[wX,XNqYW,kbVt,KObH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3047() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fVxHs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fVxHs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3048() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AtNIG","AqrqY","nteUi","bBuWA","lTmt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lTmt],[bBuWA],[bBuWA,lTmt],[nteUi],[nteUi,lTmt],[nteUi,bBuWA],[nteUi,bBuWA,lTmt],[AqrqY],[AqrqY,lTmt],[AqrqY,bBuWA],[AqrqY,bBuWA,lTmt],[AqrqY,nteUi],[AqrqY,nteUi,lTmt],[AqrqY,nteUi,bBuWA],[AqrqY,nteUi,bBuWA,lTmt],[AtNIG],[AtNIG,lTmt],[AtNIG,bBuWA],[AtNIG,bBuWA,lTmt],[AtNIG,nteUi],[AtNIG,nteUi,lTmt],[AtNIG,nteUi,bBuWA],[AtNIG,nteUi,bBuWA,lTmt],[AtNIG,AqrqY],[AtNIG,AqrqY,lTmt],[AtNIG,AqrqY,bBuWA],[AtNIG,AqrqY,bBuWA,lTmt],[AtNIG,AqrqY,nteUi],[AtNIG,AqrqY,nteUi,lTmt],[AtNIG,AqrqY,nteUi,bBuWA],[AtNIG,AqrqY,nteUi,bBuWA,lTmt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3049() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZQI","E","DxB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DxB],[E],[E,DxB],[ZQI],[ZQI,DxB],[ZQI,E],[ZQI,E,DxB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3050() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vemz","xR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xR],[Vemz],[Vemz,xR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3051() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sbW","xG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xG],[sbW],[sbW,xG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3052() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rsSkW","ylME","RlF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RlF],[ylME],[ylME,RlF],[rsSkW],[rsSkW,RlF],[rsSkW,ylME],[rsSkW,ylME,RlF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3053() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "W","J","DVpQk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DVpQk],[J],[J,DVpQk],[W],[W,DVpQk],[W,J],[W,J,DVpQk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3054() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FJfzg","CtXM","oGSfO","midg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[midg],[oGSfO],[oGSfO,midg],[CtXM],[CtXM,midg],[CtXM,oGSfO],[CtXM,oGSfO,midg],[FJfzg],[FJfzg,midg],[FJfzg,oGSfO],[FJfzg,oGSfO,midg],[FJfzg,CtXM],[FJfzg,CtXM,midg],[FJfzg,CtXM,oGSfO],[FJfzg,CtXM,oGSfO,midg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3055() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vMN","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[vMN],[vMN,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3056() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "axwH","vue")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vue],[axwH],[axwH,vue]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3057() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ljN","D")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[D],[ljN],[ljN,D]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3058() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aqr","tdEc","POL","aZry")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aZry],[POL],[POL,aZry],[tdEc],[tdEc,aZry],[tdEc,POL],[tdEc,POL,aZry],[aqr],[aqr,aZry],[aqr,POL],[aqr,POL,aZry],[aqr,tdEc],[aqr,tdEc,aZry],[aqr,tdEc,POL],[aqr,tdEc,POL,aZry]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3059() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PASat")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PASat]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3060() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3061() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VPnB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VPnB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3062() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nvgBh","EKGiQ","h","fU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fU],[h],[h,fU],[EKGiQ],[EKGiQ,fU],[EKGiQ,h],[EKGiQ,h,fU],[nvgBh],[nvgBh,fU],[nvgBh,h],[nvgBh,h,fU],[nvgBh,EKGiQ],[nvgBh,EKGiQ,fU],[nvgBh,EKGiQ,h],[nvgBh,EKGiQ,h,fU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3063() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XkT","d","UA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UA],[d],[d,UA],[XkT],[XkT,UA],[XkT,d],[XkT,d,UA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3064() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZVJv","sW","RHvR","wO","giiU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[giiU],[wO],[wO,giiU],[RHvR],[RHvR,giiU],[RHvR,wO],[RHvR,wO,giiU],[sW],[sW,giiU],[sW,wO],[sW,wO,giiU],[sW,RHvR],[sW,RHvR,giiU],[sW,RHvR,wO],[sW,RHvR,wO,giiU],[ZVJv],[ZVJv,giiU],[ZVJv,wO],[ZVJv,wO,giiU],[ZVJv,RHvR],[ZVJv,RHvR,giiU],[ZVJv,RHvR,wO],[ZVJv,RHvR,wO,giiU],[ZVJv,sW],[ZVJv,sW,giiU],[ZVJv,sW,wO],[ZVJv,sW,wO,giiU],[ZVJv,sW,RHvR],[ZVJv,sW,RHvR,giiU],[ZVJv,sW,RHvR,wO],[ZVJv,sW,RHvR,wO,giiU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3065() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DxkqA","d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d],[DxkqA],[DxkqA,d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3066() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eLKK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eLKK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3067() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xuY","oIAE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oIAE],[xuY],[xuY,oIAE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3068() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zss")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zss]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3069() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DlUe","gvI","gb","l","gvTt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gvTt],[l],[l,gvTt],[gb],[gb,gvTt],[gb,l],[gb,l,gvTt],[gvI],[gvI,gvTt],[gvI,l],[gvI,l,gvTt],[gvI,gb],[gvI,gb,gvTt],[gvI,gb,l],[gvI,gb,l,gvTt],[DlUe],[DlUe,gvTt],[DlUe,l],[DlUe,l,gvTt],[DlUe,gb],[DlUe,gb,gvTt],[DlUe,gb,l],[DlUe,gb,l,gvTt],[DlUe,gvI],[DlUe,gvI,gvTt],[DlUe,gvI,l],[DlUe,gvI,l,gvTt],[DlUe,gvI,gb],[DlUe,gvI,gb,gvTt],[DlUe,gvI,gb,l],[DlUe,gvI,gb,l,gvTt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3070() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","RPOGp","xXFu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xXFu],[RPOGp],[RPOGp,xXFu],[A],[A,xXFu],[A,RPOGp],[A,RPOGp,xXFu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3071() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zLfA","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[zLfA],[zLfA,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3072() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wWi","TUy","juFh","eDK","CwDtl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CwDtl],[eDK],[eDK,CwDtl],[juFh],[juFh,CwDtl],[juFh,eDK],[juFh,eDK,CwDtl],[TUy],[TUy,CwDtl],[TUy,eDK],[TUy,eDK,CwDtl],[TUy,juFh],[TUy,juFh,CwDtl],[TUy,juFh,eDK],[TUy,juFh,eDK,CwDtl],[wWi],[wWi,CwDtl],[wWi,eDK],[wWi,eDK,CwDtl],[wWi,juFh],[wWi,juFh,CwDtl],[wWi,juFh,eDK],[wWi,juFh,eDK,CwDtl],[wWi,TUy],[wWi,TUy,CwDtl],[wWi,TUy,eDK],[wWi,TUy,eDK,CwDtl],[wWi,TUy,juFh],[wWi,TUy,juFh,CwDtl],[wWi,TUy,juFh,eDK],[wWi,TUy,juFh,eDK,CwDtl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3073() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cy","Ca")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ca],[cy],[cy,Ca]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3074() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hz","Wkuk","EPqNN","j","mMdP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mMdP],[j],[j,mMdP],[EPqNN],[EPqNN,mMdP],[EPqNN,j],[EPqNN,j,mMdP],[Wkuk],[Wkuk,mMdP],[Wkuk,j],[Wkuk,j,mMdP],[Wkuk,EPqNN],[Wkuk,EPqNN,mMdP],[Wkuk,EPqNN,j],[Wkuk,EPqNN,j,mMdP],[Hz],[Hz,mMdP],[Hz,j],[Hz,j,mMdP],[Hz,EPqNN],[Hz,EPqNN,mMdP],[Hz,EPqNN,j],[Hz,EPqNN,j,mMdP],[Hz,Wkuk],[Hz,Wkuk,mMdP],[Hz,Wkuk,j],[Hz,Wkuk,j,mMdP],[Hz,Wkuk,EPqNN],[Hz,Wkuk,EPqNN,mMdP],[Hz,Wkuk,EPqNN,j],[Hz,Wkuk,EPqNN,j,mMdP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3075() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tLk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tLk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3076() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iSyuu","KCyns","zFlq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zFlq],[KCyns],[KCyns,zFlq],[iSyuu],[iSyuu,zFlq],[iSyuu,KCyns],[iSyuu,KCyns,zFlq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3077() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "usXM","SAFvZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SAFvZ],[usXM],[usXM,SAFvZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3078() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","Nb","Lt","X","lbDdW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lbDdW],[X],[X,lbDdW],[Lt],[Lt,lbDdW],[Lt,X],[Lt,X,lbDdW],[Nb],[Nb,lbDdW],[Nb,X],[Nb,X,lbDdW],[Nb,Lt],[Nb,Lt,lbDdW],[Nb,Lt,X],[Nb,Lt,X,lbDdW],[d],[d,lbDdW],[d,X],[d,X,lbDdW],[d,Lt],[d,Lt,lbDdW],[d,Lt,X],[d,Lt,X,lbDdW],[d,Nb],[d,Nb,lbDdW],[d,Nb,X],[d,Nb,X,lbDdW],[d,Nb,Lt],[d,Nb,Lt,lbDdW],[d,Nb,Lt,X],[d,Nb,Lt,X,lbDdW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3079() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fMh","Ufjh","ZOkCa","tiuXR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tiuXR],[ZOkCa],[ZOkCa,tiuXR],[Ufjh],[Ufjh,tiuXR],[Ufjh,ZOkCa],[Ufjh,ZOkCa,tiuXR],[fMh],[fMh,tiuXR],[fMh,ZOkCa],[fMh,ZOkCa,tiuXR],[fMh,Ufjh],[fMh,Ufjh,tiuXR],[fMh,Ufjh,ZOkCa],[fMh,Ufjh,ZOkCa,tiuXR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3080() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wJqB","kWSFy","J","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[J],[J,j],[kWSFy],[kWSFy,j],[kWSFy,J],[kWSFy,J,j],[wJqB],[wJqB,j],[wJqB,J],[wJqB,J,j],[wJqB,kWSFy],[wJqB,kWSFy,j],[wJqB,kWSFy,J],[wJqB,kWSFy,J,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3081() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hmMH","TsTTr","mfDxq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mfDxq],[TsTTr],[TsTTr,mfDxq],[hmMH],[hmMH,mfDxq],[hmMH,TsTTr],[hmMH,TsTTr,mfDxq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3082() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","zQM","cwiJ","tB","piOQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[piOQ],[tB],[tB,piOQ],[cwiJ],[cwiJ,piOQ],[cwiJ,tB],[cwiJ,tB,piOQ],[zQM],[zQM,piOQ],[zQM,tB],[zQM,tB,piOQ],[zQM,cwiJ],[zQM,cwiJ,piOQ],[zQM,cwiJ,tB],[zQM,cwiJ,tB,piOQ],[t],[t,piOQ],[t,tB],[t,tB,piOQ],[t,cwiJ],[t,cwiJ,piOQ],[t,cwiJ,tB],[t,cwiJ,tB,piOQ],[t,zQM],[t,zQM,piOQ],[t,zQM,tB],[t,zQM,tB,piOQ],[t,zQM,cwiJ],[t,zQM,cwiJ,piOQ],[t,zQM,cwiJ,tB],[t,zQM,cwiJ,tB,piOQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3083() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uZrC","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[uZrC],[uZrC,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3084() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wtr","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[wtr],[wtr,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3085() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3086() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XYSTd","PEyCJ","cJGY","zc","FvK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FvK],[zc],[zc,FvK],[cJGY],[cJGY,FvK],[cJGY,zc],[cJGY,zc,FvK],[PEyCJ],[PEyCJ,FvK],[PEyCJ,zc],[PEyCJ,zc,FvK],[PEyCJ,cJGY],[PEyCJ,cJGY,FvK],[PEyCJ,cJGY,zc],[PEyCJ,cJGY,zc,FvK],[XYSTd],[XYSTd,FvK],[XYSTd,zc],[XYSTd,zc,FvK],[XYSTd,cJGY],[XYSTd,cJGY,FvK],[XYSTd,cJGY,zc],[XYSTd,cJGY,zc,FvK],[XYSTd,PEyCJ],[XYSTd,PEyCJ,FvK],[XYSTd,PEyCJ,zc],[XYSTd,PEyCJ,zc,FvK],[XYSTd,PEyCJ,cJGY],[XYSTd,PEyCJ,cJGY,FvK],[XYSTd,PEyCJ,cJGY,zc],[XYSTd,PEyCJ,cJGY,zc,FvK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3087() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iDum","VES","Uvoie","ut")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ut],[Uvoie],[Uvoie,ut],[VES],[VES,ut],[VES,Uvoie],[VES,Uvoie,ut],[iDum],[iDum,ut],[iDum,Uvoie],[iDum,Uvoie,ut],[iDum,VES],[iDum,VES,ut],[iDum,VES,Uvoie],[iDum,VES,Uvoie,ut]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3088() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zyWp","V","bTK","TQhfh","erQCN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[erQCN],[TQhfh],[TQhfh,erQCN],[bTK],[bTK,erQCN],[bTK,TQhfh],[bTK,TQhfh,erQCN],[V],[V,erQCN],[V,TQhfh],[V,TQhfh,erQCN],[V,bTK],[V,bTK,erQCN],[V,bTK,TQhfh],[V,bTK,TQhfh,erQCN],[zyWp],[zyWp,erQCN],[zyWp,TQhfh],[zyWp,TQhfh,erQCN],[zyWp,bTK],[zyWp,bTK,erQCN],[zyWp,bTK,TQhfh],[zyWp,bTK,TQhfh,erQCN],[zyWp,V],[zyWp,V,erQCN],[zyWp,V,TQhfh],[zyWp,V,TQhfh,erQCN],[zyWp,V,bTK],[zyWp,V,bTK,erQCN],[zyWp,V,bTK,TQhfh],[zyWp,V,bTK,TQhfh,erQCN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3089() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UmM","T","oZ","m","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[m],[m,M],[oZ],[oZ,M],[oZ,m],[oZ,m,M],[T],[T,M],[T,m],[T,m,M],[T,oZ],[T,oZ,M],[T,oZ,m],[T,oZ,m,M],[UmM],[UmM,M],[UmM,m],[UmM,m,M],[UmM,oZ],[UmM,oZ,M],[UmM,oZ,m],[UmM,oZ,m,M],[UmM,T],[UmM,T,M],[UmM,T,m],[UmM,T,m,M],[UmM,T,oZ],[UmM,T,oZ,M],[UmM,T,oZ,m],[UmM,T,oZ,m,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3090() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","BGge","eywfW","Ts")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ts],[eywfW],[eywfW,Ts],[BGge],[BGge,Ts],[BGge,eywfW],[BGge,eywfW,Ts],[d],[d,Ts],[d,eywfW],[d,eywfW,Ts],[d,BGge],[d,BGge,Ts],[d,BGge,eywfW],[d,BGge,eywfW,Ts]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3091() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ymsg","Lo","rToM","V")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[V],[rToM],[rToM,V],[Lo],[Lo,V],[Lo,rToM],[Lo,rToM,V],[ymsg],[ymsg,V],[ymsg,rToM],[ymsg,rToM,V],[ymsg,Lo],[ymsg,Lo,V],[ymsg,Lo,rToM],[ymsg,Lo,rToM,V]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3092() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FKaU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FKaU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3093() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","TdHN","Kpn","Kh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kh],[Kpn],[Kpn,Kh],[TdHN],[TdHN,Kh],[TdHN,Kpn],[TdHN,Kpn,Kh],[A],[A,Kh],[A,Kpn],[A,Kpn,Kh],[A,TdHN],[A,TdHN,Kh],[A,TdHN,Kpn],[A,TdHN,Kpn,Kh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3094() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pbFh","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[pbFh],[pbFh,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3095() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","oh","sbbJP","rkuW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rkuW],[sbbJP],[sbbJP,rkuW],[oh],[oh,rkuW],[oh,sbbJP],[oh,sbbJP,rkuW],[a],[a,rkuW],[a,sbbJP],[a,sbbJP,rkuW],[a,oh],[a,oh,rkuW],[a,oh,sbbJP],[a,oh,sbbJP,rkuW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3096() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TX","F","X","cUzKu","LKvWM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LKvWM],[cUzKu],[cUzKu,LKvWM],[X],[X,LKvWM],[X,cUzKu],[X,cUzKu,LKvWM],[F],[F,LKvWM],[F,cUzKu],[F,cUzKu,LKvWM],[F,X],[F,X,LKvWM],[F,X,cUzKu],[F,X,cUzKu,LKvWM],[TX],[TX,LKvWM],[TX,cUzKu],[TX,cUzKu,LKvWM],[TX,X],[TX,X,LKvWM],[TX,X,cUzKu],[TX,X,cUzKu,LKvWM],[TX,F],[TX,F,LKvWM],[TX,F,cUzKu],[TX,F,cUzKu,LKvWM],[TX,F,X],[TX,F,X,LKvWM],[TX,F,X,cUzKu],[TX,F,X,cUzKu,LKvWM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3097() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rfd","TNZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TNZ],[Rfd],[Rfd,TNZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3098() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","bL","tKWH","qO","cb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cb],[qO],[qO,cb],[tKWH],[tKWH,cb],[tKWH,qO],[tKWH,qO,cb],[bL],[bL,cb],[bL,qO],[bL,qO,cb],[bL,tKWH],[bL,tKWH,cb],[bL,tKWH,qO],[bL,tKWH,qO,cb],[g],[g,cb],[g,qO],[g,qO,cb],[g,tKWH],[g,tKWH,cb],[g,tKWH,qO],[g,tKWH,qO,cb],[g,bL],[g,bL,cb],[g,bL,qO],[g,bL,qO,cb],[g,bL,tKWH],[g,bL,tKWH,cb],[g,bL,tKWH,qO],[g,bL,tKWH,qO,cb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3099() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","WYD","u","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[u],[u,n],[WYD],[WYD,n],[WYD,u],[WYD,u,n],[c],[c,n],[c,u],[c,u,n],[c,WYD],[c,WYD,n],[c,WYD,u],[c,WYD,u,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3100() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fj","ag","ymvGE","vu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vu],[ymvGE],[ymvGE,vu],[ag],[ag,vu],[ag,ymvGE],[ag,ymvGE,vu],[fj],[fj,vu],[fj,ymvGE],[fj,ymvGE,vu],[fj,ag],[fj,ag,vu],[fj,ag,ymvGE],[fj,ag,ymvGE,vu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3101() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "shqK","Ws")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ws],[shqK],[shqK,Ws]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3102() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aqLN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aqLN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3103() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zhjJ","CGdqJ","oieT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oieT],[CGdqJ],[CGdqJ,oieT],[zhjJ],[zhjJ,oieT],[zhjJ,CGdqJ],[zhjJ,CGdqJ,oieT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3104() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZiHBN","qXr","WtpBL","rBZe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rBZe],[WtpBL],[WtpBL,rBZe],[qXr],[qXr,rBZe],[qXr,WtpBL],[qXr,WtpBL,rBZe],[ZiHBN],[ZiHBN,rBZe],[ZiHBN,WtpBL],[ZiHBN,WtpBL,rBZe],[ZiHBN,qXr],[ZiHBN,qXr,rBZe],[ZiHBN,qXr,WtpBL],[ZiHBN,qXr,WtpBL,rBZe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3105() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hme","EZHSu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EZHSu],[Hme],[Hme,EZHSu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3106() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zzeM","g","sEFsI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sEFsI],[g],[g,sEFsI],[zzeM],[zzeM,sEFsI],[zzeM,g],[zzeM,g,sEFsI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3107() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PT","AUHcB","K","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[K],[K,n],[AUHcB],[AUHcB,n],[AUHcB,K],[AUHcB,K,n],[PT],[PT,n],[PT,K],[PT,K,n],[PT,AUHcB],[PT,AUHcB,n],[PT,AUHcB,K],[PT,AUHcB,K,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3108() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","t","hM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hM],[t],[t,hM],[A],[A,hM],[A,t],[A,t,hM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3109() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hSRDS","g","Ohu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ohu],[g],[g,Ohu],[hSRDS],[hSRDS,Ohu],[hSRDS,g],[hSRDS,g,Ohu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3110() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IwN","a","pC","nRX","SLZon")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SLZon],[nRX],[nRX,SLZon],[pC],[pC,SLZon],[pC,nRX],[pC,nRX,SLZon],[a],[a,SLZon],[a,nRX],[a,nRX,SLZon],[a,pC],[a,pC,SLZon],[a,pC,nRX],[a,pC,nRX,SLZon],[IwN],[IwN,SLZon],[IwN,nRX],[IwN,nRX,SLZon],[IwN,pC],[IwN,pC,SLZon],[IwN,pC,nRX],[IwN,pC,nRX,SLZon],[IwN,a],[IwN,a,SLZon],[IwN,a,nRX],[IwN,a,nRX,SLZon],[IwN,a,pC],[IwN,a,pC,SLZon],[IwN,a,pC,nRX],[IwN,a,pC,nRX,SLZon]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3111() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zq","lETRe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lETRe],[Zq],[Zq,lETRe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3112() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","mc","OBlFB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OBlFB],[mc],[mc,OBlFB],[a],[a,OBlFB],[a,mc],[a,mc,OBlFB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3113() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ax","lRblO","aNXA","vRLnV","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[vRLnV],[vRLnV,O],[aNXA],[aNXA,O],[aNXA,vRLnV],[aNXA,vRLnV,O],[lRblO],[lRblO,O],[lRblO,vRLnV],[lRblO,vRLnV,O],[lRblO,aNXA],[lRblO,aNXA,O],[lRblO,aNXA,vRLnV],[lRblO,aNXA,vRLnV,O],[Ax],[Ax,O],[Ax,vRLnV],[Ax,vRLnV,O],[Ax,aNXA],[Ax,aNXA,O],[Ax,aNXA,vRLnV],[Ax,aNXA,vRLnV,O],[Ax,lRblO],[Ax,lRblO,O],[Ax,lRblO,vRLnV],[Ax,lRblO,vRLnV,O],[Ax,lRblO,aNXA],[Ax,lRblO,aNXA,O],[Ax,lRblO,aNXA,vRLnV],[Ax,lRblO,aNXA,vRLnV,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3114() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eLy","Xrl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xrl],[eLy],[eLy,Xrl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3115() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eu","P","tLi","ZeWSt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZeWSt],[tLi],[tLi,ZeWSt],[P],[P,ZeWSt],[P,tLi],[P,tLi,ZeWSt],[eu],[eu,ZeWSt],[eu,tLi],[eu,tLi,ZeWSt],[eu,P],[eu,P,ZeWSt],[eu,P,tLi],[eu,P,tLi,ZeWSt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3116() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AqF","HgM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HgM],[AqF],[AqF,HgM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3117() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uHt","kzfM","qhkbN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qhkbN],[kzfM],[kzfM,qhkbN],[uHt],[uHt,qhkbN],[uHt,kzfM],[uHt,kzfM,qhkbN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3118() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","AiPKO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AiPKO],[s],[s,AiPKO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3119() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yrLl","Ae","IJaEh","UuV","DN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DN],[UuV],[UuV,DN],[IJaEh],[IJaEh,DN],[IJaEh,UuV],[IJaEh,UuV,DN],[Ae],[Ae,DN],[Ae,UuV],[Ae,UuV,DN],[Ae,IJaEh],[Ae,IJaEh,DN],[Ae,IJaEh,UuV],[Ae,IJaEh,UuV,DN],[yrLl],[yrLl,DN],[yrLl,UuV],[yrLl,UuV,DN],[yrLl,IJaEh],[yrLl,IJaEh,DN],[yrLl,IJaEh,UuV],[yrLl,IJaEh,UuV,DN],[yrLl,Ae],[yrLl,Ae,DN],[yrLl,Ae,UuV],[yrLl,Ae,UuV,DN],[yrLl,Ae,IJaEh],[yrLl,Ae,IJaEh,DN],[yrLl,Ae,IJaEh,UuV],[yrLl,Ae,IJaEh,UuV,DN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3120() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QQ","Wd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wd],[QQ],[QQ,Wd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3121() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","NPOMj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NPOMj],[Y],[Y,NPOMj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3122() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3123() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","zaP","HixC","WXVGN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WXVGN],[HixC],[HixC,WXVGN],[zaP],[zaP,WXVGN],[zaP,HixC],[zaP,HixC,WXVGN],[V],[V,WXVGN],[V,HixC],[V,HixC,WXVGN],[V,zaP],[V,zaP,WXVGN],[V,zaP,HixC],[V,zaP,HixC,WXVGN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3124() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uTem")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uTem]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3125() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xKd","j","Jcqp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jcqp],[j],[j,Jcqp],[xKd],[xKd,Jcqp],[xKd,j],[xKd,j,Jcqp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3126() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mo","zAcy","BW","TZ","wkxUg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wkxUg],[TZ],[TZ,wkxUg],[BW],[BW,wkxUg],[BW,TZ],[BW,TZ,wkxUg],[zAcy],[zAcy,wkxUg],[zAcy,TZ],[zAcy,TZ,wkxUg],[zAcy,BW],[zAcy,BW,wkxUg],[zAcy,BW,TZ],[zAcy,BW,TZ,wkxUg],[Mo],[Mo,wkxUg],[Mo,TZ],[Mo,TZ,wkxUg],[Mo,BW],[Mo,BW,wkxUg],[Mo,BW,TZ],[Mo,BW,TZ,wkxUg],[Mo,zAcy],[Mo,zAcy,wkxUg],[Mo,zAcy,TZ],[Mo,zAcy,TZ,wkxUg],[Mo,zAcy,BW],[Mo,zAcy,BW,wkxUg],[Mo,zAcy,BW,TZ],[Mo,zAcy,BW,TZ,wkxUg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3127() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PliCq","Fl","wIK","MxvkI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MxvkI],[wIK],[wIK,MxvkI],[Fl],[Fl,MxvkI],[Fl,wIK],[Fl,wIK,MxvkI],[PliCq],[PliCq,MxvkI],[PliCq,wIK],[PliCq,wIK,MxvkI],[PliCq,Fl],[PliCq,Fl,MxvkI],[PliCq,Fl,wIK],[PliCq,Fl,wIK,MxvkI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3128() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wB","lY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lY],[wB],[wB,lY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3129() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","yBAhV","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[yBAhV],[yBAhV,o],[U],[U,o],[U,yBAhV],[U,yBAhV,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3130() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bX","qPXu","j","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[j],[j,o],[qPXu],[qPXu,o],[qPXu,j],[qPXu,j,o],[bX],[bX,o],[bX,j],[bX,j,o],[bX,qPXu],[bX,qPXu,o],[bX,qPXu,j],[bX,qPXu,j,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3131() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aPP","sh","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[sh],[sh,m],[aPP],[aPP,m],[aPP,sh],[aPP,sh,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3132() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3133() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NItY","PM","eqiFD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eqiFD],[PM],[PM,eqiFD],[NItY],[NItY,eqiFD],[NItY,PM],[NItY,PM,eqiFD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3134() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","OD","Pj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pj],[OD],[OD,Pj],[S],[S,Pj],[S,OD],[S,OD,Pj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3135() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pae","Md","bzuq","fe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fe],[bzuq],[bzuq,fe],[Md],[Md,fe],[Md,bzuq],[Md,bzuq,fe],[pae],[pae,fe],[pae,bzuq],[pae,bzuq,fe],[pae,Md],[pae,Md,fe],[pae,Md,bzuq],[pae,Md,bzuq,fe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3136() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nxQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nxQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3137() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","W","YzWft","Lz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lz],[YzWft],[YzWft,Lz],[W],[W,Lz],[W,YzWft],[W,YzWft,Lz],[Q],[Q,Lz],[Q,YzWft],[Q,YzWft,Lz],[Q,W],[Q,W,Lz],[Q,W,YzWft],[Q,W,YzWft,Lz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3138() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EU","xqaPF","CXRe","G","bNu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bNu],[G],[G,bNu],[CXRe],[CXRe,bNu],[CXRe,G],[CXRe,G,bNu],[xqaPF],[xqaPF,bNu],[xqaPF,G],[xqaPF,G,bNu],[xqaPF,CXRe],[xqaPF,CXRe,bNu],[xqaPF,CXRe,G],[xqaPF,CXRe,G,bNu],[EU],[EU,bNu],[EU,G],[EU,G,bNu],[EU,CXRe],[EU,CXRe,bNu],[EU,CXRe,G],[EU,CXRe,G,bNu],[EU,xqaPF],[EU,xqaPF,bNu],[EU,xqaPF,G],[EU,xqaPF,G,bNu],[EU,xqaPF,CXRe],[EU,xqaPF,CXRe,bNu],[EU,xqaPF,CXRe,G],[EU,xqaPF,CXRe,G,bNu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3139() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NO","s","Xt","eD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eD],[Xt],[Xt,eD],[s],[s,eD],[s,Xt],[s,Xt,eD],[NO],[NO,eD],[NO,Xt],[NO,Xt,eD],[NO,s],[NO,s,eD],[NO,s,Xt],[NO,s,Xt,eD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3140() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","aw","pEkGr","Lf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lf],[pEkGr],[pEkGr,Lf],[aw],[aw,Lf],[aw,pEkGr],[aw,pEkGr,Lf],[e],[e,Lf],[e,pEkGr],[e,pEkGr,Lf],[e,aw],[e,aw,Lf],[e,aw,pEkGr],[e,aw,pEkGr,Lf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3141() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WYOj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WYOj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3142() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","AYdxA","kc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kc],[AYdxA],[AYdxA,kc],[f],[f,kc],[f,AYdxA],[f,AYdxA,kc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3143() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xNrX","yGSXZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yGSXZ],[xNrX],[xNrX,yGSXZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3144() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dqmo","b","GqGZR","bWM","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[bWM],[bWM,m],[GqGZR],[GqGZR,m],[GqGZR,bWM],[GqGZR,bWM,m],[b],[b,m],[b,bWM],[b,bWM,m],[b,GqGZR],[b,GqGZR,m],[b,GqGZR,bWM],[b,GqGZR,bWM,m],[dqmo],[dqmo,m],[dqmo,bWM],[dqmo,bWM,m],[dqmo,GqGZR],[dqmo,GqGZR,m],[dqmo,GqGZR,bWM],[dqmo,GqGZR,bWM,m],[dqmo,b],[dqmo,b,m],[dqmo,b,bWM],[dqmo,b,bWM,m],[dqmo,b,GqGZR],[dqmo,b,GqGZR,m],[dqmo,b,GqGZR,bWM],[dqmo,b,GqGZR,bWM,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3145() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ybx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ybx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3146() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kuhn","U","Ya","LYUP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LYUP],[Ya],[Ya,LYUP],[U],[U,LYUP],[U,Ya],[U,Ya,LYUP],[kuhn],[kuhn,LYUP],[kuhn,Ya],[kuhn,Ya,LYUP],[kuhn,U],[kuhn,U,LYUP],[kuhn,U,Ya],[kuhn,U,Ya,LYUP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3147() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kAaaX","e","jS","XB","Gv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gv],[XB],[XB,Gv],[jS],[jS,Gv],[jS,XB],[jS,XB,Gv],[e],[e,Gv],[e,XB],[e,XB,Gv],[e,jS],[e,jS,Gv],[e,jS,XB],[e,jS,XB,Gv],[kAaaX],[kAaaX,Gv],[kAaaX,XB],[kAaaX,XB,Gv],[kAaaX,jS],[kAaaX,jS,Gv],[kAaaX,jS,XB],[kAaaX,jS,XB,Gv],[kAaaX,e],[kAaaX,e,Gv],[kAaaX,e,XB],[kAaaX,e,XB,Gv],[kAaaX,e,jS],[kAaaX,e,jS,Gv],[kAaaX,e,jS,XB],[kAaaX,e,jS,XB,Gv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3148() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Uu","QLcw","wOsnk","hc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hc],[wOsnk],[wOsnk,hc],[QLcw],[QLcw,hc],[QLcw,wOsnk],[QLcw,wOsnk,hc],[Uu],[Uu,hc],[Uu,wOsnk],[Uu,wOsnk,hc],[Uu,QLcw],[Uu,QLcw,hc],[Uu,QLcw,wOsnk],[Uu,QLcw,wOsnk,hc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3149() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Np","EHl","hCs","wsiKY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wsiKY],[hCs],[hCs,wsiKY],[EHl],[EHl,wsiKY],[EHl,hCs],[EHl,hCs,wsiKY],[Np],[Np,wsiKY],[Np,hCs],[Np,hCs,wsiKY],[Np,EHl],[Np,EHl,wsiKY],[Np,EHl,hCs],[Np,EHl,hCs,wsiKY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3150() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","F","JHg","HC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HC],[JHg],[JHg,HC],[F],[F,HC],[F,JHg],[F,JHg,HC],[e],[e,HC],[e,JHg],[e,JHg,HC],[e,F],[e,F,HC],[e,F,JHg],[e,F,JHg,HC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3151() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UzDW","PUL","KaYX","mX","LI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LI],[mX],[mX,LI],[KaYX],[KaYX,LI],[KaYX,mX],[KaYX,mX,LI],[PUL],[PUL,LI],[PUL,mX],[PUL,mX,LI],[PUL,KaYX],[PUL,KaYX,LI],[PUL,KaYX,mX],[PUL,KaYX,mX,LI],[UzDW],[UzDW,LI],[UzDW,mX],[UzDW,mX,LI],[UzDW,KaYX],[UzDW,KaYX,LI],[UzDW,KaYX,mX],[UzDW,KaYX,mX,LI],[UzDW,PUL],[UzDW,PUL,LI],[UzDW,PUL,mX],[UzDW,PUL,mX,LI],[UzDW,PUL,KaYX],[UzDW,PUL,KaYX,LI],[UzDW,PUL,KaYX,mX],[UzDW,PUL,KaYX,mX,LI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3152() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Por","uoKk","VU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VU],[uoKk],[uoKk,VU],[Por],[Por,VU],[Por,uoKk],[Por,uoKk,VU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3153() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XCIh","XUe","sPTE","Uzd","qFd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qFd],[Uzd],[Uzd,qFd],[sPTE],[sPTE,qFd],[sPTE,Uzd],[sPTE,Uzd,qFd],[XUe],[XUe,qFd],[XUe,Uzd],[XUe,Uzd,qFd],[XUe,sPTE],[XUe,sPTE,qFd],[XUe,sPTE,Uzd],[XUe,sPTE,Uzd,qFd],[XCIh],[XCIh,qFd],[XCIh,Uzd],[XCIh,Uzd,qFd],[XCIh,sPTE],[XCIh,sPTE,qFd],[XCIh,sPTE,Uzd],[XCIh,sPTE,Uzd,qFd],[XCIh,XUe],[XCIh,XUe,qFd],[XCIh,XUe,Uzd],[XCIh,XUe,Uzd,qFd],[XCIh,XUe,sPTE],[XCIh,XUe,sPTE,qFd],[XCIh,XUe,sPTE,Uzd],[XCIh,XUe,sPTE,Uzd,qFd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3154() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aSta","r","pTp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pTp],[r],[r,pTp],[aSta],[aSta,pTp],[aSta,r],[aSta,r,pTp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3155() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FmUA","Zeyw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zeyw],[FmUA],[FmUA,Zeyw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3156() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XQeG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XQeG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3157() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fKaY","mXQ","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[mXQ],[mXQ,h],[fKaY],[fKaY,h],[fKaY,mXQ],[fKaY,mXQ,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3158() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PRs","pQ","lshu","RQFE","chgY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[chgY],[RQFE],[RQFE,chgY],[lshu],[lshu,chgY],[lshu,RQFE],[lshu,RQFE,chgY],[pQ],[pQ,chgY],[pQ,RQFE],[pQ,RQFE,chgY],[pQ,lshu],[pQ,lshu,chgY],[pQ,lshu,RQFE],[pQ,lshu,RQFE,chgY],[PRs],[PRs,chgY],[PRs,RQFE],[PRs,RQFE,chgY],[PRs,lshu],[PRs,lshu,chgY],[PRs,lshu,RQFE],[PRs,lshu,RQFE,chgY],[PRs,pQ],[PRs,pQ,chgY],[PRs,pQ,RQFE],[PRs,pQ,RQFE,chgY],[PRs,pQ,lshu],[PRs,pQ,lshu,chgY],[PRs,pQ,lshu,RQFE],[PRs,pQ,lshu,RQFE,chgY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3159() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ffa","fKTZ","D","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[D],[D,I],[fKTZ],[fKTZ,I],[fKTZ,D],[fKTZ,D,I],[Ffa],[Ffa,I],[Ffa,D],[Ffa,D,I],[Ffa,fKTZ],[Ffa,fKTZ,I],[Ffa,fKTZ,D],[Ffa,fKTZ,D,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3160() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lP","tToQ","Mxb","cNvCh","CZut")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CZut],[cNvCh],[cNvCh,CZut],[Mxb],[Mxb,CZut],[Mxb,cNvCh],[Mxb,cNvCh,CZut],[tToQ],[tToQ,CZut],[tToQ,cNvCh],[tToQ,cNvCh,CZut],[tToQ,Mxb],[tToQ,Mxb,CZut],[tToQ,Mxb,cNvCh],[tToQ,Mxb,cNvCh,CZut],[lP],[lP,CZut],[lP,cNvCh],[lP,cNvCh,CZut],[lP,Mxb],[lP,Mxb,CZut],[lP,Mxb,cNvCh],[lP,Mxb,cNvCh,CZut],[lP,tToQ],[lP,tToQ,CZut],[lP,tToQ,cNvCh],[lP,tToQ,cNvCh,CZut],[lP,tToQ,Mxb],[lP,tToQ,Mxb,CZut],[lP,tToQ,Mxb,cNvCh],[lP,tToQ,Mxb,cNvCh,CZut]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3161() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XeKW","owqe","xqsJ","do","Cto")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cto],[do],[do,Cto],[xqsJ],[xqsJ,Cto],[xqsJ,do],[xqsJ,do,Cto],[owqe],[owqe,Cto],[owqe,do],[owqe,do,Cto],[owqe,xqsJ],[owqe,xqsJ,Cto],[owqe,xqsJ,do],[owqe,xqsJ,do,Cto],[XeKW],[XeKW,Cto],[XeKW,do],[XeKW,do,Cto],[XeKW,xqsJ],[XeKW,xqsJ,Cto],[XeKW,xqsJ,do],[XeKW,xqsJ,do,Cto],[XeKW,owqe],[XeKW,owqe,Cto],[XeKW,owqe,do],[XeKW,owqe,do,Cto],[XeKW,owqe,xqsJ],[XeKW,owqe,xqsJ,Cto],[XeKW,owqe,xqsJ,do],[XeKW,owqe,xqsJ,do,Cto]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3162() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xz","Jb","FPIw","WU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WU],[FPIw],[FPIw,WU],[Jb],[Jb,WU],[Jb,FPIw],[Jb,FPIw,WU],[Xz],[Xz,WU],[Xz,FPIw],[Xz,FPIw,WU],[Xz,Jb],[Xz,Jb,WU],[Xz,Jb,FPIw],[Xz,Jb,FPIw,WU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3163() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","xnzC","mV","lor")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lor],[mV],[mV,lor],[xnzC],[xnzC,lor],[xnzC,mV],[xnzC,mV,lor],[B],[B,lor],[B,mV],[B,mV,lor],[B,xnzC],[B,xnzC,lor],[B,xnzC,mV],[B,xnzC,mV,lor]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3164() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XLsI","jq","i","dHeq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dHeq],[i],[i,dHeq],[jq],[jq,dHeq],[jq,i],[jq,i,dHeq],[XLsI],[XLsI,dHeq],[XLsI,i],[XLsI,i,dHeq],[XLsI,jq],[XLsI,jq,dHeq],[XLsI,jq,i],[XLsI,jq,i,dHeq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3165() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","s","bf","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[bf],[bf,x],[s],[s,x],[s,bf],[s,bf,x],[Q],[Q,x],[Q,bf],[Q,bf,x],[Q,s],[Q,s,x],[Q,s,bf],[Q,s,bf,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3166() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LSQa","D","rNhw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rNhw],[D],[D,rNhw],[LSQa],[LSQa,rNhw],[LSQa,D],[LSQa,D,rNhw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3167() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","ypou","hpFpm","YeX","MLHD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MLHD],[YeX],[YeX,MLHD],[hpFpm],[hpFpm,MLHD],[hpFpm,YeX],[hpFpm,YeX,MLHD],[ypou],[ypou,MLHD],[ypou,YeX],[ypou,YeX,MLHD],[ypou,hpFpm],[ypou,hpFpm,MLHD],[ypou,hpFpm,YeX],[ypou,hpFpm,YeX,MLHD],[Q],[Q,MLHD],[Q,YeX],[Q,YeX,MLHD],[Q,hpFpm],[Q,hpFpm,MLHD],[Q,hpFpm,YeX],[Q,hpFpm,YeX,MLHD],[Q,ypou],[Q,ypou,MLHD],[Q,ypou,YeX],[Q,ypou,YeX,MLHD],[Q,ypou,hpFpm],[Q,ypou,hpFpm,MLHD],[Q,ypou,hpFpm,YeX],[Q,ypou,hpFpm,YeX,MLHD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3168() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "af","Meu","JJEmr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JJEmr],[Meu],[Meu,JJEmr],[af],[af,JJEmr],[af,Meu],[af,Meu,JJEmr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3169() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XxY","RmtS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RmtS],[XxY],[XxY,RmtS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3170() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qe","E","OU","G","hPAf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hPAf],[G],[G,hPAf],[OU],[OU,hPAf],[OU,G],[OU,G,hPAf],[E],[E,hPAf],[E,G],[E,G,hPAf],[E,OU],[E,OU,hPAf],[E,OU,G],[E,OU,G,hPAf],[qe],[qe,hPAf],[qe,G],[qe,G,hPAf],[qe,OU],[qe,OU,hPAf],[qe,OU,G],[qe,OU,G,hPAf],[qe,E],[qe,E,hPAf],[qe,E,G],[qe,E,G,hPAf],[qe,E,OU],[qe,E,OU,hPAf],[qe,E,OU,G],[qe,E,OU,G,hPAf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3171() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vdzQ","mz","NaA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NaA],[mz],[mz,NaA],[vdzQ],[vdzQ,NaA],[vdzQ,mz],[vdzQ,mz,NaA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3172() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i","nMj","JOtW","xuKpn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xuKpn],[JOtW],[JOtW,xuKpn],[nMj],[nMj,xuKpn],[nMj,JOtW],[nMj,JOtW,xuKpn],[i],[i,xuKpn],[i,JOtW],[i,JOtW,xuKpn],[i,nMj],[i,nMj,xuKpn],[i,nMj,JOtW],[i,nMj,JOtW,xuKpn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3173() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MZYq","VJaY","LQQW","NWSx","RvR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RvR],[NWSx],[NWSx,RvR],[LQQW],[LQQW,RvR],[LQQW,NWSx],[LQQW,NWSx,RvR],[VJaY],[VJaY,RvR],[VJaY,NWSx],[VJaY,NWSx,RvR],[VJaY,LQQW],[VJaY,LQQW,RvR],[VJaY,LQQW,NWSx],[VJaY,LQQW,NWSx,RvR],[MZYq],[MZYq,RvR],[MZYq,NWSx],[MZYq,NWSx,RvR],[MZYq,LQQW],[MZYq,LQQW,RvR],[MZYq,LQQW,NWSx],[MZYq,LQQW,NWSx,RvR],[MZYq,VJaY],[MZYq,VJaY,RvR],[MZYq,VJaY,NWSx],[MZYq,VJaY,NWSx,RvR],[MZYq,VJaY,LQQW],[MZYq,VJaY,LQQW,RvR],[MZYq,VJaY,LQQW,NWSx],[MZYq,VJaY,LQQW,NWSx,RvR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3174() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dw","T","dELco","CaF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CaF],[dELco],[dELco,CaF],[T],[T,CaF],[T,dELco],[T,dELco,CaF],[dw],[dw,CaF],[dw,dELco],[dw,dELco,CaF],[dw,T],[dw,T,CaF],[dw,T,dELco],[dw,T,dELco,CaF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3175() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IBPz","sfJ","bKgWy","Aqy","y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y],[Aqy],[Aqy,y],[bKgWy],[bKgWy,y],[bKgWy,Aqy],[bKgWy,Aqy,y],[sfJ],[sfJ,y],[sfJ,Aqy],[sfJ,Aqy,y],[sfJ,bKgWy],[sfJ,bKgWy,y],[sfJ,bKgWy,Aqy],[sfJ,bKgWy,Aqy,y],[IBPz],[IBPz,y],[IBPz,Aqy],[IBPz,Aqy,y],[IBPz,bKgWy],[IBPz,bKgWy,y],[IBPz,bKgWy,Aqy],[IBPz,bKgWy,Aqy,y],[IBPz,sfJ],[IBPz,sfJ,y],[IBPz,sfJ,Aqy],[IBPz,sfJ,Aqy,y],[IBPz,sfJ,bKgWy],[IBPz,sfJ,bKgWy,y],[IBPz,sfJ,bKgWy,Aqy],[IBPz,sfJ,bKgWy,Aqy,y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3176() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","AL","Uusgm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uusgm],[AL],[AL,Uusgm],[V],[V,Uusgm],[V,AL],[V,AL,Uusgm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3177() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "x","tmrcs","IH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IH],[tmrcs],[tmrcs,IH],[x],[x,IH],[x,tmrcs],[x,tmrcs,IH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3178() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[a]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3179() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LVh","skv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[skv],[LVh],[LVh,skv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3180() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","NVa","rmj","Sa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sa],[rmj],[rmj,Sa],[NVa],[NVa,Sa],[NVa,rmj],[NVa,rmj,Sa],[U],[U,Sa],[U,rmj],[U,rmj,Sa],[U,NVa],[U,NVa,Sa],[U,NVa,rmj],[U,NVa,rmj,Sa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3181() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pZK","ikmBK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ikmBK],[pZK],[pZK,ikmBK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3182() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hl","TrKN","BI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BI],[TrKN],[TrKN,BI],[hl],[hl,BI],[hl,TrKN],[hl,TrKN,BI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3183() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HQL","w","KNYU","kHi","xnymZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xnymZ],[kHi],[kHi,xnymZ],[KNYU],[KNYU,xnymZ],[KNYU,kHi],[KNYU,kHi,xnymZ],[w],[w,xnymZ],[w,kHi],[w,kHi,xnymZ],[w,KNYU],[w,KNYU,xnymZ],[w,KNYU,kHi],[w,KNYU,kHi,xnymZ],[HQL],[HQL,xnymZ],[HQL,kHi],[HQL,kHi,xnymZ],[HQL,KNYU],[HQL,KNYU,xnymZ],[HQL,KNYU,kHi],[HQL,KNYU,kHi,xnymZ],[HQL,w],[HQL,w,xnymZ],[HQL,w,kHi],[HQL,w,kHi,xnymZ],[HQL,w,KNYU],[HQL,w,KNYU,xnymZ],[HQL,w,KNYU,kHi],[HQL,w,KNYU,kHi,xnymZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3184() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jHO","EWk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EWk],[jHO],[jHO,EWk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3185() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","GCz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GCz],[T],[T,GCz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3186() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LM","IhSaD","qw","PlW","dxO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dxO],[PlW],[PlW,dxO],[qw],[qw,dxO],[qw,PlW],[qw,PlW,dxO],[IhSaD],[IhSaD,dxO],[IhSaD,PlW],[IhSaD,PlW,dxO],[IhSaD,qw],[IhSaD,qw,dxO],[IhSaD,qw,PlW],[IhSaD,qw,PlW,dxO],[LM],[LM,dxO],[LM,PlW],[LM,PlW,dxO],[LM,qw],[LM,qw,dxO],[LM,qw,PlW],[LM,qw,PlW,dxO],[LM,IhSaD],[LM,IhSaD,dxO],[LM,IhSaD,PlW],[LM,IhSaD,PlW,dxO],[LM,IhSaD,qw],[LM,IhSaD,qw,dxO],[LM,IhSaD,qw,PlW],[LM,IhSaD,qw,PlW,dxO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3187() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oOQ","Qf","Lr","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[Lr],[Lr,w],[Qf],[Qf,w],[Qf,Lr],[Qf,Lr,w],[oOQ],[oOQ,w],[oOQ,Lr],[oOQ,Lr,w],[oOQ,Qf],[oOQ,Qf,w],[oOQ,Qf,Lr],[oOQ,Qf,Lr,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3188() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dueQ","NxBzo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NxBzo],[dueQ],[dueQ,NxBzo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3189() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VVNF","wEmgP","EPf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EPf],[wEmgP],[wEmgP,EPf],[VVNF],[VVNF,EPf],[VVNF,wEmgP],[VVNF,wEmgP,EPf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3190() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","kuhwG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kuhwG],[c],[c,kuhwG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3191() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ppe","xHuOj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xHuOj],[ppe],[ppe,xHuOj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3192() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RYVxb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RYVxb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3193() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DHxhv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DHxhv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3194() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "onrMY","PmrX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PmrX],[onrMY],[onrMY,PmrX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3195() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cwny","CrstV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CrstV],[cwny],[cwny,CrstV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3196() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","Vdpkh","RFWv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RFWv],[Vdpkh],[Vdpkh,RFWv],[c],[c,RFWv],[c,Vdpkh],[c,Vdpkh,RFWv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3197() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tIX","ljC","JP","F","fS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fS],[F],[F,fS],[JP],[JP,fS],[JP,F],[JP,F,fS],[ljC],[ljC,fS],[ljC,F],[ljC,F,fS],[ljC,JP],[ljC,JP,fS],[ljC,JP,F],[ljC,JP,F,fS],[tIX],[tIX,fS],[tIX,F],[tIX,F,fS],[tIX,JP],[tIX,JP,fS],[tIX,JP,F],[tIX,JP,F,fS],[tIX,ljC],[tIX,ljC,fS],[tIX,ljC,F],[tIX,ljC,F,fS],[tIX,ljC,JP],[tIX,ljC,JP,fS],[tIX,ljC,JP,F],[tIX,ljC,JP,F,fS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3198() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FHaj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FHaj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3199() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HHQnG","mT","h","Z","qAHr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qAHr],[Z],[Z,qAHr],[h],[h,qAHr],[h,Z],[h,Z,qAHr],[mT],[mT,qAHr],[mT,Z],[mT,Z,qAHr],[mT,h],[mT,h,qAHr],[mT,h,Z],[mT,h,Z,qAHr],[HHQnG],[HHQnG,qAHr],[HHQnG,Z],[HHQnG,Z,qAHr],[HHQnG,h],[HHQnG,h,qAHr],[HHQnG,h,Z],[HHQnG,h,Z,qAHr],[HHQnG,mT],[HHQnG,mT,qAHr],[HHQnG,mT,Z],[HHQnG,mT,Z,qAHr],[HHQnG,mT,h],[HHQnG,mT,h,qAHr],[HHQnG,mT,h,Z],[HHQnG,mT,h,Z,qAHr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3200() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hzPB","bqgVZ","DL","nK","yv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yv],[nK],[nK,yv],[DL],[DL,yv],[DL,nK],[DL,nK,yv],[bqgVZ],[bqgVZ,yv],[bqgVZ,nK],[bqgVZ,nK,yv],[bqgVZ,DL],[bqgVZ,DL,yv],[bqgVZ,DL,nK],[bqgVZ,DL,nK,yv],[hzPB],[hzPB,yv],[hzPB,nK],[hzPB,nK,yv],[hzPB,DL],[hzPB,DL,yv],[hzPB,DL,nK],[hzPB,DL,nK,yv],[hzPB,bqgVZ],[hzPB,bqgVZ,yv],[hzPB,bqgVZ,nK],[hzPB,bqgVZ,nK,yv],[hzPB,bqgVZ,DL],[hzPB,bqgVZ,DL,yv],[hzPB,bqgVZ,DL,nK],[hzPB,bqgVZ,DL,nK,yv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3201() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uZHsk","C","Yd","an","CXC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CXC],[an],[an,CXC],[Yd],[Yd,CXC],[Yd,an],[Yd,an,CXC],[C],[C,CXC],[C,an],[C,an,CXC],[C,Yd],[C,Yd,CXC],[C,Yd,an],[C,Yd,an,CXC],[uZHsk],[uZHsk,CXC],[uZHsk,an],[uZHsk,an,CXC],[uZHsk,Yd],[uZHsk,Yd,CXC],[uZHsk,Yd,an],[uZHsk,Yd,an,CXC],[uZHsk,C],[uZHsk,C,CXC],[uZHsk,C,an],[uZHsk,C,an,CXC],[uZHsk,C,Yd],[uZHsk,C,Yd,CXC],[uZHsk,C,Yd,an],[uZHsk,C,Yd,an,CXC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3202() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yz","zVRnd","HBBNe","YFwop")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YFwop],[HBBNe],[HBBNe,YFwop],[zVRnd],[zVRnd,YFwop],[zVRnd,HBBNe],[zVRnd,HBBNe,YFwop],[yz],[yz,YFwop],[yz,HBBNe],[yz,HBBNe,YFwop],[yz,zVRnd],[yz,zVRnd,YFwop],[yz,zVRnd,HBBNe],[yz,zVRnd,HBBNe,YFwop]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3203() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pRQAW","F")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[F],[pRQAW],[pRQAW,F]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3204() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eE","sRiDK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sRiDK],[eE],[eE,sRiDK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3205() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KOf","H","yWj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yWj],[H],[H,yWj],[KOf],[KOf,yWj],[KOf,H],[KOf,H,yWj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3206() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VXw","cZk","ZRq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZRq],[cZk],[cZk,ZRq],[VXw],[VXw,ZRq],[VXw,cZk],[VXw,cZk,ZRq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3207() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kt","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[kt],[kt,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3208() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "woyt","Rf","RKb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RKb],[Rf],[Rf,RKb],[woyt],[woyt,RKb],[woyt,Rf],[woyt,Rf,RKb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3209() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GoE","Ygwn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ygwn],[GoE],[GoE,Ygwn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3210() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uzXoy","Tmf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tmf],[uzXoy],[uzXoy,Tmf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3211() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","DMf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DMf],[r],[r,DMf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3212() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eiZk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eiZk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3213() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SHX","kCJU","uk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uk],[kCJU],[kCJU,uk],[SHX],[SHX,uk],[SHX,kCJU],[SHX,kCJU,uk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3214() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JoHtH","MPVp","REPHX","pcr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pcr],[REPHX],[REPHX,pcr],[MPVp],[MPVp,pcr],[MPVp,REPHX],[MPVp,REPHX,pcr],[JoHtH],[JoHtH,pcr],[JoHtH,REPHX],[JoHtH,REPHX,pcr],[JoHtH,MPVp],[JoHtH,MPVp,pcr],[JoHtH,MPVp,REPHX],[JoHtH,MPVp,REPHX,pcr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3215() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pJ","ZvHb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZvHb],[pJ],[pJ,ZvHb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3216() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iSJ","DCGE","E","fSORl","xg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xg],[fSORl],[fSORl,xg],[E],[E,xg],[E,fSORl],[E,fSORl,xg],[DCGE],[DCGE,xg],[DCGE,fSORl],[DCGE,fSORl,xg],[DCGE,E],[DCGE,E,xg],[DCGE,E,fSORl],[DCGE,E,fSORl,xg],[iSJ],[iSJ,xg],[iSJ,fSORl],[iSJ,fSORl,xg],[iSJ,E],[iSJ,E,xg],[iSJ,E,fSORl],[iSJ,E,fSORl,xg],[iSJ,DCGE],[iSJ,DCGE,xg],[iSJ,DCGE,fSORl],[iSJ,DCGE,fSORl,xg],[iSJ,DCGE,E],[iSJ,DCGE,E,xg],[iSJ,DCGE,E,fSORl],[iSJ,DCGE,E,fSORl,xg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3217() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","IX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IX],[D],[D,IX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3218() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ru","wdY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wdY],[Ru],[Ru,wdY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3219() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XJAoJ","OIJ","FlK","Ji","Sb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sb],[Ji],[Ji,Sb],[FlK],[FlK,Sb],[FlK,Ji],[FlK,Ji,Sb],[OIJ],[OIJ,Sb],[OIJ,Ji],[OIJ,Ji,Sb],[OIJ,FlK],[OIJ,FlK,Sb],[OIJ,FlK,Ji],[OIJ,FlK,Ji,Sb],[XJAoJ],[XJAoJ,Sb],[XJAoJ,Ji],[XJAoJ,Ji,Sb],[XJAoJ,FlK],[XJAoJ,FlK,Sb],[XJAoJ,FlK,Ji],[XJAoJ,FlK,Ji,Sb],[XJAoJ,OIJ],[XJAoJ,OIJ,Sb],[XJAoJ,OIJ,Ji],[XJAoJ,OIJ,Ji,Sb],[XJAoJ,OIJ,FlK],[XJAoJ,OIJ,FlK,Sb],[XJAoJ,OIJ,FlK,Ji],[XJAoJ,OIJ,FlK,Ji,Sb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3220() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "axw","DBZh","twkp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[twkp],[DBZh],[DBZh,twkp],[axw],[axw,twkp],[axw,DBZh],[axw,DBZh,twkp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3221() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jJ","JjaD","kd","XqX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XqX],[kd],[kd,XqX],[JjaD],[JjaD,XqX],[JjaD,kd],[JjaD,kd,XqX],[jJ],[jJ,XqX],[jJ,kd],[jJ,kd,XqX],[jJ,JjaD],[jJ,JjaD,XqX],[jJ,JjaD,kd],[jJ,JjaD,kd,XqX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3222() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uKOWB","ENQH","PfvG","e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e],[PfvG],[PfvG,e],[ENQH],[ENQH,e],[ENQH,PfvG],[ENQH,PfvG,e],[uKOWB],[uKOWB,e],[uKOWB,PfvG],[uKOWB,PfvG,e],[uKOWB,ENQH],[uKOWB,ENQH,e],[uKOWB,ENQH,PfvG],[uKOWB,ENQH,PfvG,e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3223() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iOAk","ksPzr","Dks","kTW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kTW],[Dks],[Dks,kTW],[ksPzr],[ksPzr,kTW],[ksPzr,Dks],[ksPzr,Dks,kTW],[iOAk],[iOAk,kTW],[iOAk,Dks],[iOAk,Dks,kTW],[iOAk,ksPzr],[iOAk,ksPzr,kTW],[iOAk,ksPzr,Dks],[iOAk,ksPzr,Dks,kTW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3224() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RIZH","JCrm","Toa","BpleU","ak")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ak],[BpleU],[BpleU,ak],[Toa],[Toa,ak],[Toa,BpleU],[Toa,BpleU,ak],[JCrm],[JCrm,ak],[JCrm,BpleU],[JCrm,BpleU,ak],[JCrm,Toa],[JCrm,Toa,ak],[JCrm,Toa,BpleU],[JCrm,Toa,BpleU,ak],[RIZH],[RIZH,ak],[RIZH,BpleU],[RIZH,BpleU,ak],[RIZH,Toa],[RIZH,Toa,ak],[RIZH,Toa,BpleU],[RIZH,Toa,BpleU,ak],[RIZH,JCrm],[RIZH,JCrm,ak],[RIZH,JCrm,BpleU],[RIZH,JCrm,BpleU,ak],[RIZH,JCrm,Toa],[RIZH,JCrm,Toa,ak],[RIZH,JCrm,Toa,BpleU],[RIZH,JCrm,Toa,BpleU,ak]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3225() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iJ","GRP","wZZMH","Tl","PkW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PkW],[Tl],[Tl,PkW],[wZZMH],[wZZMH,PkW],[wZZMH,Tl],[wZZMH,Tl,PkW],[GRP],[GRP,PkW],[GRP,Tl],[GRP,Tl,PkW],[GRP,wZZMH],[GRP,wZZMH,PkW],[GRP,wZZMH,Tl],[GRP,wZZMH,Tl,PkW],[iJ],[iJ,PkW],[iJ,Tl],[iJ,Tl,PkW],[iJ,wZZMH],[iJ,wZZMH,PkW],[iJ,wZZMH,Tl],[iJ,wZZMH,Tl,PkW],[iJ,GRP],[iJ,GRP,PkW],[iJ,GRP,Tl],[iJ,GRP,Tl,PkW],[iJ,GRP,wZZMH],[iJ,GRP,wZZMH,PkW],[iJ,GRP,wZZMH,Tl],[iJ,GRP,wZZMH,Tl,PkW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3226() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ab","f","vS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vS],[f],[f,vS],[Ab],[Ab,vS],[Ab,f],[Ab,f,vS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3227() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ov","wNjtj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wNjtj],[Ov],[Ov,wNjtj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3228() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ln","rIJIP","ZHF","mZYT","fA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fA],[mZYT],[mZYT,fA],[ZHF],[ZHF,fA],[ZHF,mZYT],[ZHF,mZYT,fA],[rIJIP],[rIJIP,fA],[rIJIP,mZYT],[rIJIP,mZYT,fA],[rIJIP,ZHF],[rIJIP,ZHF,fA],[rIJIP,ZHF,mZYT],[rIJIP,ZHF,mZYT,fA],[Ln],[Ln,fA],[Ln,mZYT],[Ln,mZYT,fA],[Ln,ZHF],[Ln,ZHF,fA],[Ln,ZHF,mZYT],[Ln,ZHF,mZYT,fA],[Ln,rIJIP],[Ln,rIJIP,fA],[Ln,rIJIP,mZYT],[Ln,rIJIP,mZYT,fA],[Ln,rIJIP,ZHF],[Ln,rIJIP,ZHF,fA],[Ln,rIJIP,ZHF,mZYT],[Ln,rIJIP,ZHF,mZYT,fA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3229() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","lcB","PID","Tbx","JMkDu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JMkDu],[Tbx],[Tbx,JMkDu],[PID],[PID,JMkDu],[PID,Tbx],[PID,Tbx,JMkDu],[lcB],[lcB,JMkDu],[lcB,Tbx],[lcB,Tbx,JMkDu],[lcB,PID],[lcB,PID,JMkDu],[lcB,PID,Tbx],[lcB,PID,Tbx,JMkDu],[p],[p,JMkDu],[p,Tbx],[p,Tbx,JMkDu],[p,PID],[p,PID,JMkDu],[p,PID,Tbx],[p,PID,Tbx,JMkDu],[p,lcB],[p,lcB,JMkDu],[p,lcB,Tbx],[p,lcB,Tbx,JMkDu],[p,lcB,PID],[p,lcB,PID,JMkDu],[p,lcB,PID,Tbx],[p,lcB,PID,Tbx,JMkDu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3230() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bk","eKc","ptZiA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ptZiA],[eKc],[eKc,ptZiA],[Bk],[Bk,ptZiA],[Bk,eKc],[Bk,eKc,ptZiA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3231() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "miQ","LKY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LKY],[miQ],[miQ,LKY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3232() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hVo","OA","TJ","PbEHx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PbEHx],[TJ],[TJ,PbEHx],[OA],[OA,PbEHx],[OA,TJ],[OA,TJ,PbEHx],[hVo],[hVo,PbEHx],[hVo,TJ],[hVo,TJ,PbEHx],[hVo,OA],[hVo,OA,PbEHx],[hVo,OA,TJ],[hVo,OA,TJ,PbEHx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3233() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cd","ADxhc","FRkU","BQx","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[BQx],[BQx,n],[FRkU],[FRkU,n],[FRkU,BQx],[FRkU,BQx,n],[ADxhc],[ADxhc,n],[ADxhc,BQx],[ADxhc,BQx,n],[ADxhc,FRkU],[ADxhc,FRkU,n],[ADxhc,FRkU,BQx],[ADxhc,FRkU,BQx,n],[cd],[cd,n],[cd,BQx],[cd,BQx,n],[cd,FRkU],[cd,FRkU,n],[cd,FRkU,BQx],[cd,FRkU,BQx,n],[cd,ADxhc],[cd,ADxhc,n],[cd,ADxhc,BQx],[cd,ADxhc,BQx,n],[cd,ADxhc,FRkU],[cd,ADxhc,FRkU,n],[cd,ADxhc,FRkU,BQx],[cd,ADxhc,FRkU,BQx,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3234() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","Sk","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[Sk],[Sk,O],[V],[V,O],[V,Sk],[V,Sk,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3235() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EfX","zqojB","ugO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ugO],[zqojB],[zqojB,ugO],[EfX],[EfX,ugO],[EfX,zqojB],[EfX,zqojB,ugO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3236() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hGq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hGq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3237() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","QL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QL],[q],[q,QL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3238() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "soPkP","jY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jY],[soPkP],[soPkP,jY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3239() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PGSLz","DyG","K","esquZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[esquZ],[K],[K,esquZ],[DyG],[DyG,esquZ],[DyG,K],[DyG,K,esquZ],[PGSLz],[PGSLz,esquZ],[PGSLz,K],[PGSLz,K,esquZ],[PGSLz,DyG],[PGSLz,DyG,esquZ],[PGSLz,DyG,K],[PGSLz,DyG,K,esquZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3240() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vnY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vnY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3241() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3242() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3243() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vF","no","ijX","LCFwn","GrD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GrD],[LCFwn],[LCFwn,GrD],[ijX],[ijX,GrD],[ijX,LCFwn],[ijX,LCFwn,GrD],[no],[no,GrD],[no,LCFwn],[no,LCFwn,GrD],[no,ijX],[no,ijX,GrD],[no,ijX,LCFwn],[no,ijX,LCFwn,GrD],[vF],[vF,GrD],[vF,LCFwn],[vF,LCFwn,GrD],[vF,ijX],[vF,ijX,GrD],[vF,ijX,LCFwn],[vF,ijX,LCFwn,GrD],[vF,no],[vF,no,GrD],[vF,no,LCFwn],[vF,no,LCFwn,GrD],[vF,no,ijX],[vF,no,ijX,GrD],[vF,no,ijX,LCFwn],[vF,no,ijX,LCFwn,GrD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3244() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[B]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3245() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qlK","JIeDa","ElO","wyjP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wyjP],[ElO],[ElO,wyjP],[JIeDa],[JIeDa,wyjP],[JIeDa,ElO],[JIeDa,ElO,wyjP],[qlK],[qlK,wyjP],[qlK,ElO],[qlK,ElO,wyjP],[qlK,JIeDa],[qlK,JIeDa,wyjP],[qlK,JIeDa,ElO],[qlK,JIeDa,ElO,wyjP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3246() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YlRg","UCG","kxe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kxe],[UCG],[UCG,kxe],[YlRg],[YlRg,kxe],[YlRg,UCG],[YlRg,UCG,kxe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3247() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","VmL","NcaBS","It","NLK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NLK],[It],[It,NLK],[NcaBS],[NcaBS,NLK],[NcaBS,It],[NcaBS,It,NLK],[VmL],[VmL,NLK],[VmL,It],[VmL,It,NLK],[VmL,NcaBS],[VmL,NcaBS,NLK],[VmL,NcaBS,It],[VmL,NcaBS,It,NLK],[s],[s,NLK],[s,It],[s,It,NLK],[s,NcaBS],[s,NcaBS,NLK],[s,NcaBS,It],[s,NcaBS,It,NLK],[s,VmL],[s,VmL,NLK],[s,VmL,It],[s,VmL,It,NLK],[s,VmL,NcaBS],[s,VmL,NcaBS,NLK],[s,VmL,NcaBS,It],[s,VmL,NcaBS,It,NLK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3248() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XSer","QUJY","j","wum")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wum],[j],[j,wum],[QUJY],[QUJY,wum],[QUJY,j],[QUJY,j,wum],[XSer],[XSer,wum],[XSer,j],[XSer,j,wum],[XSer,QUJY],[XSer,QUJY,wum],[XSer,QUJY,j],[XSer,QUJY,j,wum]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3249() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QD","JfyBl","Uwzum","MsXl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MsXl],[Uwzum],[Uwzum,MsXl],[JfyBl],[JfyBl,MsXl],[JfyBl,Uwzum],[JfyBl,Uwzum,MsXl],[QD],[QD,MsXl],[QD,Uwzum],[QD,Uwzum,MsXl],[QD,JfyBl],[QD,JfyBl,MsXl],[QD,JfyBl,Uwzum],[QD,JfyBl,Uwzum,MsXl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3250() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3251() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vl","i","xxxk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xxxk],[i],[i,xxxk],[vl],[vl,xxxk],[vl,i],[vl,i,xxxk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3252() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "al","L","wwGA","m","aNjsL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aNjsL],[m],[m,aNjsL],[wwGA],[wwGA,aNjsL],[wwGA,m],[wwGA,m,aNjsL],[L],[L,aNjsL],[L,m],[L,m,aNjsL],[L,wwGA],[L,wwGA,aNjsL],[L,wwGA,m],[L,wwGA,m,aNjsL],[al],[al,aNjsL],[al,m],[al,m,aNjsL],[al,wwGA],[al,wwGA,aNjsL],[al,wwGA,m],[al,wwGA,m,aNjsL],[al,L],[al,L,aNjsL],[al,L,m],[al,L,m,aNjsL],[al,L,wwGA],[al,L,wwGA,aNjsL],[al,L,wwGA,m],[al,L,wwGA,m,aNjsL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3253() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xdEQw","W","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[W],[W,n],[xdEQw],[xdEQw,n],[xdEQw,W],[xdEQw,W,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3254() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jvVq","wxy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wxy],[jvVq],[jvVq,wxy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3255() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lmdx","LN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LN],[Lmdx],[Lmdx,LN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3256() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kBPL","RxLjM","Y","KniQY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KniQY],[Y],[Y,KniQY],[RxLjM],[RxLjM,KniQY],[RxLjM,Y],[RxLjM,Y,KniQY],[kBPL],[kBPL,KniQY],[kBPL,Y],[kBPL,Y,KniQY],[kBPL,RxLjM],[kBPL,RxLjM,KniQY],[kBPL,RxLjM,Y],[kBPL,RxLjM,Y,KniQY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3257() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OOtEA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OOtEA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3258() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bu","WAzub","JhGC","JX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JX],[JhGC],[JhGC,JX],[WAzub],[WAzub,JX],[WAzub,JhGC],[WAzub,JhGC,JX],[bu],[bu,JX],[bu,JhGC],[bu,JhGC,JX],[bu,WAzub],[bu,WAzub,JX],[bu,WAzub,JhGC],[bu,WAzub,JhGC,JX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3259() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iK","bG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bG],[iK],[iK,bG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3260() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qIIB","h","H","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[H],[H,o],[h],[h,o],[h,H],[h,H,o],[qIIB],[qIIB,o],[qIIB,H],[qIIB,H,o],[qIIB,h],[qIIB,h,o],[qIIB,h,H],[qIIB,h,H,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3261() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dLlr","e","fCMx","PDl","vaj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vaj],[PDl],[PDl,vaj],[fCMx],[fCMx,vaj],[fCMx,PDl],[fCMx,PDl,vaj],[e],[e,vaj],[e,PDl],[e,PDl,vaj],[e,fCMx],[e,fCMx,vaj],[e,fCMx,PDl],[e,fCMx,PDl,vaj],[dLlr],[dLlr,vaj],[dLlr,PDl],[dLlr,PDl,vaj],[dLlr,fCMx],[dLlr,fCMx,vaj],[dLlr,fCMx,PDl],[dLlr,fCMx,PDl,vaj],[dLlr,e],[dLlr,e,vaj],[dLlr,e,PDl],[dLlr,e,PDl,vaj],[dLlr,e,fCMx],[dLlr,e,fCMx,vaj],[dLlr,e,fCMx,PDl],[dLlr,e,fCMx,PDl,vaj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3262() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","aX","YFV","jXbl","beiRg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[beiRg],[jXbl],[jXbl,beiRg],[YFV],[YFV,beiRg],[YFV,jXbl],[YFV,jXbl,beiRg],[aX],[aX,beiRg],[aX,jXbl],[aX,jXbl,beiRg],[aX,YFV],[aX,YFV,beiRg],[aX,YFV,jXbl],[aX,YFV,jXbl,beiRg],[f],[f,beiRg],[f,jXbl],[f,jXbl,beiRg],[f,YFV],[f,YFV,beiRg],[f,YFV,jXbl],[f,YFV,jXbl,beiRg],[f,aX],[f,aX,beiRg],[f,aX,jXbl],[f,aX,jXbl,beiRg],[f,aX,YFV],[f,aX,YFV,beiRg],[f,aX,YFV,jXbl],[f,aX,YFV,jXbl,beiRg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3263() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ocYJ","lS","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[lS],[lS,Z],[ocYJ],[ocYJ,Z],[ocYJ,lS],[ocYJ,lS,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3264() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vsyZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vsyZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3265() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "anXt","vfV","rIXjp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rIXjp],[vfV],[vfV,rIXjp],[anXt],[anXt,rIXjp],[anXt,vfV],[anXt,vfV,rIXjp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3266() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3267() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HFwpO","MxlF","OF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OF],[MxlF],[MxlF,OF],[HFwpO],[HFwpO,OF],[HFwpO,MxlF],[HFwpO,MxlF,OF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3268() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zzfJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zzfJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3269() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mumjk","jhIwZ","iLniS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iLniS],[jhIwZ],[jhIwZ,iLniS],[Mumjk],[Mumjk,iLniS],[Mumjk,jhIwZ],[Mumjk,jhIwZ,iLniS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3270() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YJ","C","Pd","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[Pd],[Pd,l],[C],[C,l],[C,Pd],[C,Pd,l],[YJ],[YJ,l],[YJ,Pd],[YJ,Pd,l],[YJ,C],[YJ,C,l],[YJ,C,Pd],[YJ,C,Pd,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3271() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nTJ","qWB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qWB],[nTJ],[nTJ,qWB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3272() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BTJs","Soafs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Soafs],[BTJs],[BTJs,Soafs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3273() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","HFLST","HiQY","M","rQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rQ],[M],[M,rQ],[HiQY],[HiQY,rQ],[HiQY,M],[HiQY,M,rQ],[HFLST],[HFLST,rQ],[HFLST,M],[HFLST,M,rQ],[HFLST,HiQY],[HFLST,HiQY,rQ],[HFLST,HiQY,M],[HFLST,HiQY,M,rQ],[D],[D,rQ],[D,M],[D,M,rQ],[D,HiQY],[D,HiQY,rQ],[D,HiQY,M],[D,HiQY,M,rQ],[D,HFLST],[D,HFLST,rQ],[D,HFLST,M],[D,HFLST,M,rQ],[D,HFLST,HiQY],[D,HFLST,HiQY,rQ],[D,HFLST,HiQY,M],[D,HFLST,HiQY,M,rQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3274() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fkdc","buI","BQg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BQg],[buI],[buI,BQg],[Fkdc],[Fkdc,BQg],[Fkdc,buI],[Fkdc,buI,BQg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3275() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","nkfuO","opyx","juz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[juz],[opyx],[opyx,juz],[nkfuO],[nkfuO,juz],[nkfuO,opyx],[nkfuO,opyx,juz],[b],[b,juz],[b,opyx],[b,opyx,juz],[b,nkfuO],[b,nkfuO,juz],[b,nkfuO,opyx],[b,nkfuO,opyx,juz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3276() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RtjSK","l","kx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kx],[l],[l,kx],[RtjSK],[RtjSK,kx],[RtjSK,l],[RtjSK,l,kx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3277() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xfr","njb","iU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iU],[njb],[njb,iU],[Xfr],[Xfr,iU],[Xfr,njb],[Xfr,njb,iU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3278() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uKXf","rdUc","YEC","WKz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WKz],[YEC],[YEC,WKz],[rdUc],[rdUc,WKz],[rdUc,YEC],[rdUc,YEC,WKz],[uKXf],[uKXf,WKz],[uKXf,YEC],[uKXf,YEC,WKz],[uKXf,rdUc],[uKXf,rdUc,WKz],[uKXf,rdUc,YEC],[uKXf,rdUc,YEC,WKz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3279() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3280() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QT","wo","DN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DN],[wo],[wo,DN],[QT],[QT,DN],[QT,wo],[QT,wo,DN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3281() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "quse","kLoYH","UPd","JH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JH],[UPd],[UPd,JH],[kLoYH],[kLoYH,JH],[kLoYH,UPd],[kLoYH,UPd,JH],[quse],[quse,JH],[quse,UPd],[quse,UPd,JH],[quse,kLoYH],[quse,kLoYH,JH],[quse,kLoYH,UPd],[quse,kLoYH,UPd,JH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3282() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cs","LxG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LxG],[Cs],[Cs,LxG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3283() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mXP","OU","bh","EeudC","HtJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HtJ],[EeudC],[EeudC,HtJ],[bh],[bh,HtJ],[bh,EeudC],[bh,EeudC,HtJ],[OU],[OU,HtJ],[OU,EeudC],[OU,EeudC,HtJ],[OU,bh],[OU,bh,HtJ],[OU,bh,EeudC],[OU,bh,EeudC,HtJ],[mXP],[mXP,HtJ],[mXP,EeudC],[mXP,EeudC,HtJ],[mXP,bh],[mXP,bh,HtJ],[mXP,bh,EeudC],[mXP,bh,EeudC,HtJ],[mXP,OU],[mXP,OU,HtJ],[mXP,OU,EeudC],[mXP,OU,EeudC,HtJ],[mXP,OU,bh],[mXP,OU,bh,HtJ],[mXP,OU,bh,EeudC],[mXP,OU,bh,EeudC,HtJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3284() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GEPQG","ost","aE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aE],[ost],[ost,aE],[GEPQG],[GEPQG,aE],[GEPQG,ost],[GEPQG,ost,aE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3285() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LASXa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LASXa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3286() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","CqX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CqX],[Y],[Y,CqX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3287() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UOTVV","JEkY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JEkY],[UOTVV],[UOTVV,JEkY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3288() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AR","Fh","kuWaP","nBAl","GjVo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GjVo],[nBAl],[nBAl,GjVo],[kuWaP],[kuWaP,GjVo],[kuWaP,nBAl],[kuWaP,nBAl,GjVo],[Fh],[Fh,GjVo],[Fh,nBAl],[Fh,nBAl,GjVo],[Fh,kuWaP],[Fh,kuWaP,GjVo],[Fh,kuWaP,nBAl],[Fh,kuWaP,nBAl,GjVo],[AR],[AR,GjVo],[AR,nBAl],[AR,nBAl,GjVo],[AR,kuWaP],[AR,kuWaP,GjVo],[AR,kuWaP,nBAl],[AR,kuWaP,nBAl,GjVo],[AR,Fh],[AR,Fh,GjVo],[AR,Fh,nBAl],[AR,Fh,nBAl,GjVo],[AR,Fh,kuWaP],[AR,Fh,kuWaP,GjVo],[AR,Fh,kuWaP,nBAl],[AR,Fh,kuWaP,nBAl,GjVo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3289() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Z","YZjo","WF","xrgD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xrgD],[WF],[WF,xrgD],[YZjo],[YZjo,xrgD],[YZjo,WF],[YZjo,WF,xrgD],[Z],[Z,xrgD],[Z,WF],[Z,WF,xrgD],[Z,YZjo],[Z,YZjo,xrgD],[Z,YZjo,WF],[Z,YZjo,WF,xrgD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3290() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AQ","BXnb","qw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qw],[BXnb],[BXnb,qw],[AQ],[AQ,qw],[AQ,BXnb],[AQ,BXnb,qw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3291() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rD","qMUH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qMUH],[rD],[rD,qMUH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3292() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","gMM","gm","BSg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BSg],[gm],[gm,BSg],[gMM],[gMM,BSg],[gMM,gm],[gMM,gm,BSg],[S],[S,BSg],[S,gm],[S,gm,BSg],[S,gMM],[S,gMM,BSg],[S,gMM,gm],[S,gMM,gm,BSg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3293() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JvwGD","rKK","t","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[t],[t,K],[rKK],[rKK,K],[rKK,t],[rKK,t,K],[JvwGD],[JvwGD,K],[JvwGD,t],[JvwGD,t,K],[JvwGD,rKK],[JvwGD,rKK,K],[JvwGD,rKK,t],[JvwGD,rKK,t,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3294() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oBmA","tyPM","XHWmw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XHWmw],[tyPM],[tyPM,XHWmw],[oBmA],[oBmA,XHWmw],[oBmA,tyPM],[oBmA,tyPM,XHWmw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3295() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vqH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vqH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3296() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lqH","LhA","F","pVR","VWP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VWP],[pVR],[pVR,VWP],[F],[F,VWP],[F,pVR],[F,pVR,VWP],[LhA],[LhA,VWP],[LhA,pVR],[LhA,pVR,VWP],[LhA,F],[LhA,F,VWP],[LhA,F,pVR],[LhA,F,pVR,VWP],[lqH],[lqH,VWP],[lqH,pVR],[lqH,pVR,VWP],[lqH,F],[lqH,F,VWP],[lqH,F,pVR],[lqH,F,pVR,VWP],[lqH,LhA],[lqH,LhA,VWP],[lqH,LhA,pVR],[lqH,LhA,pVR,VWP],[lqH,LhA,F],[lqH,LhA,F,VWP],[lqH,LhA,F,pVR],[lqH,LhA,F,pVR,VWP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3297() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","CPBR","zqi","G","Phc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Phc],[G],[G,Phc],[zqi],[zqi,Phc],[zqi,G],[zqi,G,Phc],[CPBR],[CPBR,Phc],[CPBR,G],[CPBR,G,Phc],[CPBR,zqi],[CPBR,zqi,Phc],[CPBR,zqi,G],[CPBR,zqi,G,Phc],[a],[a,Phc],[a,G],[a,G,Phc],[a,zqi],[a,zqi,Phc],[a,zqi,G],[a,zqi,G,Phc],[a,CPBR],[a,CPBR,Phc],[a,CPBR,G],[a,CPBR,G,Phc],[a,CPBR,zqi],[a,CPBR,zqi,Phc],[a,CPBR,zqi,G],[a,CPBR,zqi,G,Phc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3298() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fSRS","pa","od","NG","zgKa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zgKa],[NG],[NG,zgKa],[od],[od,zgKa],[od,NG],[od,NG,zgKa],[pa],[pa,zgKa],[pa,NG],[pa,NG,zgKa],[pa,od],[pa,od,zgKa],[pa,od,NG],[pa,od,NG,zgKa],[fSRS],[fSRS,zgKa],[fSRS,NG],[fSRS,NG,zgKa],[fSRS,od],[fSRS,od,zgKa],[fSRS,od,NG],[fSRS,od,NG,zgKa],[fSRS,pa],[fSRS,pa,zgKa],[fSRS,pa,NG],[fSRS,pa,NG,zgKa],[fSRS,pa,od],[fSRS,pa,od,zgKa],[fSRS,pa,od,NG],[fSRS,pa,od,NG,zgKa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3299() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HtBTZ","q","ztBg","hBkDX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hBkDX],[ztBg],[ztBg,hBkDX],[q],[q,hBkDX],[q,ztBg],[q,ztBg,hBkDX],[HtBTZ],[HtBTZ,hBkDX],[HtBTZ,ztBg],[HtBTZ,ztBg,hBkDX],[HtBTZ,q],[HtBTZ,q,hBkDX],[HtBTZ,q,ztBg],[HtBTZ,q,ztBg,hBkDX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3300() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qQdxB","S","fiyx","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[fiyx],[fiyx,n],[S],[S,n],[S,fiyx],[S,fiyx,n],[qQdxB],[qQdxB,n],[qQdxB,fiyx],[qQdxB,fiyx,n],[qQdxB,S],[qQdxB,S,n],[qQdxB,S,fiyx],[qQdxB,S,fiyx,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3301() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rg","nIQ","Dp","m","vUm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vUm],[m],[m,vUm],[Dp],[Dp,vUm],[Dp,m],[Dp,m,vUm],[nIQ],[nIQ,vUm],[nIQ,m],[nIQ,m,vUm],[nIQ,Dp],[nIQ,Dp,vUm],[nIQ,Dp,m],[nIQ,Dp,m,vUm],[Rg],[Rg,vUm],[Rg,m],[Rg,m,vUm],[Rg,Dp],[Rg,Dp,vUm],[Rg,Dp,m],[Rg,Dp,m,vUm],[Rg,nIQ],[Rg,nIQ,vUm],[Rg,nIQ,m],[Rg,nIQ,m,vUm],[Rg,nIQ,Dp],[Rg,nIQ,Dp,vUm],[Rg,nIQ,Dp,m],[Rg,nIQ,Dp,m,vUm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3302() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "krt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[krt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3303() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dTu","RTw","U","ck","LvjOK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LvjOK],[ck],[ck,LvjOK],[U],[U,LvjOK],[U,ck],[U,ck,LvjOK],[RTw],[RTw,LvjOK],[RTw,ck],[RTw,ck,LvjOK],[RTw,U],[RTw,U,LvjOK],[RTw,U,ck],[RTw,U,ck,LvjOK],[dTu],[dTu,LvjOK],[dTu,ck],[dTu,ck,LvjOK],[dTu,U],[dTu,U,LvjOK],[dTu,U,ck],[dTu,U,ck,LvjOK],[dTu,RTw],[dTu,RTw,LvjOK],[dTu,RTw,ck],[dTu,RTw,ck,LvjOK],[dTu,RTw,U],[dTu,RTw,U,LvjOK],[dTu,RTw,U,ck],[dTu,RTw,U,ck,LvjOK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3304() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vi","rJSN","eHN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eHN],[rJSN],[rJSN,eHN],[vi],[vi,eHN],[vi,rJSN],[vi,rJSN,eHN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3305() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3306() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","lxlH","wOGJV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wOGJV],[lxlH],[lxlH,wOGJV],[u],[u,wOGJV],[u,lxlH],[u,lxlH,wOGJV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3307() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","V","Z","phkm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[phkm],[Z],[Z,phkm],[V],[V,phkm],[V,Z],[V,Z,phkm],[R],[R,phkm],[R,Z],[R,Z,phkm],[R,V],[R,V,phkm],[R,V,Z],[R,V,Z,phkm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3308() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3309() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cC","T","uJ","k","jmUN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jmUN],[k],[k,jmUN],[uJ],[uJ,jmUN],[uJ,k],[uJ,k,jmUN],[T],[T,jmUN],[T,k],[T,k,jmUN],[T,uJ],[T,uJ,jmUN],[T,uJ,k],[T,uJ,k,jmUN],[cC],[cC,jmUN],[cC,k],[cC,k,jmUN],[cC,uJ],[cC,uJ,jmUN],[cC,uJ,k],[cC,uJ,k,jmUN],[cC,T],[cC,T,jmUN],[cC,T,k],[cC,T,k,jmUN],[cC,T,uJ],[cC,T,uJ,jmUN],[cC,T,uJ,k],[cC,T,uJ,k,jmUN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3310() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mkp","OsH","g","Qz","VR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VR],[Qz],[Qz,VR],[g],[g,VR],[g,Qz],[g,Qz,VR],[OsH],[OsH,VR],[OsH,Qz],[OsH,Qz,VR],[OsH,g],[OsH,g,VR],[OsH,g,Qz],[OsH,g,Qz,VR],[Mkp],[Mkp,VR],[Mkp,Qz],[Mkp,Qz,VR],[Mkp,g],[Mkp,g,VR],[Mkp,g,Qz],[Mkp,g,Qz,VR],[Mkp,OsH],[Mkp,OsH,VR],[Mkp,OsH,Qz],[Mkp,OsH,Qz,VR],[Mkp,OsH,g],[Mkp,OsH,g,VR],[Mkp,OsH,g,Qz],[Mkp,OsH,g,Qz,VR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3311() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oLE","IV","GbKoH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GbKoH],[IV],[IV,GbKoH],[oLE],[oLE,GbKoH],[oLE,IV],[oLE,IV,GbKoH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3312() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3313() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ehmqw","aGoaB","mmcJ","eCpr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eCpr],[mmcJ],[mmcJ,eCpr],[aGoaB],[aGoaB,eCpr],[aGoaB,mmcJ],[aGoaB,mmcJ,eCpr],[ehmqw],[ehmqw,eCpr],[ehmqw,mmcJ],[ehmqw,mmcJ,eCpr],[ehmqw,aGoaB],[ehmqw,aGoaB,eCpr],[ehmqw,aGoaB,mmcJ],[ehmqw,aGoaB,mmcJ,eCpr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3314() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sRNh","BLXHu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BLXHu],[sRNh],[sRNh,BLXHu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3315() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","Fq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Fq],[q],[q,Fq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3316() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","d","fkor","FbfYq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FbfYq],[fkor],[fkor,FbfYq],[d],[d,FbfYq],[d,fkor],[d,fkor,FbfYq],[D],[D,FbfYq],[D,fkor],[D,fkor,FbfYq],[D,d],[D,d,FbfYq],[D,d,fkor],[D,d,fkor,FbfYq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3317() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oFvmL","wtS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wtS],[oFvmL],[oFvmL,wtS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3318() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TH","rI","Cjvql","lEE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lEE],[Cjvql],[Cjvql,lEE],[rI],[rI,lEE],[rI,Cjvql],[rI,Cjvql,lEE],[TH],[TH,lEE],[TH,Cjvql],[TH,Cjvql,lEE],[TH,rI],[TH,rI,lEE],[TH,rI,Cjvql],[TH,rI,Cjvql,lEE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3319() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","MZSc","kPd","jcMB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jcMB],[kPd],[kPd,jcMB],[MZSc],[MZSc,jcMB],[MZSc,kPd],[MZSc,kPd,jcMB],[E],[E,jcMB],[E,kPd],[E,kPd,jcMB],[E,MZSc],[E,MZSc,jcMB],[E,MZSc,kPd],[E,MZSc,kPd,jcMB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3320() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "elx","UEjP","t","D","li")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[li],[D],[D,li],[t],[t,li],[t,D],[t,D,li],[UEjP],[UEjP,li],[UEjP,D],[UEjP,D,li],[UEjP,t],[UEjP,t,li],[UEjP,t,D],[UEjP,t,D,li],[elx],[elx,li],[elx,D],[elx,D,li],[elx,t],[elx,t,li],[elx,t,D],[elx,t,D,li],[elx,UEjP],[elx,UEjP,li],[elx,UEjP,D],[elx,UEjP,D,li],[elx,UEjP,t],[elx,UEjP,t,li],[elx,UEjP,t,D],[elx,UEjP,t,D,li]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3321() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3322() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","fFj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fFj],[T],[T,fFj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3323() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Y","jt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jt],[Y],[Y,jt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3324() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bE","i","Vfj","m","pyEF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pyEF],[m],[m,pyEF],[Vfj],[Vfj,pyEF],[Vfj,m],[Vfj,m,pyEF],[i],[i,pyEF],[i,m],[i,m,pyEF],[i,Vfj],[i,Vfj,pyEF],[i,Vfj,m],[i,Vfj,m,pyEF],[bE],[bE,pyEF],[bE,m],[bE,m,pyEF],[bE,Vfj],[bE,Vfj,pyEF],[bE,Vfj,m],[bE,Vfj,m,pyEF],[bE,i],[bE,i,pyEF],[bE,i,m],[bE,i,m,pyEF],[bE,i,Vfj],[bE,i,Vfj,pyEF],[bE,i,Vfj,m],[bE,i,Vfj,m,pyEF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3325() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","LM","knj","Nmz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nmz],[knj],[knj,Nmz],[LM],[LM,Nmz],[LM,knj],[LM,knj,Nmz],[P],[P,Nmz],[P,knj],[P,knj,Nmz],[P,LM],[P,LM,Nmz],[P,LM,knj],[P,LM,knj,Nmz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3326() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KbG","t","rISey","bq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bq],[rISey],[rISey,bq],[t],[t,bq],[t,rISey],[t,rISey,bq],[KbG],[KbG,bq],[KbG,rISey],[KbG,rISey,bq],[KbG,t],[KbG,t,bq],[KbG,t,rISey],[KbG,t,rISey,bq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3327() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kKR","eI","gpU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gpU],[eI],[eI,gpU],[kKR],[kKR,gpU],[kKR,eI],[kKR,eI,gpU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3328() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","TVQn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TVQn],[b],[b,TVQn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3329() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ncDjh","nYvk","h","Ie")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ie],[h],[h,Ie],[nYvk],[nYvk,Ie],[nYvk,h],[nYvk,h,Ie],[ncDjh],[ncDjh,Ie],[ncDjh,h],[ncDjh,h,Ie],[ncDjh,nYvk],[ncDjh,nYvk,Ie],[ncDjh,nYvk,h],[ncDjh,nYvk,h,Ie]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3330() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lPUF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lPUF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3331() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[B]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3332() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lhr","yRd","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[yRd],[yRd,Z],[Lhr],[Lhr,Z],[Lhr,yRd],[Lhr,yRd,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3333() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gz","t","nqKb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nqKb],[t],[t,nqKb],[gz],[gz,nqKb],[gz,t],[gz,t,nqKb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3334() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vkDAF","Zv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zv],[vkDAF],[vkDAF,Zv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3335() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sym")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sym]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3336() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","lTW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lTW],[f],[f,lTW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3337() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sxI","X","NuBCe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NuBCe],[X],[X,NuBCe],[sxI],[sxI,NuBCe],[sxI,X],[sxI,X,NuBCe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3338() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZSWX","No","ideMg","LoIjd","lZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lZ],[LoIjd],[LoIjd,lZ],[ideMg],[ideMg,lZ],[ideMg,LoIjd],[ideMg,LoIjd,lZ],[No],[No,lZ],[No,LoIjd],[No,LoIjd,lZ],[No,ideMg],[No,ideMg,lZ],[No,ideMg,LoIjd],[No,ideMg,LoIjd,lZ],[ZSWX],[ZSWX,lZ],[ZSWX,LoIjd],[ZSWX,LoIjd,lZ],[ZSWX,ideMg],[ZSWX,ideMg,lZ],[ZSWX,ideMg,LoIjd],[ZSWX,ideMg,LoIjd,lZ],[ZSWX,No],[ZSWX,No,lZ],[ZSWX,No,LoIjd],[ZSWX,No,LoIjd,lZ],[ZSWX,No,ideMg],[ZSWX,No,ideMg,lZ],[ZSWX,No,ideMg,LoIjd],[ZSWX,No,ideMg,LoIjd,lZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3339() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PubS","X","vNItq","Sp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sp],[vNItq],[vNItq,Sp],[X],[X,Sp],[X,vNItq],[X,vNItq,Sp],[PubS],[PubS,Sp],[PubS,vNItq],[PubS,vNItq,Sp],[PubS,X],[PubS,X,Sp],[PubS,X,vNItq],[PubS,X,vNItq,Sp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3340() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ll","OSpB","rKSZ","lHuHb","jqODB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jqODB],[lHuHb],[lHuHb,jqODB],[rKSZ],[rKSZ,jqODB],[rKSZ,lHuHb],[rKSZ,lHuHb,jqODB],[OSpB],[OSpB,jqODB],[OSpB,lHuHb],[OSpB,lHuHb,jqODB],[OSpB,rKSZ],[OSpB,rKSZ,jqODB],[OSpB,rKSZ,lHuHb],[OSpB,rKSZ,lHuHb,jqODB],[ll],[ll,jqODB],[ll,lHuHb],[ll,lHuHb,jqODB],[ll,rKSZ],[ll,rKSZ,jqODB],[ll,rKSZ,lHuHb],[ll,rKSZ,lHuHb,jqODB],[ll,OSpB],[ll,OSpB,jqODB],[ll,OSpB,lHuHb],[ll,OSpB,lHuHb,jqODB],[ll,OSpB,rKSZ],[ll,OSpB,rKSZ,jqODB],[ll,OSpB,rKSZ,lHuHb],[ll,OSpB,rKSZ,lHuHb,jqODB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3341() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eXhKX","XmURb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XmURb],[eXhKX],[eXhKX,XmURb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3342() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","R","f","mJtpn","wSji")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wSji],[mJtpn],[mJtpn,wSji],[f],[f,wSji],[f,mJtpn],[f,mJtpn,wSji],[R],[R,wSji],[R,mJtpn],[R,mJtpn,wSji],[R,f],[R,f,wSji],[R,f,mJtpn],[R,f,mJtpn,wSji],[a],[a,wSji],[a,mJtpn],[a,mJtpn,wSji],[a,f],[a,f,wSji],[a,f,mJtpn],[a,f,mJtpn,wSji],[a,R],[a,R,wSji],[a,R,mJtpn],[a,R,mJtpn,wSji],[a,R,f],[a,R,f,wSji],[a,R,f,mJtpn],[a,R,f,mJtpn,wSji]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3343() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jMbp","eDE","TsG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TsG],[eDE],[eDE,TsG],[jMbp],[jMbp,TsG],[jMbp,eDE],[jMbp,eDE,TsG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3344() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kNXQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kNXQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3345() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uanw","IUz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IUz],[uanw],[uanw,IUz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3346() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bZy","WeYN","Bzc","tbGb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tbGb],[Bzc],[Bzc,tbGb],[WeYN],[WeYN,tbGb],[WeYN,Bzc],[WeYN,Bzc,tbGb],[bZy],[bZy,tbGb],[bZy,Bzc],[bZy,Bzc,tbGb],[bZy,WeYN],[bZy,WeYN,tbGb],[bZy,WeYN,Bzc],[bZy,WeYN,Bzc,tbGb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3347() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SET","oLoX","X","Ylk","eoFYU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eoFYU],[Ylk],[Ylk,eoFYU],[X],[X,eoFYU],[X,Ylk],[X,Ylk,eoFYU],[oLoX],[oLoX,eoFYU],[oLoX,Ylk],[oLoX,Ylk,eoFYU],[oLoX,X],[oLoX,X,eoFYU],[oLoX,X,Ylk],[oLoX,X,Ylk,eoFYU],[SET],[SET,eoFYU],[SET,Ylk],[SET,Ylk,eoFYU],[SET,X],[SET,X,eoFYU],[SET,X,Ylk],[SET,X,Ylk,eoFYU],[SET,oLoX],[SET,oLoX,eoFYU],[SET,oLoX,Ylk],[SET,oLoX,Ylk,eoFYU],[SET,oLoX,X],[SET,oLoX,X,eoFYU],[SET,oLoX,X,Ylk],[SET,oLoX,X,Ylk,eoFYU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3348() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3349() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "surL","rFB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rFB],[surL],[surL,rFB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3350() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BjTI","qWn","iC","K","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[K],[K,M],[iC],[iC,M],[iC,K],[iC,K,M],[qWn],[qWn,M],[qWn,K],[qWn,K,M],[qWn,iC],[qWn,iC,M],[qWn,iC,K],[qWn,iC,K,M],[BjTI],[BjTI,M],[BjTI,K],[BjTI,K,M],[BjTI,iC],[BjTI,iC,M],[BjTI,iC,K],[BjTI,iC,K,M],[BjTI,qWn],[BjTI,qWn,M],[BjTI,qWn,K],[BjTI,qWn,K,M],[BjTI,qWn,iC],[BjTI,qWn,iC,M],[BjTI,qWn,iC,K],[BjTI,qWn,iC,K,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3351() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oYn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oYn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3352() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eBO","kDt","aMw","KnM","iE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iE],[KnM],[KnM,iE],[aMw],[aMw,iE],[aMw,KnM],[aMw,KnM,iE],[kDt],[kDt,iE],[kDt,KnM],[kDt,KnM,iE],[kDt,aMw],[kDt,aMw,iE],[kDt,aMw,KnM],[kDt,aMw,KnM,iE],[eBO],[eBO,iE],[eBO,KnM],[eBO,KnM,iE],[eBO,aMw],[eBO,aMw,iE],[eBO,aMw,KnM],[eBO,aMw,KnM,iE],[eBO,kDt],[eBO,kDt,iE],[eBO,kDt,KnM],[eBO,kDt,KnM,iE],[eBO,kDt,aMw],[eBO,kDt,aMw,iE],[eBO,kDt,aMw,KnM],[eBO,kDt,aMw,KnM,iE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3353() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","VJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VJ],[P],[P,VJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3354() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ez","GA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GA],[Ez],[Ez,GA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3355() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3356() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iBFdk","LD","LfpSq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LfpSq],[LD],[LD,LfpSq],[iBFdk],[iBFdk,LfpSq],[iBFdk,LD],[iBFdk,LD,LfpSq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3357() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bus","EIx","un","wB","eb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eb],[wB],[wB,eb],[un],[un,eb],[un,wB],[un,wB,eb],[EIx],[EIx,eb],[EIx,wB],[EIx,wB,eb],[EIx,un],[EIx,un,eb],[EIx,un,wB],[EIx,un,wB,eb],[bus],[bus,eb],[bus,wB],[bus,wB,eb],[bus,un],[bus,un,eb],[bus,un,wB],[bus,un,wB,eb],[bus,EIx],[bus,EIx,eb],[bus,EIx,wB],[bus,EIx,wB,eb],[bus,EIx,un],[bus,EIx,un,eb],[bus,EIx,un,wB],[bus,EIx,un,wB,eb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3358() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qEE","oqiP","GNC","DgAtF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DgAtF],[GNC],[GNC,DgAtF],[oqiP],[oqiP,DgAtF],[oqiP,GNC],[oqiP,GNC,DgAtF],[qEE],[qEE,DgAtF],[qEE,GNC],[qEE,GNC,DgAtF],[qEE,oqiP],[qEE,oqiP,DgAtF],[qEE,oqiP,GNC],[qEE,oqiP,GNC,DgAtF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3359() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vPK","hJ","Y","WYm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WYm],[Y],[Y,WYm],[hJ],[hJ,WYm],[hJ,Y],[hJ,Y,WYm],[vPK],[vPK,WYm],[vPK,Y],[vPK,Y,WYm],[vPK,hJ],[vPK,hJ,WYm],[vPK,hJ,Y],[vPK,hJ,Y,WYm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3360() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kJai","dz","KS","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[KS],[KS,m],[dz],[dz,m],[dz,KS],[dz,KS,m],[kJai],[kJai,m],[kJai,KS],[kJai,KS,m],[kJai,dz],[kJai,dz,m],[kJai,dz,KS],[kJai,dz,KS,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3361() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XX","AZrBQ","gUG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gUG],[AZrBQ],[AZrBQ,gUG],[XX],[XX,gUG],[XX,AZrBQ],[XX,AZrBQ,gUG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3362() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3363() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","yn","pTx","nNvp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nNvp],[pTx],[pTx,nNvp],[yn],[yn,nNvp],[yn,pTx],[yn,pTx,nNvp],[U],[U,nNvp],[U,pTx],[U,pTx,nNvp],[U,yn],[U,yn,nNvp],[U,yn,pTx],[U,yn,pTx,nNvp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3364() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nr","hvB","yn","IsG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IsG],[yn],[yn,IsG],[hvB],[hvB,IsG],[hvB,yn],[hvB,yn,IsG],[Nr],[Nr,IsG],[Nr,yn],[Nr,yn,IsG],[Nr,hvB],[Nr,hvB,IsG],[Nr,hvB,yn],[Nr,hvB,yn,IsG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3365() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JGgM","eae","N","klO","VYq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VYq],[klO],[klO,VYq],[N],[N,VYq],[N,klO],[N,klO,VYq],[eae],[eae,VYq],[eae,klO],[eae,klO,VYq],[eae,N],[eae,N,VYq],[eae,N,klO],[eae,N,klO,VYq],[JGgM],[JGgM,VYq],[JGgM,klO],[JGgM,klO,VYq],[JGgM,N],[JGgM,N,VYq],[JGgM,N,klO],[JGgM,N,klO,VYq],[JGgM,eae],[JGgM,eae,VYq],[JGgM,eae,klO],[JGgM,eae,klO,VYq],[JGgM,eae,N],[JGgM,eae,N,VYq],[JGgM,eae,N,klO],[JGgM,eae,N,klO,VYq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3366() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZMh","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[ZMh],[ZMh,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3367() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FOjC","Tp","cmw","ET")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ET],[cmw],[cmw,ET],[Tp],[Tp,ET],[Tp,cmw],[Tp,cmw,ET],[FOjC],[FOjC,ET],[FOjC,cmw],[FOjC,cmw,ET],[FOjC,Tp],[FOjC,Tp,ET],[FOjC,Tp,cmw],[FOjC,Tp,cmw,ET]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3368() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[u]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3369() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","N","yUCN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yUCN],[N],[N,yUCN],[e],[e,yUCN],[e,N],[e,N,yUCN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3370() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LTK","LRCg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LRCg],[LTK],[LTK,LRCg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3371() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PRcQ","FFO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FFO],[PRcQ],[PRcQ,FFO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3372() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fzTMT","b","Fkdd","reSXf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[reSXf],[Fkdd],[Fkdd,reSXf],[b],[b,reSXf],[b,Fkdd],[b,Fkdd,reSXf],[fzTMT],[fzTMT,reSXf],[fzTMT,Fkdd],[fzTMT,Fkdd,reSXf],[fzTMT,b],[fzTMT,b,reSXf],[fzTMT,b,Fkdd],[fzTMT,b,Fkdd,reSXf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3373() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ajLHx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ajLHx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3374() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aSmz","YNgfB","JUR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JUR],[YNgfB],[YNgfB,JUR],[aSmz],[aSmz,JUR],[aSmz,YNgfB],[aSmz,YNgfB,JUR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3375() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XNVHd","Q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Q],[XNVHd],[XNVHd,Q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3376() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aSnJ","PCE","GHw","XXbIT","MUuMk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MUuMk],[XXbIT],[XXbIT,MUuMk],[GHw],[GHw,MUuMk],[GHw,XXbIT],[GHw,XXbIT,MUuMk],[PCE],[PCE,MUuMk],[PCE,XXbIT],[PCE,XXbIT,MUuMk],[PCE,GHw],[PCE,GHw,MUuMk],[PCE,GHw,XXbIT],[PCE,GHw,XXbIT,MUuMk],[aSnJ],[aSnJ,MUuMk],[aSnJ,XXbIT],[aSnJ,XXbIT,MUuMk],[aSnJ,GHw],[aSnJ,GHw,MUuMk],[aSnJ,GHw,XXbIT],[aSnJ,GHw,XXbIT,MUuMk],[aSnJ,PCE],[aSnJ,PCE,MUuMk],[aSnJ,PCE,XXbIT],[aSnJ,PCE,XXbIT,MUuMk],[aSnJ,PCE,GHw],[aSnJ,PCE,GHw,MUuMk],[aSnJ,PCE,GHw,XXbIT],[aSnJ,PCE,GHw,XXbIT,MUuMk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3377() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sob","OZ","Czbea")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Czbea],[OZ],[OZ,Czbea],[Sob],[Sob,Czbea],[Sob,OZ],[Sob,OZ,Czbea]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3378() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jjf","gO","qNW","AARG","dGr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dGr],[AARG],[AARG,dGr],[qNW],[qNW,dGr],[qNW,AARG],[qNW,AARG,dGr],[gO],[gO,dGr],[gO,AARG],[gO,AARG,dGr],[gO,qNW],[gO,qNW,dGr],[gO,qNW,AARG],[gO,qNW,AARG,dGr],[jjf],[jjf,dGr],[jjf,AARG],[jjf,AARG,dGr],[jjf,qNW],[jjf,qNW,dGr],[jjf,qNW,AARG],[jjf,qNW,AARG,dGr],[jjf,gO],[jjf,gO,dGr],[jjf,gO,AARG],[jjf,gO,AARG,dGr],[jjf,gO,qNW],[jjf,gO,qNW,dGr],[jjf,gO,qNW,AARG],[jjf,gO,qNW,AARG,dGr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3379() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HM","KQ","gPfI","wU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wU],[gPfI],[gPfI,wU],[KQ],[KQ,wU],[KQ,gPfI],[KQ,gPfI,wU],[HM],[HM,wU],[HM,gPfI],[HM,gPfI,wU],[HM,KQ],[HM,KQ,wU],[HM,KQ,gPfI],[HM,KQ,gPfI,wU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3380() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZMAI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZMAI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3381() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[u]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3382() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "feCC","ePS","HDuW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HDuW],[ePS],[ePS,HDuW],[feCC],[feCC,HDuW],[feCC,ePS],[feCC,ePS,HDuW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3383() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","njd","hBnc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hBnc],[njd],[njd,hBnc],[v],[v,hBnc],[v,njd],[v,njd,hBnc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3384() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OeBjX","LQ","jWF","bwTQW","Db")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Db],[bwTQW],[bwTQW,Db],[jWF],[jWF,Db],[jWF,bwTQW],[jWF,bwTQW,Db],[LQ],[LQ,Db],[LQ,bwTQW],[LQ,bwTQW,Db],[LQ,jWF],[LQ,jWF,Db],[LQ,jWF,bwTQW],[LQ,jWF,bwTQW,Db],[OeBjX],[OeBjX,Db],[OeBjX,bwTQW],[OeBjX,bwTQW,Db],[OeBjX,jWF],[OeBjX,jWF,Db],[OeBjX,jWF,bwTQW],[OeBjX,jWF,bwTQW,Db],[OeBjX,LQ],[OeBjX,LQ,Db],[OeBjX,LQ,bwTQW],[OeBjX,LQ,bwTQW,Db],[OeBjX,LQ,jWF],[OeBjX,LQ,jWF,Db],[OeBjX,LQ,jWF,bwTQW],[OeBjX,LQ,jWF,bwTQW,Db]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3385() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HpXFe","MlZg","aYbfu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aYbfu],[MlZg],[MlZg,aYbfu],[HpXFe],[HpXFe,aYbfu],[HpXFe,MlZg],[HpXFe,MlZg,aYbfu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3386() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CZ","ITHaH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ITHaH],[CZ],[CZ,ITHaH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3387() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rxY","hqlw","SR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SR],[hqlw],[hqlw,SR],[rxY],[rxY,SR],[rxY,hqlw],[rxY,hqlw,SR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3388() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uf","XOG","B","CImgZ","nAB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nAB],[CImgZ],[CImgZ,nAB],[B],[B,nAB],[B,CImgZ],[B,CImgZ,nAB],[XOG],[XOG,nAB],[XOG,CImgZ],[XOG,CImgZ,nAB],[XOG,B],[XOG,B,nAB],[XOG,B,CImgZ],[XOG,B,CImgZ,nAB],[uf],[uf,nAB],[uf,CImgZ],[uf,CImgZ,nAB],[uf,B],[uf,B,nAB],[uf,B,CImgZ],[uf,B,CImgZ,nAB],[uf,XOG],[uf,XOG,nAB],[uf,XOG,CImgZ],[uf,XOG,CImgZ,nAB],[uf,XOG,B],[uf,XOG,B,nAB],[uf,XOG,B,CImgZ],[uf,XOG,B,CImgZ,nAB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3389() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","Uizcd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uizcd],[t],[t,Uizcd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3390() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ylfIY","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[ylfIY],[ylfIY,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3391() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3392() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3393() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ah","vondT","PWtW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PWtW],[vondT],[vondT,PWtW],[Ah],[Ah,PWtW],[Ah,vondT],[Ah,vondT,PWtW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3394() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oRYcu","Iio")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Iio],[oRYcu],[oRYcu,Iio]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3395() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zjSJQ","Muj","X","IiiG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IiiG],[X],[X,IiiG],[Muj],[Muj,IiiG],[Muj,X],[Muj,X,IiiG],[zjSJQ],[zjSJQ,IiiG],[zjSJQ,X],[zjSJQ,X,IiiG],[zjSJQ,Muj],[zjSJQ,Muj,IiiG],[zjSJQ,Muj,X],[zjSJQ,Muj,X,IiiG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3396() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nw","FA","WkruN","hGli","CHjVN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CHjVN],[hGli],[hGli,CHjVN],[WkruN],[WkruN,CHjVN],[WkruN,hGli],[WkruN,hGli,CHjVN],[FA],[FA,CHjVN],[FA,hGli],[FA,hGli,CHjVN],[FA,WkruN],[FA,WkruN,CHjVN],[FA,WkruN,hGli],[FA,WkruN,hGli,CHjVN],[nw],[nw,CHjVN],[nw,hGli],[nw,hGli,CHjVN],[nw,WkruN],[nw,WkruN,CHjVN],[nw,WkruN,hGli],[nw,WkruN,hGli,CHjVN],[nw,FA],[nw,FA,CHjVN],[nw,FA,hGli],[nw,FA,hGli,CHjVN],[nw,FA,WkruN],[nw,FA,WkruN,CHjVN],[nw,FA,WkruN,hGli],[nw,FA,WkruN,hGli,CHjVN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3397() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QfU","EScg","Wzz","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[Wzz],[Wzz,z],[EScg],[EScg,z],[EScg,Wzz],[EScg,Wzz,z],[QfU],[QfU,z],[QfU,Wzz],[QfU,Wzz,z],[QfU,EScg],[QfU,EScg,z],[QfU,EScg,Wzz],[QfU,EScg,Wzz,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3398() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "y","Jw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jw],[y],[y,Jw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3399() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","yYSr","X","CbbFF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CbbFF],[X],[X,CbbFF],[yYSr],[yYSr,CbbFF],[yYSr,X],[yYSr,X,CbbFF],[q],[q,CbbFF],[q,X],[q,X,CbbFF],[q,yYSr],[q,yYSr,CbbFF],[q,yYSr,X],[q,yYSr,X,CbbFF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3400() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","Yxa","gd","M","Nl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nl],[M],[M,Nl],[gd],[gd,Nl],[gd,M],[gd,M,Nl],[Yxa],[Yxa,Nl],[Yxa,M],[Yxa,M,Nl],[Yxa,gd],[Yxa,gd,Nl],[Yxa,gd,M],[Yxa,gd,M,Nl],[a],[a,Nl],[a,M],[a,M,Nl],[a,gd],[a,gd,Nl],[a,gd,M],[a,gd,M,Nl],[a,Yxa],[a,Yxa,Nl],[a,Yxa,M],[a,Yxa,M,Nl],[a,Yxa,gd],[a,Yxa,gd,Nl],[a,Yxa,gd,M],[a,Yxa,gd,M,Nl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3401() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ubvc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ubvc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3402() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","W","h","Kz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kz],[h],[h,Kz],[W],[W,Kz],[W,h],[W,h,Kz],[S],[S,Kz],[S,h],[S,h,Kz],[S,W],[S,W,Kz],[S,W,h],[S,W,h,Kz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3403() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IUjq","KsHA","Wes","wEh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wEh],[Wes],[Wes,wEh],[KsHA],[KsHA,wEh],[KsHA,Wes],[KsHA,Wes,wEh],[IUjq],[IUjq,wEh],[IUjq,Wes],[IUjq,Wes,wEh],[IUjq,KsHA],[IUjq,KsHA,wEh],[IUjq,KsHA,Wes],[IUjq,KsHA,Wes,wEh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3404() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QX","bJkwJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bJkwJ],[QX],[QX,bJkwJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3405() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LzCWB","OfDK","DSss")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DSss],[OfDK],[OfDK,DSss],[LzCWB],[LzCWB,DSss],[LzCWB,OfDK],[LzCWB,OfDK,DSss]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3406() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rV","BWzW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BWzW],[rV],[rV,BWzW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3407() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mzsl","aQYNe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aQYNe],[mzsl],[mzsl,aQYNe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3408() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","EFy","LqPkY","kwtA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kwtA],[LqPkY],[LqPkY,kwtA],[EFy],[EFy,kwtA],[EFy,LqPkY],[EFy,LqPkY,kwtA],[a],[a,kwtA],[a,LqPkY],[a,LqPkY,kwtA],[a,EFy],[a,EFy,kwtA],[a,EFy,LqPkY],[a,EFy,LqPkY,kwtA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3409() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EGHyo","H","kUe","Up","ceJi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ceJi],[Up],[Up,ceJi],[kUe],[kUe,ceJi],[kUe,Up],[kUe,Up,ceJi],[H],[H,ceJi],[H,Up],[H,Up,ceJi],[H,kUe],[H,kUe,ceJi],[H,kUe,Up],[H,kUe,Up,ceJi],[EGHyo],[EGHyo,ceJi],[EGHyo,Up],[EGHyo,Up,ceJi],[EGHyo,kUe],[EGHyo,kUe,ceJi],[EGHyo,kUe,Up],[EGHyo,kUe,Up,ceJi],[EGHyo,H],[EGHyo,H,ceJi],[EGHyo,H,Up],[EGHyo,H,Up,ceJi],[EGHyo,H,kUe],[EGHyo,H,kUe,ceJi],[EGHyo,H,kUe,Up],[EGHyo,H,kUe,Up,ceJi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3410() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZSjEs","rSMl","pAri")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pAri],[rSMl],[rSMl,pAri],[ZSjEs],[ZSjEs,pAri],[ZSjEs,rSMl],[ZSjEs,rSMl,pAri]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3411() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DXke","wmvh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wmvh],[DXke],[DXke,wmvh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3412() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iqPY","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[iqPY],[iqPY,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3413() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ikdB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ikdB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3414() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nlqFd","qc","BRF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BRF],[qc],[qc,BRF],[nlqFd],[nlqFd,BRF],[nlqFd,qc],[nlqFd,qc,BRF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3415() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pQ","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[pQ],[pQ,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3416() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Z","hnWrH","uc","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[uc],[uc,o],[hnWrH],[hnWrH,o],[hnWrH,uc],[hnWrH,uc,o],[Z],[Z,o],[Z,uc],[Z,uc,o],[Z,hnWrH],[Z,hnWrH,o],[Z,hnWrH,uc],[Z,hnWrH,uc,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3417() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hjU","F")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[F],[hjU],[hjU,F]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3418() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MdF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MdF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3419() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3420() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qCy","kJZE","Ny","If","DXs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DXs],[If],[If,DXs],[Ny],[Ny,DXs],[Ny,If],[Ny,If,DXs],[kJZE],[kJZE,DXs],[kJZE,If],[kJZE,If,DXs],[kJZE,Ny],[kJZE,Ny,DXs],[kJZE,Ny,If],[kJZE,Ny,If,DXs],[qCy],[qCy,DXs],[qCy,If],[qCy,If,DXs],[qCy,Ny],[qCy,Ny,DXs],[qCy,Ny,If],[qCy,Ny,If,DXs],[qCy,kJZE],[qCy,kJZE,DXs],[qCy,kJZE,If],[qCy,kJZE,If,DXs],[qCy,kJZE,Ny],[qCy,kJZE,Ny,DXs],[qCy,kJZE,Ny,If],[qCy,kJZE,Ny,If,DXs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3421() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iyVfG","kKMhX","FnjM","NBRjs","eUoQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eUoQ],[NBRjs],[NBRjs,eUoQ],[FnjM],[FnjM,eUoQ],[FnjM,NBRjs],[FnjM,NBRjs,eUoQ],[kKMhX],[kKMhX,eUoQ],[kKMhX,NBRjs],[kKMhX,NBRjs,eUoQ],[kKMhX,FnjM],[kKMhX,FnjM,eUoQ],[kKMhX,FnjM,NBRjs],[kKMhX,FnjM,NBRjs,eUoQ],[iyVfG],[iyVfG,eUoQ],[iyVfG,NBRjs],[iyVfG,NBRjs,eUoQ],[iyVfG,FnjM],[iyVfG,FnjM,eUoQ],[iyVfG,FnjM,NBRjs],[iyVfG,FnjM,NBRjs,eUoQ],[iyVfG,kKMhX],[iyVfG,kKMhX,eUoQ],[iyVfG,kKMhX,NBRjs],[iyVfG,kKMhX,NBRjs,eUoQ],[iyVfG,kKMhX,FnjM],[iyVfG,kKMhX,FnjM,eUoQ],[iyVfG,kKMhX,FnjM,NBRjs],[iyVfG,kKMhX,FnjM,NBRjs,eUoQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3422() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J","mCrH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mCrH],[J],[J,mCrH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3423() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wwJQ","e","ZgT","GRVWM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GRVWM],[ZgT],[ZgT,GRVWM],[e],[e,GRVWM],[e,ZgT],[e,ZgT,GRVWM],[wwJQ],[wwJQ,GRVWM],[wwJQ,ZgT],[wwJQ,ZgT,GRVWM],[wwJQ,e],[wwJQ,e,GRVWM],[wwJQ,e,ZgT],[wwJQ,e,ZgT,GRVWM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3424() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IYp","JTv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JTv],[IYp],[IYp,JTv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3425() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","KFuj","kN","yIEg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yIEg],[kN],[kN,yIEg],[KFuj],[KFuj,yIEg],[KFuj,kN],[KFuj,kN,yIEg],[S],[S,yIEg],[S,kN],[S,kN,yIEg],[S,KFuj],[S,KFuj,yIEg],[S,KFuj,kN],[S,KFuj,kN,yIEg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3426() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fkJ","lQCoQ","XZk","ZfNYq","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[ZfNYq],[ZfNYq,j],[XZk],[XZk,j],[XZk,ZfNYq],[XZk,ZfNYq,j],[lQCoQ],[lQCoQ,j],[lQCoQ,ZfNYq],[lQCoQ,ZfNYq,j],[lQCoQ,XZk],[lQCoQ,XZk,j],[lQCoQ,XZk,ZfNYq],[lQCoQ,XZk,ZfNYq,j],[fkJ],[fkJ,j],[fkJ,ZfNYq],[fkJ,ZfNYq,j],[fkJ,XZk],[fkJ,XZk,j],[fkJ,XZk,ZfNYq],[fkJ,XZk,ZfNYq,j],[fkJ,lQCoQ],[fkJ,lQCoQ,j],[fkJ,lQCoQ,ZfNYq],[fkJ,lQCoQ,ZfNYq,j],[fkJ,lQCoQ,XZk],[fkJ,lQCoQ,XZk,j],[fkJ,lQCoQ,XZk,ZfNYq],[fkJ,lQCoQ,XZk,ZfNYq,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3427() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rXqo","t","u","Smx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Smx],[u],[u,Smx],[t],[t,Smx],[t,u],[t,u,Smx],[rXqo],[rXqo,Smx],[rXqo,u],[rXqo,u,Smx],[rXqo,t],[rXqo,t,Smx],[rXqo,t,u],[rXqo,t,u,Smx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3428() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SJfdY","MnR","VIfU","Jhi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jhi],[VIfU],[VIfU,Jhi],[MnR],[MnR,Jhi],[MnR,VIfU],[MnR,VIfU,Jhi],[SJfdY],[SJfdY,Jhi],[SJfdY,VIfU],[SJfdY,VIfU,Jhi],[SJfdY,MnR],[SJfdY,MnR,Jhi],[SJfdY,MnR,VIfU],[SJfdY,MnR,VIfU,Jhi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3429() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nKSKv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nKSKv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3430() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","JVXyy","JbxKq","avjtS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[avjtS],[JbxKq],[JbxKq,avjtS],[JVXyy],[JVXyy,avjtS],[JVXyy,JbxKq],[JVXyy,JbxKq,avjtS],[a],[a,avjtS],[a,JbxKq],[a,JbxKq,avjtS],[a,JVXyy],[a,JVXyy,avjtS],[a,JVXyy,JbxKq],[a,JVXyy,JbxKq,avjtS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3431() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hn","iVack")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iVack],[hn],[hn,iVack]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3432() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zpBeX","oW","fu","o","QZff")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QZff],[o],[o,QZff],[fu],[fu,QZff],[fu,o],[fu,o,QZff],[oW],[oW,QZff],[oW,o],[oW,o,QZff],[oW,fu],[oW,fu,QZff],[oW,fu,o],[oW,fu,o,QZff],[zpBeX],[zpBeX,QZff],[zpBeX,o],[zpBeX,o,QZff],[zpBeX,fu],[zpBeX,fu,QZff],[zpBeX,fu,o],[zpBeX,fu,o,QZff],[zpBeX,oW],[zpBeX,oW,QZff],[zpBeX,oW,o],[zpBeX,oW,o,QZff],[zpBeX,oW,fu],[zpBeX,oW,fu,QZff],[zpBeX,oW,fu,o],[zpBeX,oW,fu,o,QZff]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3433() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lZq","kB","hFFol")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hFFol],[kB],[kB,hFFol],[lZq],[lZq,hFFol],[lZq,kB],[lZq,kB,hFFol]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3434() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xgf","WLgBw","cn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cn],[WLgBw],[WLgBw,cn],[Xgf],[Xgf,cn],[Xgf,WLgBw],[Xgf,WLgBw,cn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3435() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eBbc","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[eBbc],[eBbc,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3436() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[A]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3437() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FBty","Yzub","TZBAv","BKf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BKf],[TZBAv],[TZBAv,BKf],[Yzub],[Yzub,BKf],[Yzub,TZBAv],[Yzub,TZBAv,BKf],[FBty],[FBty,BKf],[FBty,TZBAv],[FBty,TZBAv,BKf],[FBty,Yzub],[FBty,Yzub,BKf],[FBty,Yzub,TZBAv],[FBty,Yzub,TZBAv,BKf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3438() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dD","Yq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yq],[dD],[dD,Yq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3439() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zib","miUT","fctn","cL","evl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[evl],[cL],[cL,evl],[fctn],[fctn,evl],[fctn,cL],[fctn,cL,evl],[miUT],[miUT,evl],[miUT,cL],[miUT,cL,evl],[miUT,fctn],[miUT,fctn,evl],[miUT,fctn,cL],[miUT,fctn,cL,evl],[zib],[zib,evl],[zib,cL],[zib,cL,evl],[zib,fctn],[zib,fctn,evl],[zib,fctn,cL],[zib,fctn,cL,evl],[zib,miUT],[zib,miUT,evl],[zib,miUT,cL],[zib,miUT,cL,evl],[zib,miUT,fctn],[zib,miUT,fctn,evl],[zib,miUT,fctn,cL],[zib,miUT,fctn,cL,evl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3440() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","MW","pKz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pKz],[MW],[MW,pKz],[D],[D,pKz],[D,MW],[D,MW,pKz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3441() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PMHP","gOCtS","FCAq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FCAq],[gOCtS],[gOCtS,FCAq],[PMHP],[PMHP,FCAq],[PMHP,gOCtS],[PMHP,gOCtS,FCAq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3442() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","u","VNCHK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VNCHK],[u],[u,VNCHK],[d],[d,VNCHK],[d,u],[d,u,VNCHK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3443() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vcOkf","aDRN","BXrXt","rSmx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rSmx],[BXrXt],[BXrXt,rSmx],[aDRN],[aDRN,rSmx],[aDRN,BXrXt],[aDRN,BXrXt,rSmx],[vcOkf],[vcOkf,rSmx],[vcOkf,BXrXt],[vcOkf,BXrXt,rSmx],[vcOkf,aDRN],[vcOkf,aDRN,rSmx],[vcOkf,aDRN,BXrXt],[vcOkf,aDRN,BXrXt,rSmx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3444() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "M","GF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GF],[M],[M,GF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3445() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hnj","y","tXO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tXO],[y],[y,tXO],[hnj],[hnj,tXO],[hnj,y],[hnj,y,tXO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3446() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[c]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3447() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NLB","dSKMa","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[dSKMa],[dSKMa,N],[NLB],[NLB,N],[NLB,dSKMa],[NLB,dSKMa,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3448() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YdaB","kaSW","fNs","gskj","IX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IX],[gskj],[gskj,IX],[fNs],[fNs,IX],[fNs,gskj],[fNs,gskj,IX],[kaSW],[kaSW,IX],[kaSW,gskj],[kaSW,gskj,IX],[kaSW,fNs],[kaSW,fNs,IX],[kaSW,fNs,gskj],[kaSW,fNs,gskj,IX],[YdaB],[YdaB,IX],[YdaB,gskj],[YdaB,gskj,IX],[YdaB,fNs],[YdaB,fNs,IX],[YdaB,fNs,gskj],[YdaB,fNs,gskj,IX],[YdaB,kaSW],[YdaB,kaSW,IX],[YdaB,kaSW,gskj],[YdaB,kaSW,gskj,IX],[YdaB,kaSW,fNs],[YdaB,kaSW,fNs,IX],[YdaB,kaSW,fNs,gskj],[YdaB,kaSW,fNs,gskj,IX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3449() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Uvr","WjDk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WjDk],[Uvr],[Uvr,WjDk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3450() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jpo","mHpWM","oDD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oDD],[mHpWM],[mHpWM,oDD],[Jpo],[Jpo,oDD],[Jpo,mHpWM],[Jpo,mHpWM,oDD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3451() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ypz","r","Iblh","Chs","nqq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nqq],[Chs],[Chs,nqq],[Iblh],[Iblh,nqq],[Iblh,Chs],[Iblh,Chs,nqq],[r],[r,nqq],[r,Chs],[r,Chs,nqq],[r,Iblh],[r,Iblh,nqq],[r,Iblh,Chs],[r,Iblh,Chs,nqq],[ypz],[ypz,nqq],[ypz,Chs],[ypz,Chs,nqq],[ypz,Iblh],[ypz,Iblh,nqq],[ypz,Iblh,Chs],[ypz,Iblh,Chs,nqq],[ypz,r],[ypz,r,nqq],[ypz,r,Chs],[ypz,r,Chs,nqq],[ypz,r,Iblh],[ypz,r,Iblh,nqq],[ypz,r,Iblh,Chs],[ypz,r,Iblh,Chs,nqq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3452() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VWrtI","tCkM","FcKpN","T","dgyme")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dgyme],[T],[T,dgyme],[FcKpN],[FcKpN,dgyme],[FcKpN,T],[FcKpN,T,dgyme],[tCkM],[tCkM,dgyme],[tCkM,T],[tCkM,T,dgyme],[tCkM,FcKpN],[tCkM,FcKpN,dgyme],[tCkM,FcKpN,T],[tCkM,FcKpN,T,dgyme],[VWrtI],[VWrtI,dgyme],[VWrtI,T],[VWrtI,T,dgyme],[VWrtI,FcKpN],[VWrtI,FcKpN,dgyme],[VWrtI,FcKpN,T],[VWrtI,FcKpN,T,dgyme],[VWrtI,tCkM],[VWrtI,tCkM,dgyme],[VWrtI,tCkM,T],[VWrtI,tCkM,T,dgyme],[VWrtI,tCkM,FcKpN],[VWrtI,tCkM,FcKpN,dgyme],[VWrtI,tCkM,FcKpN,T],[VWrtI,tCkM,FcKpN,T,dgyme]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3453() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LGbw","lEB","zB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zB],[lEB],[lEB,zB],[LGbw],[LGbw,zB],[LGbw,lEB],[LGbw,lEB,zB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3454() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nFha","DjVk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DjVk],[nFha],[nFha,DjVk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3455() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","PHZ","iiZr","ib","qPvOL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qPvOL],[ib],[ib,qPvOL],[iiZr],[iiZr,qPvOL],[iiZr,ib],[iiZr,ib,qPvOL],[PHZ],[PHZ,qPvOL],[PHZ,ib],[PHZ,ib,qPvOL],[PHZ,iiZr],[PHZ,iiZr,qPvOL],[PHZ,iiZr,ib],[PHZ,iiZr,ib,qPvOL],[b],[b,qPvOL],[b,ib],[b,ib,qPvOL],[b,iiZr],[b,iiZr,qPvOL],[b,iiZr,ib],[b,iiZr,ib,qPvOL],[b,PHZ],[b,PHZ,qPvOL],[b,PHZ,ib],[b,PHZ,ib,qPvOL],[b,PHZ,iiZr],[b,PHZ,iiZr,qPvOL],[b,PHZ,iiZr,ib],[b,PHZ,iiZr,ib,qPvOL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3456() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DV","X","jS","dXa","Co")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Co],[dXa],[dXa,Co],[jS],[jS,Co],[jS,dXa],[jS,dXa,Co],[X],[X,Co],[X,dXa],[X,dXa,Co],[X,jS],[X,jS,Co],[X,jS,dXa],[X,jS,dXa,Co],[DV],[DV,Co],[DV,dXa],[DV,dXa,Co],[DV,jS],[DV,jS,Co],[DV,jS,dXa],[DV,jS,dXa,Co],[DV,X],[DV,X,Co],[DV,X,dXa],[DV,X,dXa,Co],[DV,X,jS],[DV,X,jS,Co],[DV,X,jS,dXa],[DV,X,jS,dXa,Co]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3457() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oAas","cNv","JE","FFEQc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FFEQc],[JE],[JE,FFEQc],[cNv],[cNv,FFEQc],[cNv,JE],[cNv,JE,FFEQc],[oAas],[oAas,FFEQc],[oAas,JE],[oAas,JE,FFEQc],[oAas,cNv],[oAas,cNv,FFEQc],[oAas,cNv,JE],[oAas,cNv,JE,FFEQc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3458() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zZOAY","zPxQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zPxQ],[zZOAY],[zZOAY,zPxQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3459() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","KEgB","fGIXG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fGIXG],[KEgB],[KEgB,fGIXG],[U],[U,fGIXG],[U,KEgB],[U,KEgB,fGIXG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3460() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","KSm","LnEAS","olPB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[olPB],[LnEAS],[LnEAS,olPB],[KSm],[KSm,olPB],[KSm,LnEAS],[KSm,LnEAS,olPB],[B],[B,olPB],[B,LnEAS],[B,LnEAS,olPB],[B,KSm],[B,KSm,olPB],[B,KSm,LnEAS],[B,KSm,LnEAS,olPB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3461() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ih")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ih]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3462() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cFV","zCL","rOEK","gAIF","xv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xv],[gAIF],[gAIF,xv],[rOEK],[rOEK,xv],[rOEK,gAIF],[rOEK,gAIF,xv],[zCL],[zCL,xv],[zCL,gAIF],[zCL,gAIF,xv],[zCL,rOEK],[zCL,rOEK,xv],[zCL,rOEK,gAIF],[zCL,rOEK,gAIF,xv],[cFV],[cFV,xv],[cFV,gAIF],[cFV,gAIF,xv],[cFV,rOEK],[cFV,rOEK,xv],[cFV,rOEK,gAIF],[cFV,rOEK,gAIF,xv],[cFV,zCL],[cFV,zCL,xv],[cFV,zCL,gAIF],[cFV,zCL,gAIF,xv],[cFV,zCL,rOEK],[cFV,zCL,rOEK,xv],[cFV,zCL,rOEK,gAIF],[cFV,zCL,rOEK,gAIF,xv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3463() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[F]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3464() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ii","hwcLH","LENHI","pL","nk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nk],[pL],[pL,nk],[LENHI],[LENHI,nk],[LENHI,pL],[LENHI,pL,nk],[hwcLH],[hwcLH,nk],[hwcLH,pL],[hwcLH,pL,nk],[hwcLH,LENHI],[hwcLH,LENHI,nk],[hwcLH,LENHI,pL],[hwcLH,LENHI,pL,nk],[Ii],[Ii,nk],[Ii,pL],[Ii,pL,nk],[Ii,LENHI],[Ii,LENHI,nk],[Ii,LENHI,pL],[Ii,LENHI,pL,nk],[Ii,hwcLH],[Ii,hwcLH,nk],[Ii,hwcLH,pL],[Ii,hwcLH,pL,nk],[Ii,hwcLH,LENHI],[Ii,hwcLH,LENHI,nk],[Ii,hwcLH,LENHI,pL],[Ii,hwcLH,LENHI,pL,nk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3465() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sep")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sep]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3466() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aa","mRzi","tui","Mizm","MHoNZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MHoNZ],[Mizm],[Mizm,MHoNZ],[tui],[tui,MHoNZ],[tui,Mizm],[tui,Mizm,MHoNZ],[mRzi],[mRzi,MHoNZ],[mRzi,Mizm],[mRzi,Mizm,MHoNZ],[mRzi,tui],[mRzi,tui,MHoNZ],[mRzi,tui,Mizm],[mRzi,tui,Mizm,MHoNZ],[Aa],[Aa,MHoNZ],[Aa,Mizm],[Aa,Mizm,MHoNZ],[Aa,tui],[Aa,tui,MHoNZ],[Aa,tui,Mizm],[Aa,tui,Mizm,MHoNZ],[Aa,mRzi],[Aa,mRzi,MHoNZ],[Aa,mRzi,Mizm],[Aa,mRzi,Mizm,MHoNZ],[Aa,mRzi,tui],[Aa,mRzi,tui,MHoNZ],[Aa,mRzi,tui,Mizm],[Aa,mRzi,tui,Mizm,MHoNZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3467() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fV","XWSL","MOvB","iH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iH],[MOvB],[MOvB,iH],[XWSL],[XWSL,iH],[XWSL,MOvB],[XWSL,MOvB,iH],[fV],[fV,iH],[fV,MOvB],[fV,MOvB,iH],[fV,XWSL],[fV,XWSL,iH],[fV,XWSL,MOvB],[fV,XWSL,MOvB,iH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3468() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bf","WqaJ","YAc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YAc],[WqaJ],[WqaJ,YAc],[bf],[bf,YAc],[bf,WqaJ],[bf,WqaJ,YAc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3469() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JKM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JKM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3470() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MbmdI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MbmdI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3471() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "psJhl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[psJhl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3472() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FoZYb","nPQD","xSWH","Fa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Fa],[xSWH],[xSWH,Fa],[nPQD],[nPQD,Fa],[nPQD,xSWH],[nPQD,xSWH,Fa],[FoZYb],[FoZYb,Fa],[FoZYb,xSWH],[FoZYb,xSWH,Fa],[FoZYb,nPQD],[FoZYb,nPQD,Fa],[FoZYb,nPQD,xSWH],[FoZYb,nPQD,xSWH,Fa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3473() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "No","SY","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[SY],[SY,O],[No],[No,O],[No,SY],[No,SY,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3474() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","Ssz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ssz],[g],[g,Ssz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3475() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3476() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tngt","Gaho","JOG","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[JOG],[JOG,g],[Gaho],[Gaho,g],[Gaho,JOG],[Gaho,JOG,g],[Tngt],[Tngt,g],[Tngt,JOG],[Tngt,JOG,g],[Tngt,Gaho],[Tngt,Gaho,g],[Tngt,Gaho,JOG],[Tngt,Gaho,JOG,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3477() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","iCNv","wjboe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wjboe],[iCNv],[iCNv,wjboe],[b],[b,wjboe],[b,iCNv],[b,iCNv,wjboe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3478() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OCu","xJTPS","sr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sr],[xJTPS],[xJTPS,sr],[OCu],[OCu,sr],[OCu,xJTPS],[OCu,xJTPS,sr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3479() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AqP","UTFaW","LF","GAmxo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GAmxo],[LF],[LF,GAmxo],[UTFaW],[UTFaW,GAmxo],[UTFaW,LF],[UTFaW,LF,GAmxo],[AqP],[AqP,GAmxo],[AqP,LF],[AqP,LF,GAmxo],[AqP,UTFaW],[AqP,UTFaW,GAmxo],[AqP,UTFaW,LF],[AqP,UTFaW,LF,GAmxo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3480() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tIYS","z","csj","uRitc","kOWRS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kOWRS],[uRitc],[uRitc,kOWRS],[csj],[csj,kOWRS],[csj,uRitc],[csj,uRitc,kOWRS],[z],[z,kOWRS],[z,uRitc],[z,uRitc,kOWRS],[z,csj],[z,csj,kOWRS],[z,csj,uRitc],[z,csj,uRitc,kOWRS],[tIYS],[tIYS,kOWRS],[tIYS,uRitc],[tIYS,uRitc,kOWRS],[tIYS,csj],[tIYS,csj,kOWRS],[tIYS,csj,uRitc],[tIYS,csj,uRitc,kOWRS],[tIYS,z],[tIYS,z,kOWRS],[tIYS,z,uRitc],[tIYS,z,uRitc,kOWRS],[tIYS,z,csj],[tIYS,z,csj,kOWRS],[tIYS,z,csj,uRitc],[tIYS,z,csj,uRitc,kOWRS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3481() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nwpr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nwpr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3482() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cwKE","ntBo","RFJT","I","UOU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UOU],[I],[I,UOU],[RFJT],[RFJT,UOU],[RFJT,I],[RFJT,I,UOU],[ntBo],[ntBo,UOU],[ntBo,I],[ntBo,I,UOU],[ntBo,RFJT],[ntBo,RFJT,UOU],[ntBo,RFJT,I],[ntBo,RFJT,I,UOU],[cwKE],[cwKE,UOU],[cwKE,I],[cwKE,I,UOU],[cwKE,RFJT],[cwKE,RFJT,UOU],[cwKE,RFJT,I],[cwKE,RFJT,I,UOU],[cwKE,ntBo],[cwKE,ntBo,UOU],[cwKE,ntBo,I],[cwKE,ntBo,I,UOU],[cwKE,ntBo,RFJT],[cwKE,ntBo,RFJT,UOU],[cwKE,ntBo,RFJT,I],[cwKE,ntBo,RFJT,I,UOU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3483() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jKR","Xluk","S","DTviF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DTviF],[S],[S,DTviF],[Xluk],[Xluk,DTviF],[Xluk,S],[Xluk,S,DTviF],[jKR],[jKR,DTviF],[jKR,S],[jKR,S,DTviF],[jKR,Xluk],[jKR,Xluk,DTviF],[jKR,Xluk,S],[jKR,Xluk,S,DTviF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3484() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dVm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dVm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3485() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cqwW","dPbX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dPbX],[cqwW],[cqwW,dPbX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3486() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[K],[K,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3487() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","ZLcNl","I","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[I],[I,J],[ZLcNl],[ZLcNl,J],[ZLcNl,I],[ZLcNl,I,J],[e],[e,J],[e,I],[e,I,J],[e,ZLcNl],[e,ZLcNl,J],[e,ZLcNl,I],[e,ZLcNl,I,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3488() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3489() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NQv","g","Bo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bo],[g],[g,Bo],[NQv],[NQv,Bo],[NQv,g],[NQv,g,Bo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3490() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sSAe","wVQ","iE","nHW","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[nHW],[nHW,o],[iE],[iE,o],[iE,nHW],[iE,nHW,o],[wVQ],[wVQ,o],[wVQ,nHW],[wVQ,nHW,o],[wVQ,iE],[wVQ,iE,o],[wVQ,iE,nHW],[wVQ,iE,nHW,o],[sSAe],[sSAe,o],[sSAe,nHW],[sSAe,nHW,o],[sSAe,iE],[sSAe,iE,o],[sSAe,iE,nHW],[sSAe,iE,nHW,o],[sSAe,wVQ],[sSAe,wVQ,o],[sSAe,wVQ,nHW],[sSAe,wVQ,nHW,o],[sSAe,wVQ,iE],[sSAe,wVQ,iE,o],[sSAe,wVQ,iE,nHW],[sSAe,wVQ,iE,nHW,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3491() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MsV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MsV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3492() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[A]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3493() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wKG","S","yZuvh","V","pgrXJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pgrXJ],[V],[V,pgrXJ],[yZuvh],[yZuvh,pgrXJ],[yZuvh,V],[yZuvh,V,pgrXJ],[S],[S,pgrXJ],[S,V],[S,V,pgrXJ],[S,yZuvh],[S,yZuvh,pgrXJ],[S,yZuvh,V],[S,yZuvh,V,pgrXJ],[wKG],[wKG,pgrXJ],[wKG,V],[wKG,V,pgrXJ],[wKG,yZuvh],[wKG,yZuvh,pgrXJ],[wKG,yZuvh,V],[wKG,yZuvh,V,pgrXJ],[wKG,S],[wKG,S,pgrXJ],[wKG,S,V],[wKG,S,V,pgrXJ],[wKG,S,yZuvh],[wKG,S,yZuvh,pgrXJ],[wKG,S,yZuvh,V],[wKG,S,yZuvh,V,pgrXJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3494() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jBYD","F")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[F],[jBYD],[jBYD,F]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3495() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nr","cwav","XxFmW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XxFmW],[cwav],[cwav,XxFmW],[nr],[nr,XxFmW],[nr,cwav],[nr,cwav,XxFmW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3496() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fhXO","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[fhXO],[fhXO,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3497() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WZ","LlI","Ckhh","ZcHtm","ZY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZY],[ZcHtm],[ZcHtm,ZY],[Ckhh],[Ckhh,ZY],[Ckhh,ZcHtm],[Ckhh,ZcHtm,ZY],[LlI],[LlI,ZY],[LlI,ZcHtm],[LlI,ZcHtm,ZY],[LlI,Ckhh],[LlI,Ckhh,ZY],[LlI,Ckhh,ZcHtm],[LlI,Ckhh,ZcHtm,ZY],[WZ],[WZ,ZY],[WZ,ZcHtm],[WZ,ZcHtm,ZY],[WZ,Ckhh],[WZ,Ckhh,ZY],[WZ,Ckhh,ZcHtm],[WZ,Ckhh,ZcHtm,ZY],[WZ,LlI],[WZ,LlI,ZY],[WZ,LlI,ZcHtm],[WZ,LlI,ZcHtm,ZY],[WZ,LlI,Ckhh],[WZ,LlI,Ckhh,ZY],[WZ,LlI,Ckhh,ZcHtm],[WZ,LlI,Ckhh,ZcHtm,ZY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3498() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bTXv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bTXv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3499() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jm","s","JqKSc","Up","icVHU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[icVHU],[Up],[Up,icVHU],[JqKSc],[JqKSc,icVHU],[JqKSc,Up],[JqKSc,Up,icVHU],[s],[s,icVHU],[s,Up],[s,Up,icVHU],[s,JqKSc],[s,JqKSc,icVHU],[s,JqKSc,Up],[s,JqKSc,Up,icVHU],[jm],[jm,icVHU],[jm,Up],[jm,Up,icVHU],[jm,JqKSc],[jm,JqKSc,icVHU],[jm,JqKSc,Up],[jm,JqKSc,Up,icVHU],[jm,s],[jm,s,icVHU],[jm,s,Up],[jm,s,Up,icVHU],[jm,s,JqKSc],[jm,s,JqKSc,icVHU],[jm,s,JqKSc,Up],[jm,s,JqKSc,Up,icVHU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3500() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kZMAA","d","BPW","QFBbP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QFBbP],[BPW],[BPW,QFBbP],[d],[d,QFBbP],[d,BPW],[d,BPW,QFBbP],[kZMAA],[kZMAA,QFBbP],[kZMAA,BPW],[kZMAA,BPW,QFBbP],[kZMAA,d],[kZMAA,d,QFBbP],[kZMAA,d,BPW],[kZMAA,d,BPW,QFBbP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3501() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aiy","wkjtI","Z","sELds")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sELds],[Z],[Z,sELds],[wkjtI],[wkjtI,sELds],[wkjtI,Z],[wkjtI,Z,sELds],[aiy],[aiy,sELds],[aiy,Z],[aiy,Z,sELds],[aiy,wkjtI],[aiy,wkjtI,sELds],[aiy,wkjtI,Z],[aiy,wkjtI,Z,sELds]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3502() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3503() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X","qpCwI","vcZz","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[vcZz],[vcZz,o],[qpCwI],[qpCwI,o],[qpCwI,vcZz],[qpCwI,vcZz,o],[X],[X,o],[X,vcZz],[X,vcZz,o],[X,qpCwI],[X,qpCwI,o],[X,qpCwI,vcZz],[X,qpCwI,vcZz,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3504() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fF","E","wA","JfMM","ECL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ECL],[JfMM],[JfMM,ECL],[wA],[wA,ECL],[wA,JfMM],[wA,JfMM,ECL],[E],[E,ECL],[E,JfMM],[E,JfMM,ECL],[E,wA],[E,wA,ECL],[E,wA,JfMM],[E,wA,JfMM,ECL],[fF],[fF,ECL],[fF,JfMM],[fF,JfMM,ECL],[fF,wA],[fF,wA,ECL],[fF,wA,JfMM],[fF,wA,JfMM,ECL],[fF,E],[fF,E,ECL],[fF,E,JfMM],[fF,E,JfMM,ECL],[fF,E,wA],[fF,E,wA,ECL],[fF,E,wA,JfMM],[fF,E,wA,JfMM,ECL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3505() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TLvr","Flqf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Flqf],[TLvr],[TLvr,Flqf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3506() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xHE","W","fWAS","Qn","mEt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mEt],[Qn],[Qn,mEt],[fWAS],[fWAS,mEt],[fWAS,Qn],[fWAS,Qn,mEt],[W],[W,mEt],[W,Qn],[W,Qn,mEt],[W,fWAS],[W,fWAS,mEt],[W,fWAS,Qn],[W,fWAS,Qn,mEt],[xHE],[xHE,mEt],[xHE,Qn],[xHE,Qn,mEt],[xHE,fWAS],[xHE,fWAS,mEt],[xHE,fWAS,Qn],[xHE,fWAS,Qn,mEt],[xHE,W],[xHE,W,mEt],[xHE,W,Qn],[xHE,W,Qn,mEt],[xHE,W,fWAS],[xHE,W,fWAS,mEt],[xHE,W,fWAS,Qn],[xHE,W,fWAS,Qn,mEt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3507() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X","LJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LJ],[X],[X,LJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3508() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mm","lM","BZdx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BZdx],[lM],[lM,BZdx],[Mm],[Mm,BZdx],[Mm,lM],[Mm,lM,BZdx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3509() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","Y","aWHEi","dDX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dDX],[aWHEi],[aWHEi,dDX],[Y],[Y,dDX],[Y,aWHEi],[Y,aWHEi,dDX],[B],[B,dDX],[B,aWHEi],[B,aWHEi,dDX],[B,Y],[B,Y,dDX],[B,Y,aWHEi],[B,Y,aWHEi,dDX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3510() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NN","q","L","KX","ZY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZY],[KX],[KX,ZY],[L],[L,ZY],[L,KX],[L,KX,ZY],[q],[q,ZY],[q,KX],[q,KX,ZY],[q,L],[q,L,ZY],[q,L,KX],[q,L,KX,ZY],[NN],[NN,ZY],[NN,KX],[NN,KX,ZY],[NN,L],[NN,L,ZY],[NN,L,KX],[NN,L,KX,ZY],[NN,q],[NN,q,ZY],[NN,q,KX],[NN,q,KX,ZY],[NN,q,L],[NN,q,L,ZY],[NN,q,L,KX],[NN,q,L,KX,ZY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3511() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MM","JAZc","k","hPV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hPV],[k],[k,hPV],[JAZc],[JAZc,hPV],[JAZc,k],[JAZc,k,hPV],[MM],[MM,hPV],[MM,k],[MM,k,hPV],[MM,JAZc],[MM,JAZc,hPV],[MM,JAZc,k],[MM,JAZc,k,hPV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3512() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "irN","bp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bp],[irN],[irN,bp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3513() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fiAEe","FIV","UgKyh","LPyVs","jQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jQ],[LPyVs],[LPyVs,jQ],[UgKyh],[UgKyh,jQ],[UgKyh,LPyVs],[UgKyh,LPyVs,jQ],[FIV],[FIV,jQ],[FIV,LPyVs],[FIV,LPyVs,jQ],[FIV,UgKyh],[FIV,UgKyh,jQ],[FIV,UgKyh,LPyVs],[FIV,UgKyh,LPyVs,jQ],[fiAEe],[fiAEe,jQ],[fiAEe,LPyVs],[fiAEe,LPyVs,jQ],[fiAEe,UgKyh],[fiAEe,UgKyh,jQ],[fiAEe,UgKyh,LPyVs],[fiAEe,UgKyh,LPyVs,jQ],[fiAEe,FIV],[fiAEe,FIV,jQ],[fiAEe,FIV,LPyVs],[fiAEe,FIV,LPyVs,jQ],[fiAEe,FIV,UgKyh],[fiAEe,FIV,UgKyh,jQ],[fiAEe,FIV,UgKyh,LPyVs],[fiAEe,FIV,UgKyh,LPyVs,jQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3514() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[h],[h,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3515() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "clA","ju","m","tVKQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tVKQ],[m],[m,tVKQ],[ju],[ju,tVKQ],[ju,m],[ju,m,tVKQ],[clA],[clA,tVKQ],[clA,m],[clA,m,tVKQ],[clA,ju],[clA,ju,tVKQ],[clA,ju,m],[clA,ju,m,tVKQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3516() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","IZ","VX","t","yGpp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yGpp],[t],[t,yGpp],[VX],[VX,yGpp],[VX,t],[VX,t,yGpp],[IZ],[IZ,yGpp],[IZ,t],[IZ,t,yGpp],[IZ,VX],[IZ,VX,yGpp],[IZ,VX,t],[IZ,VX,t,yGpp],[Q],[Q,yGpp],[Q,t],[Q,t,yGpp],[Q,VX],[Q,VX,yGpp],[Q,VX,t],[Q,VX,t,yGpp],[Q,IZ],[Q,IZ,yGpp],[Q,IZ,t],[Q,IZ,t,yGpp],[Q,IZ,VX],[Q,IZ,VX,yGpp],[Q,IZ,VX,t],[Q,IZ,VX,t,yGpp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3517() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jm","QEZ","aXXD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aXXD],[QEZ],[QEZ,aXXD],[jm],[jm,aXXD],[jm,QEZ],[jm,QEZ,aXXD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3518() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FjY","OF","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[OF],[OF,Z],[FjY],[FjY,Z],[FjY,OF],[FjY,OF,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3519() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Snm","cZ","STFSm","lFw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lFw],[STFSm],[STFSm,lFw],[cZ],[cZ,lFw],[cZ,STFSm],[cZ,STFSm,lFw],[Snm],[Snm,lFw],[Snm,STFSm],[Snm,STFSm,lFw],[Snm,cZ],[Snm,cZ,lFw],[Snm,cZ,STFSm],[Snm,cZ,STFSm,lFw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3520() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HCbXx","s")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[s],[HCbXx],[HCbXx,s]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3521() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FH","f","Kr","BlH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BlH],[Kr],[Kr,BlH],[f],[f,BlH],[f,Kr],[f,Kr,BlH],[FH],[FH,BlH],[FH,Kr],[FH,Kr,BlH],[FH,f],[FH,f,BlH],[FH,f,Kr],[FH,f,Kr,BlH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3522() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3523() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pfUR","onk","jOQ","hyFUO","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[hyFUO],[hyFUO,n],[jOQ],[jOQ,n],[jOQ,hyFUO],[jOQ,hyFUO,n],[onk],[onk,n],[onk,hyFUO],[onk,hyFUO,n],[onk,jOQ],[onk,jOQ,n],[onk,jOQ,hyFUO],[onk,jOQ,hyFUO,n],[pfUR],[pfUR,n],[pfUR,hyFUO],[pfUR,hyFUO,n],[pfUR,jOQ],[pfUR,jOQ,n],[pfUR,jOQ,hyFUO],[pfUR,jOQ,hyFUO,n],[pfUR,onk],[pfUR,onk,n],[pfUR,onk,hyFUO],[pfUR,onk,hyFUO,n],[pfUR,onk,jOQ],[pfUR,onk,jOQ,n],[pfUR,onk,jOQ,hyFUO],[pfUR,onk,jOQ,hyFUO,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3524() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IY","Okcae")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Okcae],[IY],[IY,Okcae]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3525() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "puHo","jAr","FSTq","qFO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qFO],[FSTq],[FSTq,qFO],[jAr],[jAr,qFO],[jAr,FSTq],[jAr,FSTq,qFO],[puHo],[puHo,qFO],[puHo,FSTq],[puHo,FSTq,qFO],[puHo,jAr],[puHo,jAr,qFO],[puHo,jAr,FSTq],[puHo,jAr,FSTq,qFO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3526() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PTS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PTS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3527() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","utd","tn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tn],[utd],[utd,tn],[b],[b,tn],[b,utd],[b,utd,tn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3528() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dE","aUZPv","Tw","BrgH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BrgH],[Tw],[Tw,BrgH],[aUZPv],[aUZPv,BrgH],[aUZPv,Tw],[aUZPv,Tw,BrgH],[dE],[dE,BrgH],[dE,Tw],[dE,Tw,BrgH],[dE,aUZPv],[dE,aUZPv,BrgH],[dE,aUZPv,Tw],[dE,aUZPv,Tw,BrgH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3529() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3530() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qq","vv","vhjOu","FyPmp","C")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[C],[FyPmp],[FyPmp,C],[vhjOu],[vhjOu,C],[vhjOu,FyPmp],[vhjOu,FyPmp,C],[vv],[vv,C],[vv,FyPmp],[vv,FyPmp,C],[vv,vhjOu],[vv,vhjOu,C],[vv,vhjOu,FyPmp],[vv,vhjOu,FyPmp,C],[Qq],[Qq,C],[Qq,FyPmp],[Qq,FyPmp,C],[Qq,vhjOu],[Qq,vhjOu,C],[Qq,vhjOu,FyPmp],[Qq,vhjOu,FyPmp,C],[Qq,vv],[Qq,vv,C],[Qq,vv,FyPmp],[Qq,vv,FyPmp,C],[Qq,vv,vhjOu],[Qq,vv,vhjOu,C],[Qq,vv,vhjOu,FyPmp],[Qq,vv,vhjOu,FyPmp,C]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3531() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kden","cCbn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cCbn],[kden],[kden,cCbn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3532() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HBp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HBp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3533() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VTJh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VTJh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3534() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zdy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zdy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3535() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RBAuu","D","xadz","jFv","Tunw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tunw],[jFv],[jFv,Tunw],[xadz],[xadz,Tunw],[xadz,jFv],[xadz,jFv,Tunw],[D],[D,Tunw],[D,jFv],[D,jFv,Tunw],[D,xadz],[D,xadz,Tunw],[D,xadz,jFv],[D,xadz,jFv,Tunw],[RBAuu],[RBAuu,Tunw],[RBAuu,jFv],[RBAuu,jFv,Tunw],[RBAuu,xadz],[RBAuu,xadz,Tunw],[RBAuu,xadz,jFv],[RBAuu,xadz,jFv,Tunw],[RBAuu,D],[RBAuu,D,Tunw],[RBAuu,D,jFv],[RBAuu,D,jFv,Tunw],[RBAuu,D,xadz],[RBAuu,D,xadz,Tunw],[RBAuu,D,xadz,jFv],[RBAuu,D,xadz,jFv,Tunw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3536() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gy","YXA","mtF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mtF],[YXA],[YXA,mtF],[gy],[gy,mtF],[gy,YXA],[gy,YXA,mtF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3537() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mzB","NI","pgu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pgu],[NI],[NI,pgu],[mzB],[mzB,pgu],[mzB,NI],[mzB,NI,pgu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3538() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ze")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ze]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3539() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HEf","UrTG","GaUu","ldXml")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ldXml],[GaUu],[GaUu,ldXml],[UrTG],[UrTG,ldXml],[UrTG,GaUu],[UrTG,GaUu,ldXml],[HEf],[HEf,ldXml],[HEf,GaUu],[HEf,GaUu,ldXml],[HEf,UrTG],[HEf,UrTG,ldXml],[HEf,UrTG,GaUu],[HEf,UrTG,GaUu,ldXml]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3540() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "usp","H","kT","k","FLimj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FLimj],[k],[k,FLimj],[kT],[kT,FLimj],[kT,k],[kT,k,FLimj],[H],[H,FLimj],[H,k],[H,k,FLimj],[H,kT],[H,kT,FLimj],[H,kT,k],[H,kT,k,FLimj],[usp],[usp,FLimj],[usp,k],[usp,k,FLimj],[usp,kT],[usp,kT,FLimj],[usp,kT,k],[usp,kT,k,FLimj],[usp,H],[usp,H,FLimj],[usp,H,k],[usp,H,k,FLimj],[usp,H,kT],[usp,H,kT,FLimj],[usp,H,kT,k],[usp,H,kT,k,FLimj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3541() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jIsE","pa","wybII")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wybII],[pa],[pa,wybII],[jIsE],[jIsE,wybII],[jIsE,pa],[jIsE,pa,wybII]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3542() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ldfs","WK","gzgcK","cfCV","vJN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vJN],[cfCV],[cfCV,vJN],[gzgcK],[gzgcK,vJN],[gzgcK,cfCV],[gzgcK,cfCV,vJN],[WK],[WK,vJN],[WK,cfCV],[WK,cfCV,vJN],[WK,gzgcK],[WK,gzgcK,vJN],[WK,gzgcK,cfCV],[WK,gzgcK,cfCV,vJN],[Ldfs],[Ldfs,vJN],[Ldfs,cfCV],[Ldfs,cfCV,vJN],[Ldfs,gzgcK],[Ldfs,gzgcK,vJN],[Ldfs,gzgcK,cfCV],[Ldfs,gzgcK,cfCV,vJN],[Ldfs,WK],[Ldfs,WK,vJN],[Ldfs,WK,cfCV],[Ldfs,WK,cfCV,vJN],[Ldfs,WK,gzgcK],[Ldfs,WK,gzgcK,vJN],[Ldfs,WK,gzgcK,cfCV],[Ldfs,WK,gzgcK,cfCV,vJN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3543() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QrqvV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QrqvV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3544() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ivgk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ivgk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3545() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Yn","FVGtu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FVGtu],[Yn],[Yn,FVGtu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3546() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "guJ","Qp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qp],[guJ],[guJ,Qp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3547() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dhu","u")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[u],[dhu],[dhu,u]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3548() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[p]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3549() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","Sq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sq],[T],[T,Sq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3550() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PqLl","Uglz","nJ","CTN","dIc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dIc],[CTN],[CTN,dIc],[nJ],[nJ,dIc],[nJ,CTN],[nJ,CTN,dIc],[Uglz],[Uglz,dIc],[Uglz,CTN],[Uglz,CTN,dIc],[Uglz,nJ],[Uglz,nJ,dIc],[Uglz,nJ,CTN],[Uglz,nJ,CTN,dIc],[PqLl],[PqLl,dIc],[PqLl,CTN],[PqLl,CTN,dIc],[PqLl,nJ],[PqLl,nJ,dIc],[PqLl,nJ,CTN],[PqLl,nJ,CTN,dIc],[PqLl,Uglz],[PqLl,Uglz,dIc],[PqLl,Uglz,CTN],[PqLl,Uglz,CTN,dIc],[PqLl,Uglz,nJ],[PqLl,Uglz,nJ,dIc],[PqLl,Uglz,nJ,CTN],[PqLl,Uglz,nJ,CTN,dIc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3551() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","yTrg","Zw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zw],[yTrg],[yTrg,Zw],[C],[C,Zw],[C,yTrg],[C,yTrg,Zw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3552() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xnAD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xnAD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3553() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","yYf","CdeCp","nYi","fu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fu],[nYi],[nYi,fu],[CdeCp],[CdeCp,fu],[CdeCp,nYi],[CdeCp,nYi,fu],[yYf],[yYf,fu],[yYf,nYi],[yYf,nYi,fu],[yYf,CdeCp],[yYf,CdeCp,fu],[yYf,CdeCp,nYi],[yYf,CdeCp,nYi,fu],[C],[C,fu],[C,nYi],[C,nYi,fu],[C,CdeCp],[C,CdeCp,fu],[C,CdeCp,nYi],[C,CdeCp,nYi,fu],[C,yYf],[C,yYf,fu],[C,yYf,nYi],[C,yYf,nYi,fu],[C,yYf,CdeCp],[C,yYf,CdeCp,fu],[C,yYf,CdeCp,nYi],[C,yYf,CdeCp,nYi,fu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3554() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UWvZy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UWvZy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3555() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fwsT","b","racq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[racq],[b],[b,racq],[fwsT],[fwsT,racq],[fwsT,b],[fwsT,b,racq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3556() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","gesbw","C","wOOLy","LaQW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LaQW],[wOOLy],[wOOLy,LaQW],[C],[C,LaQW],[C,wOOLy],[C,wOOLy,LaQW],[gesbw],[gesbw,LaQW],[gesbw,wOOLy],[gesbw,wOOLy,LaQW],[gesbw,C],[gesbw,C,LaQW],[gesbw,C,wOOLy],[gesbw,C,wOOLy,LaQW],[p],[p,LaQW],[p,wOOLy],[p,wOOLy,LaQW],[p,C],[p,C,LaQW],[p,C,wOOLy],[p,C,wOOLy,LaQW],[p,gesbw],[p,gesbw,LaQW],[p,gesbw,wOOLy],[p,gesbw,wOOLy,LaQW],[p,gesbw,C],[p,gesbw,C,LaQW],[p,gesbw,C,wOOLy],[p,gesbw,C,wOOLy,LaQW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3557() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rXlA","KMp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KMp],[rXlA],[rXlA,KMp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3558() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aa","Ervrp","pPKh","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[pPKh],[pPKh,o],[Ervrp],[Ervrp,o],[Ervrp,pPKh],[Ervrp,pPKh,o],[Aa],[Aa,o],[Aa,pPKh],[Aa,pPKh,o],[Aa,Ervrp],[Aa,Ervrp,o],[Aa,Ervrp,pPKh],[Aa,Ervrp,pPKh,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3559() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bQN","wU","SPaJo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SPaJo],[wU],[wU,SPaJo],[bQN],[bQN,SPaJo],[bQN,wU],[bQN,wU,SPaJo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3560() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","ZIXq","jt","aautM","qBuzM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qBuzM],[aautM],[aautM,qBuzM],[jt],[jt,qBuzM],[jt,aautM],[jt,aautM,qBuzM],[ZIXq],[ZIXq,qBuzM],[ZIXq,aautM],[ZIXq,aautM,qBuzM],[ZIXq,jt],[ZIXq,jt,qBuzM],[ZIXq,jt,aautM],[ZIXq,jt,aautM,qBuzM],[P],[P,qBuzM],[P,aautM],[P,aautM,qBuzM],[P,jt],[P,jt,qBuzM],[P,jt,aautM],[P,jt,aautM,qBuzM],[P,ZIXq],[P,ZIXq,qBuzM],[P,ZIXq,aautM],[P,ZIXq,aautM,qBuzM],[P,ZIXq,jt],[P,ZIXq,jt,qBuzM],[P,ZIXq,jt,aautM],[P,ZIXq,jt,aautM,qBuzM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3561() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3562() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hSU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hSU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3563() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","c","NiH","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[NiH],[NiH,N],[c],[c,N],[c,NiH],[c,NiH,N],[r],[r,N],[r,NiH],[r,NiH,N],[r,c],[r,c,N],[r,c,NiH],[r,c,NiH,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3564() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Th","jcKi","sDyf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sDyf],[jcKi],[jcKi,sDyf],[Th],[Th,sDyf],[Th,jcKi],[Th,jcKi,sDyf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3565() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NYSrF","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[NYSrF],[NYSrF,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3566() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aji","a","X","FHkMe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FHkMe],[X],[X,FHkMe],[a],[a,FHkMe],[a,X],[a,X,FHkMe],[Aji],[Aji,FHkMe],[Aji,X],[Aji,X,FHkMe],[Aji,a],[Aji,a,FHkMe],[Aji,a,X],[Aji,a,X,FHkMe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3567() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XcN","G","ausYj","ZYgl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZYgl],[ausYj],[ausYj,ZYgl],[G],[G,ZYgl],[G,ausYj],[G,ausYj,ZYgl],[XcN],[XcN,ZYgl],[XcN,ausYj],[XcN,ausYj,ZYgl],[XcN,G],[XcN,G,ZYgl],[XcN,G,ausYj],[XcN,G,ausYj,ZYgl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3568() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XlrG","EmNeN","QIH","bh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bh],[QIH],[QIH,bh],[EmNeN],[EmNeN,bh],[EmNeN,QIH],[EmNeN,QIH,bh],[XlrG],[XlrG,bh],[XlrG,QIH],[XlrG,QIH,bh],[XlrG,EmNeN],[XlrG,EmNeN,bh],[XlrG,EmNeN,QIH],[XlrG,EmNeN,QIH,bh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3569() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KS","KguF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KguF],[KS],[KS,KguF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3570() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RR","Eik","pH","CKA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CKA],[pH],[pH,CKA],[Eik],[Eik,CKA],[Eik,pH],[Eik,pH,CKA],[RR],[RR,CKA],[RR,pH],[RR,pH,CKA],[RR,Eik],[RR,Eik,CKA],[RR,Eik,pH],[RR,Eik,pH,CKA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3571() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","lvZyL","tMX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tMX],[lvZyL],[lvZyL,tMX],[T],[T,tMX],[T,lvZyL],[T,lvZyL,tMX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3572() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PPbf","MDnl","b")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[b],[MDnl],[MDnl,b],[PPbf],[PPbf,b],[PPbf,MDnl],[PPbf,MDnl,b]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3573() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bKy","JPcb","I","chbgT","Oer")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Oer],[chbgT],[chbgT,Oer],[I],[I,Oer],[I,chbgT],[I,chbgT,Oer],[JPcb],[JPcb,Oer],[JPcb,chbgT],[JPcb,chbgT,Oer],[JPcb,I],[JPcb,I,Oer],[JPcb,I,chbgT],[JPcb,I,chbgT,Oer],[bKy],[bKy,Oer],[bKy,chbgT],[bKy,chbgT,Oer],[bKy,I],[bKy,I,Oer],[bKy,I,chbgT],[bKy,I,chbgT,Oer],[bKy,JPcb],[bKy,JPcb,Oer],[bKy,JPcb,chbgT],[bKy,JPcb,chbgT,Oer],[bKy,JPcb,I],[bKy,JPcb,I,Oer],[bKy,JPcb,I,chbgT],[bKy,JPcb,I,chbgT,Oer]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3574() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ApO","ybgqh","GUld","Zw","Noke")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Noke],[Zw],[Zw,Noke],[GUld],[GUld,Noke],[GUld,Zw],[GUld,Zw,Noke],[ybgqh],[ybgqh,Noke],[ybgqh,Zw],[ybgqh,Zw,Noke],[ybgqh,GUld],[ybgqh,GUld,Noke],[ybgqh,GUld,Zw],[ybgqh,GUld,Zw,Noke],[ApO],[ApO,Noke],[ApO,Zw],[ApO,Zw,Noke],[ApO,GUld],[ApO,GUld,Noke],[ApO,GUld,Zw],[ApO,GUld,Zw,Noke],[ApO,ybgqh],[ApO,ybgqh,Noke],[ApO,ybgqh,Zw],[ApO,ybgqh,Zw,Noke],[ApO,ybgqh,GUld],[ApO,ybgqh,GUld,Noke],[ApO,ybgqh,GUld,Zw],[ApO,ybgqh,GUld,Zw,Noke]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3575() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","tVMfX","Mx","m","Mhanz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mhanz],[m],[m,Mhanz],[Mx],[Mx,Mhanz],[Mx,m],[Mx,m,Mhanz],[tVMfX],[tVMfX,Mhanz],[tVMfX,m],[tVMfX,m,Mhanz],[tVMfX,Mx],[tVMfX,Mx,Mhanz],[tVMfX,Mx,m],[tVMfX,Mx,m,Mhanz],[q],[q,Mhanz],[q,m],[q,m,Mhanz],[q,Mx],[q,Mx,Mhanz],[q,Mx,m],[q,Mx,m,Mhanz],[q,tVMfX],[q,tVMfX,Mhanz],[q,tVMfX,m],[q,tVMfX,m,Mhanz],[q,tVMfX,Mx],[q,tVMfX,Mx,Mhanz],[q,tVMfX,Mx,m],[q,tVMfX,Mx,m,Mhanz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3576() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vjEFv","lgA","qEJO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qEJO],[lgA],[lgA,qEJO],[vjEFv],[vjEFv,qEJO],[vjEFv,lgA],[vjEFv,lgA,qEJO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3577() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Dg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3578() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eLuxK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eLuxK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3579() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "or","Y","xfqg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xfqg],[Y],[Y,xfqg],[or],[or,xfqg],[or,Y],[or,Y,xfqg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3580() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Od","TrsYv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TrsYv],[Od],[Od,TrsYv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3581() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Huti","EiuLY","GLJgL","bm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bm],[GLJgL],[GLJgL,bm],[EiuLY],[EiuLY,bm],[EiuLY,GLJgL],[EiuLY,GLJgL,bm],[Huti],[Huti,bm],[Huti,GLJgL],[Huti,GLJgL,bm],[Huti,EiuLY],[Huti,EiuLY,bm],[Huti,EiuLY,GLJgL],[Huti,EiuLY,GLJgL,bm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3582() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","WEW","MU","xgM","sYD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sYD],[xgM],[xgM,sYD],[MU],[MU,sYD],[MU,xgM],[MU,xgM,sYD],[WEW],[WEW,sYD],[WEW,xgM],[WEW,xgM,sYD],[WEW,MU],[WEW,MU,sYD],[WEW,MU,xgM],[WEW,MU,xgM,sYD],[E],[E,sYD],[E,xgM],[E,xgM,sYD],[E,MU],[E,MU,sYD],[E,MU,xgM],[E,MU,xgM,sYD],[E,WEW],[E,WEW,sYD],[E,WEW,xgM],[E,WEW,xgM,sYD],[E,WEW,MU],[E,WEW,MU,sYD],[E,WEW,MU,xgM],[E,WEW,MU,xgM,sYD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3583() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ff","HS","QPSA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QPSA],[HS],[HS,QPSA],[ff],[ff,QPSA],[ff,HS],[ff,HS,QPSA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3584() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "znN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[znN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3585() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","HSwqB","JqVNn","SOcE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SOcE],[JqVNn],[JqVNn,SOcE],[HSwqB],[HSwqB,SOcE],[HSwqB,JqVNn],[HSwqB,JqVNn,SOcE],[P],[P,SOcE],[P,JqVNn],[P,JqVNn,SOcE],[P,HSwqB],[P,HSwqB,SOcE],[P,HSwqB,JqVNn],[P,HSwqB,JqVNn,SOcE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3586() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UlaDL","C","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[C],[C,x],[UlaDL],[UlaDL,x],[UlaDL,C],[UlaDL,C,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3587() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MQ","EkAU","OTaEE","nZJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nZJ],[OTaEE],[OTaEE,nZJ],[EkAU],[EkAU,nZJ],[EkAU,OTaEE],[EkAU,OTaEE,nZJ],[MQ],[MQ,nZJ],[MQ,OTaEE],[MQ,OTaEE,nZJ],[MQ,EkAU],[MQ,EkAU,nZJ],[MQ,EkAU,OTaEE],[MQ,EkAU,OTaEE,nZJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3588() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","V","RYVI","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[RYVI],[RYVI,l],[V],[V,l],[V,RYVI],[V,RYVI,l],[Q],[Q,l],[Q,RYVI],[Q,RYVI,l],[Q,V],[Q,V,l],[Q,V,RYVI],[Q,V,RYVI,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3589() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","Tg","LbD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LbD],[Tg],[Tg,LbD],[Q],[Q,LbD],[Q,Tg],[Q,Tg,LbD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3590() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SDxsr","Kslo","apArE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[apArE],[Kslo],[Kslo,apArE],[SDxsr],[SDxsr,apArE],[SDxsr,Kslo],[SDxsr,Kslo,apArE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3591() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rikJj","Yn","LE","jOMNm","uTWSB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uTWSB],[jOMNm],[jOMNm,uTWSB],[LE],[LE,uTWSB],[LE,jOMNm],[LE,jOMNm,uTWSB],[Yn],[Yn,uTWSB],[Yn,jOMNm],[Yn,jOMNm,uTWSB],[Yn,LE],[Yn,LE,uTWSB],[Yn,LE,jOMNm],[Yn,LE,jOMNm,uTWSB],[rikJj],[rikJj,uTWSB],[rikJj,jOMNm],[rikJj,jOMNm,uTWSB],[rikJj,LE],[rikJj,LE,uTWSB],[rikJj,LE,jOMNm],[rikJj,LE,jOMNm,uTWSB],[rikJj,Yn],[rikJj,Yn,uTWSB],[rikJj,Yn,jOMNm],[rikJj,Yn,jOMNm,uTWSB],[rikJj,Yn,LE],[rikJj,Yn,LE,uTWSB],[rikJj,Yn,LE,jOMNm],[rikJj,Yn,LE,jOMNm,uTWSB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3592() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qehh","uOLA","aecLJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aecLJ],[uOLA],[uOLA,aecLJ],[qehh],[qehh,aecLJ],[qehh,uOLA],[qehh,uOLA,aecLJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3593() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KJXxQ","IGK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IGK],[KJXxQ],[KJXxQ,IGK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3594() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kOkpq","dbgPc","k","dmU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dmU],[k],[k,dmU],[dbgPc],[dbgPc,dmU],[dbgPc,k],[dbgPc,k,dmU],[kOkpq],[kOkpq,dmU],[kOkpq,k],[kOkpq,k,dmU],[kOkpq,dbgPc],[kOkpq,dbgPc,dmU],[kOkpq,dbgPc,k],[kOkpq,dbgPc,k,dmU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3595() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AWK","pV","VOmF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VOmF],[pV],[pV,VOmF],[AWK],[AWK,VOmF],[AWK,pV],[AWK,pV,VOmF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3596() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","s","RJId","W","zf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zf],[W],[W,zf],[RJId],[RJId,zf],[RJId,W],[RJId,W,zf],[s],[s,zf],[s,W],[s,W,zf],[s,RJId],[s,RJId,zf],[s,RJId,W],[s,RJId,W,zf],[a],[a,zf],[a,W],[a,W,zf],[a,RJId],[a,RJId,zf],[a,RJId,W],[a,RJId,W,zf],[a,s],[a,s,zf],[a,s,W],[a,s,W,zf],[a,s,RJId],[a,s,RJId,zf],[a,s,RJId,W],[a,s,RJId,W,zf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3597() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uzh","yq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yq],[uzh],[uzh,yq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3598() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eGk","EugfI","TwBH","dc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dc],[TwBH],[TwBH,dc],[EugfI],[EugfI,dc],[EugfI,TwBH],[EugfI,TwBH,dc],[eGk],[eGk,dc],[eGk,TwBH],[eGk,TwBH,dc],[eGk,EugfI],[eGk,EugfI,dc],[eGk,EugfI,TwBH],[eGk,EugfI,TwBH,dc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3599() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vjJwq","t","Owm","tAz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tAz],[Owm],[Owm,tAz],[t],[t,tAz],[t,Owm],[t,Owm,tAz],[vjJwq],[vjJwq,tAz],[vjJwq,Owm],[vjJwq,Owm,tAz],[vjJwq,t],[vjJwq,t,tAz],[vjJwq,t,Owm],[vjJwq,t,Owm,tAz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3600() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SpJ","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[SpJ],[SpJ,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3601() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "peDoX","VQEg","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[VQEg],[VQEg,L],[peDoX],[peDoX,L],[peDoX,VQEg],[peDoX,VQEg,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3602() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","Pfx","vnaS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vnaS],[Pfx],[Pfx,vnaS],[C],[C,vnaS],[C,Pfx],[C,Pfx,vnaS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3603() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oaYGI","Vnej")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vnej],[oaYGI],[oaYGI,Vnej]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3604() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fkn","pZv","DVFTI","BQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BQ],[DVFTI],[DVFTI,BQ],[pZv],[pZv,BQ],[pZv,DVFTI],[pZv,DVFTI,BQ],[fkn],[fkn,BQ],[fkn,DVFTI],[fkn,DVFTI,BQ],[fkn,pZv],[fkn,pZv,BQ],[fkn,pZv,DVFTI],[fkn,pZv,DVFTI,BQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3605() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sT","Vq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vq],[sT],[sT,Vq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3606() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dnhUY","fKlQS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fKlQS],[dnhUY],[dnhUY,fKlQS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3607() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fIJCj","Ixe","Zc","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[Zc],[Zc,j],[Ixe],[Ixe,j],[Ixe,Zc],[Ixe,Zc,j],[fIJCj],[fIJCj,j],[fIJCj,Zc],[fIJCj,Zc,j],[fIJCj,Ixe],[fIJCj,Ixe,j],[fIJCj,Ixe,Zc],[fIJCj,Ixe,Zc,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3608() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EtXO","Xb","K","nCC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nCC],[K],[K,nCC],[Xb],[Xb,nCC],[Xb,K],[Xb,K,nCC],[EtXO],[EtXO,nCC],[EtXO,K],[EtXO,K,nCC],[EtXO,Xb],[EtXO,Xb,nCC],[EtXO,Xb,K],[EtXO,Xb,K,nCC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3609() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sgYfx","sUeO","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[sUeO],[sUeO,Z],[sgYfx],[sgYfx,Z],[sgYfx,sUeO],[sgYfx,sUeO,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3610() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jbX","hXDcV","hRE","eGo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eGo],[hRE],[hRE,eGo],[hXDcV],[hXDcV,eGo],[hXDcV,hRE],[hXDcV,hRE,eGo],[jbX],[jbX,eGo],[jbX,hRE],[jbX,hRE,eGo],[jbX,hXDcV],[jbX,hXDcV,eGo],[jbX,hXDcV,hRE],[jbX,hXDcV,hRE,eGo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3611() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ORaZ","BCXwM","Ds")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ds],[BCXwM],[BCXwM,Ds],[ORaZ],[ORaZ,Ds],[ORaZ,BCXwM],[ORaZ,BCXwM,Ds]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3612() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DMRl","MS","zy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zy],[MS],[MS,zy],[DMRl],[DMRl,zy],[DMRl,MS],[DMRl,MS,zy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3613() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Eg","V","WbC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WbC],[V],[V,WbC],[Eg],[Eg,WbC],[Eg,V],[Eg,V,WbC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3614() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Kdgxp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kdgxp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3615() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XuBY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XuBY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3616() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qq","zGvfI","H")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[H],[zGvfI],[zGvfI,H],[qq],[qq,H],[qq,zGvfI],[qq,zGvfI,H]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3617() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GJd","mtYjv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mtYjv],[GJd],[GJd,mtYjv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3618() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ERFm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ERFm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3619() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QStb","MRKY","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[MRKY],[MRKY,l],[QStb],[QStb,l],[QStb,MRKY],[QStb,MRKY,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3620() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wJ","xwQN","DDh","AeMrr","SpKlx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SpKlx],[AeMrr],[AeMrr,SpKlx],[DDh],[DDh,SpKlx],[DDh,AeMrr],[DDh,AeMrr,SpKlx],[xwQN],[xwQN,SpKlx],[xwQN,AeMrr],[xwQN,AeMrr,SpKlx],[xwQN,DDh],[xwQN,DDh,SpKlx],[xwQN,DDh,AeMrr],[xwQN,DDh,AeMrr,SpKlx],[wJ],[wJ,SpKlx],[wJ,AeMrr],[wJ,AeMrr,SpKlx],[wJ,DDh],[wJ,DDh,SpKlx],[wJ,DDh,AeMrr],[wJ,DDh,AeMrr,SpKlx],[wJ,xwQN],[wJ,xwQN,SpKlx],[wJ,xwQN,AeMrr],[wJ,xwQN,AeMrr,SpKlx],[wJ,xwQN,DDh],[wJ,xwQN,DDh,SpKlx],[wJ,xwQN,DDh,AeMrr],[wJ,xwQN,DDh,AeMrr,SpKlx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3621() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3622() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PdTRe","yfi","fUuv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fUuv],[yfi],[yfi,fUuv],[PdTRe],[PdTRe,fUuv],[PdTRe,yfi],[PdTRe,yfi,fUuv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3623() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Kt","DSpJq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DSpJq],[Kt],[Kt,DSpJq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3624() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "isXBm","kT","DtOk","mRUM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mRUM],[DtOk],[DtOk,mRUM],[kT],[kT,mRUM],[kT,DtOk],[kT,DtOk,mRUM],[isXBm],[isXBm,mRUM],[isXBm,DtOk],[isXBm,DtOk,mRUM],[isXBm,kT],[isXBm,kT,mRUM],[isXBm,kT,DtOk],[isXBm,kT,DtOk,mRUM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3625() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tWnL","nLaB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nLaB],[tWnL],[tWnL,nLaB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3626() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DWodn","BCV","rAu","gHIDS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gHIDS],[rAu],[rAu,gHIDS],[BCV],[BCV,gHIDS],[BCV,rAu],[BCV,rAu,gHIDS],[DWodn],[DWodn,gHIDS],[DWodn,rAu],[DWodn,rAu,gHIDS],[DWodn,BCV],[DWodn,BCV,gHIDS],[DWodn,BCV,rAu],[DWodn,BCV,rAu,gHIDS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3627() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "M","VNMqZ","AwDkQ","jNXB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jNXB],[AwDkQ],[AwDkQ,jNXB],[VNMqZ],[VNMqZ,jNXB],[VNMqZ,AwDkQ],[VNMqZ,AwDkQ,jNXB],[M],[M,jNXB],[M,AwDkQ],[M,AwDkQ,jNXB],[M,VNMqZ],[M,VNMqZ,jNXB],[M,VNMqZ,AwDkQ],[M,VNMqZ,AwDkQ,jNXB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3628() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BDoS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BDoS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3629() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3630() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qg","Ajww","tz","Y","OilqS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OilqS],[Y],[Y,OilqS],[tz],[tz,OilqS],[tz,Y],[tz,Y,OilqS],[Ajww],[Ajww,OilqS],[Ajww,Y],[Ajww,Y,OilqS],[Ajww,tz],[Ajww,tz,OilqS],[Ajww,tz,Y],[Ajww,tz,Y,OilqS],[Qg],[Qg,OilqS],[Qg,Y],[Qg,Y,OilqS],[Qg,tz],[Qg,tz,OilqS],[Qg,tz,Y],[Qg,tz,Y,OilqS],[Qg,Ajww],[Qg,Ajww,OilqS],[Qg,Ajww,Y],[Qg,Ajww,Y,OilqS],[Qg,Ajww,tz],[Qg,Ajww,tz,OilqS],[Qg,Ajww,tz,Y],[Qg,Ajww,tz,Y,OilqS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3631() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "snCge")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[snCge]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3632() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ocJQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ocJQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3633() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WUlv","S","BV","UMcJK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UMcJK],[BV],[BV,UMcJK],[S],[S,UMcJK],[S,BV],[S,BV,UMcJK],[WUlv],[WUlv,UMcJK],[WUlv,BV],[WUlv,BV,UMcJK],[WUlv,S],[WUlv,S,UMcJK],[WUlv,S,BV],[WUlv,S,BV,UMcJK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3634() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OHPgl","uAE","K","jUUi","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[jUUi],[jUUi,o],[K],[K,o],[K,jUUi],[K,jUUi,o],[uAE],[uAE,o],[uAE,jUUi],[uAE,jUUi,o],[uAE,K],[uAE,K,o],[uAE,K,jUUi],[uAE,K,jUUi,o],[OHPgl],[OHPgl,o],[OHPgl,jUUi],[OHPgl,jUUi,o],[OHPgl,K],[OHPgl,K,o],[OHPgl,K,jUUi],[OHPgl,K,jUUi,o],[OHPgl,uAE],[OHPgl,uAE,o],[OHPgl,uAE,jUUi],[OHPgl,uAE,jUUi,o],[OHPgl,uAE,K],[OHPgl,uAE,K,o],[OHPgl,uAE,K,jUUi],[OHPgl,uAE,K,jUUi,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3635() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lib","VSR","aJ","QQJU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QQJU],[aJ],[aJ,QQJU],[VSR],[VSR,QQJU],[VSR,aJ],[VSR,aJ,QQJU],[lib],[lib,QQJU],[lib,aJ],[lib,aJ,QQJU],[lib,VSR],[lib,VSR,QQJU],[lib,VSR,aJ],[lib,VSR,aJ,QQJU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3636() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mRN","ES")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ES],[mRN],[mRN,ES]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3637() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Uf","H","lu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lu],[H],[H,lu],[Uf],[Uf,lu],[Uf,H],[Uf,H,lu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3638() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aSKMm","GpLX","W","ePIT","zbHr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zbHr],[ePIT],[ePIT,zbHr],[W],[W,zbHr],[W,ePIT],[W,ePIT,zbHr],[GpLX],[GpLX,zbHr],[GpLX,ePIT],[GpLX,ePIT,zbHr],[GpLX,W],[GpLX,W,zbHr],[GpLX,W,ePIT],[GpLX,W,ePIT,zbHr],[aSKMm],[aSKMm,zbHr],[aSKMm,ePIT],[aSKMm,ePIT,zbHr],[aSKMm,W],[aSKMm,W,zbHr],[aSKMm,W,ePIT],[aSKMm,W,ePIT,zbHr],[aSKMm,GpLX],[aSKMm,GpLX,zbHr],[aSKMm,GpLX,ePIT],[aSKMm,GpLX,ePIT,zbHr],[aSKMm,GpLX,W],[aSKMm,GpLX,W,zbHr],[aSKMm,GpLX,W,ePIT],[aSKMm,GpLX,W,ePIT,zbHr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3639() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pH","y","hmQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hmQ],[y],[y,hmQ],[pH],[pH,hmQ],[pH,y],[pH,y,hmQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3640() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eu","Vhv","J","AZF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AZF],[J],[J,AZF],[Vhv],[Vhv,AZF],[Vhv,J],[Vhv,J,AZF],[eu],[eu,AZF],[eu,J],[eu,J,AZF],[eu,Vhv],[eu,Vhv,AZF],[eu,Vhv,J],[eu,Vhv,J,AZF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3641() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3642() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PyUK","zXX","cqZO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cqZO],[zXX],[zXX,cqZO],[PyUK],[PyUK,cqZO],[PyUK,zXX],[PyUK,zXX,cqZO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3643() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aEJc","Su","R","KzHpI","IWQQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IWQQ],[KzHpI],[KzHpI,IWQQ],[R],[R,IWQQ],[R,KzHpI],[R,KzHpI,IWQQ],[Su],[Su,IWQQ],[Su,KzHpI],[Su,KzHpI,IWQQ],[Su,R],[Su,R,IWQQ],[Su,R,KzHpI],[Su,R,KzHpI,IWQQ],[aEJc],[aEJc,IWQQ],[aEJc,KzHpI],[aEJc,KzHpI,IWQQ],[aEJc,R],[aEJc,R,IWQQ],[aEJc,R,KzHpI],[aEJc,R,KzHpI,IWQQ],[aEJc,Su],[aEJc,Su,IWQQ],[aEJc,Su,KzHpI],[aEJc,Su,KzHpI,IWQQ],[aEJc,Su,R],[aEJc,Su,R,IWQQ],[aEJc,Su,R,KzHpI],[aEJc,Su,R,KzHpI,IWQQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3644() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","F","ek","WhCzU","VLP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VLP],[WhCzU],[WhCzU,VLP],[ek],[ek,VLP],[ek,WhCzU],[ek,WhCzU,VLP],[F],[F,VLP],[F,WhCzU],[F,WhCzU,VLP],[F,ek],[F,ek,VLP],[F,ek,WhCzU],[F,ek,WhCzU,VLP],[D],[D,VLP],[D,WhCzU],[D,WhCzU,VLP],[D,ek],[D,ek,VLP],[D,ek,WhCzU],[D,ek,WhCzU,VLP],[D,F],[D,F,VLP],[D,F,WhCzU],[D,F,WhCzU,VLP],[D,F,ek],[D,F,ek,VLP],[D,F,ek,WhCzU],[D,F,ek,WhCzU,VLP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3645() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OYVr","Yjy","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[Yjy],[Yjy,J],[OYVr],[OYVr,J],[OYVr,Yjy],[OYVr,Yjy,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3646() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iY","OlSng")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OlSng],[iY],[iY,OlSng]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3647() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LaIbJ","e","rN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rN],[e],[e,rN],[LaIbJ],[LaIbJ,rN],[LaIbJ,e],[LaIbJ,e,rN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3648() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "awLDh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[awLDh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3649() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Xbk","bAP","dzv","j","uWL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uWL],[j],[j,uWL],[dzv],[dzv,uWL],[dzv,j],[dzv,j,uWL],[bAP],[bAP,uWL],[bAP,j],[bAP,j,uWL],[bAP,dzv],[bAP,dzv,uWL],[bAP,dzv,j],[bAP,dzv,j,uWL],[Xbk],[Xbk,uWL],[Xbk,j],[Xbk,j,uWL],[Xbk,dzv],[Xbk,dzv,uWL],[Xbk,dzv,j],[Xbk,dzv,j,uWL],[Xbk,bAP],[Xbk,bAP,uWL],[Xbk,bAP,j],[Xbk,bAP,j,uWL],[Xbk,bAP,dzv],[Xbk,bAP,dzv,uWL],[Xbk,bAP,dzv,j],[Xbk,bAP,dzv,j,uWL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3650() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EpHa","oRJ","GRTDQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GRTDQ],[oRJ],[oRJ,GRTDQ],[EpHa],[EpHa,GRTDQ],[EpHa,oRJ],[EpHa,oRJ,GRTDQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3651() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","AdbF","EcI","FciX","AFGib")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AFGib],[FciX],[FciX,AFGib],[EcI],[EcI,AFGib],[EcI,FciX],[EcI,FciX,AFGib],[AdbF],[AdbF,AFGib],[AdbF,FciX],[AdbF,FciX,AFGib],[AdbF,EcI],[AdbF,EcI,AFGib],[AdbF,EcI,FciX],[AdbF,EcI,FciX,AFGib],[r],[r,AFGib],[r,FciX],[r,FciX,AFGib],[r,EcI],[r,EcI,AFGib],[r,EcI,FciX],[r,EcI,FciX,AFGib],[r,AdbF],[r,AdbF,AFGib],[r,AdbF,FciX],[r,AdbF,FciX,AFGib],[r,AdbF,EcI],[r,AdbF,EcI,AFGib],[r,AdbF,EcI,FciX],[r,AdbF,EcI,FciX,AFGib]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3652() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[C]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3653() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Svz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Svz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3654() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GumHR","LCocB","vOsil","UP","Cn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cn],[UP],[UP,Cn],[vOsil],[vOsil,Cn],[vOsil,UP],[vOsil,UP,Cn],[LCocB],[LCocB,Cn],[LCocB,UP],[LCocB,UP,Cn],[LCocB,vOsil],[LCocB,vOsil,Cn],[LCocB,vOsil,UP],[LCocB,vOsil,UP,Cn],[GumHR],[GumHR,Cn],[GumHR,UP],[GumHR,UP,Cn],[GumHR,vOsil],[GumHR,vOsil,Cn],[GumHR,vOsil,UP],[GumHR,vOsil,UP,Cn],[GumHR,LCocB],[GumHR,LCocB,Cn],[GumHR,LCocB,UP],[GumHR,LCocB,UP,Cn],[GumHR,LCocB,vOsil],[GumHR,LCocB,vOsil,Cn],[GumHR,LCocB,vOsil,UP],[GumHR,LCocB,vOsil,UP,Cn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3655() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lSYU","VBF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VBF],[lSYU],[lSYU,VBF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3656() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VExa","DoFoI","DpK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DpK],[DoFoI],[DoFoI,DpK],[VExa],[VExa,DpK],[VExa,DoFoI],[VExa,DoFoI,DpK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3657() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jutjy","JpOVt","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[JpOVt],[JpOVt,X],[Jutjy],[Jutjy,X],[Jutjy,JpOVt],[Jutjy,JpOVt,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3658() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TUX","X","BAlvF","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[BAlvF],[BAlvF,n],[X],[X,n],[X,BAlvF],[X,BAlvF,n],[TUX],[TUX,n],[TUX,BAlvF],[TUX,BAlvF,n],[TUX,X],[TUX,X,n],[TUX,X,BAlvF],[TUX,X,BAlvF,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3659() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JGAUW","ZlnzB","Am","eaH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eaH],[Am],[Am,eaH],[ZlnzB],[ZlnzB,eaH],[ZlnzB,Am],[ZlnzB,Am,eaH],[JGAUW],[JGAUW,eaH],[JGAUW,Am],[JGAUW,Am,eaH],[JGAUW,ZlnzB],[JGAUW,ZlnzB,eaH],[JGAUW,ZlnzB,Am],[JGAUW,ZlnzB,Am,eaH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3660() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3661() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HH","QZhFT","OtJZO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OtJZO],[QZhFT],[QZhFT,OtJZO],[HH],[HH,OtJZO],[HH,QZhFT],[HH,QZhFT,OtJZO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3662() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "crG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[crG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3663() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qsVDX","Odi","GRC","sm","ujQwh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ujQwh],[sm],[sm,ujQwh],[GRC],[GRC,ujQwh],[GRC,sm],[GRC,sm,ujQwh],[Odi],[Odi,ujQwh],[Odi,sm],[Odi,sm,ujQwh],[Odi,GRC],[Odi,GRC,ujQwh],[Odi,GRC,sm],[Odi,GRC,sm,ujQwh],[qsVDX],[qsVDX,ujQwh],[qsVDX,sm],[qsVDX,sm,ujQwh],[qsVDX,GRC],[qsVDX,GRC,ujQwh],[qsVDX,GRC,sm],[qsVDX,GRC,sm,ujQwh],[qsVDX,Odi],[qsVDX,Odi,ujQwh],[qsVDX,Odi,sm],[qsVDX,Odi,sm,ujQwh],[qsVDX,Odi,GRC],[qsVDX,Odi,GRC,ujQwh],[qsVDX,Odi,GRC,sm],[qsVDX,Odi,GRC,sm,ujQwh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3664() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "haL","d","uUpLQ","qp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qp],[uUpLQ],[uUpLQ,qp],[d],[d,qp],[d,uUpLQ],[d,uUpLQ,qp],[haL],[haL,qp],[haL,uUpLQ],[haL,uUpLQ,qp],[haL,d],[haL,d,qp],[haL,d,uUpLQ],[haL,d,uUpLQ,qp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3665() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kZqcS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kZqcS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3666() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3667() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","FMdT","Xeu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xeu],[FMdT],[FMdT,Xeu],[A],[A,Xeu],[A,FMdT],[A,FMdT,Xeu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3668() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Wg","W","Lzsqm","LqRx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LqRx],[Lzsqm],[Lzsqm,LqRx],[W],[W,LqRx],[W,Lzsqm],[W,Lzsqm,LqRx],[Wg],[Wg,LqRx],[Wg,Lzsqm],[Wg,Lzsqm,LqRx],[Wg,W],[Wg,W,LqRx],[Wg,W,Lzsqm],[Wg,W,Lzsqm,LqRx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3669() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yrfJb","PyX","vXqof")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vXqof],[PyX],[PyX,vXqof],[yrfJb],[yrfJb,vXqof],[yrfJb,PyX],[yrfJb,PyX,vXqof]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3670() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lPw","WPqC","rNjgA","lPP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lPP],[rNjgA],[rNjgA,lPP],[WPqC],[WPqC,lPP],[WPqC,rNjgA],[WPqC,rNjgA,lPP],[lPw],[lPw,lPP],[lPw,rNjgA],[lPw,rNjgA,lPP],[lPw,WPqC],[lPw,WPqC,lPP],[lPw,WPqC,rNjgA],[lPw,WPqC,rNjgA,lPP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3671() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ND","X","DGK","pVq","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[pVq],[pVq,o],[DGK],[DGK,o],[DGK,pVq],[DGK,pVq,o],[X],[X,o],[X,pVq],[X,pVq,o],[X,DGK],[X,DGK,o],[X,DGK,pVq],[X,DGK,pVq,o],[ND],[ND,o],[ND,pVq],[ND,pVq,o],[ND,DGK],[ND,DGK,o],[ND,DGK,pVq],[ND,DGK,pVq,o],[ND,X],[ND,X,o],[ND,X,pVq],[ND,X,pVq,o],[ND,X,DGK],[ND,X,DGK,o],[ND,X,DGK,pVq],[ND,X,DGK,pVq,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3672() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","waviv","AU","rkn","nbA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nbA],[rkn],[rkn,nbA],[AU],[AU,nbA],[AU,rkn],[AU,rkn,nbA],[waviv],[waviv,nbA],[waviv,rkn],[waviv,rkn,nbA],[waviv,AU],[waviv,AU,nbA],[waviv,AU,rkn],[waviv,AU,rkn,nbA],[b],[b,nbA],[b,rkn],[b,rkn,nbA],[b,AU],[b,AU,nbA],[b,AU,rkn],[b,AU,rkn,nbA],[b,waviv],[b,waviv,nbA],[b,waviv,rkn],[b,waviv,rkn,nbA],[b,waviv,AU],[b,waviv,AU,nbA],[b,waviv,AU,rkn],[b,waviv,AU,rkn,nbA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3673() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bbDP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bbDP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3674() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3675() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "l","reVsk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[reVsk],[l],[l,reVsk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3676() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","e","xbnZx","QRwlV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QRwlV],[xbnZx],[xbnZx,QRwlV],[e],[e,QRwlV],[e,xbnZx],[e,xbnZx,QRwlV],[T],[T,QRwlV],[T,xbnZx],[T,xbnZx,QRwlV],[T,e],[T,e,QRwlV],[T,e,xbnZx],[T,e,xbnZx,QRwlV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3677() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MlDlu","k","DGKFP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DGKFP],[k],[k,DGKFP],[MlDlu],[MlDlu,DGKFP],[MlDlu,k],[MlDlu,k,DGKFP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3678() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BGJ","mb","Yyx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yyx],[mb],[mb,Yyx],[BGJ],[BGJ,Yyx],[BGJ,mb],[BGJ,mb,Yyx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3679() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[r],[r,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3680() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wKNA","f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f],[wKNA],[wKNA,f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3681() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3682() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xX","ULKz","cQbP","TRlbc","Zt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zt],[TRlbc],[TRlbc,Zt],[cQbP],[cQbP,Zt],[cQbP,TRlbc],[cQbP,TRlbc,Zt],[ULKz],[ULKz,Zt],[ULKz,TRlbc],[ULKz,TRlbc,Zt],[ULKz,cQbP],[ULKz,cQbP,Zt],[ULKz,cQbP,TRlbc],[ULKz,cQbP,TRlbc,Zt],[xX],[xX,Zt],[xX,TRlbc],[xX,TRlbc,Zt],[xX,cQbP],[xX,cQbP,Zt],[xX,cQbP,TRlbc],[xX,cQbP,TRlbc,Zt],[xX,ULKz],[xX,ULKz,Zt],[xX,ULKz,TRlbc],[xX,ULKz,TRlbc,Zt],[xX,ULKz,cQbP],[xX,ULKz,cQbP,Zt],[xX,ULKz,cQbP,TRlbc],[xX,ULKz,cQbP,TRlbc,Zt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3683() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HaXQ","A","PT","u","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[u],[u,j],[PT],[PT,j],[PT,u],[PT,u,j],[A],[A,j],[A,u],[A,u,j],[A,PT],[A,PT,j],[A,PT,u],[A,PT,u,j],[HaXQ],[HaXQ,j],[HaXQ,u],[HaXQ,u,j],[HaXQ,PT],[HaXQ,PT,j],[HaXQ,PT,u],[HaXQ,PT,u,j],[HaXQ,A],[HaXQ,A,j],[HaXQ,A,u],[HaXQ,A,u,j],[HaXQ,A,PT],[HaXQ,A,PT,j],[HaXQ,A,PT,u],[HaXQ,A,PT,u,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3684() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "biVqh","ulCN","Yxgg","QgLT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QgLT],[Yxgg],[Yxgg,QgLT],[ulCN],[ulCN,QgLT],[ulCN,Yxgg],[ulCN,Yxgg,QgLT],[biVqh],[biVqh,QgLT],[biVqh,Yxgg],[biVqh,Yxgg,QgLT],[biVqh,ulCN],[biVqh,ulCN,QgLT],[biVqh,ulCN,Yxgg],[biVqh,ulCN,Yxgg,QgLT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3685() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uy","Yps","xKB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xKB],[Yps],[Yps,xKB],[uy],[uy,xKB],[uy,Yps],[uy,Yps,xKB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3686() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iKSpH","xvDOX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xvDOX],[iKSpH],[iKSpH,xvDOX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3687() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3688() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VJhO","EkEsa","hgYNr","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[hgYNr],[hgYNr,O],[EkEsa],[EkEsa,O],[EkEsa,hgYNr],[EkEsa,hgYNr,O],[VJhO],[VJhO,O],[VJhO,hgYNr],[VJhO,hgYNr,O],[VJhO,EkEsa],[VJhO,EkEsa,O],[VJhO,EkEsa,hgYNr],[VJhO,EkEsa,hgYNr,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3689() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "riFkn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[riFkn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3690() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","ieCr","VINN","TAfc","SRAk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SRAk],[TAfc],[TAfc,SRAk],[VINN],[VINN,SRAk],[VINN,TAfc],[VINN,TAfc,SRAk],[ieCr],[ieCr,SRAk],[ieCr,TAfc],[ieCr,TAfc,SRAk],[ieCr,VINN],[ieCr,VINN,SRAk],[ieCr,VINN,TAfc],[ieCr,VINN,TAfc,SRAk],[b],[b,SRAk],[b,TAfc],[b,TAfc,SRAk],[b,VINN],[b,VINN,SRAk],[b,VINN,TAfc],[b,VINN,TAfc,SRAk],[b,ieCr],[b,ieCr,SRAk],[b,ieCr,TAfc],[b,ieCr,TAfc,SRAk],[b,ieCr,VINN],[b,ieCr,VINN,SRAk],[b,ieCr,VINN,TAfc],[b,ieCr,VINN,TAfc,SRAk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3691() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yRnsC","K","Hdat")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hdat],[K],[K,Hdat],[yRnsC],[yRnsC,Hdat],[yRnsC,K],[yRnsC,K,Hdat]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3692() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lcZD","oL","sb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sb],[oL],[oL,sb],[lcZD],[lcZD,sb],[lcZD,oL],[lcZD,oL,sb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3693() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "x","XxO","iAG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iAG],[XxO],[XxO,iAG],[x],[x,iAG],[x,XxO],[x,XxO,iAG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3694() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dMHro","dQYJY","VVylM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VVylM],[dQYJY],[dQYJY,VVylM],[dMHro],[dMHro,VVylM],[dMHro,dQYJY],[dMHro,dQYJY,VVylM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3695() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","yEPa","J","bkE","oRUeo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oRUeo],[bkE],[bkE,oRUeo],[J],[J,oRUeo],[J,bkE],[J,bkE,oRUeo],[yEPa],[yEPa,oRUeo],[yEPa,bkE],[yEPa,bkE,oRUeo],[yEPa,J],[yEPa,J,oRUeo],[yEPa,J,bkE],[yEPa,J,bkE,oRUeo],[c],[c,oRUeo],[c,bkE],[c,bkE,oRUeo],[c,J],[c,J,oRUeo],[c,J,bkE],[c,J,bkE,oRUeo],[c,yEPa],[c,yEPa,oRUeo],[c,yEPa,bkE],[c,yEPa,bkE,oRUeo],[c,yEPa,J],[c,yEPa,J,oRUeo],[c,yEPa,J,bkE],[c,yEPa,J,bkE,oRUeo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3696() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tmCa","YYV","TaJKU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TaJKU],[YYV],[YYV,TaJKU],[tmCa],[tmCa,TaJKU],[tmCa,YYV],[tmCa,YYV,TaJKU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3697() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JFFYq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JFFYq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3698() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BxH","s","qrUz","MB","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[MB],[MB,G],[qrUz],[qrUz,G],[qrUz,MB],[qrUz,MB,G],[s],[s,G],[s,MB],[s,MB,G],[s,qrUz],[s,qrUz,G],[s,qrUz,MB],[s,qrUz,MB,G],[BxH],[BxH,G],[BxH,MB],[BxH,MB,G],[BxH,qrUz],[BxH,qrUz,G],[BxH,qrUz,MB],[BxH,qrUz,MB,G],[BxH,s],[BxH,s,G],[BxH,s,MB],[BxH,s,MB,G],[BxH,s,qrUz],[BxH,s,qrUz,G],[BxH,s,qrUz,MB],[BxH,s,qrUz,MB,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3699() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aa","qgv","l","L","tdNH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tdNH],[L],[L,tdNH],[l],[l,tdNH],[l,L],[l,L,tdNH],[qgv],[qgv,tdNH],[qgv,L],[qgv,L,tdNH],[qgv,l],[qgv,l,tdNH],[qgv,l,L],[qgv,l,L,tdNH],[Aa],[Aa,tdNH],[Aa,L],[Aa,L,tdNH],[Aa,l],[Aa,l,tdNH],[Aa,l,L],[Aa,l,L,tdNH],[Aa,qgv],[Aa,qgv,tdNH],[Aa,qgv,L],[Aa,qgv,L,tdNH],[Aa,qgv,l],[Aa,qgv,l,tdNH],[Aa,qgv,l,L],[Aa,qgv,l,L,tdNH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3700() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[P]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3701() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ehY","KkXB","YcDgW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YcDgW],[KkXB],[KkXB,YcDgW],[ehY],[ehY,YcDgW],[ehY,KkXB],[ehY,KkXB,YcDgW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3702() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Yk","ltRz","F","jQ","ACVw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ACVw],[jQ],[jQ,ACVw],[F],[F,ACVw],[F,jQ],[F,jQ,ACVw],[ltRz],[ltRz,ACVw],[ltRz,jQ],[ltRz,jQ,ACVw],[ltRz,F],[ltRz,F,ACVw],[ltRz,F,jQ],[ltRz,F,jQ,ACVw],[Yk],[Yk,ACVw],[Yk,jQ],[Yk,jQ,ACVw],[Yk,F],[Yk,F,ACVw],[Yk,F,jQ],[Yk,F,jQ,ACVw],[Yk,ltRz],[Yk,ltRz,ACVw],[Yk,ltRz,jQ],[Yk,ltRz,jQ,ACVw],[Yk,ltRz,F],[Yk,ltRz,F,ACVw],[Yk,ltRz,F,jQ],[Yk,ltRz,F,jQ,ACVw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3703() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qiJ","pH","uA","bvVR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bvVR],[uA],[uA,bvVR],[pH],[pH,bvVR],[pH,uA],[pH,uA,bvVR],[qiJ],[qiJ,bvVR],[qiJ,uA],[qiJ,uA,bvVR],[qiJ,pH],[qiJ,pH,bvVR],[qiJ,pH,uA],[qiJ,pH,uA,bvVR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3704() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kHHvA","cceK","NFGnD","PwIz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PwIz],[NFGnD],[NFGnD,PwIz],[cceK],[cceK,PwIz],[cceK,NFGnD],[cceK,NFGnD,PwIz],[kHHvA],[kHHvA,PwIz],[kHHvA,NFGnD],[kHHvA,NFGnD,PwIz],[kHHvA,cceK],[kHHvA,cceK,PwIz],[kHHvA,cceK,NFGnD],[kHHvA,cceK,NFGnD,PwIz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3705() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rH","Fav")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Fav],[rH],[rH,Fav]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3706() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BekKC","RaU","sl","fBeK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fBeK],[sl],[sl,fBeK],[RaU],[RaU,fBeK],[RaU,sl],[RaU,sl,fBeK],[BekKC],[BekKC,fBeK],[BekKC,sl],[BekKC,sl,fBeK],[BekKC,RaU],[BekKC,RaU,fBeK],[BekKC,RaU,sl],[BekKC,RaU,sl,fBeK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3707() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RblbW","Hi","T","fliA","IH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IH],[fliA],[fliA,IH],[T],[T,IH],[T,fliA],[T,fliA,IH],[Hi],[Hi,IH],[Hi,fliA],[Hi,fliA,IH],[Hi,T],[Hi,T,IH],[Hi,T,fliA],[Hi,T,fliA,IH],[RblbW],[RblbW,IH],[RblbW,fliA],[RblbW,fliA,IH],[RblbW,T],[RblbW,T,IH],[RblbW,T,fliA],[RblbW,T,fliA,IH],[RblbW,Hi],[RblbW,Hi,IH],[RblbW,Hi,fliA],[RblbW,Hi,fliA,IH],[RblbW,Hi,T],[RblbW,Hi,T,IH],[RblbW,Hi,T,fliA],[RblbW,Hi,T,fliA,IH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3708() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YIKpp","xnAv","f","xGduJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xGduJ],[f],[f,xGduJ],[xnAv],[xnAv,xGduJ],[xnAv,f],[xnAv,f,xGduJ],[YIKpp],[YIKpp,xGduJ],[YIKpp,f],[YIKpp,f,xGduJ],[YIKpp,xnAv],[YIKpp,xnAv,xGduJ],[YIKpp,xnAv,f],[YIKpp,xnAv,f,xGduJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3709() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","ZC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZC],[s],[s,ZC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3710() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","u","YC","Pdvnh","khJfr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[khJfr],[Pdvnh],[Pdvnh,khJfr],[YC],[YC,khJfr],[YC,Pdvnh],[YC,Pdvnh,khJfr],[u],[u,khJfr],[u,Pdvnh],[u,Pdvnh,khJfr],[u,YC],[u,YC,khJfr],[u,YC,Pdvnh],[u,YC,Pdvnh,khJfr],[Q],[Q,khJfr],[Q,Pdvnh],[Q,Pdvnh,khJfr],[Q,YC],[Q,YC,khJfr],[Q,YC,Pdvnh],[Q,YC,Pdvnh,khJfr],[Q,u],[Q,u,khJfr],[Q,u,Pdvnh],[Q,u,Pdvnh,khJfr],[Q,u,YC],[Q,u,YC,khJfr],[Q,u,YC,Pdvnh],[Q,u,YC,Pdvnh,khJfr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3711() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ib","fGxy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fGxy],[Ib],[Ib,fGxy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3712() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zCPB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zCPB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3713() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Txbdf","eKl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eKl],[Txbdf],[Txbdf,eKl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3714() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tFRE","tPmF","ClH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ClH],[tPmF],[tPmF,ClH],[tFRE],[tFRE,ClH],[tFRE,tPmF],[tFRE,tPmF,ClH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3715() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SokC","cbJuQ","Is","ckg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ckg],[Is],[Is,ckg],[cbJuQ],[cbJuQ,ckg],[cbJuQ,Is],[cbJuQ,Is,ckg],[SokC],[SokC,ckg],[SokC,Is],[SokC,Is,ckg],[SokC,cbJuQ],[SokC,cbJuQ,ckg],[SokC,cbJuQ,Is],[SokC,cbJuQ,Is,ckg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3716() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dawsG","Y","Vo","Kh","oZxY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oZxY],[Kh],[Kh,oZxY],[Vo],[Vo,oZxY],[Vo,Kh],[Vo,Kh,oZxY],[Y],[Y,oZxY],[Y,Kh],[Y,Kh,oZxY],[Y,Vo],[Y,Vo,oZxY],[Y,Vo,Kh],[Y,Vo,Kh,oZxY],[dawsG],[dawsG,oZxY],[dawsG,Kh],[dawsG,Kh,oZxY],[dawsG,Vo],[dawsG,Vo,oZxY],[dawsG,Vo,Kh],[dawsG,Vo,Kh,oZxY],[dawsG,Y],[dawsG,Y,oZxY],[dawsG,Y,Kh],[dawsG,Y,Kh,oZxY],[dawsG,Y,Vo],[dawsG,Y,Vo,oZxY],[dawsG,Y,Vo,Kh],[dawsG,Y,Vo,Kh,oZxY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3717() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3718() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jek","qj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qj],[jek],[jek,qj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3719() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ksh","MOcOE","aqYSk","l","avXF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[avXF],[l],[l,avXF],[aqYSk],[aqYSk,avXF],[aqYSk,l],[aqYSk,l,avXF],[MOcOE],[MOcOE,avXF],[MOcOE,l],[MOcOE,l,avXF],[MOcOE,aqYSk],[MOcOE,aqYSk,avXF],[MOcOE,aqYSk,l],[MOcOE,aqYSk,l,avXF],[Ksh],[Ksh,avXF],[Ksh,l],[Ksh,l,avXF],[Ksh,aqYSk],[Ksh,aqYSk,avXF],[Ksh,aqYSk,l],[Ksh,aqYSk,l,avXF],[Ksh,MOcOE],[Ksh,MOcOE,avXF],[Ksh,MOcOE,l],[Ksh,MOcOE,l,avXF],[Ksh,MOcOE,aqYSk],[Ksh,MOcOE,aqYSk,avXF],[Ksh,MOcOE,aqYSk,l],[Ksh,MOcOE,aqYSk,l,avXF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3720() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cSV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cSV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3721() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qOU","xLtzk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xLtzk],[qOU],[qOU,xLtzk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3722() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OIJ","aLjM","nt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nt],[aLjM],[aLjM,nt],[OIJ],[OIJ,nt],[OIJ,aLjM],[OIJ,aLjM,nt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3723() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gI","LimmR","Of","k","QnDGw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QnDGw],[k],[k,QnDGw],[Of],[Of,QnDGw],[Of,k],[Of,k,QnDGw],[LimmR],[LimmR,QnDGw],[LimmR,k],[LimmR,k,QnDGw],[LimmR,Of],[LimmR,Of,QnDGw],[LimmR,Of,k],[LimmR,Of,k,QnDGw],[gI],[gI,QnDGw],[gI,k],[gI,k,QnDGw],[gI,Of],[gI,Of,QnDGw],[gI,Of,k],[gI,Of,k,QnDGw],[gI,LimmR],[gI,LimmR,QnDGw],[gI,LimmR,k],[gI,LimmR,k,QnDGw],[gI,LimmR,Of],[gI,LimmR,Of,QnDGw],[gI,LimmR,Of,k],[gI,LimmR,Of,k,QnDGw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3724() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Wh","Jamw","K","zrw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zrw],[K],[K,zrw],[Jamw],[Jamw,zrw],[Jamw,K],[Jamw,K,zrw],[Wh],[Wh,zrw],[Wh,K],[Wh,K,zrw],[Wh,Jamw],[Wh,Jamw,zrw],[Wh,Jamw,K],[Wh,Jamw,K,zrw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3725() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CzEjh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CzEjh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3726() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jj","W","i","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[i],[i,N],[W],[W,N],[W,i],[W,i,N],[Jj],[Jj,N],[Jj,i],[Jj,i,N],[Jj,W],[Jj,W,N],[Jj,W,i],[Jj,W,i,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3727() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bB","P","AErj","X","KYtN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KYtN],[X],[X,KYtN],[AErj],[AErj,KYtN],[AErj,X],[AErj,X,KYtN],[P],[P,KYtN],[P,X],[P,X,KYtN],[P,AErj],[P,AErj,KYtN],[P,AErj,X],[P,AErj,X,KYtN],[bB],[bB,KYtN],[bB,X],[bB,X,KYtN],[bB,AErj],[bB,AErj,KYtN],[bB,AErj,X],[bB,AErj,X,KYtN],[bB,P],[bB,P,KYtN],[bB,P,X],[bB,P,X,KYtN],[bB,P,AErj],[bB,P,AErj,KYtN],[bB,P,AErj,X],[bB,P,AErj,X,KYtN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3728() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iQZ","HlQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HlQ],[iQZ],[iQZ,HlQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3729() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CLKn","ERmc","EVOR","YlQfI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YlQfI],[EVOR],[EVOR,YlQfI],[ERmc],[ERmc,YlQfI],[ERmc,EVOR],[ERmc,EVOR,YlQfI],[CLKn],[CLKn,YlQfI],[CLKn,EVOR],[CLKn,EVOR,YlQfI],[CLKn,ERmc],[CLKn,ERmc,YlQfI],[CLKn,ERmc,EVOR],[CLKn,ERmc,EVOR,YlQfI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3730() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xBeCJ","I","Ju","wQBuk","Juj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Juj],[wQBuk],[wQBuk,Juj],[Ju],[Ju,Juj],[Ju,wQBuk],[Ju,wQBuk,Juj],[I],[I,Juj],[I,wQBuk],[I,wQBuk,Juj],[I,Ju],[I,Ju,Juj],[I,Ju,wQBuk],[I,Ju,wQBuk,Juj],[xBeCJ],[xBeCJ,Juj],[xBeCJ,wQBuk],[xBeCJ,wQBuk,Juj],[xBeCJ,Ju],[xBeCJ,Ju,Juj],[xBeCJ,Ju,wQBuk],[xBeCJ,Ju,wQBuk,Juj],[xBeCJ,I],[xBeCJ,I,Juj],[xBeCJ,I,wQBuk],[xBeCJ,I,wQBuk,Juj],[xBeCJ,I,Ju],[xBeCJ,I,Ju,Juj],[xBeCJ,I,Ju,wQBuk],[xBeCJ,I,Ju,wQBuk,Juj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3731() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CJ","yAxTE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yAxTE],[CJ],[CJ,yAxTE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3732() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XPrR","OuK","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[OuK],[OuK,n],[XPrR],[XPrR,n],[XPrR,OuK],[XPrR,OuK,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3733() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VOm","bO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bO],[VOm],[VOm,bO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3734() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3735() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fAVe","TLFhT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TLFhT],[fAVe],[fAVe,TLFhT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3736() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lMkjw","mv","aZVc","fpBT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fpBT],[aZVc],[aZVc,fpBT],[mv],[mv,fpBT],[mv,aZVc],[mv,aZVc,fpBT],[lMkjw],[lMkjw,fpBT],[lMkjw,aZVc],[lMkjw,aZVc,fpBT],[lMkjw,mv],[lMkjw,mv,fpBT],[lMkjw,mv,aZVc],[lMkjw,mv,aZVc,fpBT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3737() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "I","FRduy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FRduy],[I],[I,FRduy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3738() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","uW","T","sh","qyU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qyU],[sh],[sh,qyU],[T],[T,qyU],[T,sh],[T,sh,qyU],[uW],[uW,qyU],[uW,sh],[uW,sh,qyU],[uW,T],[uW,T,qyU],[uW,T,sh],[uW,T,sh,qyU],[b],[b,qyU],[b,sh],[b,sh,qyU],[b,T],[b,T,qyU],[b,T,sh],[b,T,sh,qyU],[b,uW],[b,uW,qyU],[b,uW,sh],[b,uW,sh,qyU],[b,uW,T],[b,uW,T,qyU],[b,uW,T,sh],[b,uW,T,sh,qyU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3739() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HZ","r","Jcdkf","z","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[z],[z,k],[Jcdkf],[Jcdkf,k],[Jcdkf,z],[Jcdkf,z,k],[r],[r,k],[r,z],[r,z,k],[r,Jcdkf],[r,Jcdkf,k],[r,Jcdkf,z],[r,Jcdkf,z,k],[HZ],[HZ,k],[HZ,z],[HZ,z,k],[HZ,Jcdkf],[HZ,Jcdkf,k],[HZ,Jcdkf,z],[HZ,Jcdkf,z,k],[HZ,r],[HZ,r,k],[HZ,r,z],[HZ,r,z,k],[HZ,r,Jcdkf],[HZ,r,Jcdkf,k],[HZ,r,Jcdkf,z],[HZ,r,Jcdkf,z,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3740() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OfQPO","VqG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VqG],[OfQPO],[OfQPO,VqG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3741() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Td","E","jOHZ","Sl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sl],[jOHZ],[jOHZ,Sl],[E],[E,Sl],[E,jOHZ],[E,jOHZ,Sl],[Td],[Td,Sl],[Td,jOHZ],[Td,jOHZ,Sl],[Td,E],[Td,E,Sl],[Td,E,jOHZ],[Td,E,jOHZ,Sl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3742() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YTio","mbIb","jMA","kJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kJ],[jMA],[jMA,kJ],[mbIb],[mbIb,kJ],[mbIb,jMA],[mbIb,jMA,kJ],[YTio],[YTio,kJ],[YTio,jMA],[YTio,jMA,kJ],[YTio,mbIb],[YTio,mbIb,kJ],[YTio,mbIb,jMA],[YTio,mbIb,jMA,kJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3743() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[a]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3744() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MWnSF","UMmJ","Ckkl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ckkl],[UMmJ],[UMmJ,Ckkl],[MWnSF],[MWnSF,Ckkl],[MWnSF,UMmJ],[MWnSF,UMmJ,Ckkl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3745() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vzg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vzg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3746() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","AzHd","vpg","sp","dVcR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dVcR],[sp],[sp,dVcR],[vpg],[vpg,dVcR],[vpg,sp],[vpg,sp,dVcR],[AzHd],[AzHd,dVcR],[AzHd,sp],[AzHd,sp,dVcR],[AzHd,vpg],[AzHd,vpg,dVcR],[AzHd,vpg,sp],[AzHd,vpg,sp,dVcR],[s],[s,dVcR],[s,sp],[s,sp,dVcR],[s,vpg],[s,vpg,dVcR],[s,vpg,sp],[s,vpg,sp,dVcR],[s,AzHd],[s,AzHd,dVcR],[s,AzHd,sp],[s,AzHd,sp,dVcR],[s,AzHd,vpg],[s,AzHd,vpg,dVcR],[s,AzHd,vpg,sp],[s,AzHd,vpg,sp,dVcR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3747() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NhSSk","IG","abo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[abo],[IG],[IG,abo],[NhSSk],[NhSSk,abo],[NhSSk,IG],[NhSSk,IG,abo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3748() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GJdi","Fs","RQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RQ],[Fs],[Fs,RQ],[GJdi],[GJdi,RQ],[GJdi,Fs],[GJdi,Fs,RQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3749() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","e","fb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fb],[e],[e,fb],[a],[a,fb],[a,e],[a,e,fb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3750() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","hrlFA","TkcP","FHAsY","AEOcC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AEOcC],[FHAsY],[FHAsY,AEOcC],[TkcP],[TkcP,AEOcC],[TkcP,FHAsY],[TkcP,FHAsY,AEOcC],[hrlFA],[hrlFA,AEOcC],[hrlFA,FHAsY],[hrlFA,FHAsY,AEOcC],[hrlFA,TkcP],[hrlFA,TkcP,AEOcC],[hrlFA,TkcP,FHAsY],[hrlFA,TkcP,FHAsY,AEOcC],[a],[a,AEOcC],[a,FHAsY],[a,FHAsY,AEOcC],[a,TkcP],[a,TkcP,AEOcC],[a,TkcP,FHAsY],[a,TkcP,FHAsY,AEOcC],[a,hrlFA],[a,hrlFA,AEOcC],[a,hrlFA,FHAsY],[a,hrlFA,FHAsY,AEOcC],[a,hrlFA,TkcP],[a,hrlFA,TkcP,AEOcC],[a,hrlFA,TkcP,FHAsY],[a,hrlFA,TkcP,FHAsY,AEOcC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3751() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3752() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HZe","Ztq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ztq],[HZe],[HZe,Ztq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3753() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SZHiQ","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[SZHiQ],[SZHiQ,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3754() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LxACS","BHmA","VBjih","nNX","Hv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hv],[nNX],[nNX,Hv],[VBjih],[VBjih,Hv],[VBjih,nNX],[VBjih,nNX,Hv],[BHmA],[BHmA,Hv],[BHmA,nNX],[BHmA,nNX,Hv],[BHmA,VBjih],[BHmA,VBjih,Hv],[BHmA,VBjih,nNX],[BHmA,VBjih,nNX,Hv],[LxACS],[LxACS,Hv],[LxACS,nNX],[LxACS,nNX,Hv],[LxACS,VBjih],[LxACS,VBjih,Hv],[LxACS,VBjih,nNX],[LxACS,VBjih,nNX,Hv],[LxACS,BHmA],[LxACS,BHmA,Hv],[LxACS,BHmA,nNX],[LxACS,BHmA,nNX,Hv],[LxACS,BHmA,VBjih],[LxACS,BHmA,VBjih,Hv],[LxACS,BHmA,VBjih,nNX],[LxACS,BHmA,VBjih,nNX,Hv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3755() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rr","wZ","ZNVba","Hww")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hww],[ZNVba],[ZNVba,Hww],[wZ],[wZ,Hww],[wZ,ZNVba],[wZ,ZNVba,Hww],[Rr],[Rr,Hww],[Rr,ZNVba],[Rr,ZNVba,Hww],[Rr,wZ],[Rr,wZ,Hww],[Rr,wZ,ZNVba],[Rr,wZ,ZNVba,Hww]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3756() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3757() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kjdAI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kjdAI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3758() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mBe","iFauM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iFauM],[mBe],[mBe,iFauM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3759() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sf","W","uB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uB],[W],[W,uB],[Sf],[Sf,uB],[Sf,W],[Sf,W,uB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3760() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","tvw","fE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fE],[tvw],[tvw,fE],[Q],[Q,fE],[Q,tvw],[Q,tvw,fE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3761() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cXYmH","EnGe","v")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[v],[EnGe],[EnGe,v],[cXYmH],[cXYmH,v],[cXYmH,EnGe],[cXYmH,EnGe,v]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3762() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GsZA","wKW","r","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[r],[r,z],[wKW],[wKW,z],[wKW,r],[wKW,r,z],[GsZA],[GsZA,z],[GsZA,r],[GsZA,r,z],[GsZA,wKW],[GsZA,wKW,z],[GsZA,wKW,r],[GsZA,wKW,r,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3763() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","gUr","tY","vysvw","cZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cZ],[vysvw],[vysvw,cZ],[tY],[tY,cZ],[tY,vysvw],[tY,vysvw,cZ],[gUr],[gUr,cZ],[gUr,vysvw],[gUr,vysvw,cZ],[gUr,tY],[gUr,tY,cZ],[gUr,tY,vysvw],[gUr,tY,vysvw,cZ],[D],[D,cZ],[D,vysvw],[D,vysvw,cZ],[D,tY],[D,tY,cZ],[D,tY,vysvw],[D,tY,vysvw,cZ],[D,gUr],[D,gUr,cZ],[D,gUr,vysvw],[D,gUr,vysvw,cZ],[D,gUr,tY],[D,gUr,tY,cZ],[D,gUr,tY,vysvw],[D,gUr,tY,vysvw,cZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3764() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kRIS","Jhb","orGjn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[orGjn],[Jhb],[Jhb,orGjn],[kRIS],[kRIS,orGjn],[kRIS,Jhb],[kRIS,Jhb,orGjn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3765() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FoZg","y","Lcvax","Owr","scwGN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[scwGN],[Owr],[Owr,scwGN],[Lcvax],[Lcvax,scwGN],[Lcvax,Owr],[Lcvax,Owr,scwGN],[y],[y,scwGN],[y,Owr],[y,Owr,scwGN],[y,Lcvax],[y,Lcvax,scwGN],[y,Lcvax,Owr],[y,Lcvax,Owr,scwGN],[FoZg],[FoZg,scwGN],[FoZg,Owr],[FoZg,Owr,scwGN],[FoZg,Lcvax],[FoZg,Lcvax,scwGN],[FoZg,Lcvax,Owr],[FoZg,Lcvax,Owr,scwGN],[FoZg,y],[FoZg,y,scwGN],[FoZg,y,Owr],[FoZg,y,Owr,scwGN],[FoZg,y,Lcvax],[FoZg,y,Lcvax,scwGN],[FoZg,y,Lcvax,Owr],[FoZg,y,Lcvax,Owr,scwGN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3766() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","EVfl","TBM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TBM],[EVfl],[EVfl,TBM],[b],[b,TBM],[b,EVfl],[b,EVfl,TBM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3767() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FczCQ","IFafd","Ay","ckg","cGxe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cGxe],[ckg],[ckg,cGxe],[Ay],[Ay,cGxe],[Ay,ckg],[Ay,ckg,cGxe],[IFafd],[IFafd,cGxe],[IFafd,ckg],[IFafd,ckg,cGxe],[IFafd,Ay],[IFafd,Ay,cGxe],[IFafd,Ay,ckg],[IFafd,Ay,ckg,cGxe],[FczCQ],[FczCQ,cGxe],[FczCQ,ckg],[FczCQ,ckg,cGxe],[FczCQ,Ay],[FczCQ,Ay,cGxe],[FczCQ,Ay,ckg],[FczCQ,Ay,ckg,cGxe],[FczCQ,IFafd],[FczCQ,IFafd,cGxe],[FczCQ,IFafd,ckg],[FczCQ,IFafd,ckg,cGxe],[FczCQ,IFafd,Ay],[FczCQ,IFafd,Ay,cGxe],[FczCQ,IFafd,Ay,ckg],[FczCQ,IFafd,Ay,ckg,cGxe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3768() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qoiqG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qoiqG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3769() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VJxF","ZRvMe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZRvMe],[VJxF],[VJxF,ZRvMe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3770() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AHLR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AHLR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3771() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gNUo","a","LDKPV","wOS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wOS],[LDKPV],[LDKPV,wOS],[a],[a,wOS],[a,LDKPV],[a,LDKPV,wOS],[gNUo],[gNUo,wOS],[gNUo,LDKPV],[gNUo,LDKPV,wOS],[gNUo,a],[gNUo,a,wOS],[gNUo,a,LDKPV],[gNUo,a,LDKPV,wOS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3772() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TE","R","JD","ql","NYCQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NYCQ],[ql],[ql,NYCQ],[JD],[JD,NYCQ],[JD,ql],[JD,ql,NYCQ],[R],[R,NYCQ],[R,ql],[R,ql,NYCQ],[R,JD],[R,JD,NYCQ],[R,JD,ql],[R,JD,ql,NYCQ],[TE],[TE,NYCQ],[TE,ql],[TE,ql,NYCQ],[TE,JD],[TE,JD,NYCQ],[TE,JD,ql],[TE,JD,ql,NYCQ],[TE,R],[TE,R,NYCQ],[TE,R,ql],[TE,R,ql,NYCQ],[TE,R,JD],[TE,R,JD,NYCQ],[TE,R,JD,ql],[TE,R,JD,ql,NYCQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3773() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "W","xc","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[xc],[xc,O],[W],[W,O],[W,xc],[W,xc,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3774() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fomjq","beYOF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[beYOF],[Fomjq],[Fomjq,beYOF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3775() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","KAN","mCFaE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mCFaE],[KAN],[KAN,mCFaE],[g],[g,mCFaE],[g,KAN],[g,KAN,mCFaE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3776() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eRXDm","BQ","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[BQ],[BQ,o],[eRXDm],[eRXDm,o],[eRXDm,BQ],[eRXDm,BQ,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3777() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SKNB","z","m","Lz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Lz],[m],[m,Lz],[z],[z,Lz],[z,m],[z,m,Lz],[SKNB],[SKNB,Lz],[SKNB,m],[SKNB,m,Lz],[SKNB,z],[SKNB,z,Lz],[SKNB,z,m],[SKNB,z,m,Lz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3778() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rVXq","M","Gf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gf],[M],[M,Gf],[rVXq],[rVXq,Gf],[rVXq,M],[rVXq,M,Gf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3779() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gVsU","xtmPv","ur")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ur],[xtmPv],[xtmPv,ur],[gVsU],[gVsU,ur],[gVsU,xtmPv],[gVsU,xtmPv,ur]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3780() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pmXO","lseDk","DivRA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DivRA],[lseDk],[lseDk,DivRA],[pmXO],[pmXO,DivRA],[pmXO,lseDk],[pmXO,lseDk,DivRA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3781() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yGqBX","C")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[C],[yGqBX],[yGqBX,C]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3782() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Oo","r","AW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AW],[r],[r,AW],[Oo],[Oo,AW],[Oo,r],[Oo,r,AW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3783() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kHO","XAHs","IX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IX],[XAHs],[XAHs,IX],[kHO],[kHO,IX],[kHO,XAHs],[kHO,XAHs,IX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3784() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MMwGx","jzap","siNOq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[siNOq],[jzap],[jzap,siNOq],[MMwGx],[MMwGx,siNOq],[MMwGx,jzap],[MMwGx,jzap,siNOq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3785() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uAO","RhaGX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RhaGX],[uAO],[uAO,RhaGX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3786() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ECYXU","whJ","L","SFEnI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SFEnI],[L],[L,SFEnI],[whJ],[whJ,SFEnI],[whJ,L],[whJ,L,SFEnI],[ECYXU],[ECYXU,SFEnI],[ECYXU,L],[ECYXU,L,SFEnI],[ECYXU,whJ],[ECYXU,whJ,SFEnI],[ECYXU,whJ,L],[ECYXU,whJ,L,SFEnI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3787() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IeZP","c","E","JvJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JvJ],[E],[E,JvJ],[c],[c,JvJ],[c,E],[c,E,JvJ],[IeZP],[IeZP,JvJ],[IeZP,E],[IeZP,E,JvJ],[IeZP,c],[IeZP,c,JvJ],[IeZP,c,E],[IeZP,c,E,JvJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3788() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uF","ELIis","fs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fs],[ELIis],[ELIis,fs],[uF],[uF,fs],[uF,ELIis],[uF,ELIis,fs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3789() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wFWA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wFWA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3790() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","OvB","Nx","mrhqm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mrhqm],[Nx],[Nx,mrhqm],[OvB],[OvB,mrhqm],[OvB,Nx],[OvB,Nx,mrhqm],[t],[t,mrhqm],[t,Nx],[t,Nx,mrhqm],[t,OvB],[t,OvB,mrhqm],[t,OvB,Nx],[t,OvB,Nx,mrhqm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3791() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bZDE","yT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yT],[bZDE],[bZDE,yT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3792() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "usfNZ","mtVUY","EwYP","HOKfe","XSZVy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XSZVy],[HOKfe],[HOKfe,XSZVy],[EwYP],[EwYP,XSZVy],[EwYP,HOKfe],[EwYP,HOKfe,XSZVy],[mtVUY],[mtVUY,XSZVy],[mtVUY,HOKfe],[mtVUY,HOKfe,XSZVy],[mtVUY,EwYP],[mtVUY,EwYP,XSZVy],[mtVUY,EwYP,HOKfe],[mtVUY,EwYP,HOKfe,XSZVy],[usfNZ],[usfNZ,XSZVy],[usfNZ,HOKfe],[usfNZ,HOKfe,XSZVy],[usfNZ,EwYP],[usfNZ,EwYP,XSZVy],[usfNZ,EwYP,HOKfe],[usfNZ,EwYP,HOKfe,XSZVy],[usfNZ,mtVUY],[usfNZ,mtVUY,XSZVy],[usfNZ,mtVUY,HOKfe],[usfNZ,mtVUY,HOKfe,XSZVy],[usfNZ,mtVUY,EwYP],[usfNZ,mtVUY,EwYP,XSZVy],[usfNZ,mtVUY,EwYP,HOKfe],[usfNZ,mtVUY,EwYP,HOKfe,XSZVy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3793() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ypz","SxG","Ku","dYmIB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dYmIB],[Ku],[Ku,dYmIB],[SxG],[SxG,dYmIB],[SxG,Ku],[SxG,Ku,dYmIB],[ypz],[ypz,dYmIB],[ypz,Ku],[ypz,Ku,dYmIB],[ypz,SxG],[ypz,SxG,dYmIB],[ypz,SxG,Ku],[ypz,SxG,Ku,dYmIB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3794() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PSdA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PSdA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3795() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yfDwI","bbTq","FA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FA],[bbTq],[bbTq,FA],[yfDwI],[yfDwI,FA],[yfDwI,bbTq],[yfDwI,bbTq,FA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3796() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","Au","D","hjBd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hjBd],[D],[D,hjBd],[Au],[Au,hjBd],[Au,D],[Au,D,hjBd],[d],[d,hjBd],[d,D],[d,D,hjBd],[d,Au],[d,Au,hjBd],[d,Au,D],[d,Au,D,hjBd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3797() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZHnXl","e","XFYkr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XFYkr],[e],[e,XFYkr],[ZHnXl],[ZHnXl,XFYkr],[ZHnXl,e],[ZHnXl,e,XFYkr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3798() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GZlj","uh","VI","lPY","dRGpW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dRGpW],[lPY],[lPY,dRGpW],[VI],[VI,dRGpW],[VI,lPY],[VI,lPY,dRGpW],[uh],[uh,dRGpW],[uh,lPY],[uh,lPY,dRGpW],[uh,VI],[uh,VI,dRGpW],[uh,VI,lPY],[uh,VI,lPY,dRGpW],[GZlj],[GZlj,dRGpW],[GZlj,lPY],[GZlj,lPY,dRGpW],[GZlj,VI],[GZlj,VI,dRGpW],[GZlj,VI,lPY],[GZlj,VI,lPY,dRGpW],[GZlj,uh],[GZlj,uh,dRGpW],[GZlj,uh,lPY],[GZlj,uh,lPY,dRGpW],[GZlj,uh,VI],[GZlj,uh,VI,dRGpW],[GZlj,uh,VI,lPY],[GZlj,uh,VI,lPY,dRGpW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3799() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SNk","MnWuP","f","i","RjhY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RjhY],[i],[i,RjhY],[f],[f,RjhY],[f,i],[f,i,RjhY],[MnWuP],[MnWuP,RjhY],[MnWuP,i],[MnWuP,i,RjhY],[MnWuP,f],[MnWuP,f,RjhY],[MnWuP,f,i],[MnWuP,f,i,RjhY],[SNk],[SNk,RjhY],[SNk,i],[SNk,i,RjhY],[SNk,f],[SNk,f,RjhY],[SNk,f,i],[SNk,f,i,RjhY],[SNk,MnWuP],[SNk,MnWuP,RjhY],[SNk,MnWuP,i],[SNk,MnWuP,i,RjhY],[SNk,MnWuP,f],[SNk,MnWuP,f,RjhY],[SNk,MnWuP,f,i],[SNk,MnWuP,f,i,RjhY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3800() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aYmNl","YwLht","sLt","RbL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RbL],[sLt],[sLt,RbL],[YwLht],[YwLht,RbL],[YwLht,sLt],[YwLht,sLt,RbL],[aYmNl],[aYmNl,RbL],[aYmNl,sLt],[aYmNl,sLt,RbL],[aYmNl,YwLht],[aYmNl,YwLht,RbL],[aYmNl,YwLht,sLt],[aYmNl,YwLht,sLt,RbL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3801() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DpZV","H","K","Sdmwg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sdmwg],[K],[K,Sdmwg],[H],[H,Sdmwg],[H,K],[H,K,Sdmwg],[DpZV],[DpZV,Sdmwg],[DpZV,K],[DpZV,K,Sdmwg],[DpZV,H],[DpZV,H,Sdmwg],[DpZV,H,K],[DpZV,H,K,Sdmwg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3802() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BNtt","J","deK","fetfc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fetfc],[deK],[deK,fetfc],[J],[J,fetfc],[J,deK],[J,deK,fetfc],[BNtt],[BNtt,fetfc],[BNtt,deK],[BNtt,deK,fetfc],[BNtt,J],[BNtt,J,fetfc],[BNtt,J,deK],[BNtt,J,deK,fetfc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3803() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MUCJc","kY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kY],[MUCJc],[MUCJc,kY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3804() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tu","JAy","Sr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sr],[JAy],[JAy,Sr],[tu],[tu,Sr],[tu,JAy],[tu,JAy,Sr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3805() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yB","Gc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Gc],[yB],[yB,Gc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3806() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","w","ox","NXB","EqY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EqY],[NXB],[NXB,EqY],[ox],[ox,EqY],[ox,NXB],[ox,NXB,EqY],[w],[w,EqY],[w,NXB],[w,NXB,EqY],[w,ox],[w,ox,EqY],[w,ox,NXB],[w,ox,NXB,EqY],[C],[C,EqY],[C,NXB],[C,NXB,EqY],[C,ox],[C,ox,EqY],[C,ox,NXB],[C,ox,NXB,EqY],[C,w],[C,w,EqY],[C,w,NXB],[C,w,NXB,EqY],[C,w,ox],[C,w,ox,EqY],[C,w,ox,NXB],[C,w,ox,NXB,EqY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3807() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[a]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3808() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VFxCs","plSs","vTl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vTl],[plSs],[plSs,vTl],[VFxCs],[VFxCs,vTl],[VFxCs,plSs],[VFxCs,plSs,vTl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3809() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ltcg","do","wcgf","kBt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kBt],[wcgf],[wcgf,kBt],[do],[do,kBt],[do,wcgf],[do,wcgf,kBt],[Ltcg],[Ltcg,kBt],[Ltcg,wcgf],[Ltcg,wcgf,kBt],[Ltcg,do],[Ltcg,do,kBt],[Ltcg,do,wcgf],[Ltcg,do,wcgf,kBt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3810() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BmSIg","Np","s","fNOn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fNOn],[s],[s,fNOn],[Np],[Np,fNOn],[Np,s],[Np,s,fNOn],[BmSIg],[BmSIg,fNOn],[BmSIg,s],[BmSIg,s,fNOn],[BmSIg,Np],[BmSIg,Np,fNOn],[BmSIg,Np,s],[BmSIg,Np,s,fNOn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3811() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","fuigo","ISr","ohhzO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ohhzO],[ISr],[ISr,ohhzO],[fuigo],[fuigo,ohhzO],[fuigo,ISr],[fuigo,ISr,ohhzO],[R],[R,ohhzO],[R,ISr],[R,ISr,ohhzO],[R,fuigo],[R,fuigo,ohhzO],[R,fuigo,ISr],[R,fuigo,ISr,ohhzO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3812() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","GwD","mF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mF],[GwD],[GwD,mF],[A],[A,mF],[A,GwD],[A,GwD,mF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3813() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ldh","oBriS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oBriS],[Ldh],[Ldh,oBriS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3814() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","zHfYb","WP","oLXc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oLXc],[WP],[WP,oLXc],[zHfYb],[zHfYb,oLXc],[zHfYb,WP],[zHfYb,WP,oLXc],[c],[c,oLXc],[c,WP],[c,WP,oLXc],[c,zHfYb],[c,zHfYb,oLXc],[c,zHfYb,WP],[c,zHfYb,WP,oLXc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3815() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NIF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NIF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3816() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DfjN","sanO","lrjC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lrjC],[sanO],[sanO,lrjC],[DfjN],[DfjN,lrjC],[DfjN,sanO],[DfjN,sanO,lrjC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3817() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sjSS","KRTF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KRTF],[sjSS],[sjSS,KRTF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3818() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BwGMm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BwGMm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3819() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zqPWC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zqPWC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3820() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vpUm","Y","dPxLz","zG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zG],[dPxLz],[dPxLz,zG],[Y],[Y,zG],[Y,dPxLz],[Y,dPxLz,zG],[vpUm],[vpUm,zG],[vpUm,dPxLz],[vpUm,dPxLz,zG],[vpUm,Y],[vpUm,Y,zG],[vpUm,Y,dPxLz],[vpUm,Y,dPxLz,zG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3821() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TJ","w","H","KjCxm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KjCxm],[H],[H,KjCxm],[w],[w,KjCxm],[w,H],[w,H,KjCxm],[TJ],[TJ,KjCxm],[TJ,H],[TJ,H,KjCxm],[TJ,w],[TJ,w,KjCxm],[TJ,w,H],[TJ,w,H,KjCxm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3822() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KFsh","AIbp","BrQtK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BrQtK],[AIbp],[AIbp,BrQtK],[KFsh],[KFsh,BrQtK],[KFsh,AIbp],[KFsh,AIbp,BrQtK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3823() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lBe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lBe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3824() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oiLC","BwvMM","I","ZT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZT],[I],[I,ZT],[BwvMM],[BwvMM,ZT],[BwvMM,I],[BwvMM,I,ZT],[oiLC],[oiLC,ZT],[oiLC,I],[oiLC,I,ZT],[oiLC,BwvMM],[oiLC,BwvMM,ZT],[oiLC,BwvMM,I],[oiLC,BwvMM,I,ZT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3825() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3826() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "je")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[je]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3827() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3828() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jER","lz","o","ZHLS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZHLS],[o],[o,ZHLS],[lz],[lz,ZHLS],[lz,o],[lz,o,ZHLS],[jER],[jER,ZHLS],[jER,o],[jER,o,ZHLS],[jER,lz],[jER,lz,ZHLS],[jER,lz,o],[jER,lz,o,ZHLS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3829() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","BjZk","Kto","evhk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[evhk],[Kto],[Kto,evhk],[BjZk],[BjZk,evhk],[BjZk,Kto],[BjZk,Kto,evhk],[U],[U,evhk],[U,Kto],[U,Kto,evhk],[U,BjZk],[U,BjZk,evhk],[U,BjZk,Kto],[U,BjZk,Kto,evhk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3830() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NcUp","TaWU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TaWU],[NcUp],[NcUp,TaWU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3831() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JL","ei","cmtqh","SO","gEfz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gEfz],[SO],[SO,gEfz],[cmtqh],[cmtqh,gEfz],[cmtqh,SO],[cmtqh,SO,gEfz],[ei],[ei,gEfz],[ei,SO],[ei,SO,gEfz],[ei,cmtqh],[ei,cmtqh,gEfz],[ei,cmtqh,SO],[ei,cmtqh,SO,gEfz],[JL],[JL,gEfz],[JL,SO],[JL,SO,gEfz],[JL,cmtqh],[JL,cmtqh,gEfz],[JL,cmtqh,SO],[JL,cmtqh,SO,gEfz],[JL,ei],[JL,ei,gEfz],[JL,ei,SO],[JL,ei,SO,gEfz],[JL,ei,cmtqh],[JL,ei,cmtqh,gEfz],[JL,ei,cmtqh,SO],[JL,ei,cmtqh,SO,gEfz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3832() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[H]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3833() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i","EMdH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EMdH],[i],[i,EMdH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3834() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qcwk","h","RUb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RUb],[h],[h,RUb],[Qcwk],[Qcwk,RUb],[Qcwk,h],[Qcwk,h,RUb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3835() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","Mkg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mkg],[p],[p,Mkg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3836() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iLZ","JlM","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[JlM],[JlM,o],[iLZ],[iLZ,o],[iLZ,JlM],[iLZ,JlM,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3837() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3838() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vI","Y","HnXK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HnXK],[Y],[Y,HnXK],[vI],[vI,HnXK],[vI,Y],[vI,Y,HnXK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3839() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NVQTk","VeIRf","rBh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rBh],[VeIRf],[VeIRf,rBh],[NVQTk],[NVQTk,rBh],[NVQTk,VeIRf],[NVQTk,VeIRf,rBh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3840() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ff","H","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[H],[H,J],[Ff],[Ff,J],[Ff,H],[Ff,H,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3841() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rmq","ZKJTX","aHhB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aHhB],[ZKJTX],[ZKJTX,aHhB],[rmq],[rmq,aHhB],[rmq,ZKJTX],[rmq,ZKJTX,aHhB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3842() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","PzAFe","mxSw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mxSw],[PzAFe],[PzAFe,mxSw],[e],[e,mxSw],[e,PzAFe],[e,PzAFe,mxSw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3843() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cPkJE","gKawR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gKawR],[cPkJE],[cPkJE,gKawR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3844() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mOM","bPRxi","pMAdQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pMAdQ],[bPRxi],[bPRxi,pMAdQ],[mOM],[mOM,pMAdQ],[mOM,bPRxi],[mOM,bPRxi,pMAdQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3845() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yKwhp","wy","hk","ZGKtD","lsF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lsF],[ZGKtD],[ZGKtD,lsF],[hk],[hk,lsF],[hk,ZGKtD],[hk,ZGKtD,lsF],[wy],[wy,lsF],[wy,ZGKtD],[wy,ZGKtD,lsF],[wy,hk],[wy,hk,lsF],[wy,hk,ZGKtD],[wy,hk,ZGKtD,lsF],[yKwhp],[yKwhp,lsF],[yKwhp,ZGKtD],[yKwhp,ZGKtD,lsF],[yKwhp,hk],[yKwhp,hk,lsF],[yKwhp,hk,ZGKtD],[yKwhp,hk,ZGKtD,lsF],[yKwhp,wy],[yKwhp,wy,lsF],[yKwhp,wy,ZGKtD],[yKwhp,wy,ZGKtD,lsF],[yKwhp,wy,hk],[yKwhp,wy,hk,lsF],[yKwhp,wy,hk,ZGKtD],[yKwhp,wy,hk,ZGKtD,lsF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3846() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KM","mu","ddCZ","atgd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[atgd],[ddCZ],[ddCZ,atgd],[mu],[mu,atgd],[mu,ddCZ],[mu,ddCZ,atgd],[KM],[KM,atgd],[KM,ddCZ],[KM,ddCZ,atgd],[KM,mu],[KM,mu,atgd],[KM,mu,ddCZ],[KM,mu,ddCZ,atgd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3847() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vF","JDbra","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[JDbra],[JDbra,n],[vF],[vF,n],[vF,JDbra],[vF,JDbra,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3848() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","hO","I","TmQD","Pm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pm],[TmQD],[TmQD,Pm],[I],[I,Pm],[I,TmQD],[I,TmQD,Pm],[hO],[hO,Pm],[hO,TmQD],[hO,TmQD,Pm],[hO,I],[hO,I,Pm],[hO,I,TmQD],[hO,I,TmQD,Pm],[p],[p,Pm],[p,TmQD],[p,TmQD,Pm],[p,I],[p,I,Pm],[p,I,TmQD],[p,I,TmQD,Pm],[p,hO],[p,hO,Pm],[p,hO,TmQD],[p,hO,TmQD,Pm],[p,hO,I],[p,hO,I,Pm],[p,hO,I,TmQD],[p,hO,I,TmQD,Pm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3849() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yaEw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yaEw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3850() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ueq","xupL","rnG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rnG],[xupL],[xupL,rnG],[ueq],[ueq,rnG],[ueq,xupL],[ueq,xupL,rnG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3851() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DnmV","f","un","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[un],[un,k],[f],[f,k],[f,un],[f,un,k],[DnmV],[DnmV,k],[DnmV,un],[DnmV,un,k],[DnmV,f],[DnmV,f,k],[DnmV,f,un],[DnmV,f,un,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3852() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LgHFp","noLVu","hel","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[hel],[hel,N],[noLVu],[noLVu,N],[noLVu,hel],[noLVu,hel,N],[LgHFp],[LgHFp,N],[LgHFp,hel],[LgHFp,hel,N],[LgHFp,noLVu],[LgHFp,noLVu,N],[LgHFp,noLVu,hel],[LgHFp,noLVu,hel,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3853() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DiIG","qW","kF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kF],[qW],[qW,kF],[DiIG],[DiIG,kF],[DiIG,qW],[DiIG,qW,kF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3854() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fBgi","AiZ","elkJt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[elkJt],[AiZ],[AiZ,elkJt],[fBgi],[fBgi,elkJt],[fBgi,AiZ],[fBgi,AiZ,elkJt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3855() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","hn","VWL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VWL],[hn],[hn,VWL],[r],[r,VWL],[r,hn],[r,hn,VWL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3856() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HVT","l","MUbE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MUbE],[l],[l,MUbE],[HVT],[HVT,MUbE],[HVT,l],[HVT,l,MUbE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3857() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "huN","SOVn","CDeo","IosC","GcmbS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GcmbS],[IosC],[IosC,GcmbS],[CDeo],[CDeo,GcmbS],[CDeo,IosC],[CDeo,IosC,GcmbS],[SOVn],[SOVn,GcmbS],[SOVn,IosC],[SOVn,IosC,GcmbS],[SOVn,CDeo],[SOVn,CDeo,GcmbS],[SOVn,CDeo,IosC],[SOVn,CDeo,IosC,GcmbS],[huN],[huN,GcmbS],[huN,IosC],[huN,IosC,GcmbS],[huN,CDeo],[huN,CDeo,GcmbS],[huN,CDeo,IosC],[huN,CDeo,IosC,GcmbS],[huN,SOVn],[huN,SOVn,GcmbS],[huN,SOVn,IosC],[huN,SOVn,IosC,GcmbS],[huN,SOVn,CDeo],[huN,SOVn,CDeo,GcmbS],[huN,SOVn,CDeo,IosC],[huN,SOVn,CDeo,IosC,GcmbS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3858() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i","EsjcE","o","xfHvQ","qp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qp],[xfHvQ],[xfHvQ,qp],[o],[o,qp],[o,xfHvQ],[o,xfHvQ,qp],[EsjcE],[EsjcE,qp],[EsjcE,xfHvQ],[EsjcE,xfHvQ,qp],[EsjcE,o],[EsjcE,o,qp],[EsjcE,o,xfHvQ],[EsjcE,o,xfHvQ,qp],[i],[i,qp],[i,xfHvQ],[i,xfHvQ,qp],[i,o],[i,o,qp],[i,o,xfHvQ],[i,o,xfHvQ,qp],[i,EsjcE],[i,EsjcE,qp],[i,EsjcE,xfHvQ],[i,EsjcE,xfHvQ,qp],[i,EsjcE,o],[i,EsjcE,o,qp],[i,EsjcE,o,xfHvQ],[i,EsjcE,o,xfHvQ,qp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3859() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "odI","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[odI],[odI,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3860() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fmuQD","TkzoO","DUUaQ","B","Iv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Iv],[B],[B,Iv],[DUUaQ],[DUUaQ,Iv],[DUUaQ,B],[DUUaQ,B,Iv],[TkzoO],[TkzoO,Iv],[TkzoO,B],[TkzoO,B,Iv],[TkzoO,DUUaQ],[TkzoO,DUUaQ,Iv],[TkzoO,DUUaQ,B],[TkzoO,DUUaQ,B,Iv],[fmuQD],[fmuQD,Iv],[fmuQD,B],[fmuQD,B,Iv],[fmuQD,DUUaQ],[fmuQD,DUUaQ,Iv],[fmuQD,DUUaQ,B],[fmuQD,DUUaQ,B,Iv],[fmuQD,TkzoO],[fmuQD,TkzoO,Iv],[fmuQD,TkzoO,B],[fmuQD,TkzoO,B,Iv],[fmuQD,TkzoO,DUUaQ],[fmuQD,TkzoO,DUUaQ,Iv],[fmuQD,TkzoO,DUUaQ,B],[fmuQD,TkzoO,DUUaQ,B,Iv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3861() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HLE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HLE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3862() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","YmwvA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YmwvA],[S],[S,YmwvA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3863() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nwm","f","KYM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KYM],[f],[f,KYM],[Nwm],[Nwm,KYM],[Nwm,f],[Nwm,f,KYM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3864() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","Y","z","hiBlL","cRoEF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cRoEF],[hiBlL],[hiBlL,cRoEF],[z],[z,cRoEF],[z,hiBlL],[z,hiBlL,cRoEF],[Y],[Y,cRoEF],[Y,hiBlL],[Y,hiBlL,cRoEF],[Y,z],[Y,z,cRoEF],[Y,z,hiBlL],[Y,z,hiBlL,cRoEF],[c],[c,cRoEF],[c,hiBlL],[c,hiBlL,cRoEF],[c,z],[c,z,cRoEF],[c,z,hiBlL],[c,z,hiBlL,cRoEF],[c,Y],[c,Y,cRoEF],[c,Y,hiBlL],[c,Y,hiBlL,cRoEF],[c,Y,z],[c,Y,z,cRoEF],[c,Y,z,hiBlL],[c,Y,z,hiBlL,cRoEF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3865() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "why")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[why]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3866() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yvqj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yvqj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3867() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NRI","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[NRI],[NRI,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3868() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GRS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GRS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3869() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LflG","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[LflG],[LflG,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3870() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","s","yQE","BBEHB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BBEHB],[yQE],[yQE,BBEHB],[s],[s,BBEHB],[s,yQE],[s,yQE,BBEHB],[a],[a,BBEHB],[a,yQE],[a,yQE,BBEHB],[a,s],[a,s,BBEHB],[a,s,yQE],[a,s,yQE,BBEHB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3871() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "astKA","JNz","Tic")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tic],[JNz],[JNz,Tic],[astKA],[astKA,Tic],[astKA,JNz],[astKA,JNz,Tic]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3872() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pxatn","tp","ua")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ua],[tp],[tp,ua],[pxatn],[pxatn,ua],[pxatn,tp],[pxatn,tp,ua]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3873() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","DCd","pib","IIPcO","Drhzo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Drhzo],[IIPcO],[IIPcO,Drhzo],[pib],[pib,Drhzo],[pib,IIPcO],[pib,IIPcO,Drhzo],[DCd],[DCd,Drhzo],[DCd,IIPcO],[DCd,IIPcO,Drhzo],[DCd,pib],[DCd,pib,Drhzo],[DCd,pib,IIPcO],[DCd,pib,IIPcO,Drhzo],[S],[S,Drhzo],[S,IIPcO],[S,IIPcO,Drhzo],[S,pib],[S,pib,Drhzo],[S,pib,IIPcO],[S,pib,IIPcO,Drhzo],[S,DCd],[S,DCd,Drhzo],[S,DCd,IIPcO],[S,DCd,IIPcO,Drhzo],[S,DCd,pib],[S,DCd,pib,Drhzo],[S,DCd,pib,IIPcO],[S,DCd,pib,IIPcO,Drhzo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3874() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EjpCW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EjpCW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3875() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wjx","F")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[F],[wjx],[wjx,F]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3876() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","T","LyR","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[LyR],[LyR,g],[T],[T,g],[T,LyR],[T,LyR,g],[a],[a,g],[a,LyR],[a,LyR,g],[a,T],[a,T,g],[a,T,LyR],[a,T,LyR,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3877() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nrE","kaLHW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kaLHW],[nrE],[nrE,kaLHW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3878() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GkRv","nqwQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nqwQ],[GkRv],[GkRv,nqwQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3879() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OXlx","yqyN","aV","RBeN","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[RBeN],[RBeN,O],[aV],[aV,O],[aV,RBeN],[aV,RBeN,O],[yqyN],[yqyN,O],[yqyN,RBeN],[yqyN,RBeN,O],[yqyN,aV],[yqyN,aV,O],[yqyN,aV,RBeN],[yqyN,aV,RBeN,O],[OXlx],[OXlx,O],[OXlx,RBeN],[OXlx,RBeN,O],[OXlx,aV],[OXlx,aV,O],[OXlx,aV,RBeN],[OXlx,aV,RBeN,O],[OXlx,yqyN],[OXlx,yqyN,O],[OXlx,yqyN,RBeN],[OXlx,yqyN,RBeN,O],[OXlx,yqyN,aV],[OXlx,yqyN,aV,O],[OXlx,yqyN,aV,RBeN],[OXlx,yqyN,aV,RBeN,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3880() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LQ","fBPdy","H","Adl","twhEd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[twhEd],[Adl],[Adl,twhEd],[H],[H,twhEd],[H,Adl],[H,Adl,twhEd],[fBPdy],[fBPdy,twhEd],[fBPdy,Adl],[fBPdy,Adl,twhEd],[fBPdy,H],[fBPdy,H,twhEd],[fBPdy,H,Adl],[fBPdy,H,Adl,twhEd],[LQ],[LQ,twhEd],[LQ,Adl],[LQ,Adl,twhEd],[LQ,H],[LQ,H,twhEd],[LQ,H,Adl],[LQ,H,Adl,twhEd],[LQ,fBPdy],[LQ,fBPdy,twhEd],[LQ,fBPdy,Adl],[LQ,fBPdy,Adl,twhEd],[LQ,fBPdy,H],[LQ,fBPdy,H,twhEd],[LQ,fBPdy,H,Adl],[LQ,fBPdy,H,Adl,twhEd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3881() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3882() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CrOpd","IAZP","nclV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nclV],[IAZP],[IAZP,nclV],[CrOpd],[CrOpd,nclV],[CrOpd,IAZP],[CrOpd,IAZP,nclV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3883() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IaBWn","ZtO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZtO],[IaBWn],[IaBWn,ZtO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3884() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IIIK","ilSp","TXXH","k","YfgLz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YfgLz],[k],[k,YfgLz],[TXXH],[TXXH,YfgLz],[TXXH,k],[TXXH,k,YfgLz],[ilSp],[ilSp,YfgLz],[ilSp,k],[ilSp,k,YfgLz],[ilSp,TXXH],[ilSp,TXXH,YfgLz],[ilSp,TXXH,k],[ilSp,TXXH,k,YfgLz],[IIIK],[IIIK,YfgLz],[IIIK,k],[IIIK,k,YfgLz],[IIIK,TXXH],[IIIK,TXXH,YfgLz],[IIIK,TXXH,k],[IIIK,TXXH,k,YfgLz],[IIIK,ilSp],[IIIK,ilSp,YfgLz],[IIIK,ilSp,k],[IIIK,ilSp,k,YfgLz],[IIIK,ilSp,TXXH],[IIIK,ilSp,TXXH,YfgLz],[IIIK,ilSp,TXXH,k],[IIIK,ilSp,TXXH,k,YfgLz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3885() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tUKF","pKuX","k","kY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kY],[k],[k,kY],[pKuX],[pKuX,kY],[pKuX,k],[pKuX,k,kY],[tUKF],[tUKF,kY],[tUKF,k],[tUKF,k,kY],[tUKF,pKuX],[tUKF,pKuX,kY],[tUKF,pKuX,k],[tUKF,pKuX,k,kY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3886() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","gJgnT","u","DS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DS],[u],[u,DS],[gJgnT],[gJgnT,DS],[gJgnT,u],[gJgnT,u,DS],[T],[T,DS],[T,u],[T,u,DS],[T,gJgnT],[T,gJgnT,DS],[T,gJgnT,u],[T,gJgnT,u,DS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3887() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fByrq","TdQPt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TdQPt],[fByrq],[fByrq,TdQPt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3888() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","HTQn","cPwfN","Dr","DTN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DTN],[Dr],[Dr,DTN],[cPwfN],[cPwfN,DTN],[cPwfN,Dr],[cPwfN,Dr,DTN],[HTQn],[HTQn,DTN],[HTQn,Dr],[HTQn,Dr,DTN],[HTQn,cPwfN],[HTQn,cPwfN,DTN],[HTQn,cPwfN,Dr],[HTQn,cPwfN,Dr,DTN],[g],[g,DTN],[g,Dr],[g,Dr,DTN],[g,cPwfN],[g,cPwfN,DTN],[g,cPwfN,Dr],[g,cPwfN,Dr,DTN],[g,HTQn],[g,HTQn,DTN],[g,HTQn,Dr],[g,HTQn,Dr,DTN],[g,HTQn,cPwfN],[g,HTQn,cPwfN,DTN],[g,HTQn,cPwfN,Dr],[g,HTQn,cPwfN,Dr,DTN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3889() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BhF","a","BABJQ","M","GwiCY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GwiCY],[M],[M,GwiCY],[BABJQ],[BABJQ,GwiCY],[BABJQ,M],[BABJQ,M,GwiCY],[a],[a,GwiCY],[a,M],[a,M,GwiCY],[a,BABJQ],[a,BABJQ,GwiCY],[a,BABJQ,M],[a,BABJQ,M,GwiCY],[BhF],[BhF,GwiCY],[BhF,M],[BhF,M,GwiCY],[BhF,BABJQ],[BhF,BABJQ,GwiCY],[BhF,BABJQ,M],[BhF,BABJQ,M,GwiCY],[BhF,a],[BhF,a,GwiCY],[BhF,a,M],[BhF,a,M,GwiCY],[BhF,a,BABJQ],[BhF,a,BABJQ,GwiCY],[BhF,a,BABJQ,M],[BhF,a,BABJQ,M,GwiCY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3890() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UReqw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UReqw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3891() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DoIv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DoIv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3892() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[J],[J,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3893() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hanG","Xz","C","bWWCb","WApdD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WApdD],[bWWCb],[bWWCb,WApdD],[C],[C,WApdD],[C,bWWCb],[C,bWWCb,WApdD],[Xz],[Xz,WApdD],[Xz,bWWCb],[Xz,bWWCb,WApdD],[Xz,C],[Xz,C,WApdD],[Xz,C,bWWCb],[Xz,C,bWWCb,WApdD],[hanG],[hanG,WApdD],[hanG,bWWCb],[hanG,bWWCb,WApdD],[hanG,C],[hanG,C,WApdD],[hanG,C,bWWCb],[hanG,C,bWWCb,WApdD],[hanG,Xz],[hanG,Xz,WApdD],[hanG,Xz,bWWCb],[hanG,Xz,bWWCb,WApdD],[hanG,Xz,C],[hanG,Xz,C,WApdD],[hanG,Xz,C,bWWCb],[hanG,Xz,C,bWWCb,WApdD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3894() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3895() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VHgwA","uEEx","QG","VnzyN","yu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yu],[VnzyN],[VnzyN,yu],[QG],[QG,yu],[QG,VnzyN],[QG,VnzyN,yu],[uEEx],[uEEx,yu],[uEEx,VnzyN],[uEEx,VnzyN,yu],[uEEx,QG],[uEEx,QG,yu],[uEEx,QG,VnzyN],[uEEx,QG,VnzyN,yu],[VHgwA],[VHgwA,yu],[VHgwA,VnzyN],[VHgwA,VnzyN,yu],[VHgwA,QG],[VHgwA,QG,yu],[VHgwA,QG,VnzyN],[VHgwA,QG,VnzyN,yu],[VHgwA,uEEx],[VHgwA,uEEx,yu],[VHgwA,uEEx,VnzyN],[VHgwA,uEEx,VnzyN,yu],[VHgwA,uEEx,QG],[VHgwA,uEEx,QG,yu],[VHgwA,uEEx,QG,VnzyN],[VHgwA,uEEx,QG,VnzyN,yu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3896() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UBfO","QEFMG","SqIX","gkdk","Ap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ap],[gkdk],[gkdk,Ap],[SqIX],[SqIX,Ap],[SqIX,gkdk],[SqIX,gkdk,Ap],[QEFMG],[QEFMG,Ap],[QEFMG,gkdk],[QEFMG,gkdk,Ap],[QEFMG,SqIX],[QEFMG,SqIX,Ap],[QEFMG,SqIX,gkdk],[QEFMG,SqIX,gkdk,Ap],[UBfO],[UBfO,Ap],[UBfO,gkdk],[UBfO,gkdk,Ap],[UBfO,SqIX],[UBfO,SqIX,Ap],[UBfO,SqIX,gkdk],[UBfO,SqIX,gkdk,Ap],[UBfO,QEFMG],[UBfO,QEFMG,Ap],[UBfO,QEFMG,gkdk],[UBfO,QEFMG,gkdk,Ap],[UBfO,QEFMG,SqIX],[UBfO,QEFMG,SqIX,Ap],[UBfO,QEFMG,SqIX,gkdk],[UBfO,QEFMG,SqIX,gkdk,Ap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3897() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UZg","uJG","SbUy","MjY","eVAMe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eVAMe],[MjY],[MjY,eVAMe],[SbUy],[SbUy,eVAMe],[SbUy,MjY],[SbUy,MjY,eVAMe],[uJG],[uJG,eVAMe],[uJG,MjY],[uJG,MjY,eVAMe],[uJG,SbUy],[uJG,SbUy,eVAMe],[uJG,SbUy,MjY],[uJG,SbUy,MjY,eVAMe],[UZg],[UZg,eVAMe],[UZg,MjY],[UZg,MjY,eVAMe],[UZg,SbUy],[UZg,SbUy,eVAMe],[UZg,SbUy,MjY],[UZg,SbUy,MjY,eVAMe],[UZg,uJG],[UZg,uJG,eVAMe],[UZg,uJG,MjY],[UZg,uJG,MjY,eVAMe],[UZg,uJG,SbUy],[UZg,uJG,SbUy,eVAMe],[UZg,uJG,SbUy,MjY],[UZg,uJG,SbUy,MjY,eVAMe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3898() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hYbT","knXIU","Kw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kw],[knXIU],[knXIU,Kw],[hYbT],[hYbT,Kw],[hYbT,knXIU],[hYbT,knXIU,Kw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3899() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[f]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3900() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3901() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Se","llKNY","Suk","sUFA","UBE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UBE],[sUFA],[sUFA,UBE],[Suk],[Suk,UBE],[Suk,sUFA],[Suk,sUFA,UBE],[llKNY],[llKNY,UBE],[llKNY,sUFA],[llKNY,sUFA,UBE],[llKNY,Suk],[llKNY,Suk,UBE],[llKNY,Suk,sUFA],[llKNY,Suk,sUFA,UBE],[Se],[Se,UBE],[Se,sUFA],[Se,sUFA,UBE],[Se,Suk],[Se,Suk,UBE],[Se,Suk,sUFA],[Se,Suk,sUFA,UBE],[Se,llKNY],[Se,llKNY,UBE],[Se,llKNY,sUFA],[Se,llKNY,sUFA,UBE],[Se,llKNY,Suk],[Se,llKNY,Suk,UBE],[Se,llKNY,Suk,sUFA],[Se,llKNY,Suk,sUFA,UBE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3902() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","Vm","jsS","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[jsS],[jsS,k],[Vm],[Vm,k],[Vm,jsS],[Vm,jsS,k],[Q],[Q,k],[Q,jsS],[Q,jsS,k],[Q,Vm],[Q,Vm,k],[Q,Vm,jsS],[Q,Vm,jsS,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3903() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JxKJY","ZsB","Tc","Ohg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ohg],[Tc],[Tc,Ohg],[ZsB],[ZsB,Ohg],[ZsB,Tc],[ZsB,Tc,Ohg],[JxKJY],[JxKJY,Ohg],[JxKJY,Tc],[JxKJY,Tc,Ohg],[JxKJY,ZsB],[JxKJY,ZsB,Ohg],[JxKJY,ZsB,Tc],[JxKJY,ZsB,Tc,Ohg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3904() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uqYoG","A","c","CwM","NLGHO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NLGHO],[CwM],[CwM,NLGHO],[c],[c,NLGHO],[c,CwM],[c,CwM,NLGHO],[A],[A,NLGHO],[A,CwM],[A,CwM,NLGHO],[A,c],[A,c,NLGHO],[A,c,CwM],[A,c,CwM,NLGHO],[uqYoG],[uqYoG,NLGHO],[uqYoG,CwM],[uqYoG,CwM,NLGHO],[uqYoG,c],[uqYoG,c,NLGHO],[uqYoG,c,CwM],[uqYoG,c,CwM,NLGHO],[uqYoG,A],[uqYoG,A,NLGHO],[uqYoG,A,CwM],[uqYoG,A,CwM,NLGHO],[uqYoG,A,c],[uqYoG,A,c,NLGHO],[uqYoG,A,c,CwM],[uqYoG,A,c,CwM,NLGHO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3905() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kn","LJgP","kt","gQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gQ],[kt],[kt,gQ],[LJgP],[LJgP,gQ],[LJgP,kt],[LJgP,kt,gQ],[kn],[kn,gQ],[kn,kt],[kn,kt,gQ],[kn,LJgP],[kn,LJgP,gQ],[kn,LJgP,kt],[kn,LJgP,kt,gQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3906() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dKow","T")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[T],[dKow],[dKow,T]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3907() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RxhNg","pMpG","cNdt","x","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[x],[x,n],[cNdt],[cNdt,n],[cNdt,x],[cNdt,x,n],[pMpG],[pMpG,n],[pMpG,x],[pMpG,x,n],[pMpG,cNdt],[pMpG,cNdt,n],[pMpG,cNdt,x],[pMpG,cNdt,x,n],[RxhNg],[RxhNg,n],[RxhNg,x],[RxhNg,x,n],[RxhNg,cNdt],[RxhNg,cNdt,n],[RxhNg,cNdt,x],[RxhNg,cNdt,x,n],[RxhNg,pMpG],[RxhNg,pMpG,n],[RxhNg,pMpG,x],[RxhNg,pMpG,x,n],[RxhNg,pMpG,cNdt],[RxhNg,pMpG,cNdt,n],[RxhNg,pMpG,cNdt,x],[RxhNg,pMpG,cNdt,x,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3908() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yRJU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yRJU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3909() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OfW","KOH","BOqN","RfuR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RfuR],[BOqN],[BOqN,RfuR],[KOH],[KOH,RfuR],[KOH,BOqN],[KOH,BOqN,RfuR],[OfW],[OfW,RfuR],[OfW,BOqN],[OfW,BOqN,RfuR],[OfW,KOH],[OfW,KOH,RfuR],[OfW,KOH,BOqN],[OfW,KOH,BOqN,RfuR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3910() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WPp","PJ","m","Llga","Ut")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ut],[Llga],[Llga,Ut],[m],[m,Ut],[m,Llga],[m,Llga,Ut],[PJ],[PJ,Ut],[PJ,Llga],[PJ,Llga,Ut],[PJ,m],[PJ,m,Ut],[PJ,m,Llga],[PJ,m,Llga,Ut],[WPp],[WPp,Ut],[WPp,Llga],[WPp,Llga,Ut],[WPp,m],[WPp,m,Ut],[WPp,m,Llga],[WPp,m,Llga,Ut],[WPp,PJ],[WPp,PJ,Ut],[WPp,PJ,Llga],[WPp,PJ,Llga,Ut],[WPp,PJ,m],[WPp,PJ,m,Ut],[WPp,PJ,m,Llga],[WPp,PJ,m,Llga,Ut]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3911() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mo","tSae","FpxW","bKYf","dR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dR],[bKYf],[bKYf,dR],[FpxW],[FpxW,dR],[FpxW,bKYf],[FpxW,bKYf,dR],[tSae],[tSae,dR],[tSae,bKYf],[tSae,bKYf,dR],[tSae,FpxW],[tSae,FpxW,dR],[tSae,FpxW,bKYf],[tSae,FpxW,bKYf,dR],[mo],[mo,dR],[mo,bKYf],[mo,bKYf,dR],[mo,FpxW],[mo,FpxW,dR],[mo,FpxW,bKYf],[mo,FpxW,bKYf,dR],[mo,tSae],[mo,tSae,dR],[mo,tSae,bKYf],[mo,tSae,bKYf,dR],[mo,tSae,FpxW],[mo,tSae,FpxW,dR],[mo,tSae,FpxW,bKYf],[mo,tSae,FpxW,bKYf,dR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3912() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fxR","PRy","mEbE","AZ","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[AZ],[AZ,O],[mEbE],[mEbE,O],[mEbE,AZ],[mEbE,AZ,O],[PRy],[PRy,O],[PRy,AZ],[PRy,AZ,O],[PRy,mEbE],[PRy,mEbE,O],[PRy,mEbE,AZ],[PRy,mEbE,AZ,O],[fxR],[fxR,O],[fxR,AZ],[fxR,AZ,O],[fxR,mEbE],[fxR,mEbE,O],[fxR,mEbE,AZ],[fxR,mEbE,AZ,O],[fxR,PRy],[fxR,PRy,O],[fxR,PRy,AZ],[fxR,PRy,AZ,O],[fxR,PRy,mEbE],[fxR,PRy,mEbE,O],[fxR,PRy,mEbE,AZ],[fxR,PRy,mEbE,AZ,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3913() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kLDFh","qmmiy","dRBd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dRBd],[qmmiy],[qmmiy,dRBd],[kLDFh],[kLDFh,dRBd],[kLDFh,qmmiy],[kLDFh,qmmiy,dRBd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3914() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dzEm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dzEm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3915() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bhLqP","yz","s","azha")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[azha],[s],[s,azha],[yz],[yz,azha],[yz,s],[yz,s,azha],[bhLqP],[bhLqP,azha],[bhLqP,s],[bhLqP,s,azha],[bhLqP,yz],[bhLqP,yz,azha],[bhLqP,yz,s],[bhLqP,yz,s,azha]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3916() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KmF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KmF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3917() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3918() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xN","Gcwt","ZD","SPx","Uvp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uvp],[SPx],[SPx,Uvp],[ZD],[ZD,Uvp],[ZD,SPx],[ZD,SPx,Uvp],[Gcwt],[Gcwt,Uvp],[Gcwt,SPx],[Gcwt,SPx,Uvp],[Gcwt,ZD],[Gcwt,ZD,Uvp],[Gcwt,ZD,SPx],[Gcwt,ZD,SPx,Uvp],[xN],[xN,Uvp],[xN,SPx],[xN,SPx,Uvp],[xN,ZD],[xN,ZD,Uvp],[xN,ZD,SPx],[xN,ZD,SPx,Uvp],[xN,Gcwt],[xN,Gcwt,Uvp],[xN,Gcwt,SPx],[xN,Gcwt,SPx,Uvp],[xN,Gcwt,ZD],[xN,Gcwt,ZD,Uvp],[xN,Gcwt,ZD,SPx],[xN,Gcwt,ZD,SPx,Uvp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3919() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IRj","FlzDY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FlzDY],[IRj],[IRj,FlzDY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3920() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hXp","U","yKVeQ","yVsm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yVsm],[yKVeQ],[yKVeQ,yVsm],[U],[U,yVsm],[U,yKVeQ],[U,yKVeQ,yVsm],[hXp],[hXp,yVsm],[hXp,yKVeQ],[hXp,yKVeQ,yVsm],[hXp,U],[hXp,U,yVsm],[hXp,U,yKVeQ],[hXp,U,yKVeQ,yVsm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3921() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nVmi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nVmi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3922() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","JRK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JRK],[B],[B,JRK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3923() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nbu","EaLe","NpPm","Loa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Loa],[NpPm],[NpPm,Loa],[EaLe],[EaLe,Loa],[EaLe,NpPm],[EaLe,NpPm,Loa],[Nbu],[Nbu,Loa],[Nbu,NpPm],[Nbu,NpPm,Loa],[Nbu,EaLe],[Nbu,EaLe,Loa],[Nbu,EaLe,NpPm],[Nbu,EaLe,NpPm,Loa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3924() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "W","EMc","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[EMc],[EMc,n],[W],[W,n],[W,EMc],[W,EMc,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3925() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tsSGO","Mc","Jzi","tOERC","uSK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uSK],[tOERC],[tOERC,uSK],[Jzi],[Jzi,uSK],[Jzi,tOERC],[Jzi,tOERC,uSK],[Mc],[Mc,uSK],[Mc,tOERC],[Mc,tOERC,uSK],[Mc,Jzi],[Mc,Jzi,uSK],[Mc,Jzi,tOERC],[Mc,Jzi,tOERC,uSK],[tsSGO],[tsSGO,uSK],[tsSGO,tOERC],[tsSGO,tOERC,uSK],[tsSGO,Jzi],[tsSGO,Jzi,uSK],[tsSGO,Jzi,tOERC],[tsSGO,Jzi,tOERC,uSK],[tsSGO,Mc],[tsSGO,Mc,uSK],[tsSGO,Mc,tOERC],[tsSGO,Mc,tOERC,uSK],[tsSGO,Mc,Jzi],[tsSGO,Mc,Jzi,uSK],[tsSGO,Mc,Jzi,tOERC],[tsSGO,Mc,Jzi,tOERC,uSK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3926() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UrT","QZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QZ],[UrT],[UrT,QZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3927() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qGEhA","ECQwz","bbav","MfTV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MfTV],[bbav],[bbav,MfTV],[ECQwz],[ECQwz,MfTV],[ECQwz,bbav],[ECQwz,bbav,MfTV],[qGEhA],[qGEhA,MfTV],[qGEhA,bbav],[qGEhA,bbav,MfTV],[qGEhA,ECQwz],[qGEhA,ECQwz,MfTV],[qGEhA,ECQwz,bbav],[qGEhA,ECQwz,bbav,MfTV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3928() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","kDL","dUNth","xAFI","iblP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iblP],[xAFI],[xAFI,iblP],[dUNth],[dUNth,iblP],[dUNth,xAFI],[dUNth,xAFI,iblP],[kDL],[kDL,iblP],[kDL,xAFI],[kDL,xAFI,iblP],[kDL,dUNth],[kDL,dUNth,iblP],[kDL,dUNth,xAFI],[kDL,dUNth,xAFI,iblP],[P],[P,iblP],[P,xAFI],[P,xAFI,iblP],[P,dUNth],[P,dUNth,iblP],[P,dUNth,xAFI],[P,dUNth,xAFI,iblP],[P,kDL],[P,kDL,iblP],[P,kDL,xAFI],[P,kDL,xAFI,iblP],[P,kDL,dUNth],[P,kDL,dUNth,iblP],[P,kDL,dUNth,xAFI],[P,kDL,dUNth,xAFI,iblP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3929() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","fzJqK","lf","xWkgt","MasZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MasZ],[xWkgt],[xWkgt,MasZ],[lf],[lf,MasZ],[lf,xWkgt],[lf,xWkgt,MasZ],[fzJqK],[fzJqK,MasZ],[fzJqK,xWkgt],[fzJqK,xWkgt,MasZ],[fzJqK,lf],[fzJqK,lf,MasZ],[fzJqK,lf,xWkgt],[fzJqK,lf,xWkgt,MasZ],[A],[A,MasZ],[A,xWkgt],[A,xWkgt,MasZ],[A,lf],[A,lf,MasZ],[A,lf,xWkgt],[A,lf,xWkgt,MasZ],[A,fzJqK],[A,fzJqK,MasZ],[A,fzJqK,xWkgt],[A,fzJqK,xWkgt,MasZ],[A,fzJqK,lf],[A,fzJqK,lf,MasZ],[A,fzJqK,lf,xWkgt],[A,fzJqK,lf,xWkgt,MasZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3930() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QQ","kT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kT],[QQ],[QQ,kT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3931() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZnI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZnI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3932() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","eWF","RtPFY","UMUXE","cXqqG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cXqqG],[UMUXE],[UMUXE,cXqqG],[RtPFY],[RtPFY,cXqqG],[RtPFY,UMUXE],[RtPFY,UMUXE,cXqqG],[eWF],[eWF,cXqqG],[eWF,UMUXE],[eWF,UMUXE,cXqqG],[eWF,RtPFY],[eWF,RtPFY,cXqqG],[eWF,RtPFY,UMUXE],[eWF,RtPFY,UMUXE,cXqqG],[Q],[Q,cXqqG],[Q,UMUXE],[Q,UMUXE,cXqqG],[Q,RtPFY],[Q,RtPFY,cXqqG],[Q,RtPFY,UMUXE],[Q,RtPFY,UMUXE,cXqqG],[Q,eWF],[Q,eWF,cXqqG],[Q,eWF,UMUXE],[Q,eWF,UMUXE,cXqqG],[Q,eWF,RtPFY],[Q,eWF,RtPFY,cXqqG],[Q,eWF,RtPFY,UMUXE],[Q,eWF,RtPFY,UMUXE,cXqqG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3933() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","KTVnA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KTVnA],[e],[e,KTVnA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3934() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HZ","T","E","F","dyUoc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dyUoc],[F],[F,dyUoc],[E],[E,dyUoc],[E,F],[E,F,dyUoc],[T],[T,dyUoc],[T,F],[T,F,dyUoc],[T,E],[T,E,dyUoc],[T,E,F],[T,E,F,dyUoc],[HZ],[HZ,dyUoc],[HZ,F],[HZ,F,dyUoc],[HZ,E],[HZ,E,dyUoc],[HZ,E,F],[HZ,E,F,dyUoc],[HZ,T],[HZ,T,dyUoc],[HZ,T,F],[HZ,T,F,dyUoc],[HZ,T,E],[HZ,T,E,dyUoc],[HZ,T,E,F],[HZ,T,E,F,dyUoc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3935() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YXSq","QDjg","QKSf","AwNn","TthV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TthV],[AwNn],[AwNn,TthV],[QKSf],[QKSf,TthV],[QKSf,AwNn],[QKSf,AwNn,TthV],[QDjg],[QDjg,TthV],[QDjg,AwNn],[QDjg,AwNn,TthV],[QDjg,QKSf],[QDjg,QKSf,TthV],[QDjg,QKSf,AwNn],[QDjg,QKSf,AwNn,TthV],[YXSq],[YXSq,TthV],[YXSq,AwNn],[YXSq,AwNn,TthV],[YXSq,QKSf],[YXSq,QKSf,TthV],[YXSq,QKSf,AwNn],[YXSq,QKSf,AwNn,TthV],[YXSq,QDjg],[YXSq,QDjg,TthV],[YXSq,QDjg,AwNn],[YXSq,QDjg,AwNn,TthV],[YXSq,QDjg,QKSf],[YXSq,QDjg,QKSf,TthV],[YXSq,QDjg,QKSf,AwNn],[YXSq,QDjg,QKSf,AwNn,TthV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3936() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ELxT","nNd","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[nNd],[nNd,i],[ELxT],[ELxT,i],[ELxT,nNd],[ELxT,nNd,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3937() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qSV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qSV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3938() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cHkT","Nu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nu],[cHkT],[cHkT,Nu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3939() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JcE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JcE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3940() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gk","iVa","krF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[krF],[iVa],[iVa,krF],[gk],[gk,krF],[gk,iVa],[gk,iVa,krF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3941() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yLSX","A","YWs","nBC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nBC],[YWs],[YWs,nBC],[A],[A,nBC],[A,YWs],[A,YWs,nBC],[yLSX],[yLSX,nBC],[yLSX,YWs],[yLSX,YWs,nBC],[yLSX,A],[yLSX,A,nBC],[yLSX,A,YWs],[yLSX,A,YWs,nBC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3942() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3943() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PX","do")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[do],[PX],[PX,do]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3944() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IY","E","WDy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WDy],[E],[E,WDy],[IY],[IY,WDy],[IY,E],[IY,E,WDy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3945() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZJQGd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZJQGd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3946() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uz","jKU","UeKJ","cUMpR","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[cUMpR],[cUMpR,m],[UeKJ],[UeKJ,m],[UeKJ,cUMpR],[UeKJ,cUMpR,m],[jKU],[jKU,m],[jKU,cUMpR],[jKU,cUMpR,m],[jKU,UeKJ],[jKU,UeKJ,m],[jKU,UeKJ,cUMpR],[jKU,UeKJ,cUMpR,m],[uz],[uz,m],[uz,cUMpR],[uz,cUMpR,m],[uz,UeKJ],[uz,UeKJ,m],[uz,UeKJ,cUMpR],[uz,UeKJ,cUMpR,m],[uz,jKU],[uz,jKU,m],[uz,jKU,cUMpR],[uz,jKU,cUMpR,m],[uz,jKU,UeKJ],[uz,jKU,UeKJ,m],[uz,jKU,UeKJ,cUMpR],[uz,jKU,UeKJ,cUMpR,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3947() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iIF","XcH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XcH],[iIF],[iIF,XcH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3948() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fhCtT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fhCtT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3949() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nNy","RbuB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RbuB],[nNy],[nNy,RbuB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3950() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[s]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3951() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BPvdv","kp","HA","rWp","QP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QP],[rWp],[rWp,QP],[HA],[HA,QP],[HA,rWp],[HA,rWp,QP],[kp],[kp,QP],[kp,rWp],[kp,rWp,QP],[kp,HA],[kp,HA,QP],[kp,HA,rWp],[kp,HA,rWp,QP],[BPvdv],[BPvdv,QP],[BPvdv,rWp],[BPvdv,rWp,QP],[BPvdv,HA],[BPvdv,HA,QP],[BPvdv,HA,rWp],[BPvdv,HA,rWp,QP],[BPvdv,kp],[BPvdv,kp,QP],[BPvdv,kp,rWp],[BPvdv,kp,rWp,QP],[BPvdv,kp,HA],[BPvdv,kp,HA,QP],[BPvdv,kp,HA,rWp],[BPvdv,kp,HA,rWp,QP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3952() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ryfS","v")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[v],[ryfS],[ryfS,v]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3953() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cPc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cPc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3954() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bt","jM","NS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NS],[jM],[jM,NS],[Bt],[Bt,NS],[Bt,jM],[Bt,jM,NS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3955() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3956() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kkQ","nM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nM],[kkQ],[kkQ,nM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3957() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XSd","Y","ZuU","PrP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PrP],[ZuU],[ZuU,PrP],[Y],[Y,PrP],[Y,ZuU],[Y,ZuU,PrP],[XSd],[XSd,PrP],[XSd,ZuU],[XSd,ZuU,PrP],[XSd,Y],[XSd,Y,PrP],[XSd,Y,ZuU],[XSd,Y,ZuU,PrP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3958() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ln","oEZH","OW","fvZX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fvZX],[OW],[OW,fvZX],[oEZH],[oEZH,fvZX],[oEZH,OW],[oEZH,OW,fvZX],[Ln],[Ln,fvZX],[Ln,OW],[Ln,OW,fvZX],[Ln,oEZH],[Ln,oEZH,fvZX],[Ln,oEZH,OW],[Ln,oEZH,OW,fvZX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3959() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZrLL","u","gJY","KgCRS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KgCRS],[gJY],[gJY,KgCRS],[u],[u,KgCRS],[u,gJY],[u,gJY,KgCRS],[ZrLL],[ZrLL,KgCRS],[ZrLL,gJY],[ZrLL,gJY,KgCRS],[ZrLL,u],[ZrLL,u,KgCRS],[ZrLL,u,gJY],[ZrLL,u,gJY,KgCRS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3960() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KzinB","Gr","dc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dc],[Gr],[Gr,dc],[KzinB],[KzinB,dc],[KzinB,Gr],[KzinB,Gr,dc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3961() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LoC","MmX","OYmA","L","pN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pN],[L],[L,pN],[OYmA],[OYmA,pN],[OYmA,L],[OYmA,L,pN],[MmX],[MmX,pN],[MmX,L],[MmX,L,pN],[MmX,OYmA],[MmX,OYmA,pN],[MmX,OYmA,L],[MmX,OYmA,L,pN],[LoC],[LoC,pN],[LoC,L],[LoC,L,pN],[LoC,OYmA],[LoC,OYmA,pN],[LoC,OYmA,L],[LoC,OYmA,L,pN],[LoC,MmX],[LoC,MmX,pN],[LoC,MmX,L],[LoC,MmX,L,pN],[LoC,MmX,OYmA],[LoC,MmX,OYmA,pN],[LoC,MmX,OYmA,L],[LoC,MmX,OYmA,L,pN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3962() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZwhAV","bZB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bZB],[ZwhAV],[ZwhAV,bZB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3963() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jJPep","NTdgc","Va")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Va],[NTdgc],[NTdgc,Va],[jJPep],[jJPep,Va],[jJPep,NTdgc],[jJPep,NTdgc,Va]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3964() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "grnY","tTlTe","Lhb","I","bzkST")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bzkST],[I],[I,bzkST],[Lhb],[Lhb,bzkST],[Lhb,I],[Lhb,I,bzkST],[tTlTe],[tTlTe,bzkST],[tTlTe,I],[tTlTe,I,bzkST],[tTlTe,Lhb],[tTlTe,Lhb,bzkST],[tTlTe,Lhb,I],[tTlTe,Lhb,I,bzkST],[grnY],[grnY,bzkST],[grnY,I],[grnY,I,bzkST],[grnY,Lhb],[grnY,Lhb,bzkST],[grnY,Lhb,I],[grnY,Lhb,I,bzkST],[grnY,tTlTe],[grnY,tTlTe,bzkST],[grnY,tTlTe,I],[grnY,tTlTe,I,bzkST],[grnY,tTlTe,Lhb],[grnY,tTlTe,Lhb,bzkST],[grnY,tTlTe,Lhb,I],[grnY,tTlTe,Lhb,I,bzkST]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3965() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aejiD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aejiD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3966() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[h],[h,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3967() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VFmbq","lLRrD","Rk","EjwIg","yVFFK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yVFFK],[EjwIg],[EjwIg,yVFFK],[Rk],[Rk,yVFFK],[Rk,EjwIg],[Rk,EjwIg,yVFFK],[lLRrD],[lLRrD,yVFFK],[lLRrD,EjwIg],[lLRrD,EjwIg,yVFFK],[lLRrD,Rk],[lLRrD,Rk,yVFFK],[lLRrD,Rk,EjwIg],[lLRrD,Rk,EjwIg,yVFFK],[VFmbq],[VFmbq,yVFFK],[VFmbq,EjwIg],[VFmbq,EjwIg,yVFFK],[VFmbq,Rk],[VFmbq,Rk,yVFFK],[VFmbq,Rk,EjwIg],[VFmbq,Rk,EjwIg,yVFFK],[VFmbq,lLRrD],[VFmbq,lLRrD,yVFFK],[VFmbq,lLRrD,EjwIg],[VFmbq,lLRrD,EjwIg,yVFFK],[VFmbq,lLRrD,Rk],[VFmbq,lLRrD,Rk,yVFFK],[VFmbq,lLRrD,Rk,EjwIg],[VFmbq,lLRrD,Rk,EjwIg,yVFFK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3968() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bzk","Nlt","UHM","zsSIR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zsSIR],[UHM],[UHM,zsSIR],[Nlt],[Nlt,zsSIR],[Nlt,UHM],[Nlt,UHM,zsSIR],[bzk],[bzk,zsSIR],[bzk,UHM],[bzk,UHM,zsSIR],[bzk,Nlt],[bzk,Nlt,zsSIR],[bzk,Nlt,UHM],[bzk,Nlt,UHM,zsSIR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3969() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","WN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WN],[p],[p,WN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3970() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JbaP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JbaP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3971() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","SqP","qrxf","OM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OM],[qrxf],[qrxf,OM],[SqP],[SqP,OM],[SqP,qrxf],[SqP,qrxf,OM],[P],[P,OM],[P,qrxf],[P,qrxf,OM],[P,SqP],[P,SqP,OM],[P,SqP,qrxf],[P,SqP,qrxf,OM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3972() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","mp","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[mp],[mp,O],[Q],[Q,O],[Q,mp],[Q,mp,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3973() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QOIA","iMOQ","knWqL","kZj","pPn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pPn],[kZj],[kZj,pPn],[knWqL],[knWqL,pPn],[knWqL,kZj],[knWqL,kZj,pPn],[iMOQ],[iMOQ,pPn],[iMOQ,kZj],[iMOQ,kZj,pPn],[iMOQ,knWqL],[iMOQ,knWqL,pPn],[iMOQ,knWqL,kZj],[iMOQ,knWqL,kZj,pPn],[QOIA],[QOIA,pPn],[QOIA,kZj],[QOIA,kZj,pPn],[QOIA,knWqL],[QOIA,knWqL,pPn],[QOIA,knWqL,kZj],[QOIA,knWqL,kZj,pPn],[QOIA,iMOQ],[QOIA,iMOQ,pPn],[QOIA,iMOQ,kZj],[QOIA,iMOQ,kZj,pPn],[QOIA,iMOQ,knWqL],[QOIA,iMOQ,knWqL,pPn],[QOIA,iMOQ,knWqL,kZj],[QOIA,iMOQ,knWqL,kZj,pPn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3974() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UI","NfSdX","UJI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UJI],[NfSdX],[NfSdX,UJI],[UI],[UI,UJI],[UI,NfSdX],[UI,NfSdX,UJI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3975() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HxTe","vJH","w","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[w],[w,z],[vJH],[vJH,z],[vJH,w],[vJH,w,z],[HxTe],[HxTe,z],[HxTe,w],[HxTe,w,z],[HxTe,vJH],[HxTe,vJH,z],[HxTe,vJH,w],[HxTe,vJH,w,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3976() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "akNUq","h","k","BQor","DMH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DMH],[BQor],[BQor,DMH],[k],[k,DMH],[k,BQor],[k,BQor,DMH],[h],[h,DMH],[h,BQor],[h,BQor,DMH],[h,k],[h,k,DMH],[h,k,BQor],[h,k,BQor,DMH],[akNUq],[akNUq,DMH],[akNUq,BQor],[akNUq,BQor,DMH],[akNUq,k],[akNUq,k,DMH],[akNUq,k,BQor],[akNUq,k,BQor,DMH],[akNUq,h],[akNUq,h,DMH],[akNUq,h,BQor],[akNUq,h,BQor,DMH],[akNUq,h,k],[akNUq,h,k,DMH],[akNUq,h,k,BQor],[akNUq,h,k,BQor,DMH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3977() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NDfxw","ZlrYH","ciTRr","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[ciTRr],[ciTRr,l],[ZlrYH],[ZlrYH,l],[ZlrYH,ciTRr],[ZlrYH,ciTRr,l],[NDfxw],[NDfxw,l],[NDfxw,ciTRr],[NDfxw,ciTRr,l],[NDfxw,ZlrYH],[NDfxw,ZlrYH,l],[NDfxw,ZlrYH,ciTRr],[NDfxw,ZlrYH,ciTRr,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3978() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","J","Z","WbX","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[WbX],[WbX,N],[Z],[Z,N],[Z,WbX],[Z,WbX,N],[J],[J,N],[J,WbX],[J,WbX,N],[J,Z],[J,Z,N],[J,Z,WbX],[J,Z,WbX,N],[D],[D,N],[D,WbX],[D,WbX,N],[D,Z],[D,Z,N],[D,Z,WbX],[D,Z,WbX,N],[D,J],[D,J,N],[D,J,WbX],[D,J,WbX,N],[D,J,Z],[D,J,Z,N],[D,J,Z,WbX],[D,J,Z,WbX,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3979() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tfmz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tfmz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3980() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kNxW","jmU","hb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hb],[jmU],[jmU,hb],[kNxW],[kNxW,hb],[kNxW,jmU],[kNxW,jmU,hb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3981() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xizym","f","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[f],[f,l],[xizym],[xizym,l],[xizym,f],[xizym,f,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3982() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","JYtB","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[JYtB],[JYtB,o],[g],[g,o],[g,JYtB],[g,JYtB,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3983() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VBWG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VBWG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3984() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J","weX","yF","TZWJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TZWJ],[yF],[yF,TZWJ],[weX],[weX,TZWJ],[weX,yF],[weX,yF,TZWJ],[J],[J,TZWJ],[J,yF],[J,yF,TZWJ],[J,weX],[J,weX,TZWJ],[J,weX,yF],[J,weX,yF,TZWJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3985() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Uj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3986() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AV","TcMok","GwCx","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[GwCx],[GwCx,i],[TcMok],[TcMok,i],[TcMok,GwCx],[TcMok,GwCx,i],[AV],[AV,i],[AV,GwCx],[AV,GwCx,i],[AV,TcMok],[AV,TcMok,i],[AV,TcMok,GwCx],[AV,TcMok,GwCx,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3987() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","KVO","J","KsZNE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KsZNE],[J],[J,KsZNE],[KVO],[KVO,KsZNE],[KVO,J],[KVO,J,KsZNE],[Q],[Q,KsZNE],[Q,J],[Q,J,KsZNE],[Q,KVO],[Q,KVO,KsZNE],[Q,KVO,J],[Q,KVO,J,KsZNE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3988() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hnnR","tAwdD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tAwdD],[hnnR],[hnnR,tAwdD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3989() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","c","F","QH","IXiI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IXiI],[QH],[QH,IXiI],[F],[F,IXiI],[F,QH],[F,QH,IXiI],[c],[c,IXiI],[c,QH],[c,QH,IXiI],[c,F],[c,F,IXiI],[c,F,QH],[c,F,QH,IXiI],[R],[R,IXiI],[R,QH],[R,QH,IXiI],[R,F],[R,F,IXiI],[R,F,QH],[R,F,QH,IXiI],[R,c],[R,c,IXiI],[R,c,QH],[R,c,QH,IXiI],[R,c,F],[R,c,F,IXiI],[R,c,F,QH],[R,c,F,QH,IXiI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3990() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","PiN","Gsfe","swwwe","fqyBs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fqyBs],[swwwe],[swwwe,fqyBs],[Gsfe],[Gsfe,fqyBs],[Gsfe,swwwe],[Gsfe,swwwe,fqyBs],[PiN],[PiN,fqyBs],[PiN,swwwe],[PiN,swwwe,fqyBs],[PiN,Gsfe],[PiN,Gsfe,fqyBs],[PiN,Gsfe,swwwe],[PiN,Gsfe,swwwe,fqyBs],[Q],[Q,fqyBs],[Q,swwwe],[Q,swwwe,fqyBs],[Q,Gsfe],[Q,Gsfe,fqyBs],[Q,Gsfe,swwwe],[Q,Gsfe,swwwe,fqyBs],[Q,PiN],[Q,PiN,fqyBs],[Q,PiN,swwwe],[Q,PiN,swwwe,fqyBs],[Q,PiN,Gsfe],[Q,PiN,Gsfe,fqyBs],[Q,PiN,Gsfe,swwwe],[Q,PiN,Gsfe,swwwe,fqyBs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3991() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ug","NntMq","PQDeL","Mvb","MhZLo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MhZLo],[Mvb],[Mvb,MhZLo],[PQDeL],[PQDeL,MhZLo],[PQDeL,Mvb],[PQDeL,Mvb,MhZLo],[NntMq],[NntMq,MhZLo],[NntMq,Mvb],[NntMq,Mvb,MhZLo],[NntMq,PQDeL],[NntMq,PQDeL,MhZLo],[NntMq,PQDeL,Mvb],[NntMq,PQDeL,Mvb,MhZLo],[Ug],[Ug,MhZLo],[Ug,Mvb],[Ug,Mvb,MhZLo],[Ug,PQDeL],[Ug,PQDeL,MhZLo],[Ug,PQDeL,Mvb],[Ug,PQDeL,Mvb,MhZLo],[Ug,NntMq],[Ug,NntMq,MhZLo],[Ug,NntMq,Mvb],[Ug,NntMq,Mvb,MhZLo],[Ug,NntMq,PQDeL],[Ug,NntMq,PQDeL,MhZLo],[Ug,NntMq,PQDeL,Mvb],[Ug,NntMq,PQDeL,Mvb,MhZLo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3992() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ysSuC","mCDF","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[mCDF],[mCDF,m],[ysSuC],[ysSuC,m],[ysSuC,mCDF],[ysSuC,mCDF,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3993() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UYVNC","ieBIg","rhO","X","uImh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uImh],[X],[X,uImh],[rhO],[rhO,uImh],[rhO,X],[rhO,X,uImh],[ieBIg],[ieBIg,uImh],[ieBIg,X],[ieBIg,X,uImh],[ieBIg,rhO],[ieBIg,rhO,uImh],[ieBIg,rhO,X],[ieBIg,rhO,X,uImh],[UYVNC],[UYVNC,uImh],[UYVNC,X],[UYVNC,X,uImh],[UYVNC,rhO],[UYVNC,rhO,uImh],[UYVNC,rhO,X],[UYVNC,rhO,X,uImh],[UYVNC,ieBIg],[UYVNC,ieBIg,uImh],[UYVNC,ieBIg,X],[UYVNC,ieBIg,X,uImh],[UYVNC,ieBIg,rhO],[UYVNC,ieBIg,rhO,uImh],[UYVNC,ieBIg,rhO,X],[UYVNC,ieBIg,rhO,X,uImh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3994() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XZ","gSN","vKfSi","ywfX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ywfX],[vKfSi],[vKfSi,ywfX],[gSN],[gSN,ywfX],[gSN,vKfSi],[gSN,vKfSi,ywfX],[XZ],[XZ,ywfX],[XZ,vKfSi],[XZ,vKfSi,ywfX],[XZ,gSN],[XZ,gSN,ywfX],[XZ,gSN,vKfSi],[XZ,gSN,vKfSi,ywfX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3995() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","Mb","XzUd","CM","nPsMU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nPsMU],[CM],[CM,nPsMU],[XzUd],[XzUd,nPsMU],[XzUd,CM],[XzUd,CM,nPsMU],[Mb],[Mb,nPsMU],[Mb,CM],[Mb,CM,nPsMU],[Mb,XzUd],[Mb,XzUd,nPsMU],[Mb,XzUd,CM],[Mb,XzUd,CM,nPsMU],[q],[q,nPsMU],[q,CM],[q,CM,nPsMU],[q,XzUd],[q,XzUd,nPsMU],[q,XzUd,CM],[q,XzUd,CM,nPsMU],[q,Mb],[q,Mb,nPsMU],[q,Mb,CM],[q,Mb,CM,nPsMU],[q,Mb,XzUd],[q,Mb,XzUd,nPsMU],[q,Mb,XzUd,CM],[q,Mb,XzUd,CM,nPsMU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3996() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VJ","XXW","kv","GWpN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GWpN],[kv],[kv,GWpN],[XXW],[XXW,GWpN],[XXW,kv],[XXW,kv,GWpN],[VJ],[VJ,GWpN],[VJ,kv],[VJ,kv,GWpN],[VJ,XXW],[VJ,XXW,GWpN],[VJ,XXW,kv],[VJ,XXW,kv,GWpN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3997() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ab","hgC","Obku","szMr","itz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[itz],[szMr],[szMr,itz],[Obku],[Obku,itz],[Obku,szMr],[Obku,szMr,itz],[hgC],[hgC,itz],[hgC,szMr],[hgC,szMr,itz],[hgC,Obku],[hgC,Obku,itz],[hgC,Obku,szMr],[hgC,Obku,szMr,itz],[ab],[ab,itz],[ab,szMr],[ab,szMr,itz],[ab,Obku],[ab,Obku,itz],[ab,Obku,szMr],[ab,Obku,szMr,itz],[ab,hgC],[ab,hgC,itz],[ab,hgC,szMr],[ab,hgC,szMr,itz],[ab,hgC,Obku],[ab,hgC,Obku,itz],[ab,hgC,Obku,szMr],[ab,hgC,Obku,szMr,itz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3998() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wBGMn","K","zMEF","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[zMEF],[zMEF,m],[K],[K,m],[K,zMEF],[K,zMEF,m],[wBGMn],[wBGMn,m],[wBGMn,zMEF],[wBGMn,zMEF,m],[wBGMn,K],[wBGMn,K,m],[wBGMn,K,zMEF],[wBGMn,K,zMEF,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_3999() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","UYo","bVO","GcF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GcF],[bVO],[bVO,GcF],[UYo],[UYo,GcF],[UYo,bVO],[UYo,bVO,GcF],[r],[r,GcF],[r,bVO],[r,bVO,GcF],[r,UYo],[r,UYo,GcF],[r,UYo,bVO],[r,UYo,bVO,GcF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4000() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eJyb","xpe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xpe],[eJyb],[eJyb,xpe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4001() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "THJGd","E","RUVp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RUVp],[E],[E,RUVp],[THJGd],[THJGd,RUVp],[THJGd,E],[THJGd,E,RUVp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4002() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4003() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","uTmS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uTmS],[q],[q,uTmS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4004() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JQHR","uej","YgNFs","naM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[naM],[YgNFs],[YgNFs,naM],[uej],[uej,naM],[uej,YgNFs],[uej,YgNFs,naM],[JQHR],[JQHR,naM],[JQHR,YgNFs],[JQHR,YgNFs,naM],[JQHR,uej],[JQHR,uej,naM],[JQHR,uej,YgNFs],[JQHR,uej,YgNFs,naM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4005() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hryu","T","poic")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[poic],[T],[T,poic],[Hryu],[Hryu,poic],[Hryu,T],[Hryu,T,poic]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4006() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RAB","B","Ukk","t","BJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BJ],[t],[t,BJ],[Ukk],[Ukk,BJ],[Ukk,t],[Ukk,t,BJ],[B],[B,BJ],[B,t],[B,t,BJ],[B,Ukk],[B,Ukk,BJ],[B,Ukk,t],[B,Ukk,t,BJ],[RAB],[RAB,BJ],[RAB,t],[RAB,t,BJ],[RAB,Ukk],[RAB,Ukk,BJ],[RAB,Ukk,t],[RAB,Ukk,t,BJ],[RAB,B],[RAB,B,BJ],[RAB,B,t],[RAB,B,t,BJ],[RAB,B,Ukk],[RAB,B,Ukk,BJ],[RAB,B,Ukk,t],[RAB,B,Ukk,t,BJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4007() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sKzy","ivun","eJN","X","physT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[physT],[X],[X,physT],[eJN],[eJN,physT],[eJN,X],[eJN,X,physT],[ivun],[ivun,physT],[ivun,X],[ivun,X,physT],[ivun,eJN],[ivun,eJN,physT],[ivun,eJN,X],[ivun,eJN,X,physT],[sKzy],[sKzy,physT],[sKzy,X],[sKzy,X,physT],[sKzy,eJN],[sKzy,eJN,physT],[sKzy,eJN,X],[sKzy,eJN,X,physT],[sKzy,ivun],[sKzy,ivun,physT],[sKzy,ivun,X],[sKzy,ivun,X,physT],[sKzy,ivun,eJN],[sKzy,ivun,eJN,physT],[sKzy,ivun,eJN,X],[sKzy,ivun,eJN,X,physT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4008() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xBC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xBC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4009() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","NFZ","cbt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cbt],[NFZ],[NFZ,cbt],[s],[s,cbt],[s,NFZ],[s,NFZ,cbt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4010() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QPYeV","YOh","ip","ZuKDW","RDP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RDP],[ZuKDW],[ZuKDW,RDP],[ip],[ip,RDP],[ip,ZuKDW],[ip,ZuKDW,RDP],[YOh],[YOh,RDP],[YOh,ZuKDW],[YOh,ZuKDW,RDP],[YOh,ip],[YOh,ip,RDP],[YOh,ip,ZuKDW],[YOh,ip,ZuKDW,RDP],[QPYeV],[QPYeV,RDP],[QPYeV,ZuKDW],[QPYeV,ZuKDW,RDP],[QPYeV,ip],[QPYeV,ip,RDP],[QPYeV,ip,ZuKDW],[QPYeV,ip,ZuKDW,RDP],[QPYeV,YOh],[QPYeV,YOh,RDP],[QPYeV,YOh,ZuKDW],[QPYeV,YOh,ZuKDW,RDP],[QPYeV,YOh,ip],[QPYeV,YOh,ip,RDP],[QPYeV,YOh,ip,ZuKDW],[QPYeV,YOh,ip,ZuKDW,RDP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4011() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fIo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fIo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4012() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Oa","RQW","Ulmx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ulmx],[RQW],[RQW,Ulmx],[Oa],[Oa,Ulmx],[Oa,RQW],[Oa,RQW,Ulmx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4013() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LKtF","tueh","mxT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mxT],[tueh],[tueh,mxT],[LKtF],[LKtF,mxT],[LKtF,tueh],[LKtF,tueh,mxT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4014() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NIxD","v","Um","Xaeq","hel")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hel],[Xaeq],[Xaeq,hel],[Um],[Um,hel],[Um,Xaeq],[Um,Xaeq,hel],[v],[v,hel],[v,Xaeq],[v,Xaeq,hel],[v,Um],[v,Um,hel],[v,Um,Xaeq],[v,Um,Xaeq,hel],[NIxD],[NIxD,hel],[NIxD,Xaeq],[NIxD,Xaeq,hel],[NIxD,Um],[NIxD,Um,hel],[NIxD,Um,Xaeq],[NIxD,Um,Xaeq,hel],[NIxD,v],[NIxD,v,hel],[NIxD,v,Xaeq],[NIxD,v,Xaeq,hel],[NIxD,v,Um],[NIxD,v,Um,hel],[NIxD,v,Um,Xaeq],[NIxD,v,Um,Xaeq,hel]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4015() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JjDXu","l","TWBmS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TWBmS],[l],[l,TWBmS],[JjDXu],[JjDXu,TWBmS],[JjDXu,l],[JjDXu,l,TWBmS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4016() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","So","jldla")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jldla],[So],[So,jldla],[S],[S,jldla],[S,So],[S,So,jldla]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4017() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cgBx","sy","RN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RN],[sy],[sy,RN],[cgBx],[cgBx,RN],[cgBx,sy],[cgBx,sy,RN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4018() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yo","Kvr","Nhd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nhd],[Kvr],[Kvr,Nhd],[yo],[yo,Nhd],[yo,Kvr],[yo,Kvr,Nhd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4019() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vsaOO","Lyb","vPOAz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vPOAz],[Lyb],[Lyb,vPOAz],[vsaOO],[vsaOO,vPOAz],[vsaOO,Lyb],[vsaOO,Lyb,vPOAz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4020() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[P]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4021() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "otSD","vpL","zp","qjxDK","SGc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SGc],[qjxDK],[qjxDK,SGc],[zp],[zp,SGc],[zp,qjxDK],[zp,qjxDK,SGc],[vpL],[vpL,SGc],[vpL,qjxDK],[vpL,qjxDK,SGc],[vpL,zp],[vpL,zp,SGc],[vpL,zp,qjxDK],[vpL,zp,qjxDK,SGc],[otSD],[otSD,SGc],[otSD,qjxDK],[otSD,qjxDK,SGc],[otSD,zp],[otSD,zp,SGc],[otSD,zp,qjxDK],[otSD,zp,qjxDK,SGc],[otSD,vpL],[otSD,vpL,SGc],[otSD,vpL,qjxDK],[otSD,vpL,qjxDK,SGc],[otSD,vpL,zp],[otSD,vpL,zp,SGc],[otSD,vpL,zp,qjxDK],[otSD,vpL,zp,qjxDK,SGc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4022() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dLac")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dLac]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4023() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fy","lY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lY],[fy],[fy,lY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4024() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ReSG","MlH","fZgx","BQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BQ],[fZgx],[fZgx,BQ],[MlH],[MlH,BQ],[MlH,fZgx],[MlH,fZgx,BQ],[ReSG],[ReSG,BQ],[ReSG,fZgx],[ReSG,fZgx,BQ],[ReSG,MlH],[ReSG,MlH,BQ],[ReSG,MlH,fZgx],[ReSG,MlH,fZgx,BQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4025() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "irmV","c","vRSv","sgl","HGj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HGj],[sgl],[sgl,HGj],[vRSv],[vRSv,HGj],[vRSv,sgl],[vRSv,sgl,HGj],[c],[c,HGj],[c,sgl],[c,sgl,HGj],[c,vRSv],[c,vRSv,HGj],[c,vRSv,sgl],[c,vRSv,sgl,HGj],[irmV],[irmV,HGj],[irmV,sgl],[irmV,sgl,HGj],[irmV,vRSv],[irmV,vRSv,HGj],[irmV,vRSv,sgl],[irmV,vRSv,sgl,HGj],[irmV,c],[irmV,c,HGj],[irmV,c,sgl],[irmV,c,sgl,HGj],[irmV,c,vRSv],[irmV,c,vRSv,HGj],[irmV,c,vRSv,sgl],[irmV,c,vRSv,sgl,HGj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4026() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","b","Al")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Al],[b],[b,Al],[B],[B,Al],[B,b],[B,b,Al]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4027() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wRdj","gTd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gTd],[wRdj],[wRdj,gTd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4028() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jtN","wlbz","WKTS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WKTS],[wlbz],[wlbz,WKTS],[jtN],[jtN,WKTS],[jtN,wlbz],[jtN,wlbz,WKTS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4029() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xi","ZqwNj","YV","eedE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eedE],[YV],[YV,eedE],[ZqwNj],[ZqwNj,eedE],[ZqwNj,YV],[ZqwNj,YV,eedE],[xi],[xi,eedE],[xi,YV],[xi,YV,eedE],[xi,ZqwNj],[xi,ZqwNj,eedE],[xi,ZqwNj,YV],[xi,ZqwNj,YV,eedE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4030() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GG","nd","uL","k","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[k],[k,M],[uL],[uL,M],[uL,k],[uL,k,M],[nd],[nd,M],[nd,k],[nd,k,M],[nd,uL],[nd,uL,M],[nd,uL,k],[nd,uL,k,M],[GG],[GG,M],[GG,k],[GG,k,M],[GG,uL],[GG,uL,M],[GG,uL,k],[GG,uL,k,M],[GG,nd],[GG,nd,M],[GG,nd,k],[GG,nd,k,M],[GG,nd,uL],[GG,nd,uL,M],[GG,nd,uL,k],[GG,nd,uL,k,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4031() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BMGe","cM","dreHl","eOZoh","Vebj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vebj],[eOZoh],[eOZoh,Vebj],[dreHl],[dreHl,Vebj],[dreHl,eOZoh],[dreHl,eOZoh,Vebj],[cM],[cM,Vebj],[cM,eOZoh],[cM,eOZoh,Vebj],[cM,dreHl],[cM,dreHl,Vebj],[cM,dreHl,eOZoh],[cM,dreHl,eOZoh,Vebj],[BMGe],[BMGe,Vebj],[BMGe,eOZoh],[BMGe,eOZoh,Vebj],[BMGe,dreHl],[BMGe,dreHl,Vebj],[BMGe,dreHl,eOZoh],[BMGe,dreHl,eOZoh,Vebj],[BMGe,cM],[BMGe,cM,Vebj],[BMGe,cM,eOZoh],[BMGe,cM,eOZoh,Vebj],[BMGe,cM,dreHl],[BMGe,cM,dreHl,Vebj],[BMGe,cM,dreHl,eOZoh],[BMGe,cM,dreHl,eOZoh,Vebj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4032() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "msEy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[msEy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4033() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qU","IHYP","VPPc","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[VPPc],[VPPc,n],[IHYP],[IHYP,n],[IHYP,VPPc],[IHYP,VPPc,n],[qU],[qU,n],[qU,VPPc],[qU,VPPc,n],[qU,IHYP],[qU,IHYP,n],[qU,IHYP,VPPc],[qU,IHYP,VPPc,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4034() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","mwXN","ckP","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[ckP],[ckP,l],[mwXN],[mwXN,l],[mwXN,ckP],[mwXN,ckP,l],[s],[s,l],[s,ckP],[s,ckP,l],[s,mwXN],[s,mwXN,l],[s,mwXN,ckP],[s,mwXN,ckP,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4035() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","VuVzb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VuVzb],[v],[v,VuVzb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4036() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tbxdd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tbxdd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4037() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XFjMy","xBtcF","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[xBtcF],[xBtcF,Y],[XFjMy],[XFjMy,Y],[XFjMy,xBtcF],[XFjMy,xBtcF,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4038() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HUU","Nl","tAK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tAK],[Nl],[Nl,tAK],[HUU],[HUU,tAK],[HUU,Nl],[HUU,Nl,tAK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4039() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oik","gxA","nUMfD","mprkM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mprkM],[nUMfD],[nUMfD,mprkM],[gxA],[gxA,mprkM],[gxA,nUMfD],[gxA,nUMfD,mprkM],[oik],[oik,mprkM],[oik,nUMfD],[oik,nUMfD,mprkM],[oik,gxA],[oik,gxA,mprkM],[oik,gxA,nUMfD],[oik,gxA,nUMfD,mprkM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4040() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xjR","zHq","EfSxe","v","bIDXZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bIDXZ],[v],[v,bIDXZ],[EfSxe],[EfSxe,bIDXZ],[EfSxe,v],[EfSxe,v,bIDXZ],[zHq],[zHq,bIDXZ],[zHq,v],[zHq,v,bIDXZ],[zHq,EfSxe],[zHq,EfSxe,bIDXZ],[zHq,EfSxe,v],[zHq,EfSxe,v,bIDXZ],[xjR],[xjR,bIDXZ],[xjR,v],[xjR,v,bIDXZ],[xjR,EfSxe],[xjR,EfSxe,bIDXZ],[xjR,EfSxe,v],[xjR,EfSxe,v,bIDXZ],[xjR,zHq],[xjR,zHq,bIDXZ],[xjR,zHq,v],[xjR,zHq,v,bIDXZ],[xjR,zHq,EfSxe],[xjR,zHq,EfSxe,bIDXZ],[xjR,zHq,EfSxe,v],[xjR,zHq,EfSxe,v,bIDXZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4041() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","BaHno","lHPo","Xt","gmBz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gmBz],[Xt],[Xt,gmBz],[lHPo],[lHPo,gmBz],[lHPo,Xt],[lHPo,Xt,gmBz],[BaHno],[BaHno,gmBz],[BaHno,Xt],[BaHno,Xt,gmBz],[BaHno,lHPo],[BaHno,lHPo,gmBz],[BaHno,lHPo,Xt],[BaHno,lHPo,Xt,gmBz],[S],[S,gmBz],[S,Xt],[S,Xt,gmBz],[S,lHPo],[S,lHPo,gmBz],[S,lHPo,Xt],[S,lHPo,Xt,gmBz],[S,BaHno],[S,BaHno,gmBz],[S,BaHno,Xt],[S,BaHno,Xt,gmBz],[S,BaHno,lHPo],[S,BaHno,lHPo,gmBz],[S,BaHno,lHPo,Xt],[S,BaHno,lHPo,Xt,gmBz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4042() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lWH","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[lWH],[lWH,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4043() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","JQj","WfV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WfV],[JQj],[JQj,WfV],[R],[R,WfV],[R,JQj],[R,JQj,WfV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4044() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RzcSF","U","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[U],[U,W],[RzcSF],[RzcSF,W],[RzcSF,U],[RzcSF,U,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4045() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WzJn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WzJn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4046() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ex","K","NYWNz","awtAT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[awtAT],[NYWNz],[NYWNz,awtAT],[K],[K,awtAT],[K,NYWNz],[K,NYWNz,awtAT],[Ex],[Ex,awtAT],[Ex,NYWNz],[Ex,NYWNz,awtAT],[Ex,K],[Ex,K,awtAT],[Ex,K,NYWNz],[Ex,K,NYWNz,awtAT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4047() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WDuGn","LE","EaIH","MwzO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MwzO],[EaIH],[EaIH,MwzO],[LE],[LE,MwzO],[LE,EaIH],[LE,EaIH,MwzO],[WDuGn],[WDuGn,MwzO],[WDuGn,EaIH],[WDuGn,EaIH,MwzO],[WDuGn,LE],[WDuGn,LE,MwzO],[WDuGn,LE,EaIH],[WDuGn,LE,EaIH,MwzO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4048() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4049() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZFda","s","jp","k","So")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[So],[k],[k,So],[jp],[jp,So],[jp,k],[jp,k,So],[s],[s,So],[s,k],[s,k,So],[s,jp],[s,jp,So],[s,jp,k],[s,jp,k,So],[ZFda],[ZFda,So],[ZFda,k],[ZFda,k,So],[ZFda,jp],[ZFda,jp,So],[ZFda,jp,k],[ZFda,jp,k,So],[ZFda,s],[ZFda,s,So],[ZFda,s,k],[ZFda,s,k,So],[ZFda,s,jp],[ZFda,s,jp,So],[ZFda,s,jp,k],[ZFda,s,jp,k,So]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4050() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FwgDu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FwgDu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4051() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RRq","Gm","nSQRo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nSQRo],[Gm],[Gm,nSQRo],[RRq],[RRq,nSQRo],[RRq,Gm],[RRq,Gm,nSQRo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4052() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JQnL","MFTfA","arPdF","k","pXqMR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pXqMR],[k],[k,pXqMR],[arPdF],[arPdF,pXqMR],[arPdF,k],[arPdF,k,pXqMR],[MFTfA],[MFTfA,pXqMR],[MFTfA,k],[MFTfA,k,pXqMR],[MFTfA,arPdF],[MFTfA,arPdF,pXqMR],[MFTfA,arPdF,k],[MFTfA,arPdF,k,pXqMR],[JQnL],[JQnL,pXqMR],[JQnL,k],[JQnL,k,pXqMR],[JQnL,arPdF],[JQnL,arPdF,pXqMR],[JQnL,arPdF,k],[JQnL,arPdF,k,pXqMR],[JQnL,MFTfA],[JQnL,MFTfA,pXqMR],[JQnL,MFTfA,k],[JQnL,MFTfA,k,pXqMR],[JQnL,MFTfA,arPdF],[JQnL,MFTfA,arPdF,pXqMR],[JQnL,MFTfA,arPdF,k],[JQnL,MFTfA,arPdF,k,pXqMR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4053() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OzBis","Aqjg","nB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nB],[Aqjg],[Aqjg,nB],[OzBis],[OzBis,nB],[OzBis,Aqjg],[OzBis,Aqjg,nB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4054() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ff","RIFv","UBPXQ","YL","rDH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rDH],[YL],[YL,rDH],[UBPXQ],[UBPXQ,rDH],[UBPXQ,YL],[UBPXQ,YL,rDH],[RIFv],[RIFv,rDH],[RIFv,YL],[RIFv,YL,rDH],[RIFv,UBPXQ],[RIFv,UBPXQ,rDH],[RIFv,UBPXQ,YL],[RIFv,UBPXQ,YL,rDH],[Ff],[Ff,rDH],[Ff,YL],[Ff,YL,rDH],[Ff,UBPXQ],[Ff,UBPXQ,rDH],[Ff,UBPXQ,YL],[Ff,UBPXQ,YL,rDH],[Ff,RIFv],[Ff,RIFv,rDH],[Ff,RIFv,YL],[Ff,RIFv,YL,rDH],[Ff,RIFv,UBPXQ],[Ff,RIFv,UBPXQ,rDH],[Ff,RIFv,UBPXQ,YL],[Ff,RIFv,UBPXQ,YL,rDH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4055() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JJzrO","h","TodhY","GLUPw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GLUPw],[TodhY],[TodhY,GLUPw],[h],[h,GLUPw],[h,TodhY],[h,TodhY,GLUPw],[JJzrO],[JJzrO,GLUPw],[JJzrO,TodhY],[JJzrO,TodhY,GLUPw],[JJzrO,h],[JJzrO,h,GLUPw],[JJzrO,h,TodhY],[JJzrO,h,TodhY,GLUPw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4056() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gh","D")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[D],[gh],[gh,D]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4057() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[c],[c,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4058() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jnU","ESN","oDUKZ","fN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fN],[oDUKZ],[oDUKZ,fN],[ESN],[ESN,fN],[ESN,oDUKZ],[ESN,oDUKZ,fN],[jnU],[jnU,fN],[jnU,oDUKZ],[jnU,oDUKZ,fN],[jnU,ESN],[jnU,ESN,fN],[jnU,ESN,oDUKZ],[jnU,ESN,oDUKZ,fN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4059() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","hQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hQ],[v],[v,hQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4060() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SI","iMJ","jU","fYVfM","KOsK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KOsK],[fYVfM],[fYVfM,KOsK],[jU],[jU,KOsK],[jU,fYVfM],[jU,fYVfM,KOsK],[iMJ],[iMJ,KOsK],[iMJ,fYVfM],[iMJ,fYVfM,KOsK],[iMJ,jU],[iMJ,jU,KOsK],[iMJ,jU,fYVfM],[iMJ,jU,fYVfM,KOsK],[SI],[SI,KOsK],[SI,fYVfM],[SI,fYVfM,KOsK],[SI,jU],[SI,jU,KOsK],[SI,jU,fYVfM],[SI,jU,fYVfM,KOsK],[SI,iMJ],[SI,iMJ,KOsK],[SI,iMJ,fYVfM],[SI,iMJ,fYVfM,KOsK],[SI,iMJ,jU],[SI,iMJ,jU,KOsK],[SI,iMJ,jU,fYVfM],[SI,iMJ,jU,fYVfM,KOsK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4061() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KbM","x","qBp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qBp],[x],[x,qBp],[KbM],[KbM,qBp],[KbM,x],[KbM,x,qBp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4062() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OKMYY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OKMYY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4063() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","VL","L","Ih")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ih],[L],[L,Ih],[VL],[VL,Ih],[VL,L],[VL,L,Ih],[R],[R,Ih],[R,L],[R,L,Ih],[R,VL],[R,VL,Ih],[R,VL,L],[R,VL,L,Ih]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4064() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wwJFf","Ntt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ntt],[wwJFf],[wwJFf,Ntt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4065() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MqlZ","jaM","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[jaM],[jaM,Z],[MqlZ],[MqlZ,Z],[MqlZ,jaM],[MqlZ,jaM,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4066() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uz","xGF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xGF],[uz],[uz,xGF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4067() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4068() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","xJtPg","yED","JRUXO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JRUXO],[yED],[yED,JRUXO],[xJtPg],[xJtPg,JRUXO],[xJtPg,yED],[xJtPg,yED,JRUXO],[A],[A,JRUXO],[A,yED],[A,yED,JRUXO],[A,xJtPg],[A,xJtPg,JRUXO],[A,xJtPg,yED],[A,xJtPg,yED,JRUXO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4069() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rsE","VcKno","CSDl","nfZM","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[nfZM],[nfZM,M],[CSDl],[CSDl,M],[CSDl,nfZM],[CSDl,nfZM,M],[VcKno],[VcKno,M],[VcKno,nfZM],[VcKno,nfZM,M],[VcKno,CSDl],[VcKno,CSDl,M],[VcKno,CSDl,nfZM],[VcKno,CSDl,nfZM,M],[rsE],[rsE,M],[rsE,nfZM],[rsE,nfZM,M],[rsE,CSDl],[rsE,CSDl,M],[rsE,CSDl,nfZM],[rsE,CSDl,nfZM,M],[rsE,VcKno],[rsE,VcKno,M],[rsE,VcKno,nfZM],[rsE,VcKno,nfZM,M],[rsE,VcKno,CSDl],[rsE,VcKno,CSDl,M],[rsE,VcKno,CSDl,nfZM],[rsE,VcKno,CSDl,nfZM,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4070() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uSO","vh","QFKyx","JcC","mPwb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mPwb],[JcC],[JcC,mPwb],[QFKyx],[QFKyx,mPwb],[QFKyx,JcC],[QFKyx,JcC,mPwb],[vh],[vh,mPwb],[vh,JcC],[vh,JcC,mPwb],[vh,QFKyx],[vh,QFKyx,mPwb],[vh,QFKyx,JcC],[vh,QFKyx,JcC,mPwb],[uSO],[uSO,mPwb],[uSO,JcC],[uSO,JcC,mPwb],[uSO,QFKyx],[uSO,QFKyx,mPwb],[uSO,QFKyx,JcC],[uSO,QFKyx,JcC,mPwb],[uSO,vh],[uSO,vh,mPwb],[uSO,vh,JcC],[uSO,vh,JcC,mPwb],[uSO,vh,QFKyx],[uSO,vh,QFKyx,mPwb],[uSO,vh,QFKyx,JcC],[uSO,vh,QFKyx,JcC,mPwb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4071() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "W","pFSnc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pFSnc],[W],[W,pFSnc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4072() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","Lrkuf","wi","lmxFb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lmxFb],[wi],[wi,lmxFb],[Lrkuf],[Lrkuf,lmxFb],[Lrkuf,wi],[Lrkuf,wi,lmxFb],[P],[P,lmxFb],[P,wi],[P,wi,lmxFb],[P,Lrkuf],[P,Lrkuf,lmxFb],[P,Lrkuf,wi],[P,Lrkuf,wi,lmxFb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4073() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tV","d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d],[tV],[tV,d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4074() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","d","Xu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xu],[d],[d,Xu],[B],[B,Xu],[B,d],[B,d,Xu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4075() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lezg","saXDa","wnjdg","jZhhz","szBco")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[szBco],[jZhhz],[jZhhz,szBco],[wnjdg],[wnjdg,szBco],[wnjdg,jZhhz],[wnjdg,jZhhz,szBco],[saXDa],[saXDa,szBco],[saXDa,jZhhz],[saXDa,jZhhz,szBco],[saXDa,wnjdg],[saXDa,wnjdg,szBco],[saXDa,wnjdg,jZhhz],[saXDa,wnjdg,jZhhz,szBco],[lezg],[lezg,szBco],[lezg,jZhhz],[lezg,jZhhz,szBco],[lezg,wnjdg],[lezg,wnjdg,szBco],[lezg,wnjdg,jZhhz],[lezg,wnjdg,jZhhz,szBco],[lezg,saXDa],[lezg,saXDa,szBco],[lezg,saXDa,jZhhz],[lezg,saXDa,jZhhz,szBco],[lezg,saXDa,wnjdg],[lezg,saXDa,wnjdg,szBco],[lezg,saXDa,wnjdg,jZhhz],[lezg,saXDa,wnjdg,jZhhz,szBco]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4076() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zfYU","ZNsmB","tC","Ybyv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ybyv],[tC],[tC,Ybyv],[ZNsmB],[ZNsmB,Ybyv],[ZNsmB,tC],[ZNsmB,tC,Ybyv],[zfYU],[zfYU,Ybyv],[zfYU,tC],[zfYU,tC,Ybyv],[zfYU,ZNsmB],[zfYU,ZNsmB,Ybyv],[zfYU,ZNsmB,tC],[zfYU,ZNsmB,tC,Ybyv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4077() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HrIq","FJy","cgWd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cgWd],[FJy],[FJy,cgWd],[HrIq],[HrIq,cgWd],[HrIq,FJy],[HrIq,FJy,cgWd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4078() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","E","pmd","x","Rhgy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rhgy],[x],[x,Rhgy],[pmd],[pmd,Rhgy],[pmd,x],[pmd,x,Rhgy],[E],[E,Rhgy],[E,x],[E,x,Rhgy],[E,pmd],[E,pmd,Rhgy],[E,pmd,x],[E,pmd,x,Rhgy],[B],[B,Rhgy],[B,x],[B,x,Rhgy],[B,pmd],[B,pmd,Rhgy],[B,pmd,x],[B,pmd,x,Rhgy],[B,E],[B,E,Rhgy],[B,E,x],[B,E,x,Rhgy],[B,E,pmd],[B,E,pmd,Rhgy],[B,E,pmd,x],[B,E,pmd,x,Rhgy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4079() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "npBv","ObB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ObB],[npBv],[npBv,ObB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4080() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jNbI","IE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IE],[jNbI],[jNbI,IE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4081() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cIkRs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cIkRs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4082() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dqM","sV","IL","HYNX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HYNX],[IL],[IL,HYNX],[sV],[sV,HYNX],[sV,IL],[sV,IL,HYNX],[dqM],[dqM,HYNX],[dqM,IL],[dqM,IL,HYNX],[dqM,sV],[dqM,sV,HYNX],[dqM,sV,IL],[dqM,sV,IL,HYNX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4083() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GjT","JIMQ","Uh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uh],[JIMQ],[JIMQ,Uh],[GjT],[GjT,Uh],[GjT,JIMQ],[GjT,JIMQ,Uh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4084() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","FZ","PQJXE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PQJXE],[FZ],[FZ,PQJXE],[S],[S,PQJXE],[S,FZ],[S,FZ,PQJXE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4085() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hz","pt","pGRhZ","tN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tN],[pGRhZ],[pGRhZ,tN],[pt],[pt,tN],[pt,pGRhZ],[pt,pGRhZ,tN],[hz],[hz,tN],[hz,pGRhZ],[hz,pGRhZ,tN],[hz,pt],[hz,pt,tN],[hz,pt,pGRhZ],[hz,pt,pGRhZ,tN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4086() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fkF","U","F","yXdwL","sKLoD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sKLoD],[yXdwL],[yXdwL,sKLoD],[F],[F,sKLoD],[F,yXdwL],[F,yXdwL,sKLoD],[U],[U,sKLoD],[U,yXdwL],[U,yXdwL,sKLoD],[U,F],[U,F,sKLoD],[U,F,yXdwL],[U,F,yXdwL,sKLoD],[fkF],[fkF,sKLoD],[fkF,yXdwL],[fkF,yXdwL,sKLoD],[fkF,F],[fkF,F,sKLoD],[fkF,F,yXdwL],[fkF,F,yXdwL,sKLoD],[fkF,U],[fkF,U,sKLoD],[fkF,U,yXdwL],[fkF,U,yXdwL,sKLoD],[fkF,U,F],[fkF,U,F,sKLoD],[fkF,U,F,yXdwL],[fkF,U,F,yXdwL,sKLoD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4087() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","PHcdz","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[PHcdz],[PHcdz,X],[w],[w,X],[w,PHcdz],[w,PHcdz,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4088() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","diIP","GmcUk","bxO","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[bxO],[bxO,Z],[GmcUk],[GmcUk,Z],[GmcUk,bxO],[GmcUk,bxO,Z],[diIP],[diIP,Z],[diIP,bxO],[diIP,bxO,Z],[diIP,GmcUk],[diIP,GmcUk,Z],[diIP,GmcUk,bxO],[diIP,GmcUk,bxO,Z],[R],[R,Z],[R,bxO],[R,bxO,Z],[R,GmcUk],[R,GmcUk,Z],[R,GmcUk,bxO],[R,GmcUk,bxO,Z],[R,diIP],[R,diIP,Z],[R,diIP,bxO],[R,diIP,bxO,Z],[R,diIP,GmcUk],[R,diIP,GmcUk,Z],[R,diIP,GmcUk,bxO],[R,diIP,GmcUk,bxO,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4089() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZmfDh","oTIV","pT","agIXv","Oj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Oj],[agIXv],[agIXv,Oj],[pT],[pT,Oj],[pT,agIXv],[pT,agIXv,Oj],[oTIV],[oTIV,Oj],[oTIV,agIXv],[oTIV,agIXv,Oj],[oTIV,pT],[oTIV,pT,Oj],[oTIV,pT,agIXv],[oTIV,pT,agIXv,Oj],[ZmfDh],[ZmfDh,Oj],[ZmfDh,agIXv],[ZmfDh,agIXv,Oj],[ZmfDh,pT],[ZmfDh,pT,Oj],[ZmfDh,pT,agIXv],[ZmfDh,pT,agIXv,Oj],[ZmfDh,oTIV],[ZmfDh,oTIV,Oj],[ZmfDh,oTIV,agIXv],[ZmfDh,oTIV,agIXv,Oj],[ZmfDh,oTIV,pT],[ZmfDh,oTIV,pT,Oj],[ZmfDh,oTIV,pT,agIXv],[ZmfDh,oTIV,pT,agIXv,Oj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4090() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MeCEP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MeCEP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4091() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4092() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hWnO","Zomy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zomy],[hWnO],[hWnO,Zomy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4093() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IzgF","nOF","jrpu","bP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bP],[jrpu],[jrpu,bP],[nOF],[nOF,bP],[nOF,jrpu],[nOF,jrpu,bP],[IzgF],[IzgF,bP],[IzgF,jrpu],[IzgF,jrpu,bP],[IzgF,nOF],[IzgF,nOF,bP],[IzgF,nOF,jrpu],[IzgF,nOF,jrpu,bP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4094() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lfYqu","kM","AQwa","HtNx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HtNx],[AQwa],[AQwa,HtNx],[kM],[kM,HtNx],[kM,AQwa],[kM,AQwa,HtNx],[lfYqu],[lfYqu,HtNx],[lfYqu,AQwa],[lfYqu,AQwa,HtNx],[lfYqu,kM],[lfYqu,kM,HtNx],[lfYqu,kM,AQwa],[lfYqu,kM,AQwa,HtNx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4095() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NsG","G","qZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qZ],[G],[G,qZ],[NsG],[NsG,qZ],[NsG,G],[NsG,G,qZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4096() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aXS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aXS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4097() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ST","BmC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BmC],[ST],[ST,BmC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4098() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xtPjV","R","vBmio")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vBmio],[R],[R,vBmio],[xtPjV],[xtPjV,vBmio],[xtPjV,R],[xtPjV,R,vBmio]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4099() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4100() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","l","unmM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[unmM],[l],[l,unmM],[Q],[Q,unmM],[Q,l],[Q,l,unmM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4101() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NWXyL","FXk","Lcp","icV","yvL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yvL],[icV],[icV,yvL],[Lcp],[Lcp,yvL],[Lcp,icV],[Lcp,icV,yvL],[FXk],[FXk,yvL],[FXk,icV],[FXk,icV,yvL],[FXk,Lcp],[FXk,Lcp,yvL],[FXk,Lcp,icV],[FXk,Lcp,icV,yvL],[NWXyL],[NWXyL,yvL],[NWXyL,icV],[NWXyL,icV,yvL],[NWXyL,Lcp],[NWXyL,Lcp,yvL],[NWXyL,Lcp,icV],[NWXyL,Lcp,icV,yvL],[NWXyL,FXk],[NWXyL,FXk,yvL],[NWXyL,FXk,icV],[NWXyL,FXk,icV,yvL],[NWXyL,FXk,Lcp],[NWXyL,FXk,Lcp,yvL],[NWXyL,FXk,Lcp,icV],[NWXyL,FXk,Lcp,icV,yvL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4102() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AXOg","Fw","hcMrz","KuX","SKaB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SKaB],[KuX],[KuX,SKaB],[hcMrz],[hcMrz,SKaB],[hcMrz,KuX],[hcMrz,KuX,SKaB],[Fw],[Fw,SKaB],[Fw,KuX],[Fw,KuX,SKaB],[Fw,hcMrz],[Fw,hcMrz,SKaB],[Fw,hcMrz,KuX],[Fw,hcMrz,KuX,SKaB],[AXOg],[AXOg,SKaB],[AXOg,KuX],[AXOg,KuX,SKaB],[AXOg,hcMrz],[AXOg,hcMrz,SKaB],[AXOg,hcMrz,KuX],[AXOg,hcMrz,KuX,SKaB],[AXOg,Fw],[AXOg,Fw,SKaB],[AXOg,Fw,KuX],[AXOg,Fw,KuX,SKaB],[AXOg,Fw,hcMrz],[AXOg,Fw,hcMrz,SKaB],[AXOg,Fw,hcMrz,KuX],[AXOg,Fw,hcMrz,KuX,SKaB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4103() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","KA","w","I","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[I],[I,o],[w],[w,o],[w,I],[w,I,o],[KA],[KA,o],[KA,I],[KA,I,o],[KA,w],[KA,w,o],[KA,w,I],[KA,w,I,o],[t],[t,o],[t,I],[t,I,o],[t,w],[t,w,o],[t,w,I],[t,w,I,o],[t,KA],[t,KA,o],[t,KA,I],[t,KA,I,o],[t,KA,w],[t,KA,w,o],[t,KA,w,I],[t,KA,w,I,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4104() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kwwbl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kwwbl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4105() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "be","VZoPF","H","AUqc","BRL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BRL],[AUqc],[AUqc,BRL],[H],[H,BRL],[H,AUqc],[H,AUqc,BRL],[VZoPF],[VZoPF,BRL],[VZoPF,AUqc],[VZoPF,AUqc,BRL],[VZoPF,H],[VZoPF,H,BRL],[VZoPF,H,AUqc],[VZoPF,H,AUqc,BRL],[be],[be,BRL],[be,AUqc],[be,AUqc,BRL],[be,H],[be,H,BRL],[be,H,AUqc],[be,H,AUqc,BRL],[be,VZoPF],[be,VZoPF,BRL],[be,VZoPF,AUqc],[be,VZoPF,AUqc,BRL],[be,VZoPF,H],[be,VZoPF,H,BRL],[be,VZoPF,H,AUqc],[be,VZoPF,H,AUqc,BRL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4106() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","ctadC","Ua")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ua],[ctadC],[ctadC,Ua],[e],[e,Ua],[e,ctadC],[e,ctadC,Ua]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4107() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hEZp","GluR","T","z","Up")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Up],[z],[z,Up],[T],[T,Up],[T,z],[T,z,Up],[GluR],[GluR,Up],[GluR,z],[GluR,z,Up],[GluR,T],[GluR,T,Up],[GluR,T,z],[GluR,T,z,Up],[hEZp],[hEZp,Up],[hEZp,z],[hEZp,z,Up],[hEZp,T],[hEZp,T,Up],[hEZp,T,z],[hEZp,T,z,Up],[hEZp,GluR],[hEZp,GluR,Up],[hEZp,GluR,z],[hEZp,GluR,z,Up],[hEZp,GluR,T],[hEZp,GluR,T,Up],[hEZp,GluR,T,z],[hEZp,GluR,T,z,Up]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4108() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","EQaG","mQH","zo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zo],[mQH],[mQH,zo],[EQaG],[EQaG,zo],[EQaG,mQH],[EQaG,mQH,zo],[p],[p,zo],[p,mQH],[p,mQH,zo],[p,EQaG],[p,EQaG,zo],[p,EQaG,mQH],[p,EQaG,mQH,zo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4109() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gtn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gtn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4110() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MtnSn","OFXx","yQci","GwdNw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GwdNw],[yQci],[yQci,GwdNw],[OFXx],[OFXx,GwdNw],[OFXx,yQci],[OFXx,yQci,GwdNw],[MtnSn],[MtnSn,GwdNw],[MtnSn,yQci],[MtnSn,yQci,GwdNw],[MtnSn,OFXx],[MtnSn,OFXx,GwdNw],[MtnSn,OFXx,yQci],[MtnSn,OFXx,yQci,GwdNw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4111() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","Wp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wp],[C],[C,Wp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4112() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","JS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JS],[S],[S,JS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4113() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IvOR","LoJ","PtnyT","psr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[psr],[PtnyT],[PtnyT,psr],[LoJ],[LoJ,psr],[LoJ,PtnyT],[LoJ,PtnyT,psr],[IvOR],[IvOR,psr],[IvOR,PtnyT],[IvOR,PtnyT,psr],[IvOR,LoJ],[IvOR,LoJ,psr],[IvOR,LoJ,PtnyT],[IvOR,LoJ,PtnyT,psr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4114() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","EI","hEbZ","BJP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BJP],[hEbZ],[hEbZ,BJP],[EI],[EI,BJP],[EI,hEbZ],[EI,hEbZ,BJP],[q],[q,BJP],[q,hEbZ],[q,hEbZ,BJP],[q,EI],[q,EI,BJP],[q,EI,hEbZ],[q,EI,hEbZ,BJP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4115() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ai")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ai]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4116() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HxRzT","nQ","gl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gl],[nQ],[nQ,gl],[HxRzT],[HxRzT,gl],[HxRzT,nQ],[HxRzT,nQ,gl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4117() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","OSlEc","UMaPk","Jx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jx],[UMaPk],[UMaPk,Jx],[OSlEc],[OSlEc,Jx],[OSlEc,UMaPk],[OSlEc,UMaPk,Jx],[E],[E,Jx],[E,UMaPk],[E,UMaPk,Jx],[E,OSlEc],[E,OSlEc,Jx],[E,OSlEc,UMaPk],[E,OSlEc,UMaPk,Jx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4118() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","oTFB","ch")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ch],[oTFB],[oTFB,ch],[B],[B,ch],[B,oTFB],[B,oTFB,ch]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4119() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4120() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PA","Kt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kt],[PA],[PA,Kt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4121() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","ZqF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZqF],[b],[b,ZqF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4122() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EFx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EFx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4123() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4124() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZFbN","CBJwI","bFF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bFF],[CBJwI],[CBJwI,bFF],[ZFbN],[ZFbN,bFF],[ZFbN,CBJwI],[ZFbN,CBJwI,bFF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4125() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","jO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jO],[c],[c,jO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4126() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AVXYp","pmFL","HaQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HaQ],[pmFL],[pmFL,HaQ],[AVXYp],[AVXYp,HaQ],[AVXYp,pmFL],[AVXYp,pmFL,HaQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4127() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vV","npipL","NIR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NIR],[npipL],[npipL,NIR],[vV],[vV,NIR],[vV,npipL],[vV,npipL,NIR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4128() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qmEp","FROIm","BuxLx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BuxLx],[FROIm],[FROIm,BuxLx],[qmEp],[qmEp,BuxLx],[qmEp,FROIm],[qmEp,FROIm,BuxLx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4129() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cC","mrU","zEzQ","kyz","VymQb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VymQb],[kyz],[kyz,VymQb],[zEzQ],[zEzQ,VymQb],[zEzQ,kyz],[zEzQ,kyz,VymQb],[mrU],[mrU,VymQb],[mrU,kyz],[mrU,kyz,VymQb],[mrU,zEzQ],[mrU,zEzQ,VymQb],[mrU,zEzQ,kyz],[mrU,zEzQ,kyz,VymQb],[cC],[cC,VymQb],[cC,kyz],[cC,kyz,VymQb],[cC,zEzQ],[cC,zEzQ,VymQb],[cC,zEzQ,kyz],[cC,zEzQ,kyz,VymQb],[cC,mrU],[cC,mrU,VymQb],[cC,mrU,kyz],[cC,mrU,kyz,VymQb],[cC,mrU,zEzQ],[cC,mrU,zEzQ,VymQb],[cC,mrU,zEzQ,kyz],[cC,mrU,zEzQ,kyz,VymQb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4130() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FZfTx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FZfTx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4131() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BXUj","HpDnD","l","bFYx","gXwCg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gXwCg],[bFYx],[bFYx,gXwCg],[l],[l,gXwCg],[l,bFYx],[l,bFYx,gXwCg],[HpDnD],[HpDnD,gXwCg],[HpDnD,bFYx],[HpDnD,bFYx,gXwCg],[HpDnD,l],[HpDnD,l,gXwCg],[HpDnD,l,bFYx],[HpDnD,l,bFYx,gXwCg],[BXUj],[BXUj,gXwCg],[BXUj,bFYx],[BXUj,bFYx,gXwCg],[BXUj,l],[BXUj,l,gXwCg],[BXUj,l,bFYx],[BXUj,l,bFYx,gXwCg],[BXUj,HpDnD],[BXUj,HpDnD,gXwCg],[BXUj,HpDnD,bFYx],[BXUj,HpDnD,bFYx,gXwCg],[BXUj,HpDnD,l],[BXUj,HpDnD,l,gXwCg],[BXUj,HpDnD,l,bFYx],[BXUj,HpDnD,l,bFYx,gXwCg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4132() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cyFrO","dSTi","xot","rkuaJ","Utn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Utn],[rkuaJ],[rkuaJ,Utn],[xot],[xot,Utn],[xot,rkuaJ],[xot,rkuaJ,Utn],[dSTi],[dSTi,Utn],[dSTi,rkuaJ],[dSTi,rkuaJ,Utn],[dSTi,xot],[dSTi,xot,Utn],[dSTi,xot,rkuaJ],[dSTi,xot,rkuaJ,Utn],[cyFrO],[cyFrO,Utn],[cyFrO,rkuaJ],[cyFrO,rkuaJ,Utn],[cyFrO,xot],[cyFrO,xot,Utn],[cyFrO,xot,rkuaJ],[cyFrO,xot,rkuaJ,Utn],[cyFrO,dSTi],[cyFrO,dSTi,Utn],[cyFrO,dSTi,rkuaJ],[cyFrO,dSTi,rkuaJ,Utn],[cyFrO,dSTi,xot],[cyFrO,dSTi,xot,Utn],[cyFrO,dSTi,xot,rkuaJ],[cyFrO,dSTi,xot,rkuaJ,Utn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4133() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","f","yNtB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yNtB],[f],[f,yNtB],[t],[t,yNtB],[t,f],[t,f,yNtB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4134() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","t","Hcc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hcc],[t],[t,Hcc],[b],[b,Hcc],[b,t],[b,t,Hcc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4135() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rgz","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[rgz],[rgz,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4136() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pq","kNqGF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kNqGF],[Pq],[Pq,kNqGF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4137() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pd","ARx","RDm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RDm],[ARx],[ARx,RDm],[Pd],[Pd,RDm],[Pd,ARx],[Pd,ARx,RDm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4138() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bwk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Bwk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4139() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DRY","box")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[box],[DRY],[DRY,box]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4140() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PBHj","DbTOx","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[DbTOx],[DbTOx,w],[PBHj],[PBHj,w],[PBHj,DbTOx],[PBHj,DbTOx,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4141() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jz","QFu","D","pPW","MaXwI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MaXwI],[pPW],[pPW,MaXwI],[D],[D,MaXwI],[D,pPW],[D,pPW,MaXwI],[QFu],[QFu,MaXwI],[QFu,pPW],[QFu,pPW,MaXwI],[QFu,D],[QFu,D,MaXwI],[QFu,D,pPW],[QFu,D,pPW,MaXwI],[jz],[jz,MaXwI],[jz,pPW],[jz,pPW,MaXwI],[jz,D],[jz,D,MaXwI],[jz,D,pPW],[jz,D,pPW,MaXwI],[jz,QFu],[jz,QFu,MaXwI],[jz,QFu,pPW],[jz,QFu,pPW,MaXwI],[jz,QFu,D],[jz,QFu,D,MaXwI],[jz,QFu,D,pPW],[jz,QFu,D,pPW,MaXwI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4142() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bnO","AoR","GRjF","zI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zI],[GRjF],[GRjF,zI],[AoR],[AoR,zI],[AoR,GRjF],[AoR,GRjF,zI],[bnO],[bnO,zI],[bnO,GRjF],[bnO,GRjF,zI],[bnO,AoR],[bnO,AoR,zI],[bnO,AoR,GRjF],[bnO,AoR,GRjF,zI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4143() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4144() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LlPP","LIx","ec")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ec],[LIx],[LIx,ec],[LlPP],[LlPP,ec],[LlPP,LIx],[LlPP,LIx,ec]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4145() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","S","jB","Me")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Me],[jB],[jB,Me],[S],[S,Me],[S,jB],[S,jB,Me],[p],[p,Me],[p,jB],[p,jB,Me],[p,S],[p,S,Me],[p,S,jB],[p,S,jB,Me]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4146() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wyfCj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wyfCj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4147() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","MVMw","FIuj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FIuj],[MVMw],[MVMw,FIuj],[A],[A,FIuj],[A,MVMw],[A,MVMw,FIuj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4148() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DX","FozNS","quir","VHfkl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VHfkl],[quir],[quir,VHfkl],[FozNS],[FozNS,VHfkl],[FozNS,quir],[FozNS,quir,VHfkl],[DX],[DX,VHfkl],[DX,quir],[DX,quir,VHfkl],[DX,FozNS],[DX,FozNS,VHfkl],[DX,FozNS,quir],[DX,FozNS,quir,VHfkl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4149() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Nnj","Ap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ap],[Nnj],[Nnj,Ap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4150() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lEJ","Cld","eygv","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[eygv],[eygv,l],[Cld],[Cld,l],[Cld,eygv],[Cld,eygv,l],[lEJ],[lEJ,l],[lEJ,eygv],[lEJ,eygv,l],[lEJ,Cld],[lEJ,Cld,l],[lEJ,Cld,eygv],[lEJ,Cld,eygv,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4151() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OeRs","QZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QZ],[OeRs],[OeRs,QZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4152() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "j","eFpR","kX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kX],[eFpR],[eFpR,kX],[j],[j,kX],[j,eFpR],[j,eFpR,kX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4153() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sJh","iPiT","VY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VY],[iPiT],[iPiT,VY],[sJh],[sJh,VY],[sJh,iPiT],[sJh,iPiT,VY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4154() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vUuh","Tbi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tbi],[vUuh],[vUuh,Tbi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4155() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BKgEX","maj","L","PN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PN],[L],[L,PN],[maj],[maj,PN],[maj,L],[maj,L,PN],[BKgEX],[BKgEX,PN],[BKgEX,L],[BKgEX,L,PN],[BKgEX,maj],[BKgEX,maj,PN],[BKgEX,maj,L],[BKgEX,maj,L,PN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4156() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CWWQ","ln","vYfD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vYfD],[ln],[ln,vYfD],[CWWQ],[CWWQ,vYfD],[CWWQ,ln],[CWWQ,ln,vYfD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4157() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hhUkU","jYRW","oL","IlQJ","sq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sq],[IlQJ],[IlQJ,sq],[oL],[oL,sq],[oL,IlQJ],[oL,IlQJ,sq],[jYRW],[jYRW,sq],[jYRW,IlQJ],[jYRW,IlQJ,sq],[jYRW,oL],[jYRW,oL,sq],[jYRW,oL,IlQJ],[jYRW,oL,IlQJ,sq],[hhUkU],[hhUkU,sq],[hhUkU,IlQJ],[hhUkU,IlQJ,sq],[hhUkU,oL],[hhUkU,oL,sq],[hhUkU,oL,IlQJ],[hhUkU,oL,IlQJ,sq],[hhUkU,jYRW],[hhUkU,jYRW,sq],[hhUkU,jYRW,IlQJ],[hhUkU,jYRW,IlQJ,sq],[hhUkU,jYRW,oL],[hhUkU,jYRW,oL,sq],[hhUkU,jYRW,oL,IlQJ],[hhUkU,jYRW,oL,IlQJ,sq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4158() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JtYA","z","Nj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nj],[z],[z,Nj],[JtYA],[JtYA,Nj],[JtYA,z],[JtYA,z,Nj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4159() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rURdE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rURdE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4160() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sGgz","EUDQZ","I","ESy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ESy],[I],[I,ESy],[EUDQZ],[EUDQZ,ESy],[EUDQZ,I],[EUDQZ,I,ESy],[sGgz],[sGgz,ESy],[sGgz,I],[sGgz,I,ESy],[sGgz,EUDQZ],[sGgz,EUDQZ,ESy],[sGgz,EUDQZ,I],[sGgz,EUDQZ,I,ESy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4161() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PuZl","U","GYsW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GYsW],[U],[U,GYsW],[PuZl],[PuZl,GYsW],[PuZl,U],[PuZl,U,GYsW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4162() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[R],[R,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4163() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GG","eyI","zVHX","BSWo","Yqp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yqp],[BSWo],[BSWo,Yqp],[zVHX],[zVHX,Yqp],[zVHX,BSWo],[zVHX,BSWo,Yqp],[eyI],[eyI,Yqp],[eyI,BSWo],[eyI,BSWo,Yqp],[eyI,zVHX],[eyI,zVHX,Yqp],[eyI,zVHX,BSWo],[eyI,zVHX,BSWo,Yqp],[GG],[GG,Yqp],[GG,BSWo],[GG,BSWo,Yqp],[GG,zVHX],[GG,zVHX,Yqp],[GG,zVHX,BSWo],[GG,zVHX,BSWo,Yqp],[GG,eyI],[GG,eyI,Yqp],[GG,eyI,BSWo],[GG,eyI,BSWo,Yqp],[GG,eyI,zVHX],[GG,eyI,zVHX,Yqp],[GG,eyI,zVHX,BSWo],[GG,eyI,zVHX,BSWo,Yqp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4164() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4165() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hZhy","T","HgJEd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HgJEd],[T],[T,HgJEd],[hZhy],[hZhy,HgJEd],[hZhy,T],[hZhy,T,HgJEd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4166() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SfMM","vZ","u")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[u],[vZ],[vZ,u],[SfMM],[SfMM,u],[SfMM,vZ],[SfMM,vZ,u]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4167() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sCej","KbYD","kN","Ji")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ji],[kN],[kN,Ji],[KbYD],[KbYD,Ji],[KbYD,kN],[KbYD,kN,Ji],[sCej],[sCej,Ji],[sCej,kN],[sCej,kN,Ji],[sCej,KbYD],[sCej,KbYD,Ji],[sCej,KbYD,kN],[sCej,KbYD,kN,Ji]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4168() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fmn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fmn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4169() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vp","Jh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jh],[vp],[vp,Jh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4170() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hsbK","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[hsbK],[hsbK,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4171() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PIam")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PIam]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4172() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PZ","yx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yx],[PZ],[PZ,yx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4173() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TF","OC","l","HURgr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HURgr],[l],[l,HURgr],[OC],[OC,HURgr],[OC,l],[OC,l,HURgr],[TF],[TF,HURgr],[TF,l],[TF,l,HURgr],[TF,OC],[TF,OC,HURgr],[TF,OC,l],[TF,OC,l,HURgr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4174() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nWjiy","mBcnq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mBcnq],[nWjiy],[nWjiy,mBcnq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4175() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CRP","kCrAZ","JLNAj","QnwPc","qatMk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qatMk],[QnwPc],[QnwPc,qatMk],[JLNAj],[JLNAj,qatMk],[JLNAj,QnwPc],[JLNAj,QnwPc,qatMk],[kCrAZ],[kCrAZ,qatMk],[kCrAZ,QnwPc],[kCrAZ,QnwPc,qatMk],[kCrAZ,JLNAj],[kCrAZ,JLNAj,qatMk],[kCrAZ,JLNAj,QnwPc],[kCrAZ,JLNAj,QnwPc,qatMk],[CRP],[CRP,qatMk],[CRP,QnwPc],[CRP,QnwPc,qatMk],[CRP,JLNAj],[CRP,JLNAj,qatMk],[CRP,JLNAj,QnwPc],[CRP,JLNAj,QnwPc,qatMk],[CRP,kCrAZ],[CRP,kCrAZ,qatMk],[CRP,kCrAZ,QnwPc],[CRP,kCrAZ,QnwPc,qatMk],[CRP,kCrAZ,JLNAj],[CRP,kCrAZ,JLNAj,qatMk],[CRP,kCrAZ,JLNAj,QnwPc],[CRP,kCrAZ,JLNAj,QnwPc,qatMk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4176() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","BgN","Hp","EhpNV","HuYZo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HuYZo],[EhpNV],[EhpNV,HuYZo],[Hp],[Hp,HuYZo],[Hp,EhpNV],[Hp,EhpNV,HuYZo],[BgN],[BgN,HuYZo],[BgN,EhpNV],[BgN,EhpNV,HuYZo],[BgN,Hp],[BgN,Hp,HuYZo],[BgN,Hp,EhpNV],[BgN,Hp,EhpNV,HuYZo],[c],[c,HuYZo],[c,EhpNV],[c,EhpNV,HuYZo],[c,Hp],[c,Hp,HuYZo],[c,Hp,EhpNV],[c,Hp,EhpNV,HuYZo],[c,BgN],[c,BgN,HuYZo],[c,BgN,EhpNV],[c,BgN,EhpNV,HuYZo],[c,BgN,Hp],[c,BgN,Hp,HuYZo],[c,BgN,Hp,EhpNV],[c,BgN,Hp,EhpNV,HuYZo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4177() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "amv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[amv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4178() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bQWnA","ads","GiZNn","HDB","zKY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zKY],[HDB],[HDB,zKY],[GiZNn],[GiZNn,zKY],[GiZNn,HDB],[GiZNn,HDB,zKY],[ads],[ads,zKY],[ads,HDB],[ads,HDB,zKY],[ads,GiZNn],[ads,GiZNn,zKY],[ads,GiZNn,HDB],[ads,GiZNn,HDB,zKY],[bQWnA],[bQWnA,zKY],[bQWnA,HDB],[bQWnA,HDB,zKY],[bQWnA,GiZNn],[bQWnA,GiZNn,zKY],[bQWnA,GiZNn,HDB],[bQWnA,GiZNn,HDB,zKY],[bQWnA,ads],[bQWnA,ads,zKY],[bQWnA,ads,HDB],[bQWnA,ads,HDB,zKY],[bQWnA,ads,GiZNn],[bQWnA,ads,GiZNn,zKY],[bQWnA,ads,GiZNn,HDB],[bQWnA,ads,GiZNn,HDB,zKY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4179() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lINJv","dYVU","GB","dyQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dyQ],[GB],[GB,dyQ],[dYVU],[dYVU,dyQ],[dYVU,GB],[dYVU,GB,dyQ],[lINJv],[lINJv,dyQ],[lINJv,GB],[lINJv,GB,dyQ],[lINJv,dYVU],[lINJv,dYVU,dyQ],[lINJv,dYVU,GB],[lINJv,dYVU,GB,dyQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4180() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eVjG","tX","oE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oE],[tX],[tX,oE],[eVjG],[eVjG,oE],[eVjG,tX],[eVjG,tX,oE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4181() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","ls","VD","zY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zY],[VD],[VD,zY],[ls],[ls,zY],[ls,VD],[ls,VD,zY],[f],[f,zY],[f,VD],[f,VD,zY],[f,ls],[f,ls,zY],[f,ls,VD],[f,ls,VD,zY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4182() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gpCc","iC","k","QO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QO],[k],[k,QO],[iC],[iC,QO],[iC,k],[iC,k,QO],[gpCc],[gpCc,QO],[gpCc,k],[gpCc,k,QO],[gpCc,iC],[gpCc,iC,QO],[gpCc,iC,k],[gpCc,iC,k,QO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4183() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","WD","Nm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nm],[WD],[WD,Nm],[a],[a,Nm],[a,WD],[a,WD,Nm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4184() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Wy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4185() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4186() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Btr","nO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nO],[Btr],[Btr,nO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4187() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","ohK","PU","Zzcc","yJQD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yJQD],[Zzcc],[Zzcc,yJQD],[PU],[PU,yJQD],[PU,Zzcc],[PU,Zzcc,yJQD],[ohK],[ohK,yJQD],[ohK,Zzcc],[ohK,Zzcc,yJQD],[ohK,PU],[ohK,PU,yJQD],[ohK,PU,Zzcc],[ohK,PU,Zzcc,yJQD],[R],[R,yJQD],[R,Zzcc],[R,Zzcc,yJQD],[R,PU],[R,PU,yJQD],[R,PU,Zzcc],[R,PU,Zzcc,yJQD],[R,ohK],[R,ohK,yJQD],[R,ohK,Zzcc],[R,ohK,Zzcc,yJQD],[R,ohK,PU],[R,ohK,PU,yJQD],[R,ohK,PU,Zzcc],[R,ohK,PU,Zzcc,yJQD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4188() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4189() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qa","bvCtb","grEcP","kjZ","Kpfz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kpfz],[kjZ],[kjZ,Kpfz],[grEcP],[grEcP,Kpfz],[grEcP,kjZ],[grEcP,kjZ,Kpfz],[bvCtb],[bvCtb,Kpfz],[bvCtb,kjZ],[bvCtb,kjZ,Kpfz],[bvCtb,grEcP],[bvCtb,grEcP,Kpfz],[bvCtb,grEcP,kjZ],[bvCtb,grEcP,kjZ,Kpfz],[qa],[qa,Kpfz],[qa,kjZ],[qa,kjZ,Kpfz],[qa,grEcP],[qa,grEcP,Kpfz],[qa,grEcP,kjZ],[qa,grEcP,kjZ,Kpfz],[qa,bvCtb],[qa,bvCtb,Kpfz],[qa,bvCtb,kjZ],[qa,bvCtb,kjZ,Kpfz],[qa,bvCtb,grEcP],[qa,bvCtb,grEcP,Kpfz],[qa,bvCtb,grEcP,kjZ],[qa,bvCtb,grEcP,kjZ,Kpfz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4190() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VH","Qd","cGjvb","FFg","FEkyj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FEkyj],[FFg],[FFg,FEkyj],[cGjvb],[cGjvb,FEkyj],[cGjvb,FFg],[cGjvb,FFg,FEkyj],[Qd],[Qd,FEkyj],[Qd,FFg],[Qd,FFg,FEkyj],[Qd,cGjvb],[Qd,cGjvb,FEkyj],[Qd,cGjvb,FFg],[Qd,cGjvb,FFg,FEkyj],[VH],[VH,FEkyj],[VH,FFg],[VH,FFg,FEkyj],[VH,cGjvb],[VH,cGjvb,FEkyj],[VH,cGjvb,FFg],[VH,cGjvb,FFg,FEkyj],[VH,Qd],[VH,Qd,FEkyj],[VH,Qd,FFg],[VH,Qd,FFg,FEkyj],[VH,Qd,cGjvb],[VH,Qd,cGjvb,FEkyj],[VH,Qd,cGjvb,FFg],[VH,Qd,cGjvb,FFg,FEkyj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4191() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jWnS","GK","rsmL","aIDP","NlCn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NlCn],[aIDP],[aIDP,NlCn],[rsmL],[rsmL,NlCn],[rsmL,aIDP],[rsmL,aIDP,NlCn],[GK],[GK,NlCn],[GK,aIDP],[GK,aIDP,NlCn],[GK,rsmL],[GK,rsmL,NlCn],[GK,rsmL,aIDP],[GK,rsmL,aIDP,NlCn],[jWnS],[jWnS,NlCn],[jWnS,aIDP],[jWnS,aIDP,NlCn],[jWnS,rsmL],[jWnS,rsmL,NlCn],[jWnS,rsmL,aIDP],[jWnS,rsmL,aIDP,NlCn],[jWnS,GK],[jWnS,GK,NlCn],[jWnS,GK,aIDP],[jWnS,GK,aIDP,NlCn],[jWnS,GK,rsmL],[jWnS,GK,rsmL,NlCn],[jWnS,GK,rsmL,aIDP],[jWnS,GK,rsmL,aIDP,NlCn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4192() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qfvh","hJ","tCgGS","j","SkfKu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SkfKu],[j],[j,SkfKu],[tCgGS],[tCgGS,SkfKu],[tCgGS,j],[tCgGS,j,SkfKu],[hJ],[hJ,SkfKu],[hJ,j],[hJ,j,SkfKu],[hJ,tCgGS],[hJ,tCgGS,SkfKu],[hJ,tCgGS,j],[hJ,tCgGS,j,SkfKu],[Qfvh],[Qfvh,SkfKu],[Qfvh,j],[Qfvh,j,SkfKu],[Qfvh,tCgGS],[Qfvh,tCgGS,SkfKu],[Qfvh,tCgGS,j],[Qfvh,tCgGS,j,SkfKu],[Qfvh,hJ],[Qfvh,hJ,SkfKu],[Qfvh,hJ,j],[Qfvh,hJ,j,SkfKu],[Qfvh,hJ,tCgGS],[Qfvh,hJ,tCgGS,SkfKu],[Qfvh,hJ,tCgGS,j],[Qfvh,hJ,tCgGS,j,SkfKu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4193() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PSzCU","K","vr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vr],[K],[K,vr],[PSzCU],[PSzCU,vr],[PSzCU,K],[PSzCU,K,vr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4194() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VVBWg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VVBWg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4195() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4196() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fX","QDpi","ePU","Whm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Whm],[ePU],[ePU,Whm],[QDpi],[QDpi,Whm],[QDpi,ePU],[QDpi,ePU,Whm],[fX],[fX,Whm],[fX,ePU],[fX,ePU,Whm],[fX,QDpi],[fX,QDpi,Whm],[fX,QDpi,ePU],[fX,QDpi,ePU,Whm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4197() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hz","yiWfl","Qz","n","BP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BP],[n],[n,BP],[Qz],[Qz,BP],[Qz,n],[Qz,n,BP],[yiWfl],[yiWfl,BP],[yiWfl,n],[yiWfl,n,BP],[yiWfl,Qz],[yiWfl,Qz,BP],[yiWfl,Qz,n],[yiWfl,Qz,n,BP],[Hz],[Hz,BP],[Hz,n],[Hz,n,BP],[Hz,Qz],[Hz,Qz,BP],[Hz,Qz,n],[Hz,Qz,n,BP],[Hz,yiWfl],[Hz,yiWfl,BP],[Hz,yiWfl,n],[Hz,yiWfl,n,BP],[Hz,yiWfl,Qz],[Hz,yiWfl,Qz,BP],[Hz,yiWfl,Qz,n],[Hz,yiWfl,Qz,n,BP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4198() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rDnp","RB","JqgtT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JqgtT],[RB],[RB,JqgtT],[rDnp],[rDnp,JqgtT],[rDnp,RB],[rDnp,RB,JqgtT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4199() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[C]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4200() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UH","Ma","UgL","WD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WD],[UgL],[UgL,WD],[Ma],[Ma,WD],[Ma,UgL],[Ma,UgL,WD],[UH],[UH,WD],[UH,UgL],[UH,UgL,WD],[UH,Ma],[UH,Ma,WD],[UH,Ma,UgL],[UH,Ma,UgL,WD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4201() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sNeq","pt","tXmQQ","sxr","CEfe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CEfe],[sxr],[sxr,CEfe],[tXmQQ],[tXmQQ,CEfe],[tXmQQ,sxr],[tXmQQ,sxr,CEfe],[pt],[pt,CEfe],[pt,sxr],[pt,sxr,CEfe],[pt,tXmQQ],[pt,tXmQQ,CEfe],[pt,tXmQQ,sxr],[pt,tXmQQ,sxr,CEfe],[sNeq],[sNeq,CEfe],[sNeq,sxr],[sNeq,sxr,CEfe],[sNeq,tXmQQ],[sNeq,tXmQQ,CEfe],[sNeq,tXmQQ,sxr],[sNeq,tXmQQ,sxr,CEfe],[sNeq,pt],[sNeq,pt,CEfe],[sNeq,pt,sxr],[sNeq,pt,sxr,CEfe],[sNeq,pt,tXmQQ],[sNeq,pt,tXmQQ,CEfe],[sNeq,pt,tXmQQ,sxr],[sNeq,pt,tXmQQ,sxr,CEfe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4202() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ay","kw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kw],[Ay],[Ay,kw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4203() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KXtc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KXtc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4204() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RdR","bGYd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bGYd],[RdR],[RdR,bGYd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4205() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FkDiv","NlScA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NlScA],[FkDiv],[FkDiv,NlScA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4206() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "At","ZHPa","Tq","PhBe","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[PhBe],[PhBe,n],[Tq],[Tq,n],[Tq,PhBe],[Tq,PhBe,n],[ZHPa],[ZHPa,n],[ZHPa,PhBe],[ZHPa,PhBe,n],[ZHPa,Tq],[ZHPa,Tq,n],[ZHPa,Tq,PhBe],[ZHPa,Tq,PhBe,n],[At],[At,n],[At,PhBe],[At,PhBe,n],[At,Tq],[At,Tq,n],[At,Tq,PhBe],[At,Tq,PhBe,n],[At,ZHPa],[At,ZHPa,n],[At,ZHPa,PhBe],[At,ZHPa,PhBe,n],[At,ZHPa,Tq],[At,ZHPa,Tq,n],[At,ZHPa,Tq,PhBe],[At,ZHPa,Tq,PhBe,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4207() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gp","gq","buhOq","RIuf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RIuf],[buhOq],[buhOq,RIuf],[gq],[gq,RIuf],[gq,buhOq],[gq,buhOq,RIuf],[gp],[gp,RIuf],[gp,buhOq],[gp,buhOq,RIuf],[gp,gq],[gp,gq,RIuf],[gp,gq,buhOq],[gp,gq,buhOq,RIuf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4208() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Trbq","bp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bp],[Trbq],[Trbq,bp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4209() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zZ","fmg","IX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IX],[fmg],[fmg,IX],[zZ],[zZ,IX],[zZ,fmg],[zZ,fmg,IX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4210() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Vg","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[Vg],[Vg,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4211() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CZ","BAar")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BAar],[CZ],[CZ,BAar]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4212() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mXJun","fJWVz","bN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bN],[fJWVz],[fJWVz,bN],[mXJun],[mXJun,bN],[mXJun,fJWVz],[mXJun,fJWVz,bN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4213() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JJ","Hzg","GRkio","rpj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rpj],[GRkio],[GRkio,rpj],[Hzg],[Hzg,rpj],[Hzg,GRkio],[Hzg,GRkio,rpj],[JJ],[JJ,rpj],[JJ,GRkio],[JJ,GRkio,rpj],[JJ,Hzg],[JJ,Hzg,rpj],[JJ,Hzg,GRkio],[JJ,Hzg,GRkio,rpj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4214() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xgkj","tbFTC","YfKws")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YfKws],[tbFTC],[tbFTC,YfKws],[xgkj],[xgkj,YfKws],[xgkj,tbFTC],[xgkj,tbFTC,YfKws]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4215() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4216() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SAoJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SAoJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4217() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eWWl","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[eWWl],[eWWl,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4218() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4219() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Sos")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sos]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4220() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "emZO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[emZO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4221() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G","tQG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tQG],[G],[G,tQG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4222() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZZ","A","FiNyc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FiNyc],[A],[A,FiNyc],[ZZ],[ZZ,FiNyc],[ZZ,A],[ZZ,A,FiNyc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4223() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hcdjg","t")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[t],[Hcdjg],[Hcdjg,t]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4224() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PMo","mzor","vKzTT","ZTc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZTc],[vKzTT],[vKzTT,ZTc],[mzor],[mzor,ZTc],[mzor,vKzTT],[mzor,vKzTT,ZTc],[PMo],[PMo,ZTc],[PMo,vKzTT],[PMo,vKzTT,ZTc],[PMo,mzor],[PMo,mzor,ZTc],[PMo,mzor,vKzTT],[PMo,mzor,vKzTT,ZTc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4225() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "whE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[whE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4226() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HTrL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HTrL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4227() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","FShR","Ak","HyhFs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HyhFs],[Ak],[Ak,HyhFs],[FShR],[FShR,HyhFs],[FShR,Ak],[FShR,Ak,HyhFs],[f],[f,HyhFs],[f,Ak],[f,Ak,HyhFs],[f,FShR],[f,FShR,HyhFs],[f,FShR,Ak],[f,FShR,Ak,HyhFs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4228() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Oam")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Oam]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4229() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UYwu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UYwu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4230() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "puSe","uh","s","Qy","HFRDN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HFRDN],[Qy],[Qy,HFRDN],[s],[s,HFRDN],[s,Qy],[s,Qy,HFRDN],[uh],[uh,HFRDN],[uh,Qy],[uh,Qy,HFRDN],[uh,s],[uh,s,HFRDN],[uh,s,Qy],[uh,s,Qy,HFRDN],[puSe],[puSe,HFRDN],[puSe,Qy],[puSe,Qy,HFRDN],[puSe,s],[puSe,s,HFRDN],[puSe,s,Qy],[puSe,s,Qy,HFRDN],[puSe,uh],[puSe,uh,HFRDN],[puSe,uh,Qy],[puSe,uh,Qy,HFRDN],[puSe,uh,s],[puSe,uh,s,HFRDN],[puSe,uh,s,Qy],[puSe,uh,s,Qy,HFRDN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4231() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WJd","Ef","r","Jc","XUL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XUL],[Jc],[Jc,XUL],[r],[r,XUL],[r,Jc],[r,Jc,XUL],[Ef],[Ef,XUL],[Ef,Jc],[Ef,Jc,XUL],[Ef,r],[Ef,r,XUL],[Ef,r,Jc],[Ef,r,Jc,XUL],[WJd],[WJd,XUL],[WJd,Jc],[WJd,Jc,XUL],[WJd,r],[WJd,r,XUL],[WJd,r,Jc],[WJd,r,Jc,XUL],[WJd,Ef],[WJd,Ef,XUL],[WJd,Ef,Jc],[WJd,Ef,Jc,XUL],[WJd,Ef,r],[WJd,Ef,r,XUL],[WJd,Ef,r,Jc],[WJd,Ef,r,Jc,XUL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4232() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tDAw","rSf","qv","nkBN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nkBN],[qv],[qv,nkBN],[rSf],[rSf,nkBN],[rSf,qv],[rSf,qv,nkBN],[tDAw],[tDAw,nkBN],[tDAw,qv],[tDAw,qv,nkBN],[tDAw,rSf],[tDAw,rSf,nkBN],[tDAw,rSf,qv],[tDAw,rSf,qv,nkBN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4233() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qGx","VlOFj","nT","k","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[k],[k,N],[nT],[nT,N],[nT,k],[nT,k,N],[VlOFj],[VlOFj,N],[VlOFj,k],[VlOFj,k,N],[VlOFj,nT],[VlOFj,nT,N],[VlOFj,nT,k],[VlOFj,nT,k,N],[qGx],[qGx,N],[qGx,k],[qGx,k,N],[qGx,nT],[qGx,nT,N],[qGx,nT,k],[qGx,nT,k,N],[qGx,VlOFj],[qGx,VlOFj,N],[qGx,VlOFj,k],[qGx,VlOFj,k,N],[qGx,VlOFj,nT],[qGx,VlOFj,nT,N],[qGx,VlOFj,nT,k],[qGx,VlOFj,nT,k,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4234() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LSYe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LSYe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4235() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","ArMA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ArMA],[r],[r,ArMA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4236() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eHoKR","RYHCA","UAW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UAW],[RYHCA],[RYHCA,UAW],[eHoKR],[eHoKR,UAW],[eHoKR,RYHCA],[eHoKR,RYHCA,UAW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4237() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XTN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XTN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4238() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AHEhu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AHEhu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4239() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4240() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WqFZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WqFZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4241() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WtXH","gcSPJ","WZqQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WZqQ],[gcSPJ],[gcSPJ,WZqQ],[WtXH],[WtXH,WZqQ],[WtXH,gcSPJ],[WtXH,gcSPJ,WZqQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4242() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AtiE","Guv","qZa","LH","gzUUn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gzUUn],[LH],[LH,gzUUn],[qZa],[qZa,gzUUn],[qZa,LH],[qZa,LH,gzUUn],[Guv],[Guv,gzUUn],[Guv,LH],[Guv,LH,gzUUn],[Guv,qZa],[Guv,qZa,gzUUn],[Guv,qZa,LH],[Guv,qZa,LH,gzUUn],[AtiE],[AtiE,gzUUn],[AtiE,LH],[AtiE,LH,gzUUn],[AtiE,qZa],[AtiE,qZa,gzUUn],[AtiE,qZa,LH],[AtiE,qZa,LH,gzUUn],[AtiE,Guv],[AtiE,Guv,gzUUn],[AtiE,Guv,LH],[AtiE,Guv,LH,gzUUn],[AtiE,Guv,qZa],[AtiE,Guv,qZa,gzUUn],[AtiE,Guv,qZa,LH],[AtiE,Guv,qZa,LH,gzUUn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4243() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qUG","XyU","NNt","Drk","icTHV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[icTHV],[Drk],[Drk,icTHV],[NNt],[NNt,icTHV],[NNt,Drk],[NNt,Drk,icTHV],[XyU],[XyU,icTHV],[XyU,Drk],[XyU,Drk,icTHV],[XyU,NNt],[XyU,NNt,icTHV],[XyU,NNt,Drk],[XyU,NNt,Drk,icTHV],[qUG],[qUG,icTHV],[qUG,Drk],[qUG,Drk,icTHV],[qUG,NNt],[qUG,NNt,icTHV],[qUG,NNt,Drk],[qUG,NNt,Drk,icTHV],[qUG,XyU],[qUG,XyU,icTHV],[qUG,XyU,Drk],[qUG,XyU,Drk,icTHV],[qUG,XyU,NNt],[qUG,XyU,NNt,icTHV],[qUG,XyU,NNt,Drk],[qUG,XyU,NNt,Drk,icTHV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4244() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MDcb","lg","TEUCM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TEUCM],[lg],[lg,TEUCM],[MDcb],[MDcb,TEUCM],[MDcb,lg],[MDcb,lg,TEUCM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4245() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dd","MH","eQlLu","gf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gf],[eQlLu],[eQlLu,gf],[MH],[MH,gf],[MH,eQlLu],[MH,eQlLu,gf],[dd],[dd,gf],[dd,eQlLu],[dd,eQlLu,gf],[dd,MH],[dd,MH,gf],[dd,MH,eQlLu],[dd,MH,eQlLu,gf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4246() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OsmS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OsmS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4247() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gxb","hVyNn","mxdc","mBP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mBP],[mxdc],[mxdc,mBP],[hVyNn],[hVyNn,mBP],[hVyNn,mxdc],[hVyNn,mxdc,mBP],[gxb],[gxb,mBP],[gxb,mxdc],[gxb,mxdc,mBP],[gxb,hVyNn],[gxb,hVyNn,mBP],[gxb,hVyNn,mxdc],[gxb,hVyNn,mxdc,mBP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4248() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OtHNy","SF","BzCS","YdZo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YdZo],[BzCS],[BzCS,YdZo],[SF],[SF,YdZo],[SF,BzCS],[SF,BzCS,YdZo],[OtHNy],[OtHNy,YdZo],[OtHNy,BzCS],[OtHNy,BzCS,YdZo],[OtHNy,SF],[OtHNy,SF,YdZo],[OtHNy,SF,BzCS],[OtHNy,SF,BzCS,YdZo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4249() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G","j","iIJ","M","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[M],[M,N],[iIJ],[iIJ,N],[iIJ,M],[iIJ,M,N],[j],[j,N],[j,M],[j,M,N],[j,iIJ],[j,iIJ,N],[j,iIJ,M],[j,iIJ,M,N],[G],[G,N],[G,M],[G,M,N],[G,iIJ],[G,iIJ,N],[G,iIJ,M],[G,iIJ,M,N],[G,j],[G,j,N],[G,j,M],[G,j,M,N],[G,j,iIJ],[G,j,iIJ,N],[G,j,iIJ,M],[G,j,iIJ,M,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4250() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IGc","u","sl","Sb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sb],[sl],[sl,Sb],[u],[u,Sb],[u,sl],[u,sl,Sb],[IGc],[IGc,Sb],[IGc,sl],[IGc,sl,Sb],[IGc,u],[IGc,u,Sb],[IGc,u,sl],[IGc,u,sl,Sb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4251() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jZ","GFuF","aW","G","PMLEF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PMLEF],[G],[G,PMLEF],[aW],[aW,PMLEF],[aW,G],[aW,G,PMLEF],[GFuF],[GFuF,PMLEF],[GFuF,G],[GFuF,G,PMLEF],[GFuF,aW],[GFuF,aW,PMLEF],[GFuF,aW,G],[GFuF,aW,G,PMLEF],[jZ],[jZ,PMLEF],[jZ,G],[jZ,G,PMLEF],[jZ,aW],[jZ,aW,PMLEF],[jZ,aW,G],[jZ,aW,G,PMLEF],[jZ,GFuF],[jZ,GFuF,PMLEF],[jZ,GFuF,G],[jZ,GFuF,G,PMLEF],[jZ,GFuF,aW],[jZ,GFuF,aW,PMLEF],[jZ,GFuF,aW,G],[jZ,GFuF,aW,G,PMLEF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4252() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zk","KIAS","eYRg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eYRg],[KIAS],[KIAS,eYRg],[Zk],[Zk,eYRg],[Zk,KIAS],[Zk,KIAS,eYRg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4253() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Uoj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uoj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4254() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PT","OCh","HqFzN","ID")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ID],[HqFzN],[HqFzN,ID],[OCh],[OCh,ID],[OCh,HqFzN],[OCh,HqFzN,ID],[PT],[PT,ID],[PT,HqFzN],[PT,HqFzN,ID],[PT,OCh],[PT,OCh,ID],[PT,OCh,HqFzN],[PT,OCh,HqFzN,ID]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4255() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GkD","iKM","JG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JG],[iKM],[iKM,JG],[GkD],[GkD,JG],[GkD,iKM],[GkD,iKM,JG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4256() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wI","G","qjKLo","pFYq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pFYq],[qjKLo],[qjKLo,pFYq],[G],[G,pFYq],[G,qjKLo],[G,qjKLo,pFYq],[wI],[wI,pFYq],[wI,qjKLo],[wI,qjKLo,pFYq],[wI,G],[wI,G,pFYq],[wI,G,qjKLo],[wI,G,qjKLo,pFYq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4257() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4258() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bnL","auMD","yA","Arm","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[Arm],[Arm,n],[yA],[yA,n],[yA,Arm],[yA,Arm,n],[auMD],[auMD,n],[auMD,Arm],[auMD,Arm,n],[auMD,yA],[auMD,yA,n],[auMD,yA,Arm],[auMD,yA,Arm,n],[bnL],[bnL,n],[bnL,Arm],[bnL,Arm,n],[bnL,yA],[bnL,yA,n],[bnL,yA,Arm],[bnL,yA,Arm,n],[bnL,auMD],[bnL,auMD,n],[bnL,auMD,Arm],[bnL,auMD,Arm,n],[bnL,auMD,yA],[bnL,auMD,yA,n],[bnL,auMD,yA,Arm],[bnL,auMD,yA,Arm,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4259() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[e]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4260() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","S","U")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[U],[S],[S,U],[s],[s,U],[s,S],[s,S,U]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4261() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "de","suU","DnG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DnG],[suU],[suU,DnG],[de],[de,DnG],[de,suU],[de,suU,DnG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4262() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","VPz","mIF","sCj","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[sCj],[sCj,n],[mIF],[mIF,n],[mIF,sCj],[mIF,sCj,n],[VPz],[VPz,n],[VPz,sCj],[VPz,sCj,n],[VPz,mIF],[VPz,mIF,n],[VPz,mIF,sCj],[VPz,mIF,sCj,n],[Q],[Q,n],[Q,sCj],[Q,sCj,n],[Q,mIF],[Q,mIF,n],[Q,mIF,sCj],[Q,mIF,sCj,n],[Q,VPz],[Q,VPz,n],[Q,VPz,sCj],[Q,VPz,sCj,n],[Q,VPz,mIF],[Q,VPz,mIF,n],[Q,VPz,mIF,sCj],[Q,VPz,mIF,sCj,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4263() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZmC","hso","SKZIO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SKZIO],[hso],[hso,SKZIO],[ZmC],[ZmC,SKZIO],[ZmC,hso],[ZmC,hso,SKZIO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4264() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qxset","KX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KX],[qxset],[qxset,KX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4265() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4266() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mqY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mqY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4267() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qlaUH","dtKO","fKT","iw","IDy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IDy],[iw],[iw,IDy],[fKT],[fKT,IDy],[fKT,iw],[fKT,iw,IDy],[dtKO],[dtKO,IDy],[dtKO,iw],[dtKO,iw,IDy],[dtKO,fKT],[dtKO,fKT,IDy],[dtKO,fKT,iw],[dtKO,fKT,iw,IDy],[qlaUH],[qlaUH,IDy],[qlaUH,iw],[qlaUH,iw,IDy],[qlaUH,fKT],[qlaUH,fKT,IDy],[qlaUH,fKT,iw],[qlaUH,fKT,iw,IDy],[qlaUH,dtKO],[qlaUH,dtKO,IDy],[qlaUH,dtKO,iw],[qlaUH,dtKO,iw,IDy],[qlaUH,dtKO,fKT],[qlaUH,dtKO,fKT,IDy],[qlaUH,dtKO,fKT,iw],[qlaUH,dtKO,fKT,iw,IDy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4268() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4269() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bhQ","Nnk","GKn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GKn],[Nnk],[Nnk,GKn],[bhQ],[bhQ,GKn],[bhQ,Nnk],[bhQ,Nnk,GKn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4270() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","DE","Kp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kp],[DE],[DE,Kp],[Q],[Q,Kp],[Q,DE],[Q,DE,Kp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4271() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","uGlRQ","cAuLR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cAuLR],[uGlRQ],[uGlRQ,cAuLR],[b],[b,cAuLR],[b,uGlRQ],[b,uGlRQ,cAuLR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4272() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zwW","YZO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YZO],[zwW],[zwW,YZO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4273() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eQjp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eQjp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4274() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zXDiI","QNG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QNG],[zXDiI],[zXDiI,QNG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4275() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aRf","hp","Psl","J","oAjsL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oAjsL],[J],[J,oAjsL],[Psl],[Psl,oAjsL],[Psl,J],[Psl,J,oAjsL],[hp],[hp,oAjsL],[hp,J],[hp,J,oAjsL],[hp,Psl],[hp,Psl,oAjsL],[hp,Psl,J],[hp,Psl,J,oAjsL],[aRf],[aRf,oAjsL],[aRf,J],[aRf,J,oAjsL],[aRf,Psl],[aRf,Psl,oAjsL],[aRf,Psl,J],[aRf,Psl,J,oAjsL],[aRf,hp],[aRf,hp,oAjsL],[aRf,hp,J],[aRf,hp,J,oAjsL],[aRf,hp,Psl],[aRf,hp,Psl,oAjsL],[aRf,hp,Psl,J],[aRf,hp,Psl,J,oAjsL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4276() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G","wAyYZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wAyYZ],[G],[G,wAyYZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4277() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CVu","l","SdMU","LVi","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[LVi],[LVi,O],[SdMU],[SdMU,O],[SdMU,LVi],[SdMU,LVi,O],[l],[l,O],[l,LVi],[l,LVi,O],[l,SdMU],[l,SdMU,O],[l,SdMU,LVi],[l,SdMU,LVi,O],[CVu],[CVu,O],[CVu,LVi],[CVu,LVi,O],[CVu,SdMU],[CVu,SdMU,O],[CVu,SdMU,LVi],[CVu,SdMU,LVi,O],[CVu,l],[CVu,l,O],[CVu,l,LVi],[CVu,l,LVi,O],[CVu,l,SdMU],[CVu,l,SdMU,O],[CVu,l,SdMU,LVi],[CVu,l,SdMU,LVi,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4278() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iy","UEJQ","dII","xUUq","UEN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UEN],[xUUq],[xUUq,UEN],[dII],[dII,UEN],[dII,xUUq],[dII,xUUq,UEN],[UEJQ],[UEJQ,UEN],[UEJQ,xUUq],[UEJQ,xUUq,UEN],[UEJQ,dII],[UEJQ,dII,UEN],[UEJQ,dII,xUUq],[UEJQ,dII,xUUq,UEN],[iy],[iy,UEN],[iy,xUUq],[iy,xUUq,UEN],[iy,dII],[iy,dII,UEN],[iy,dII,xUUq],[iy,dII,xUUq,UEN],[iy,UEJQ],[iy,UEJQ,UEN],[iy,UEJQ,xUUq],[iy,UEJQ,xUUq,UEN],[iy,UEJQ,dII],[iy,UEJQ,dII,UEN],[iy,UEJQ,dII,xUUq],[iy,UEJQ,dII,xUUq,UEN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4279() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VJ","PU","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[PU],[PU,x],[VJ],[VJ,x],[VJ,PU],[VJ,PU,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4280() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","z","OL","kh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kh],[OL],[OL,kh],[z],[z,kh],[z,OL],[z,OL,kh],[A],[A,kh],[A,OL],[A,OL,kh],[A,z],[A,z,kh],[A,z,OL],[A,z,OL,kh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4281() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dGD","F","KyZ","weWr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[weWr],[KyZ],[KyZ,weWr],[F],[F,weWr],[F,KyZ],[F,KyZ,weWr],[dGD],[dGD,weWr],[dGD,KyZ],[dGD,KyZ,weWr],[dGD,F],[dGD,F,weWr],[dGD,F,KyZ],[dGD,F,KyZ,weWr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4282() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","cwPKm","Gl","mr","WA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WA],[mr],[mr,WA],[Gl],[Gl,WA],[Gl,mr],[Gl,mr,WA],[cwPKm],[cwPKm,WA],[cwPKm,mr],[cwPKm,mr,WA],[cwPKm,Gl],[cwPKm,Gl,WA],[cwPKm,Gl,mr],[cwPKm,Gl,mr,WA],[c],[c,WA],[c,mr],[c,mr,WA],[c,Gl],[c,Gl,WA],[c,Gl,mr],[c,Gl,mr,WA],[c,cwPKm],[c,cwPKm,WA],[c,cwPKm,mr],[c,cwPKm,mr,WA],[c,cwPKm,Gl],[c,cwPKm,Gl,WA],[c,cwPKm,Gl,mr],[c,cwPKm,Gl,mr,WA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4283() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dUBG","hHVuo","RBgQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RBgQ],[hHVuo],[hHVuo,RBgQ],[dUBG],[dUBG,RBgQ],[dUBG,hHVuo],[dUBG,hHVuo,RBgQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4284() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cxxQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cxxQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4285() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WfrP","f","cEdqX","uS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uS],[cEdqX],[cEdqX,uS],[f],[f,uS],[f,cEdqX],[f,cEdqX,uS],[WfrP],[WfrP,uS],[WfrP,cEdqX],[WfrP,cEdqX,uS],[WfrP,f],[WfrP,f,uS],[WfrP,f,cEdqX],[WfrP,f,cEdqX,uS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4286() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GZvC","hfV","jfFeg","zsT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zsT],[jfFeg],[jfFeg,zsT],[hfV],[hfV,zsT],[hfV,jfFeg],[hfV,jfFeg,zsT],[GZvC],[GZvC,zsT],[GZvC,jfFeg],[GZvC,jfFeg,zsT],[GZvC,hfV],[GZvC,hfV,zsT],[GZvC,hfV,jfFeg],[GZvC,hfV,jfFeg,zsT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4287() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MR","Nt","fedNk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fedNk],[Nt],[Nt,fedNk],[MR],[MR,fedNk],[MR,Nt],[MR,Nt,fedNk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4288() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","B","uLlw","GrUup","WAAW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WAAW],[GrUup],[GrUup,WAAW],[uLlw],[uLlw,WAAW],[uLlw,GrUup],[uLlw,GrUup,WAAW],[B],[B,WAAW],[B,GrUup],[B,GrUup,WAAW],[B,uLlw],[B,uLlw,WAAW],[B,uLlw,GrUup],[B,uLlw,GrUup,WAAW],[A],[A,WAAW],[A,GrUup],[A,GrUup,WAAW],[A,uLlw],[A,uLlw,WAAW],[A,uLlw,GrUup],[A,uLlw,GrUup,WAAW],[A,B],[A,B,WAAW],[A,B,GrUup],[A,B,GrUup,WAAW],[A,B,uLlw],[A,B,uLlw,WAAW],[A,B,uLlw,GrUup],[A,B,uLlw,GrUup,WAAW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4289() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jz","sW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sW],[Jz],[Jz,sW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4290() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nrU","fs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fs],[nrU],[nrU,fs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4291() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4292() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sWv","w","NZuh","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[NZuh],[NZuh,N],[w],[w,N],[w,NZuh],[w,NZuh,N],[sWv],[sWv,N],[sWv,NZuh],[sWv,NZuh,N],[sWv,w],[sWv,w,N],[sWv,w,NZuh],[sWv,w,NZuh,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4293() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","IBOXH","g","fzuNZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fzuNZ],[g],[g,fzuNZ],[IBOXH],[IBOXH,fzuNZ],[IBOXH,g],[IBOXH,g,fzuNZ],[a],[a,fzuNZ],[a,g],[a,g,fzuNZ],[a,IBOXH],[a,IBOXH,fzuNZ],[a,IBOXH,g],[a,IBOXH,g,fzuNZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4294() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jKhJ","Eo","qL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qL],[Eo],[Eo,qL],[jKhJ],[jKhJ,qL],[jKhJ,Eo],[jKhJ,Eo,qL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4295() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qrs","IUr","qFllc","zDah","yd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yd],[zDah],[zDah,yd],[qFllc],[qFllc,yd],[qFllc,zDah],[qFllc,zDah,yd],[IUr],[IUr,yd],[IUr,zDah],[IUr,zDah,yd],[IUr,qFllc],[IUr,qFllc,yd],[IUr,qFllc,zDah],[IUr,qFllc,zDah,yd],[qrs],[qrs,yd],[qrs,zDah],[qrs,zDah,yd],[qrs,qFllc],[qrs,qFllc,yd],[qrs,qFllc,zDah],[qrs,qFllc,zDah,yd],[qrs,IUr],[qrs,IUr,yd],[qrs,IUr,zDah],[qrs,IUr,zDah,yd],[qrs,IUr,qFllc],[qrs,IUr,qFllc,yd],[qrs,IUr,qFllc,zDah],[qrs,IUr,qFllc,zDah,yd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4296() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CCnL","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[CCnL],[CCnL,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4297() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WJBL","NOHb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NOHb],[WJBL],[WJBL,NOHb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4298() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","mm","xR","yqUd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yqUd],[xR],[xR,yqUd],[mm],[mm,yqUd],[mm,xR],[mm,xR,yqUd],[P],[P,yqUd],[P,xR],[P,xR,yqUd],[P,mm],[P,mm,yqUd],[P,mm,xR],[P,mm,xR,yqUd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4299() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "v","QblVP","thNCm","Qk","JFbnV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JFbnV],[Qk],[Qk,JFbnV],[thNCm],[thNCm,JFbnV],[thNCm,Qk],[thNCm,Qk,JFbnV],[QblVP],[QblVP,JFbnV],[QblVP,Qk],[QblVP,Qk,JFbnV],[QblVP,thNCm],[QblVP,thNCm,JFbnV],[QblVP,thNCm,Qk],[QblVP,thNCm,Qk,JFbnV],[v],[v,JFbnV],[v,Qk],[v,Qk,JFbnV],[v,thNCm],[v,thNCm,JFbnV],[v,thNCm,Qk],[v,thNCm,Qk,JFbnV],[v,QblVP],[v,QblVP,JFbnV],[v,QblVP,Qk],[v,QblVP,Qk,JFbnV],[v,QblVP,thNCm],[v,QblVP,thNCm,JFbnV],[v,QblVP,thNCm,Qk],[v,QblVP,thNCm,Qk,JFbnV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4300() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","mwTz","EPjyh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EPjyh],[mwTz],[mwTz,EPjyh],[P],[P,EPjyh],[P,mwTz],[P,mwTz,EPjyh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4301() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nfzM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nfzM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4302() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dg","JSb","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[JSb],[JSb,o],[dg],[dg,o],[dg,JSb],[dg,JSb,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4303() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RmsGE","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[RmsGE],[RmsGE,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4304() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HA","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[HA],[HA,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4305() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qKW","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[qKW],[qKW,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4306() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4307() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BU","ZiIux","xmGR","oAaUg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oAaUg],[xmGR],[xmGR,oAaUg],[ZiIux],[ZiIux,oAaUg],[ZiIux,xmGR],[ZiIux,xmGR,oAaUg],[BU],[BU,oAaUg],[BU,xmGR],[BU,xmGR,oAaUg],[BU,ZiIux],[BU,ZiIux,oAaUg],[BU,ZiIux,xmGR],[BU,ZiIux,xmGR,oAaUg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4308() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","moM","MYf","xXYyX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xXYyX],[MYf],[MYf,xXYyX],[moM],[moM,xXYyX],[moM,MYf],[moM,MYf,xXYyX],[P],[P,xXYyX],[P,MYf],[P,MYf,xXYyX],[P,moM],[P,moM,xXYyX],[P,moM,MYf],[P,moM,MYf,xXYyX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4309() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jwu","rYB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rYB],[jwu],[jwu,rYB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4310() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VWA","fJjP","KaQD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KaQD],[fJjP],[fJjP,KaQD],[VWA],[VWA,KaQD],[VWA,fJjP],[VWA,fJjP,KaQD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4311() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pqW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pqW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4312() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "udQ","Bwa","dQQsh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dQQsh],[Bwa],[Bwa,dQQsh],[udQ],[udQ,dQQsh],[udQ,Bwa],[udQ,Bwa,dQQsh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4313() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tT","h","Oal","QQkTp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QQkTp],[Oal],[Oal,QQkTp],[h],[h,QQkTp],[h,Oal],[h,Oal,QQkTp],[tT],[tT,QQkTp],[tT,Oal],[tT,Oal,QQkTp],[tT,h],[tT,h,QQkTp],[tT,h,Oal],[tT,h,Oal,QQkTp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4314() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","dhL","MgqJu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MgqJu],[dhL],[dhL,MgqJu],[S],[S,MgqJu],[S,dhL],[S,dhL,MgqJu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4315() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MzN","v","nQI","pphA","QyVv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QyVv],[pphA],[pphA,QyVv],[nQI],[nQI,QyVv],[nQI,pphA],[nQI,pphA,QyVv],[v],[v,QyVv],[v,pphA],[v,pphA,QyVv],[v,nQI],[v,nQI,QyVv],[v,nQI,pphA],[v,nQI,pphA,QyVv],[MzN],[MzN,QyVv],[MzN,pphA],[MzN,pphA,QyVv],[MzN,nQI],[MzN,nQI,QyVv],[MzN,nQI,pphA],[MzN,nQI,pphA,QyVv],[MzN,v],[MzN,v,QyVv],[MzN,v,pphA],[MzN,v,pphA,QyVv],[MzN,v,nQI],[MzN,v,nQI,QyVv],[MzN,v,nQI,pphA],[MzN,v,nQI,pphA,QyVv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4316() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jZ","DfT","wZI","rWWek")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rWWek],[wZI],[wZI,rWWek],[DfT],[DfT,rWWek],[DfT,wZI],[DfT,wZI,rWWek],[jZ],[jZ,rWWek],[jZ,wZI],[jZ,wZI,rWWek],[jZ,DfT],[jZ,DfT,rWWek],[jZ,DfT,wZI],[jZ,DfT,wZI,rWWek]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4317() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","S","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[S],[S,g],[r],[r,g],[r,S],[r,S,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4318() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WANGL","ZpgNL","BJ","nzro","MKTN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MKTN],[nzro],[nzro,MKTN],[BJ],[BJ,MKTN],[BJ,nzro],[BJ,nzro,MKTN],[ZpgNL],[ZpgNL,MKTN],[ZpgNL,nzro],[ZpgNL,nzro,MKTN],[ZpgNL,BJ],[ZpgNL,BJ,MKTN],[ZpgNL,BJ,nzro],[ZpgNL,BJ,nzro,MKTN],[WANGL],[WANGL,MKTN],[WANGL,nzro],[WANGL,nzro,MKTN],[WANGL,BJ],[WANGL,BJ,MKTN],[WANGL,BJ,nzro],[WANGL,BJ,nzro,MKTN],[WANGL,ZpgNL],[WANGL,ZpgNL,MKTN],[WANGL,ZpgNL,nzro],[WANGL,ZpgNL,nzro,MKTN],[WANGL,ZpgNL,BJ],[WANGL,ZpgNL,BJ,MKTN],[WANGL,ZpgNL,BJ,nzro],[WANGL,ZpgNL,BJ,nzro,MKTN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4319() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CPA","NtiV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NtiV],[CPA],[CPA,NtiV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4320() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ykXIo","dbLnu","zIYo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zIYo],[dbLnu],[dbLnu,zIYo],[ykXIo],[ykXIo,zIYo],[ykXIo,dbLnu],[ykXIo,dbLnu,zIYo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4321() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","Gozb","rrj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rrj],[Gozb],[Gozb,rrj],[p],[p,rrj],[p,Gozb],[p,Gozb,rrj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4322() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HTgkN","KBy","Rwb","omaxF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[omaxF],[Rwb],[Rwb,omaxF],[KBy],[KBy,omaxF],[KBy,Rwb],[KBy,Rwb,omaxF],[HTgkN],[HTgkN,omaxF],[HTgkN,Rwb],[HTgkN,Rwb,omaxF],[HTgkN,KBy],[HTgkN,KBy,omaxF],[HTgkN,KBy,Rwb],[HTgkN,KBy,Rwb,omaxF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4323() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xMdxA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xMdxA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4324() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gCgbP","GWQD","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[GWQD],[GWQD,M],[gCgbP],[gCgbP,M],[gCgbP,GWQD],[gCgbP,GWQD,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4325() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zlc","Cajlg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cajlg],[zlc],[zlc,Cajlg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4326() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hPa","csm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[csm],[hPa],[hPa,csm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4327() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bhTSZ","bYYud")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bYYud],[bhTSZ],[bhTSZ,bYYud]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4328() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UaWT","kdOHI","mSOyP","dFK","RtlXp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RtlXp],[dFK],[dFK,RtlXp],[mSOyP],[mSOyP,RtlXp],[mSOyP,dFK],[mSOyP,dFK,RtlXp],[kdOHI],[kdOHI,RtlXp],[kdOHI,dFK],[kdOHI,dFK,RtlXp],[kdOHI,mSOyP],[kdOHI,mSOyP,RtlXp],[kdOHI,mSOyP,dFK],[kdOHI,mSOyP,dFK,RtlXp],[UaWT],[UaWT,RtlXp],[UaWT,dFK],[UaWT,dFK,RtlXp],[UaWT,mSOyP],[UaWT,mSOyP,RtlXp],[UaWT,mSOyP,dFK],[UaWT,mSOyP,dFK,RtlXp],[UaWT,kdOHI],[UaWT,kdOHI,RtlXp],[UaWT,kdOHI,dFK],[UaWT,kdOHI,dFK,RtlXp],[UaWT,kdOHI,mSOyP],[UaWT,kdOHI,mSOyP,RtlXp],[UaWT,kdOHI,mSOyP,dFK],[UaWT,kdOHI,mSOyP,dFK,RtlXp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4329() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gqT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gqT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4330() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4331() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wBN","wL","Kf","cga")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cga],[Kf],[Kf,cga],[wL],[wL,cga],[wL,Kf],[wL,Kf,cga],[wBN],[wBN,cga],[wBN,Kf],[wBN,Kf,cga],[wBN,wL],[wBN,wL,cga],[wBN,wL,Kf],[wBN,wL,Kf,cga]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4332() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WG","QE","U","XEs","rtGvA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rtGvA],[XEs],[XEs,rtGvA],[U],[U,rtGvA],[U,XEs],[U,XEs,rtGvA],[QE],[QE,rtGvA],[QE,XEs],[QE,XEs,rtGvA],[QE,U],[QE,U,rtGvA],[QE,U,XEs],[QE,U,XEs,rtGvA],[WG],[WG,rtGvA],[WG,XEs],[WG,XEs,rtGvA],[WG,U],[WG,U,rtGvA],[WG,U,XEs],[WG,U,XEs,rtGvA],[WG,QE],[WG,QE,rtGvA],[WG,QE,XEs],[WG,QE,XEs,rtGvA],[WG,QE,U],[WG,QE,U,rtGvA],[WG,QE,U,XEs],[WG,QE,U,XEs,rtGvA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4333() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HqC","dR","npq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[npq],[dR],[dR,npq],[HqC],[HqC,npq],[HqC,dR],[HqC,dR,npq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4334() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ddMwy","JEYf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JEYf],[ddMwy],[ddMwy,JEYf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4335() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cHcSz","p","S","T")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[T],[S],[S,T],[p],[p,T],[p,S],[p,S,T],[cHcSz],[cHcSz,T],[cHcSz,S],[cHcSz,S,T],[cHcSz,p],[cHcSz,p,T],[cHcSz,p,S],[cHcSz,p,S,T]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4336() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pq","XI","DrmH","TP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TP],[DrmH],[DrmH,TP],[XI],[XI,TP],[XI,DrmH],[XI,DrmH,TP],[Pq],[Pq,TP],[Pq,DrmH],[Pq,DrmH,TP],[Pq,XI],[Pq,XI,TP],[Pq,XI,DrmH],[Pq,XI,DrmH,TP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4337() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","dW","f","auDBY","Kma")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kma],[auDBY],[auDBY,Kma],[f],[f,Kma],[f,auDBY],[f,auDBY,Kma],[dW],[dW,Kma],[dW,auDBY],[dW,auDBY,Kma],[dW,f],[dW,f,Kma],[dW,f,auDBY],[dW,f,auDBY,Kma],[b],[b,Kma],[b,auDBY],[b,auDBY,Kma],[b,f],[b,f,Kma],[b,f,auDBY],[b,f,auDBY,Kma],[b,dW],[b,dW,Kma],[b,dW,auDBY],[b,dW,auDBY,Kma],[b,dW,f],[b,dW,f,Kma],[b,dW,f,auDBY],[b,dW,f,auDBY,Kma]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4338() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4339() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","j","ol","Er","dVQtY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dVQtY],[Er],[Er,dVQtY],[ol],[ol,dVQtY],[ol,Er],[ol,Er,dVQtY],[j],[j,dVQtY],[j,Er],[j,Er,dVQtY],[j,ol],[j,ol,dVQtY],[j,ol,Er],[j,ol,Er,dVQtY],[V],[V,dVQtY],[V,Er],[V,Er,dVQtY],[V,ol],[V,ol,dVQtY],[V,ol,Er],[V,ol,Er,dVQtY],[V,j],[V,j,dVQtY],[V,j,Er],[V,j,Er,dVQtY],[V,j,ol],[V,j,ol,dVQtY],[V,j,ol,Er],[V,j,ol,Er,dVQtY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4340() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HOz","qS","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[qS],[qS,m],[HOz],[HOz,m],[HOz,qS],[HOz,qS,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4341() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SV","UDiN","pMHrQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pMHrQ],[UDiN],[UDiN,pMHrQ],[SV],[SV,pMHrQ],[SV,UDiN],[SV,UDiN,pMHrQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4342() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GviCX","OnA","W","Tn","ldSW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ldSW],[Tn],[Tn,ldSW],[W],[W,ldSW],[W,Tn],[W,Tn,ldSW],[OnA],[OnA,ldSW],[OnA,Tn],[OnA,Tn,ldSW],[OnA,W],[OnA,W,ldSW],[OnA,W,Tn],[OnA,W,Tn,ldSW],[GviCX],[GviCX,ldSW],[GviCX,Tn],[GviCX,Tn,ldSW],[GviCX,W],[GviCX,W,ldSW],[GviCX,W,Tn],[GviCX,W,Tn,ldSW],[GviCX,OnA],[GviCX,OnA,ldSW],[GviCX,OnA,Tn],[GviCX,OnA,Tn,ldSW],[GviCX,OnA,W],[GviCX,OnA,W,ldSW],[GviCX,OnA,W,Tn],[GviCX,OnA,W,Tn,ldSW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4343() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rezK","suY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[suY],[rezK],[rezK,suY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4344() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dgk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dgk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4345() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UxCE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UxCE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4346() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SF","iq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iq],[SF],[SF,iq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4347() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TtF","qY","XA","iR","bcnO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bcnO],[iR],[iR,bcnO],[XA],[XA,bcnO],[XA,iR],[XA,iR,bcnO],[qY],[qY,bcnO],[qY,iR],[qY,iR,bcnO],[qY,XA],[qY,XA,bcnO],[qY,XA,iR],[qY,XA,iR,bcnO],[TtF],[TtF,bcnO],[TtF,iR],[TtF,iR,bcnO],[TtF,XA],[TtF,XA,bcnO],[TtF,XA,iR],[TtF,XA,iR,bcnO],[TtF,qY],[TtF,qY,bcnO],[TtF,qY,iR],[TtF,qY,iR,bcnO],[TtF,qY,XA],[TtF,qY,XA,bcnO],[TtF,qY,XA,iR],[TtF,qY,XA,iR,bcnO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4348() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sVwzC","b","nuekT","wIK","ze")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ze],[wIK],[wIK,ze],[nuekT],[nuekT,ze],[nuekT,wIK],[nuekT,wIK,ze],[b],[b,ze],[b,wIK],[b,wIK,ze],[b,nuekT],[b,nuekT,ze],[b,nuekT,wIK],[b,nuekT,wIK,ze],[sVwzC],[sVwzC,ze],[sVwzC,wIK],[sVwzC,wIK,ze],[sVwzC,nuekT],[sVwzC,nuekT,ze],[sVwzC,nuekT,wIK],[sVwzC,nuekT,wIK,ze],[sVwzC,b],[sVwzC,b,ze],[sVwzC,b,wIK],[sVwzC,b,wIK,ze],[sVwzC,b,nuekT],[sVwzC,b,nuekT,ze],[sVwzC,b,nuekT,wIK],[sVwzC,b,nuekT,wIK,ze]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4349() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","W","tjc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tjc],[W],[W,tjc],[w],[w,tjc],[w,W],[w,W,tjc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4350() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dFgt","TBkQ","QKhlk","vA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vA],[QKhlk],[QKhlk,vA],[TBkQ],[TBkQ,vA],[TBkQ,QKhlk],[TBkQ,QKhlk,vA],[dFgt],[dFgt,vA],[dFgt,QKhlk],[dFgt,QKhlk,vA],[dFgt,TBkQ],[dFgt,TBkQ,vA],[dFgt,TBkQ,QKhlk],[dFgt,TBkQ,QKhlk,vA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4351() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lqjKH","bw","G","VuRc","YOB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YOB],[VuRc],[VuRc,YOB],[G],[G,YOB],[G,VuRc],[G,VuRc,YOB],[bw],[bw,YOB],[bw,VuRc],[bw,VuRc,YOB],[bw,G],[bw,G,YOB],[bw,G,VuRc],[bw,G,VuRc,YOB],[lqjKH],[lqjKH,YOB],[lqjKH,VuRc],[lqjKH,VuRc,YOB],[lqjKH,G],[lqjKH,G,YOB],[lqjKH,G,VuRc],[lqjKH,G,VuRc,YOB],[lqjKH,bw],[lqjKH,bw,YOB],[lqjKH,bw,VuRc],[lqjKH,bw,VuRc,YOB],[lqjKH,bw,G],[lqjKH,bw,G,YOB],[lqjKH,bw,G,VuRc],[lqjKH,bw,G,VuRc,YOB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4352() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Uwmv","VVi","xp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xp],[VVi],[VVi,xp],[Uwmv],[Uwmv,xp],[Uwmv,VVi],[Uwmv,VVi,xp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4353() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","T","ieIpP","nQlDj","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[nQlDj],[nQlDj,L],[ieIpP],[ieIpP,L],[ieIpP,nQlDj],[ieIpP,nQlDj,L],[T],[T,L],[T,nQlDj],[T,nQlDj,L],[T,ieIpP],[T,ieIpP,L],[T,ieIpP,nQlDj],[T,ieIpP,nQlDj,L],[s],[s,L],[s,nQlDj],[s,nQlDj,L],[s,ieIpP],[s,ieIpP,L],[s,ieIpP,nQlDj],[s,ieIpP,nQlDj,L],[s,T],[s,T,L],[s,T,nQlDj],[s,T,nQlDj,L],[s,T,ieIpP],[s,T,ieIpP,L],[s,T,ieIpP,nQlDj],[s,T,ieIpP,nQlDj,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4354() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kvKr","S","KjfC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KjfC],[S],[S,KjfC],[kvKr],[kvKr,KjfC],[kvKr,S],[kvKr,S,KjfC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4355() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bgv","iRRo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iRRo],[bgv],[bgv,iRRo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4356() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gnak","OOhMW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OOhMW],[gnak],[gnak,OOhMW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4357() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tw","Uh","RtsP","wLCW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wLCW],[RtsP],[RtsP,wLCW],[Uh],[Uh,wLCW],[Uh,RtsP],[Uh,RtsP,wLCW],[Tw],[Tw,wLCW],[Tw,RtsP],[Tw,RtsP,wLCW],[Tw,Uh],[Tw,Uh,wLCW],[Tw,Uh,RtsP],[Tw,Uh,RtsP,wLCW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4358() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dmGwG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dmGwG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4359() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nS","K","yRoKB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yRoKB],[K],[K,yRoKB],[nS],[nS,yRoKB],[nS,K],[nS,K,yRoKB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4360() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H","y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y],[H],[H,y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4361() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jz","ct","Ioi","VdQ","WqE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WqE],[VdQ],[VdQ,WqE],[Ioi],[Ioi,WqE],[Ioi,VdQ],[Ioi,VdQ,WqE],[ct],[ct,WqE],[ct,VdQ],[ct,VdQ,WqE],[ct,Ioi],[ct,Ioi,WqE],[ct,Ioi,VdQ],[ct,Ioi,VdQ,WqE],[jz],[jz,WqE],[jz,VdQ],[jz,VdQ,WqE],[jz,Ioi],[jz,Ioi,WqE],[jz,Ioi,VdQ],[jz,Ioi,VdQ,WqE],[jz,ct],[jz,ct,WqE],[jz,ct,VdQ],[jz,ct,VdQ,WqE],[jz,ct,Ioi],[jz,ct,Ioi,WqE],[jz,ct,Ioi,VdQ],[jz,ct,Ioi,VdQ,WqE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4362() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LbCR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LbCR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4363() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VwmL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VwmL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4364() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZVrLe","SCegg","e","pEl","PaiV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PaiV],[pEl],[pEl,PaiV],[e],[e,PaiV],[e,pEl],[e,pEl,PaiV],[SCegg],[SCegg,PaiV],[SCegg,pEl],[SCegg,pEl,PaiV],[SCegg,e],[SCegg,e,PaiV],[SCegg,e,pEl],[SCegg,e,pEl,PaiV],[ZVrLe],[ZVrLe,PaiV],[ZVrLe,pEl],[ZVrLe,pEl,PaiV],[ZVrLe,e],[ZVrLe,e,PaiV],[ZVrLe,e,pEl],[ZVrLe,e,pEl,PaiV],[ZVrLe,SCegg],[ZVrLe,SCegg,PaiV],[ZVrLe,SCegg,pEl],[ZVrLe,SCegg,pEl,PaiV],[ZVrLe,SCegg,e],[ZVrLe,SCegg,e,PaiV],[ZVrLe,SCegg,e,pEl],[ZVrLe,SCegg,e,pEl,PaiV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4365() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mrxOb","gtU","AXs","XbzBj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XbzBj],[AXs],[AXs,XbzBj],[gtU],[gtU,XbzBj],[gtU,AXs],[gtU,AXs,XbzBj],[mrxOb],[mrxOb,XbzBj],[mrxOb,AXs],[mrxOb,AXs,XbzBj],[mrxOb,gtU],[mrxOb,gtU,XbzBj],[mrxOb,gtU,AXs],[mrxOb,gtU,AXs,XbzBj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4366() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","LBIma","npTO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[npTO],[LBIma],[LBIma,npTO],[P],[P,npTO],[P,LBIma],[P,LBIma,npTO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4367() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uejqh","X","MEEE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MEEE],[X],[X,MEEE],[uejqh],[uejqh,MEEE],[uejqh,X],[uejqh,X,MEEE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4368() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iZ","wuJOi","vHBJr","J","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[J],[J,M],[vHBJr],[vHBJr,M],[vHBJr,J],[vHBJr,J,M],[wuJOi],[wuJOi,M],[wuJOi,J],[wuJOi,J,M],[wuJOi,vHBJr],[wuJOi,vHBJr,M],[wuJOi,vHBJr,J],[wuJOi,vHBJr,J,M],[iZ],[iZ,M],[iZ,J],[iZ,J,M],[iZ,vHBJr],[iZ,vHBJr,M],[iZ,vHBJr,J],[iZ,vHBJr,J,M],[iZ,wuJOi],[iZ,wuJOi,M],[iZ,wuJOi,J],[iZ,wuJOi,J,M],[iZ,wuJOi,vHBJr],[iZ,wuJOi,vHBJr,M],[iZ,wuJOi,vHBJr,J],[iZ,wuJOi,vHBJr,J,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4369() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","Hhk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hhk],[S],[S,Hhk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4370() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yxs","nT","WaS","vC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vC],[WaS],[WaS,vC],[nT],[nT,vC],[nT,WaS],[nT,WaS,vC],[yxs],[yxs,vC],[yxs,WaS],[yxs,WaS,vC],[yxs,nT],[yxs,nT,vC],[yxs,nT,WaS],[yxs,nT,WaS,vC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4371() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","UjJb","W","QmG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QmG],[W],[W,QmG],[UjJb],[UjJb,QmG],[UjJb,W],[UjJb,W,QmG],[R],[R,QmG],[R,W],[R,W,QmG],[R,UjJb],[R,UjJb,QmG],[R,UjJb,W],[R,UjJb,W,QmG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4372() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PbYDZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PbYDZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4373() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LKB","wSU","Wc","O","Kz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kz],[O],[O,Kz],[Wc],[Wc,Kz],[Wc,O],[Wc,O,Kz],[wSU],[wSU,Kz],[wSU,O],[wSU,O,Kz],[wSU,Wc],[wSU,Wc,Kz],[wSU,Wc,O],[wSU,Wc,O,Kz],[LKB],[LKB,Kz],[LKB,O],[LKB,O,Kz],[LKB,Wc],[LKB,Wc,Kz],[LKB,Wc,O],[LKB,Wc,O,Kz],[LKB,wSU],[LKB,wSU,Kz],[LKB,wSU,O],[LKB,wSU,O,Kz],[LKB,wSU,Wc],[LKB,wSU,Wc,Kz],[LKB,wSU,Wc,O],[LKB,wSU,Wc,O,Kz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4374() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SH","mI","BKU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BKU],[mI],[mI,BKU],[SH],[SH,BKU],[SH,mI],[SH,mI,BKU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4375() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","TvM","pnmsE","jZM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jZM],[pnmsE],[pnmsE,jZM],[TvM],[TvM,jZM],[TvM,pnmsE],[TvM,pnmsE,jZM],[F],[F,jZM],[F,pnmsE],[F,pnmsE,jZM],[F,TvM],[F,TvM,jZM],[F,TvM,pnmsE],[F,TvM,pnmsE,jZM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4376() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gkMvE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gkMvE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4377() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zfTP","B","s","e","md")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[md],[e],[e,md],[s],[s,md],[s,e],[s,e,md],[B],[B,md],[B,e],[B,e,md],[B,s],[B,s,md],[B,s,e],[B,s,e,md],[zfTP],[zfTP,md],[zfTP,e],[zfTP,e,md],[zfTP,s],[zfTP,s,md],[zfTP,s,e],[zfTP,s,e,md],[zfTP,B],[zfTP,B,md],[zfTP,B,e],[zfTP,B,e,md],[zfTP,B,s],[zfTP,B,s,md],[zfTP,B,s,e],[zfTP,B,s,e,md]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4378() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YEpA","ioaR","hbe","eqi","KZm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KZm],[eqi],[eqi,KZm],[hbe],[hbe,KZm],[hbe,eqi],[hbe,eqi,KZm],[ioaR],[ioaR,KZm],[ioaR,eqi],[ioaR,eqi,KZm],[ioaR,hbe],[ioaR,hbe,KZm],[ioaR,hbe,eqi],[ioaR,hbe,eqi,KZm],[YEpA],[YEpA,KZm],[YEpA,eqi],[YEpA,eqi,KZm],[YEpA,hbe],[YEpA,hbe,KZm],[YEpA,hbe,eqi],[YEpA,hbe,eqi,KZm],[YEpA,ioaR],[YEpA,ioaR,KZm],[YEpA,ioaR,eqi],[YEpA,ioaR,eqi,KZm],[YEpA,ioaR,hbe],[YEpA,ioaR,hbe,KZm],[YEpA,ioaR,hbe,eqi],[YEpA,ioaR,hbe,eqi,KZm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4379() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pxZN","DOT","Y","dP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dP],[Y],[Y,dP],[DOT],[DOT,dP],[DOT,Y],[DOT,Y,dP],[pxZN],[pxZN,dP],[pxZN,Y],[pxZN,Y,dP],[pxZN,DOT],[pxZN,DOT,dP],[pxZN,DOT,Y],[pxZN,DOT,Y,dP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4380() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hx","Ak")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ak],[hx],[hx,Ak]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4381() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HhIo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HhIo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4382() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4383() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZZ","Q","hB","uifqX","VgTus")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VgTus],[uifqX],[uifqX,VgTus],[hB],[hB,VgTus],[hB,uifqX],[hB,uifqX,VgTus],[Q],[Q,VgTus],[Q,uifqX],[Q,uifqX,VgTus],[Q,hB],[Q,hB,VgTus],[Q,hB,uifqX],[Q,hB,uifqX,VgTus],[ZZ],[ZZ,VgTus],[ZZ,uifqX],[ZZ,uifqX,VgTus],[ZZ,hB],[ZZ,hB,VgTus],[ZZ,hB,uifqX],[ZZ,hB,uifqX,VgTus],[ZZ,Q],[ZZ,Q,VgTus],[ZZ,Q,uifqX],[ZZ,Q,uifqX,VgTus],[ZZ,Q,hB],[ZZ,Q,hB,VgTus],[ZZ,Q,hB,uifqX],[ZZ,Q,hB,uifqX,VgTus]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4384() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4385() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EV","AIzTM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AIzTM],[EV],[EV,AIzTM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4386() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aahr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aahr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4387() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fv","G","UMIM","aVRc","pIJgG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pIJgG],[aVRc],[aVRc,pIJgG],[UMIM],[UMIM,pIJgG],[UMIM,aVRc],[UMIM,aVRc,pIJgG],[G],[G,pIJgG],[G,aVRc],[G,aVRc,pIJgG],[G,UMIM],[G,UMIM,pIJgG],[G,UMIM,aVRc],[G,UMIM,aVRc,pIJgG],[fv],[fv,pIJgG],[fv,aVRc],[fv,aVRc,pIJgG],[fv,UMIM],[fv,UMIM,pIJgG],[fv,UMIM,aVRc],[fv,UMIM,aVRc,pIJgG],[fv,G],[fv,G,pIJgG],[fv,G,aVRc],[fv,G,aVRc,pIJgG],[fv,G,UMIM],[fv,G,UMIM,pIJgG],[fv,G,UMIM,aVRc],[fv,G,UMIM,aVRc,pIJgG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4388() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YqsK","SQttP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SQttP],[YqsK],[YqsK,SQttP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4389() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oo","cKufL","QJ","CiHn","oML")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oML],[CiHn],[CiHn,oML],[QJ],[QJ,oML],[QJ,CiHn],[QJ,CiHn,oML],[cKufL],[cKufL,oML],[cKufL,CiHn],[cKufL,CiHn,oML],[cKufL,QJ],[cKufL,QJ,oML],[cKufL,QJ,CiHn],[cKufL,QJ,CiHn,oML],[oo],[oo,oML],[oo,CiHn],[oo,CiHn,oML],[oo,QJ],[oo,QJ,oML],[oo,QJ,CiHn],[oo,QJ,CiHn,oML],[oo,cKufL],[oo,cKufL,oML],[oo,cKufL,CiHn],[oo,cKufL,CiHn,oML],[oo,cKufL,QJ],[oo,cKufL,QJ,oML],[oo,cKufL,QJ,CiHn],[oo,cKufL,QJ,CiHn,oML]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4390() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "El","stvCA","z","Tpv","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[Tpv],[Tpv,M],[z],[z,M],[z,Tpv],[z,Tpv,M],[stvCA],[stvCA,M],[stvCA,Tpv],[stvCA,Tpv,M],[stvCA,z],[stvCA,z,M],[stvCA,z,Tpv],[stvCA,z,Tpv,M],[El],[El,M],[El,Tpv],[El,Tpv,M],[El,z],[El,z,M],[El,z,Tpv],[El,z,Tpv,M],[El,stvCA],[El,stvCA,M],[El,stvCA,Tpv],[El,stvCA,Tpv,M],[El,stvCA,z],[El,stvCA,z,M],[El,stvCA,z,Tpv],[El,stvCA,z,Tpv,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4391() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HgbPR","AAd","MNYrF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MNYrF],[AAd],[AAd,MNYrF],[HgbPR],[HgbPR,MNYrF],[HgbPR,AAd],[HgbPR,AAd,MNYrF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4392() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bTp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bTp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4393() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "f","Dpe","cuO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cuO],[Dpe],[Dpe,cuO],[f],[f,cuO],[f,Dpe],[f,Dpe,cuO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4394() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pzQ","MT","fXIod","rxU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rxU],[fXIod],[fXIod,rxU],[MT],[MT,rxU],[MT,fXIod],[MT,fXIod,rxU],[pzQ],[pzQ,rxU],[pzQ,fXIod],[pzQ,fXIod,rxU],[pzQ,MT],[pzQ,MT,rxU],[pzQ,MT,fXIod],[pzQ,MT,fXIod,rxU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4395() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4396() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4397() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iZcT","aMcHA","BTHI","nQJd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nQJd],[BTHI],[BTHI,nQJd],[aMcHA],[aMcHA,nQJd],[aMcHA,BTHI],[aMcHA,BTHI,nQJd],[iZcT],[iZcT,nQJd],[iZcT,BTHI],[iZcT,BTHI,nQJd],[iZcT,aMcHA],[iZcT,aMcHA,nQJd],[iZcT,aMcHA,BTHI],[iZcT,aMcHA,BTHI,nQJd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4398() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bv","kyck","g")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[g],[kyck],[kyck,g],[Bv],[Bv,g],[Bv,kyck],[Bv,kyck,g]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4399() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[Q],[Q,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4400() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bhg","kJoMr","RAIGc","RAMCM","z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z],[RAMCM],[RAMCM,z],[RAIGc],[RAIGc,z],[RAIGc,RAMCM],[RAIGc,RAMCM,z],[kJoMr],[kJoMr,z],[kJoMr,RAMCM],[kJoMr,RAMCM,z],[kJoMr,RAIGc],[kJoMr,RAIGc,z],[kJoMr,RAIGc,RAMCM],[kJoMr,RAIGc,RAMCM,z],[Bhg],[Bhg,z],[Bhg,RAMCM],[Bhg,RAMCM,z],[Bhg,RAIGc],[Bhg,RAIGc,z],[Bhg,RAIGc,RAMCM],[Bhg,RAIGc,RAMCM,z],[Bhg,kJoMr],[Bhg,kJoMr,z],[Bhg,kJoMr,RAMCM],[Bhg,kJoMr,RAMCM,z],[Bhg,kJoMr,RAIGc],[Bhg,kJoMr,RAIGc,z],[Bhg,kJoMr,RAIGc,RAMCM],[Bhg,kJoMr,RAIGc,RAMCM,z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4401() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yuJY","aWAF","uK","LDq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LDq],[uK],[uK,LDq],[aWAF],[aWAF,LDq],[aWAF,uK],[aWAF,uK,LDq],[yuJY],[yuJY,LDq],[yuJY,uK],[yuJY,uK,LDq],[yuJY,aWAF],[yuJY,aWAF,LDq],[yuJY,aWAF,uK],[yuJY,aWAF,uK,LDq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4402() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TYuib","amLo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[amLo],[TYuib],[TYuib,amLo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4403() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rw","pFq","OOm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OOm],[pFq],[pFq,OOm],[Rw],[Rw,OOm],[Rw,pFq],[Rw,pFq,OOm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4404() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fV","vIxOu","Qn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qn],[vIxOu],[vIxOu,Qn],[fV],[fV,Qn],[fV,vIxOu],[fV,vIxOu,Qn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4405() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","MAwSq","qhGOE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qhGOE],[MAwSq],[MAwSq,qhGOE],[D],[D,qhGOE],[D,MAwSq],[D,MAwSq,qhGOE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4406() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LmEX","rdu","Jf","uR","ZH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZH],[uR],[uR,ZH],[Jf],[Jf,ZH],[Jf,uR],[Jf,uR,ZH],[rdu],[rdu,ZH],[rdu,uR],[rdu,uR,ZH],[rdu,Jf],[rdu,Jf,ZH],[rdu,Jf,uR],[rdu,Jf,uR,ZH],[LmEX],[LmEX,ZH],[LmEX,uR],[LmEX,uR,ZH],[LmEX,Jf],[LmEX,Jf,ZH],[LmEX,Jf,uR],[LmEX,Jf,uR,ZH],[LmEX,rdu],[LmEX,rdu,ZH],[LmEX,rdu,uR],[LmEX,rdu,uR,ZH],[LmEX,rdu,Jf],[LmEX,rdu,Jf,ZH],[LmEX,rdu,Jf,uR],[LmEX,rdu,Jf,uR,ZH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4407() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[d]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4408() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gKfZS","niYs","EWah","jfh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jfh],[EWah],[EWah,jfh],[niYs],[niYs,jfh],[niYs,EWah],[niYs,EWah,jfh],[gKfZS],[gKfZS,jfh],[gKfZS,EWah],[gKfZS,EWah,jfh],[gKfZS,niYs],[gKfZS,niYs,jfh],[gKfZS,niYs,EWah],[gKfZS,niYs,EWah,jfh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4409() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iQA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iQA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4410() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XjwL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XjwL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4411() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "PC","X","xJmH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xJmH],[X],[X,xJmH],[PC],[PC,xJmH],[PC,X],[PC,X,xJmH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4412() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4413() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mbaQS","p","RuZ","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[RuZ],[RuZ,G],[p],[p,G],[p,RuZ],[p,RuZ,G],[mbaQS],[mbaQS,G],[mbaQS,RuZ],[mbaQS,RuZ,G],[mbaQS,p],[mbaQS,p,G],[mbaQS,p,RuZ],[mbaQS,p,RuZ,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4414() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kPsN","dbed","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[dbed],[dbed,W],[kPsN],[kPsN,W],[kPsN,dbed],[kPsN,dbed,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4415() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fRA","U","PGlD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PGlD],[U],[U,PGlD],[fRA],[fRA,PGlD],[fRA,U],[fRA,U,PGlD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4416() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DNl","CIBh","pkU","Pk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pk],[pkU],[pkU,Pk],[CIBh],[CIBh,Pk],[CIBh,pkU],[CIBh,pkU,Pk],[DNl],[DNl,Pk],[DNl,pkU],[DNl,pkU,Pk],[DNl,CIBh],[DNl,CIBh,Pk],[DNl,CIBh,pkU],[DNl,CIBh,pkU,Pk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4417() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mESA","E","jzF","jR","BUatM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BUatM],[jR],[jR,BUatM],[jzF],[jzF,BUatM],[jzF,jR],[jzF,jR,BUatM],[E],[E,BUatM],[E,jR],[E,jR,BUatM],[E,jzF],[E,jzF,BUatM],[E,jzF,jR],[E,jzF,jR,BUatM],[mESA],[mESA,BUatM],[mESA,jR],[mESA,jR,BUatM],[mESA,jzF],[mESA,jzF,BUatM],[mESA,jzF,jR],[mESA,jzF,jR,BUatM],[mESA,E],[mESA,E,BUatM],[mESA,E,jR],[mESA,E,jR,BUatM],[mESA,E,jzF],[mESA,E,jzF,BUatM],[mESA,E,jzF,jR],[mESA,E,jzF,jR,BUatM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4418() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CRSRC","eVLF","v","bq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bq],[v],[v,bq],[eVLF],[eVLF,bq],[eVLF,v],[eVLF,v,bq],[CRSRC],[CRSRC,bq],[CRSRC,v],[CRSRC,v,bq],[CRSRC,eVLF],[CRSRC,eVLF,bq],[CRSRC,eVLF,v],[CRSRC,eVLF,v,bq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4419() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NMnC","aINuD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aINuD],[NMnC],[NMnC,aINuD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4420() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","f","lyU","uEBN","mdWN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mdWN],[uEBN],[uEBN,mdWN],[lyU],[lyU,mdWN],[lyU,uEBN],[lyU,uEBN,mdWN],[f],[f,mdWN],[f,uEBN],[f,uEBN,mdWN],[f,lyU],[f,lyU,mdWN],[f,lyU,uEBN],[f,lyU,uEBN,mdWN],[U],[U,mdWN],[U,uEBN],[U,uEBN,mdWN],[U,lyU],[U,lyU,mdWN],[U,lyU,uEBN],[U,lyU,uEBN,mdWN],[U,f],[U,f,mdWN],[U,f,uEBN],[U,f,uEBN,mdWN],[U,f,lyU],[U,f,lyU,mdWN],[U,f,lyU,uEBN],[U,f,lyU,uEBN,mdWN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4421() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UIv","PE","sy","oCWCA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oCWCA],[sy],[sy,oCWCA],[PE],[PE,oCWCA],[PE,sy],[PE,sy,oCWCA],[UIv],[UIv,oCWCA],[UIv,sy],[UIv,sy,oCWCA],[UIv,PE],[UIv,PE,oCWCA],[UIv,PE,sy],[UIv,PE,sy,oCWCA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4422() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Zyw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zyw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4423() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AhW","lLXOg","Dn","MJI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MJI],[Dn],[Dn,MJI],[lLXOg],[lLXOg,MJI],[lLXOg,Dn],[lLXOg,Dn,MJI],[AhW],[AhW,MJI],[AhW,Dn],[AhW,Dn,MJI],[AhW,lLXOg],[AhW,lLXOg,MJI],[AhW,lLXOg,Dn],[AhW,lLXOg,Dn,MJI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4424() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cUhMP","s","S","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[S],[S,o],[s],[s,o],[s,S],[s,S,o],[cUhMP],[cUhMP,o],[cUhMP,S],[cUhMP,S,o],[cUhMP,s],[cUhMP,s,o],[cUhMP,s,S],[cUhMP,s,S,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4425() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CL","DAUDb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DAUDb],[CL],[CL,DAUDb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4426() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AgX","jROIz","iU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iU],[jROIz],[jROIz,iU],[AgX],[AgX,iU],[AgX,jROIz],[AgX,jROIz,iU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4427() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RzSr","w","n","ngW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ngW],[n],[n,ngW],[w],[w,ngW],[w,n],[w,n,ngW],[RzSr],[RzSr,ngW],[RzSr,n],[RzSr,n,ngW],[RzSr,w],[RzSr,w,ngW],[RzSr,w,n],[RzSr,w,n,ngW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4428() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "knc","sn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sn],[knc],[knc,sn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4429() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "USZ","FMu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FMu],[USZ],[USZ,FMu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4430() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","hTpdW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hTpdW],[s],[s,hTpdW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4431() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4432() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","x","pbQry","kYVTO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kYVTO],[pbQry],[pbQry,kYVTO],[x],[x,kYVTO],[x,pbQry],[x,pbQry,kYVTO],[F],[F,kYVTO],[F,pbQry],[F,pbQry,kYVTO],[F,x],[F,x,kYVTO],[F,x,pbQry],[F,x,pbQry,kYVTO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4433() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qfrc","ZBKP","UqSz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UqSz],[ZBKP],[ZBKP,UqSz],[qfrc],[qfrc,UqSz],[qfrc,ZBKP],[qfrc,ZBKP,UqSz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4434() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oEWL","NDbqE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NDbqE],[oEWL],[oEWL,NDbqE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4435() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","OgVla","dApH","nY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nY],[dApH],[dApH,nY],[OgVla],[OgVla,nY],[OgVla,dApH],[OgVla,dApH,nY],[R],[R,nY],[R,dApH],[R,dApH,nY],[R,OgVla],[R,OgVla,nY],[R,OgVla,dApH],[R,OgVla,dApH,nY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4436() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XDb","MwG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MwG],[XDb],[XDb,MwG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4437() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wNW","QT","d","Poc","WtAVZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WtAVZ],[Poc],[Poc,WtAVZ],[d],[d,WtAVZ],[d,Poc],[d,Poc,WtAVZ],[QT],[QT,WtAVZ],[QT,Poc],[QT,Poc,WtAVZ],[QT,d],[QT,d,WtAVZ],[QT,d,Poc],[QT,d,Poc,WtAVZ],[wNW],[wNW,WtAVZ],[wNW,Poc],[wNW,Poc,WtAVZ],[wNW,d],[wNW,d,WtAVZ],[wNW,d,Poc],[wNW,d,Poc,WtAVZ],[wNW,QT],[wNW,QT,WtAVZ],[wNW,QT,Poc],[wNW,QT,Poc,WtAVZ],[wNW,QT,d],[wNW,QT,d,WtAVZ],[wNW,QT,d,Poc],[wNW,QT,d,Poc,WtAVZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4438() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LszMN","JMeU","PrmjJ","jLk","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[jLk],[jLk,Y],[PrmjJ],[PrmjJ,Y],[PrmjJ,jLk],[PrmjJ,jLk,Y],[JMeU],[JMeU,Y],[JMeU,jLk],[JMeU,jLk,Y],[JMeU,PrmjJ],[JMeU,PrmjJ,Y],[JMeU,PrmjJ,jLk],[JMeU,PrmjJ,jLk,Y],[LszMN],[LszMN,Y],[LszMN,jLk],[LszMN,jLk,Y],[LszMN,PrmjJ],[LszMN,PrmjJ,Y],[LszMN,PrmjJ,jLk],[LszMN,PrmjJ,jLk,Y],[LszMN,JMeU],[LszMN,JMeU,Y],[LszMN,JMeU,jLk],[LszMN,JMeU,jLk,Y],[LszMN,JMeU,PrmjJ],[LszMN,JMeU,PrmjJ,Y],[LszMN,JMeU,PrmjJ,jLk],[LszMN,JMeU,PrmjJ,jLk,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4439() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pqv","Uk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Uk],[pqv],[pqv,Uk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4440() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4441() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","clDE","gEfNK","fUoc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fUoc],[gEfNK],[gEfNK,fUoc],[clDE],[clDE,fUoc],[clDE,gEfNK],[clDE,gEfNK,fUoc],[Q],[Q,fUoc],[Q,gEfNK],[Q,gEfNK,fUoc],[Q,clDE],[Q,clDE,fUoc],[Q,clDE,gEfNK],[Q,clDE,gEfNK,fUoc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4442() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4443() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tnl","NUA","HhFc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HhFc],[NUA],[NUA,HhFc],[tnl],[tnl,HhFc],[tnl,NUA],[tnl,NUA,HhFc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4444() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NKbf","pG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pG],[NKbf],[NKbf,pG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4445() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pDi","iRMQs","AiZs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AiZs],[iRMQs],[iRMQs,AiZs],[pDi],[pDi,AiZs],[pDi,iRMQs],[pDi,iRMQs,AiZs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4446() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "red","oSlcS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oSlcS],[red],[red,oSlcS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4447() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OwKd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OwKd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4448() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","f","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[f],[f,L],[F],[F,L],[F,f],[F,f,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4449() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tQqh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tQqh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4450() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BxW","ILpn","xFoAg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xFoAg],[ILpn],[ILpn,xFoAg],[BxW],[BxW,xFoAg],[BxW,ILpn],[BxW,ILpn,xFoAg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4451() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aMl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aMl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4452() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yay","ZJvws","U","PGrc","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[PGrc],[PGrc,o],[U],[U,o],[U,PGrc],[U,PGrc,o],[ZJvws],[ZJvws,o],[ZJvws,PGrc],[ZJvws,PGrc,o],[ZJvws,U],[ZJvws,U,o],[ZJvws,U,PGrc],[ZJvws,U,PGrc,o],[yay],[yay,o],[yay,PGrc],[yay,PGrc,o],[yay,U],[yay,U,o],[yay,U,PGrc],[yay,U,PGrc,o],[yay,ZJvws],[yay,ZJvws,o],[yay,ZJvws,PGrc],[yay,ZJvws,PGrc,o],[yay,ZJvws,U],[yay,ZJvws,U,o],[yay,ZJvws,U,PGrc],[yay,ZJvws,U,PGrc,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4453() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tGx","UPQ","BqKn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BqKn],[UPQ],[UPQ,BqKn],[tGx],[tGx,BqKn],[tGx,UPQ],[tGx,UPQ,BqKn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4454() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","HiWuQ","Ow","aMQzU","sq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sq],[aMQzU],[aMQzU,sq],[Ow],[Ow,sq],[Ow,aMQzU],[Ow,aMQzU,sq],[HiWuQ],[HiWuQ,sq],[HiWuQ,aMQzU],[HiWuQ,aMQzU,sq],[HiWuQ,Ow],[HiWuQ,Ow,sq],[HiWuQ,Ow,aMQzU],[HiWuQ,Ow,aMQzU,sq],[Q],[Q,sq],[Q,aMQzU],[Q,aMQzU,sq],[Q,Ow],[Q,Ow,sq],[Q,Ow,aMQzU],[Q,Ow,aMQzU,sq],[Q,HiWuQ],[Q,HiWuQ,sq],[Q,HiWuQ,aMQzU],[Q,HiWuQ,aMQzU,sq],[Q,HiWuQ,Ow],[Q,HiWuQ,Ow,sq],[Q,HiWuQ,Ow,aMQzU],[Q,HiWuQ,Ow,aMQzU,sq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4455() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kdj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kdj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4456() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WbP","z","sN","Qm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Qm],[sN],[sN,Qm],[z],[z,Qm],[z,sN],[z,sN,Qm],[WbP],[WbP,Qm],[WbP,sN],[WbP,sN,Qm],[WbP,z],[WbP,z,Qm],[WbP,z,sN],[WbP,z,sN,Qm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4457() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UNeak","Dj","xD","vou","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[vou],[vou,o],[xD],[xD,o],[xD,vou],[xD,vou,o],[Dj],[Dj,o],[Dj,vou],[Dj,vou,o],[Dj,xD],[Dj,xD,o],[Dj,xD,vou],[Dj,xD,vou,o],[UNeak],[UNeak,o],[UNeak,vou],[UNeak,vou,o],[UNeak,xD],[UNeak,xD,o],[UNeak,xD,vou],[UNeak,xD,vou,o],[UNeak,Dj],[UNeak,Dj,o],[UNeak,Dj,vou],[UNeak,Dj,vou,o],[UNeak,Dj,xD],[UNeak,Dj,xD,o],[UNeak,Dj,xD,vou],[UNeak,Dj,xD,vou,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4458() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","lqi","JwS","SnG","Aobe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Aobe],[SnG],[SnG,Aobe],[JwS],[JwS,Aobe],[JwS,SnG],[JwS,SnG,Aobe],[lqi],[lqi,Aobe],[lqi,SnG],[lqi,SnG,Aobe],[lqi,JwS],[lqi,JwS,Aobe],[lqi,JwS,SnG],[lqi,JwS,SnG,Aobe],[q],[q,Aobe],[q,SnG],[q,SnG,Aobe],[q,JwS],[q,JwS,Aobe],[q,JwS,SnG],[q,JwS,SnG,Aobe],[q,lqi],[q,lqi,Aobe],[q,lqi,SnG],[q,lqi,SnG,Aobe],[q,lqi,JwS],[q,lqi,JwS,Aobe],[q,lqi,JwS,SnG],[q,lqi,JwS,SnG,Aobe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4459() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aii","A","a","Mnny","FtqnX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FtqnX],[Mnny],[Mnny,FtqnX],[a],[a,FtqnX],[a,Mnny],[a,Mnny,FtqnX],[A],[A,FtqnX],[A,Mnny],[A,Mnny,FtqnX],[A,a],[A,a,FtqnX],[A,a,Mnny],[A,a,Mnny,FtqnX],[aii],[aii,FtqnX],[aii,Mnny],[aii,Mnny,FtqnX],[aii,a],[aii,a,FtqnX],[aii,a,Mnny],[aii,a,Mnny,FtqnX],[aii,A],[aii,A,FtqnX],[aii,A,Mnny],[aii,A,Mnny,FtqnX],[aii,A,a],[aii,A,a,FtqnX],[aii,A,a,Mnny],[aii,A,a,Mnny,FtqnX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4460() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qwQ","ZD","ht","Tlf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tlf],[ht],[ht,Tlf],[ZD],[ZD,Tlf],[ZD,ht],[ZD,ht,Tlf],[qwQ],[qwQ,Tlf],[qwQ,ht],[qwQ,ht,Tlf],[qwQ,ZD],[qwQ,ZD,Tlf],[qwQ,ZD,ht],[qwQ,ZD,ht,Tlf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4461() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nXePK","A")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[A],[nXePK],[nXePK,A]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4462() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[b]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4463() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Eaifc","c","BFiRg","yawYw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yawYw],[BFiRg],[BFiRg,yawYw],[c],[c,yawYw],[c,BFiRg],[c,BFiRg,yawYw],[Eaifc],[Eaifc,yawYw],[Eaifc,BFiRg],[Eaifc,BFiRg,yawYw],[Eaifc,c],[Eaifc,c,yawYw],[Eaifc,c,BFiRg],[Eaifc,c,BFiRg,yawYw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4464() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","bFebO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bFebO],[F],[F,bFebO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4465() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DcPc","bf","nYHb","lfWoO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lfWoO],[nYHb],[nYHb,lfWoO],[bf],[bf,lfWoO],[bf,nYHb],[bf,nYHb,lfWoO],[DcPc],[DcPc,lfWoO],[DcPc,nYHb],[DcPc,nYHb,lfWoO],[DcPc,bf],[DcPc,bf,lfWoO],[DcPc,bf,nYHb],[DcPc,bf,nYHb,lfWoO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4466() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UsmI","logx","vkNYX","dhPL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dhPL],[vkNYX],[vkNYX,dhPL],[logx],[logx,dhPL],[logx,vkNYX],[logx,vkNYX,dhPL],[UsmI],[UsmI,dhPL],[UsmI,vkNYX],[UsmI,vkNYX,dhPL],[UsmI,logx],[UsmI,logx,dhPL],[UsmI,logx,vkNYX],[UsmI,logx,vkNYX,dhPL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4467() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "drdOI","qsjz","rRxS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rRxS],[qsjz],[qsjz,rRxS],[drdOI],[drdOI,rRxS],[drdOI,qsjz],[drdOI,qsjz,rRxS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4468() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AXy","D","Xqm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xqm],[D],[D,Xqm],[AXy],[AXy,Xqm],[AXy,D],[AXy,D,Xqm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4469() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4470() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IoBBT","H","x","ZdV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZdV],[x],[x,ZdV],[H],[H,ZdV],[H,x],[H,x,ZdV],[IoBBT],[IoBBT,ZdV],[IoBBT,x],[IoBBT,x,ZdV],[IoBBT,H],[IoBBT,H,ZdV],[IoBBT,H,x],[IoBBT,H,x,ZdV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4471() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jVUAv","D","ensT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ensT],[D],[D,ensT],[jVUAv],[jVUAv,ensT],[jVUAv,D],[jVUAv,D,ensT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4472() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","ucbAy","F","kiE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kiE],[F],[F,kiE],[ucbAy],[ucbAy,kiE],[ucbAy,F],[ucbAy,F,kiE],[P],[P,kiE],[P,F],[P,F,kiE],[P,ucbAy],[P,ucbAy,kiE],[P,ucbAy,F],[P,ucbAy,F,kiE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4473() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OEb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OEb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4474() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[t]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4475() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","LNVj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LNVj],[b],[b,LNVj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4476() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qtZUa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qtZUa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4477() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LMd","MWO","PXnjX","YHC","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[YHC],[YHC,K],[PXnjX],[PXnjX,K],[PXnjX,YHC],[PXnjX,YHC,K],[MWO],[MWO,K],[MWO,YHC],[MWO,YHC,K],[MWO,PXnjX],[MWO,PXnjX,K],[MWO,PXnjX,YHC],[MWO,PXnjX,YHC,K],[LMd],[LMd,K],[LMd,YHC],[LMd,YHC,K],[LMd,PXnjX],[LMd,PXnjX,K],[LMd,PXnjX,YHC],[LMd,PXnjX,YHC,K],[LMd,MWO],[LMd,MWO,K],[LMd,MWO,YHC],[LMd,MWO,YHC,K],[LMd,MWO,PXnjX],[LMd,MWO,PXnjX,K],[LMd,MWO,PXnjX,YHC],[LMd,MWO,PXnjX,YHC,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4478() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fAtHn","NQxw","LXy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LXy],[NQxw],[NQxw,LXy],[fAtHn],[fAtHn,LXy],[fAtHn,NQxw],[fAtHn,NQxw,LXy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4479() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fKy","Y","NL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NL],[Y],[Y,NL],[fKy],[fKy,NL],[fKy,Y],[fKy,Y,NL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4480() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","PqlI","vZC","DUZx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DUZx],[vZC],[vZC,DUZx],[PqlI],[PqlI,DUZx],[PqlI,vZC],[PqlI,vZC,DUZx],[A],[A,DUZx],[A,vZC],[A,vZC,DUZx],[A,PqlI],[A,PqlI,DUZx],[A,PqlI,vZC],[A,PqlI,vZC,DUZx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4481() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "egAn","F","sp","othL","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[othL],[othL,O],[sp],[sp,O],[sp,othL],[sp,othL,O],[F],[F,O],[F,othL],[F,othL,O],[F,sp],[F,sp,O],[F,sp,othL],[F,sp,othL,O],[egAn],[egAn,O],[egAn,othL],[egAn,othL,O],[egAn,sp],[egAn,sp,O],[egAn,sp,othL],[egAn,sp,othL,O],[egAn,F],[egAn,F,O],[egAn,F,othL],[egAn,F,othL,O],[egAn,F,sp],[egAn,F,sp,O],[egAn,F,sp,othL],[egAn,F,sp,othL,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4482() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tWVMT","f","vhbq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vhbq],[f],[f,vhbq],[tWVMT],[tWVMT,vhbq],[tWVMT,f],[tWVMT,f,vhbq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4483() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QqV","fQ","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[fQ],[fQ,O],[QqV],[QqV,O],[QqV,fQ],[QqV,fQ,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4484() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RF","KJQJo","aNz","Lbr","fzP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fzP],[Lbr],[Lbr,fzP],[aNz],[aNz,fzP],[aNz,Lbr],[aNz,Lbr,fzP],[KJQJo],[KJQJo,fzP],[KJQJo,Lbr],[KJQJo,Lbr,fzP],[KJQJo,aNz],[KJQJo,aNz,fzP],[KJQJo,aNz,Lbr],[KJQJo,aNz,Lbr,fzP],[RF],[RF,fzP],[RF,Lbr],[RF,Lbr,fzP],[RF,aNz],[RF,aNz,fzP],[RF,aNz,Lbr],[RF,aNz,Lbr,fzP],[RF,KJQJo],[RF,KJQJo,fzP],[RF,KJQJo,Lbr],[RF,KJQJo,Lbr,fzP],[RF,KJQJo,aNz],[RF,KJQJo,aNz,fzP],[RF,KJQJo,aNz,Lbr],[RF,KJQJo,aNz,Lbr,fzP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4485() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Eh","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[Eh],[Eh,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4486() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Iz","PWJ","R","Vzhb","sgduq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sgduq],[Vzhb],[Vzhb,sgduq],[R],[R,sgduq],[R,Vzhb],[R,Vzhb,sgduq],[PWJ],[PWJ,sgduq],[PWJ,Vzhb],[PWJ,Vzhb,sgduq],[PWJ,R],[PWJ,R,sgduq],[PWJ,R,Vzhb],[PWJ,R,Vzhb,sgduq],[Iz],[Iz,sgduq],[Iz,Vzhb],[Iz,Vzhb,sgduq],[Iz,R],[Iz,R,sgduq],[Iz,R,Vzhb],[Iz,R,Vzhb,sgduq],[Iz,PWJ],[Iz,PWJ,sgduq],[Iz,PWJ,Vzhb],[Iz,PWJ,Vzhb,sgduq],[Iz,PWJ,R],[Iz,PWJ,R,sgduq],[Iz,PWJ,R,Vzhb],[Iz,PWJ,R,Vzhb,sgduq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4487() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[B]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4488() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nDrvV","H","J","ZtlI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZtlI],[J],[J,ZtlI],[H],[H,ZtlI],[H,J],[H,J,ZtlI],[nDrvV],[nDrvV,ZtlI],[nDrvV,J],[nDrvV,J,ZtlI],[nDrvV,H],[nDrvV,H,ZtlI],[nDrvV,H,J],[nDrvV,H,J,ZtlI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4489() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xcqL","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[xcqL],[xcqL,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4490() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BRGeV","wWQE","QI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QI],[wWQE],[wWQE,QI],[BRGeV],[BRGeV,QI],[BRGeV,wWQE],[BRGeV,wWQE,QI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4491() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UxrBH","FEgq","hQHbT","iRmyV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iRmyV],[hQHbT],[hQHbT,iRmyV],[FEgq],[FEgq,iRmyV],[FEgq,hQHbT],[FEgq,hQHbT,iRmyV],[UxrBH],[UxrBH,iRmyV],[UxrBH,hQHbT],[UxrBH,hQHbT,iRmyV],[UxrBH,FEgq],[UxrBH,FEgq,iRmyV],[UxrBH,FEgq,hQHbT],[UxrBH,FEgq,hQHbT,iRmyV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4492() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lJXM","TmNx","oF","x","AGlH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AGlH],[x],[x,AGlH],[oF],[oF,AGlH],[oF,x],[oF,x,AGlH],[TmNx],[TmNx,AGlH],[TmNx,x],[TmNx,x,AGlH],[TmNx,oF],[TmNx,oF,AGlH],[TmNx,oF,x],[TmNx,oF,x,AGlH],[lJXM],[lJXM,AGlH],[lJXM,x],[lJXM,x,AGlH],[lJXM,oF],[lJXM,oF,AGlH],[lJXM,oF,x],[lJXM,oF,x,AGlH],[lJXM,TmNx],[lJXM,TmNx,AGlH],[lJXM,TmNx,x],[lJXM,TmNx,x,AGlH],[lJXM,TmNx,oF],[lJXM,TmNx,oF,AGlH],[lJXM,TmNx,oF,x],[lJXM,TmNx,oF,x,AGlH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4493() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BJlo","DxXo","MkwpI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MkwpI],[DxXo],[DxXo,MkwpI],[BJlo],[BJlo,MkwpI],[BJlo,DxXo],[BJlo,DxXo,MkwpI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4494() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cOivE","qUxez")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qUxez],[cOivE],[cOivE,qUxez]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4495() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OcZIE","h","iZzTv","zoAqu","sCm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sCm],[zoAqu],[zoAqu,sCm],[iZzTv],[iZzTv,sCm],[iZzTv,zoAqu],[iZzTv,zoAqu,sCm],[h],[h,sCm],[h,zoAqu],[h,zoAqu,sCm],[h,iZzTv],[h,iZzTv,sCm],[h,iZzTv,zoAqu],[h,iZzTv,zoAqu,sCm],[OcZIE],[OcZIE,sCm],[OcZIE,zoAqu],[OcZIE,zoAqu,sCm],[OcZIE,iZzTv],[OcZIE,iZzTv,sCm],[OcZIE,iZzTv,zoAqu],[OcZIE,iZzTv,zoAqu,sCm],[OcZIE,h],[OcZIE,h,sCm],[OcZIE,h,zoAqu],[OcZIE,h,zoAqu,sCm],[OcZIE,h,iZzTv],[OcZIE,h,iZzTv,sCm],[OcZIE,h,iZzTv,zoAqu],[OcZIE,h,iZzTv,zoAqu,sCm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4496() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iM","z","TXEm","cYXtt","liAP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[liAP],[cYXtt],[cYXtt,liAP],[TXEm],[TXEm,liAP],[TXEm,cYXtt],[TXEm,cYXtt,liAP],[z],[z,liAP],[z,cYXtt],[z,cYXtt,liAP],[z,TXEm],[z,TXEm,liAP],[z,TXEm,cYXtt],[z,TXEm,cYXtt,liAP],[iM],[iM,liAP],[iM,cYXtt],[iM,cYXtt,liAP],[iM,TXEm],[iM,TXEm,liAP],[iM,TXEm,cYXtt],[iM,TXEm,cYXtt,liAP],[iM,z],[iM,z,liAP],[iM,z,cYXtt],[iM,z,cYXtt,liAP],[iM,z,TXEm],[iM,z,TXEm,liAP],[iM,z,TXEm,cYXtt],[iM,z,TXEm,cYXtt,liAP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4497() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[U]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4498() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yXX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yXX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4499() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gDAP","BF","NB","qKeIl","yUxl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yUxl],[qKeIl],[qKeIl,yUxl],[NB],[NB,yUxl],[NB,qKeIl],[NB,qKeIl,yUxl],[BF],[BF,yUxl],[BF,qKeIl],[BF,qKeIl,yUxl],[BF,NB],[BF,NB,yUxl],[BF,NB,qKeIl],[BF,NB,qKeIl,yUxl],[gDAP],[gDAP,yUxl],[gDAP,qKeIl],[gDAP,qKeIl,yUxl],[gDAP,NB],[gDAP,NB,yUxl],[gDAP,NB,qKeIl],[gDAP,NB,qKeIl,yUxl],[gDAP,BF],[gDAP,BF,yUxl],[gDAP,BF,qKeIl],[gDAP,BF,qKeIl,yUxl],[gDAP,BF,NB],[gDAP,BF,NB,yUxl],[gDAP,BF,NB,qKeIl],[gDAP,BF,NB,qKeIl,yUxl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4500() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NJKSz","IJm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IJm],[NJKSz],[NJKSz,IJm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4501() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "J","qxug")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qxug],[J],[J,qxug]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4502() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eoUBX","mVP","W","lg","hSY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hSY],[lg],[lg,hSY],[W],[W,hSY],[W,lg],[W,lg,hSY],[mVP],[mVP,hSY],[mVP,lg],[mVP,lg,hSY],[mVP,W],[mVP,W,hSY],[mVP,W,lg],[mVP,W,lg,hSY],[eoUBX],[eoUBX,hSY],[eoUBX,lg],[eoUBX,lg,hSY],[eoUBX,W],[eoUBX,W,hSY],[eoUBX,W,lg],[eoUBX,W,lg,hSY],[eoUBX,mVP],[eoUBX,mVP,hSY],[eoUBX,mVP,lg],[eoUBX,mVP,lg,hSY],[eoUBX,mVP,W],[eoUBX,mVP,W,hSY],[eoUBX,mVP,W,lg],[eoUBX,mVP,W,lg,hSY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4503() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YOogO","vUam","EloW","xv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xv],[EloW],[EloW,xv],[vUam],[vUam,xv],[vUam,EloW],[vUam,EloW,xv],[YOogO],[YOogO,xv],[YOogO,EloW],[YOogO,EloW,xv],[YOogO,vUam],[YOogO,vUam,xv],[YOogO,vUam,EloW],[YOogO,vUam,EloW,xv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4504() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QFY","gXOiI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gXOiI],[QFY],[QFY,gXOiI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4505() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","PEk","zFSXe","Ve","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[Ve],[Ve,O],[zFSXe],[zFSXe,O],[zFSXe,Ve],[zFSXe,Ve,O],[PEk],[PEk,O],[PEk,Ve],[PEk,Ve,O],[PEk,zFSXe],[PEk,zFSXe,O],[PEk,zFSXe,Ve],[PEk,zFSXe,Ve,O],[S],[S,O],[S,Ve],[S,Ve,O],[S,zFSXe],[S,zFSXe,O],[S,zFSXe,Ve],[S,zFSXe,Ve,O],[S,PEk],[S,PEk,O],[S,PEk,Ve],[S,PEk,Ve,O],[S,PEk,zFSXe],[S,PEk,zFSXe,O],[S,PEk,zFSXe,Ve],[S,PEk,zFSXe,Ve,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4506() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4507() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZJY","H","Y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Y],[H],[H,Y],[ZJY],[ZJY,Y],[ZJY,H],[ZJY,H,Y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4508() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "URtN","b","X","ed")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ed],[X],[X,ed],[b],[b,ed],[b,X],[b,X,ed],[URtN],[URtN,ed],[URtN,X],[URtN,X,ed],[URtN,b],[URtN,b,ed],[URtN,b,X],[URtN,b,X,ed]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4509() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fISSI","FJnmY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FJnmY],[fISSI],[fISSI,FJnmY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4510() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kLSvS","byix")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[byix],[kLSvS],[kLSvS,byix]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4511() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Tx","U","qVXv","FA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FA],[qVXv],[qVXv,FA],[U],[U,FA],[U,qVXv],[U,qVXv,FA],[Tx],[Tx,FA],[Tx,qVXv],[Tx,qVXv,FA],[Tx,U],[Tx,U,FA],[Tx,U,qVXv],[Tx,U,qVXv,FA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4512() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RU","DkDwt","g","AoH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AoH],[g],[g,AoH],[DkDwt],[DkDwt,AoH],[DkDwt,g],[DkDwt,g,AoH],[RU],[RU,AoH],[RU,g],[RU,g,AoH],[RU,DkDwt],[RU,DkDwt,AoH],[RU,DkDwt,g],[RU,DkDwt,g,AoH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4513() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UFR","LTXr","iiB","IR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IR],[iiB],[iiB,IR],[LTXr],[LTXr,IR],[LTXr,iiB],[LTXr,iiB,IR],[UFR],[UFR,IR],[UFR,iiB],[UFR,iiB,IR],[UFR,LTXr],[UFR,LTXr,IR],[UFR,LTXr,iiB],[UFR,LTXr,iiB,IR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4514() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X","lLj","UcOu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UcOu],[lLj],[lLj,UcOu],[X],[X,UcOu],[X,lLj],[X,lLj,UcOu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4515() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4516() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qPWoV","qU","wBT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wBT],[qU],[qU,wBT],[qPWoV],[qPWoV,wBT],[qPWoV,qU],[qPWoV,qU,wBT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4517() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pXY","MCxb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MCxb],[pXY],[pXY,MCxb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4518() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WLEo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WLEo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4519() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VYzU","hO","gB","l","Hrf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hrf],[l],[l,Hrf],[gB],[gB,Hrf],[gB,l],[gB,l,Hrf],[hO],[hO,Hrf],[hO,l],[hO,l,Hrf],[hO,gB],[hO,gB,Hrf],[hO,gB,l],[hO,gB,l,Hrf],[VYzU],[VYzU,Hrf],[VYzU,l],[VYzU,l,Hrf],[VYzU,gB],[VYzU,gB,Hrf],[VYzU,gB,l],[VYzU,gB,l,Hrf],[VYzU,hO],[VYzU,hO,Hrf],[VYzU,hO,l],[VYzU,hO,l,Hrf],[VYzU,hO,gB],[VYzU,hO,gB,Hrf],[VYzU,hO,gB,l],[VYzU,hO,gB,l,Hrf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4520() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fHTuQ","txX","Vm","Je")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Je],[Vm],[Vm,Je],[txX],[txX,Je],[txX,Vm],[txX,Vm,Je],[fHTuQ],[fHTuQ,Je],[fHTuQ,Vm],[fHTuQ,Vm,Je],[fHTuQ,txX],[fHTuQ,txX,Je],[fHTuQ,txX,Vm],[fHTuQ,txX,Vm,Je]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4521() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zQwgf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zQwgf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4522() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JROim","Uiepj","byitT","RowS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RowS],[byitT],[byitT,RowS],[Uiepj],[Uiepj,RowS],[Uiepj,byitT],[Uiepj,byitT,RowS],[JROim],[JROim,RowS],[JROim,byitT],[JROim,byitT,RowS],[JROim,Uiepj],[JROim,Uiepj,RowS],[JROim,Uiepj,byitT],[JROim,Uiepj,byitT,RowS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4523() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aC","vEGkJ","NKujT","fxJHX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fxJHX],[NKujT],[NKujT,fxJHX],[vEGkJ],[vEGkJ,fxJHX],[vEGkJ,NKujT],[vEGkJ,NKujT,fxJHX],[aC],[aC,fxJHX],[aC,NKujT],[aC,NKujT,fxJHX],[aC,vEGkJ],[aC,vEGkJ,fxJHX],[aC,vEGkJ,NKujT],[aC,vEGkJ,NKujT,fxJHX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4524() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GY","ep")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ep],[GY],[GY,ep]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4525() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GKI","h","hXMj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hXMj],[h],[h,hXMj],[GKI],[GKI,hXMj],[GKI,h],[GKI,h,hXMj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4526() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WDSRG","QjqL","FMNWA","gflLc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gflLc],[FMNWA],[FMNWA,gflLc],[QjqL],[QjqL,gflLc],[QjqL,FMNWA],[QjqL,FMNWA,gflLc],[WDSRG],[WDSRG,gflLc],[WDSRG,FMNWA],[WDSRG,FMNWA,gflLc],[WDSRG,QjqL],[WDSRG,QjqL,gflLc],[WDSRG,QjqL,FMNWA],[WDSRG,QjqL,FMNWA,gflLc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4527() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4528() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YEB","vS","QGR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QGR],[vS],[vS,QGR],[YEB],[YEB,QGR],[YEB,vS],[YEB,vS,QGR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4529() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "isCcV","TbRUP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TbRUP],[isCcV],[isCcV,TbRUP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4530() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wKU","zHYNO","iTzTm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iTzTm],[zHYNO],[zHYNO,iTzTm],[wKU],[wKU,iTzTm],[wKU,zHYNO],[wKU,zHYNO,iTzTm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4531() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","WYh","Yxeg","li")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[li],[Yxeg],[Yxeg,li],[WYh],[WYh,li],[WYh,Yxeg],[WYh,Yxeg,li],[R],[R,li],[R,Yxeg],[R,Yxeg,li],[R,WYh],[R,WYh,li],[R,WYh,Yxeg],[R,WYh,Yxeg,li]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4532() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZVPq","AWCd","Kv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kv],[AWCd],[AWCd,Kv],[ZVPq],[ZVPq,Kv],[ZVPq,AWCd],[ZVPq,AWCd,Kv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4533() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","ujW","w","TznY","oh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oh],[TznY],[TznY,oh],[w],[w,oh],[w,TznY],[w,TznY,oh],[ujW],[ujW,oh],[ujW,TznY],[ujW,TznY,oh],[ujW,w],[ujW,w,oh],[ujW,w,TznY],[ujW,w,TznY,oh],[P],[P,oh],[P,TznY],[P,TznY,oh],[P,w],[P,w,oh],[P,w,TznY],[P,w,TznY,oh],[P,ujW],[P,ujW,oh],[P,ujW,TznY],[P,ujW,TznY,oh],[P,ujW,w],[P,ujW,w,oh],[P,ujW,w,TznY],[P,ujW,w,TznY,oh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4534() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","NcU","lSj","h","fhgEc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fhgEc],[h],[h,fhgEc],[lSj],[lSj,fhgEc],[lSj,h],[lSj,h,fhgEc],[NcU],[NcU,fhgEc],[NcU,h],[NcU,h,fhgEc],[NcU,lSj],[NcU,lSj,fhgEc],[NcU,lSj,h],[NcU,lSj,h,fhgEc],[P],[P,fhgEc],[P,h],[P,h,fhgEc],[P,lSj],[P,lSj,fhgEc],[P,lSj,h],[P,lSj,h,fhgEc],[P,NcU],[P,NcU,fhgEc],[P,NcU,h],[P,NcU,h,fhgEc],[P,NcU,lSj],[P,NcU,lSj,fhgEc],[P,NcU,lSj,h],[P,NcU,lSj,h,fhgEc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4535() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KMVQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KMVQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4536() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","cIWvI","BdVPC","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[BdVPC],[BdVPC,Z],[cIWvI],[cIWvI,Z],[cIWvI,BdVPC],[cIWvI,BdVPC,Z],[q],[q,Z],[q,BdVPC],[q,BdVPC,Z],[q,cIWvI],[q,cIWvI,Z],[q,cIWvI,BdVPC],[q,cIWvI,BdVPC,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4537() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XlSX","D","mQjD","YMQ","hLS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hLS],[YMQ],[YMQ,hLS],[mQjD],[mQjD,hLS],[mQjD,YMQ],[mQjD,YMQ,hLS],[D],[D,hLS],[D,YMQ],[D,YMQ,hLS],[D,mQjD],[D,mQjD,hLS],[D,mQjD,YMQ],[D,mQjD,YMQ,hLS],[XlSX],[XlSX,hLS],[XlSX,YMQ],[XlSX,YMQ,hLS],[XlSX,mQjD],[XlSX,mQjD,hLS],[XlSX,mQjD,YMQ],[XlSX,mQjD,YMQ,hLS],[XlSX,D],[XlSX,D,hLS],[XlSX,D,YMQ],[XlSX,D,YMQ,hLS],[XlSX,D,mQjD],[XlSX,D,mQjD,hLS],[XlSX,D,mQjD,YMQ],[XlSX,D,mQjD,YMQ,hLS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4538() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pecID","W","UMQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UMQ],[W],[W,UMQ],[pecID],[pecID,UMQ],[pecID,W],[pecID,W,UMQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4539() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MMUJ","ULSa","kqLQX","xo","vVQzG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vVQzG],[xo],[xo,vVQzG],[kqLQX],[kqLQX,vVQzG],[kqLQX,xo],[kqLQX,xo,vVQzG],[ULSa],[ULSa,vVQzG],[ULSa,xo],[ULSa,xo,vVQzG],[ULSa,kqLQX],[ULSa,kqLQX,vVQzG],[ULSa,kqLQX,xo],[ULSa,kqLQX,xo,vVQzG],[MMUJ],[MMUJ,vVQzG],[MMUJ,xo],[MMUJ,xo,vVQzG],[MMUJ,kqLQX],[MMUJ,kqLQX,vVQzG],[MMUJ,kqLQX,xo],[MMUJ,kqLQX,xo,vVQzG],[MMUJ,ULSa],[MMUJ,ULSa,vVQzG],[MMUJ,ULSa,xo],[MMUJ,ULSa,xo,vVQzG],[MMUJ,ULSa,kqLQX],[MMUJ,ULSa,kqLQX,vVQzG],[MMUJ,ULSa,kqLQX,xo],[MMUJ,ULSa,kqLQX,xo,vVQzG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4540() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hOh","xsB","I","dbFI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dbFI],[I],[I,dbFI],[xsB],[xsB,dbFI],[xsB,I],[xsB,I,dbFI],[hOh],[hOh,dbFI],[hOh,I],[hOh,I,dbFI],[hOh,xsB],[hOh,xsB,dbFI],[hOh,xsB,I],[hOh,xsB,I,dbFI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4541() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jtld","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[jtld],[jtld,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4542() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Yl","eyZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eyZ],[Yl],[Yl,eyZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4543() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bXmE","FJ","sas","NY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NY],[sas],[sas,NY],[FJ],[FJ,NY],[FJ,sas],[FJ,sas,NY],[bXmE],[bXmE,NY],[bXmE,sas],[bXmE,sas,NY],[bXmE,FJ],[bXmE,FJ,NY],[bXmE,FJ,sas],[bXmE,FJ,sas,NY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4544() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LJM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LJM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4545() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mm","YJH","PN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PN],[YJH],[YJH,PN],[mm],[mm,PN],[mm,YJH],[mm,YJH,PN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4546() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oxK","vRPxT","vZtRr","EN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EN],[vZtRr],[vZtRr,EN],[vRPxT],[vRPxT,EN],[vRPxT,vZtRr],[vRPxT,vZtRr,EN],[oxK],[oxK,EN],[oxK,vZtRr],[oxK,vZtRr,EN],[oxK,vRPxT],[oxK,vRPxT,EN],[oxK,vRPxT,vZtRr],[oxK,vRPxT,vZtRr,EN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4547() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BC","j","yHoU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yHoU],[j],[j,yHoU],[BC],[BC,yHoU],[BC,j],[BC,j,yHoU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4548() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qlP","FK","IIVal","cj","Jr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Jr],[cj],[cj,Jr],[IIVal],[IIVal,Jr],[IIVal,cj],[IIVal,cj,Jr],[FK],[FK,Jr],[FK,cj],[FK,cj,Jr],[FK,IIVal],[FK,IIVal,Jr],[FK,IIVal,cj],[FK,IIVal,cj,Jr],[qlP],[qlP,Jr],[qlP,cj],[qlP,cj,Jr],[qlP,IIVal],[qlP,IIVal,Jr],[qlP,IIVal,cj],[qlP,IIVal,cj,Jr],[qlP,FK],[qlP,FK,Jr],[qlP,FK,cj],[qlP,FK,cj,Jr],[qlP,FK,IIVal],[qlP,FK,IIVal,Jr],[qlP,FK,IIVal,cj],[qlP,FK,IIVal,cj,Jr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4549() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Lb","HbS","M","Saze")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Saze],[M],[M,Saze],[HbS],[HbS,Saze],[HbS,M],[HbS,M,Saze],[Lb],[Lb,Saze],[Lb,M],[Lb,M,Saze],[Lb,HbS],[Lb,HbS,Saze],[Lb,HbS,M],[Lb,HbS,M,Saze]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4550() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eXEyb","Rv","XyfEL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XyfEL],[Rv],[Rv,XyfEL],[eXEyb],[eXEyb,XyfEL],[eXEyb,Rv],[eXEyb,Rv,XyfEL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4551() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TNXgM","E","HRT","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[HRT],[HRT,o],[E],[E,o],[E,HRT],[E,HRT,o],[TNXgM],[TNXgM,o],[TNXgM,HRT],[TNXgM,HRT,o],[TNXgM,E],[TNXgM,E,o],[TNXgM,E,HRT],[TNXgM,E,HRT,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4552() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KCJi","Nb","GxuH","Uwn","uOY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uOY],[Uwn],[Uwn,uOY],[GxuH],[GxuH,uOY],[GxuH,Uwn],[GxuH,Uwn,uOY],[Nb],[Nb,uOY],[Nb,Uwn],[Nb,Uwn,uOY],[Nb,GxuH],[Nb,GxuH,uOY],[Nb,GxuH,Uwn],[Nb,GxuH,Uwn,uOY],[KCJi],[KCJi,uOY],[KCJi,Uwn],[KCJi,Uwn,uOY],[KCJi,GxuH],[KCJi,GxuH,uOY],[KCJi,GxuH,Uwn],[KCJi,GxuH,Uwn,uOY],[KCJi,Nb],[KCJi,Nb,uOY],[KCJi,Nb,Uwn],[KCJi,Nb,Uwn,uOY],[KCJi,Nb,GxuH],[KCJi,Nb,GxuH,uOY],[KCJi,Nb,GxuH,Uwn],[KCJi,Nb,GxuH,Uwn,uOY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4553() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","qrC","Uy","Ga","Cq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cq],[Ga],[Ga,Cq],[Uy],[Uy,Cq],[Uy,Ga],[Uy,Ga,Cq],[qrC],[qrC,Cq],[qrC,Ga],[qrC,Ga,Cq],[qrC,Uy],[qrC,Uy,Cq],[qrC,Uy,Ga],[qrC,Uy,Ga,Cq],[Q],[Q,Cq],[Q,Ga],[Q,Ga,Cq],[Q,Uy],[Q,Uy,Cq],[Q,Uy,Ga],[Q,Uy,Ga,Cq],[Q,qrC],[Q,qrC,Cq],[Q,qrC,Ga],[Q,qrC,Ga,Cq],[Q,qrC,Uy],[Q,qrC,Uy,Cq],[Q,qrC,Uy,Ga],[Q,qrC,Uy,Ga,Cq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4554() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QOlzU","fEUrf","hJXCq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hJXCq],[fEUrf],[fEUrf,hJXCq],[QOlzU],[QOlzU,hJXCq],[QOlzU,fEUrf],[QOlzU,fEUrf,hJXCq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4555() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","sIZE","BKvlP","YLQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YLQ],[BKvlP],[BKvlP,YLQ],[sIZE],[sIZE,YLQ],[sIZE,BKvlP],[sIZE,BKvlP,YLQ],[R],[R,YLQ],[R,BKvlP],[R,BKvlP,YLQ],[R,sIZE],[R,sIZE,YLQ],[R,sIZE,BKvlP],[R,sIZE,BKvlP,YLQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4556() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VCm","c","oG","izuYA","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[izuYA],[izuYA,l],[oG],[oG,l],[oG,izuYA],[oG,izuYA,l],[c],[c,l],[c,izuYA],[c,izuYA,l],[c,oG],[c,oG,l],[c,oG,izuYA],[c,oG,izuYA,l],[VCm],[VCm,l],[VCm,izuYA],[VCm,izuYA,l],[VCm,oG],[VCm,oG,l],[VCm,oG,izuYA],[VCm,oG,izuYA,l],[VCm,c],[VCm,c,l],[VCm,c,izuYA],[VCm,c,izuYA,l],[VCm,c,oG],[VCm,c,oG,l],[VCm,c,oG,izuYA],[VCm,c,oG,izuYA,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4557() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "x","UeX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UeX],[x],[x,UeX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4558() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dop","YHJw","RhxKh","XSAWc","xT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xT],[XSAWc],[XSAWc,xT],[RhxKh],[RhxKh,xT],[RhxKh,XSAWc],[RhxKh,XSAWc,xT],[YHJw],[YHJw,xT],[YHJw,XSAWc],[YHJw,XSAWc,xT],[YHJw,RhxKh],[YHJw,RhxKh,xT],[YHJw,RhxKh,XSAWc],[YHJw,RhxKh,XSAWc,xT],[dop],[dop,xT],[dop,XSAWc],[dop,XSAWc,xT],[dop,RhxKh],[dop,RhxKh,xT],[dop,RhxKh,XSAWc],[dop,RhxKh,XSAWc,xT],[dop,YHJw],[dop,YHJw,xT],[dop,YHJw,XSAWc],[dop,YHJw,XSAWc,xT],[dop,YHJw,RhxKh],[dop,YHJw,RhxKh,xT],[dop,YHJw,RhxKh,XSAWc],[dop,YHJw,RhxKh,XSAWc,xT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4559() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bEk","Iavi","OMfG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OMfG],[Iavi],[Iavi,OMfG],[bEk],[bEk,OMfG],[bEk,Iavi],[bEk,Iavi,OMfG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4560() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oo","hx","yKSm","KeZyp","AP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AP],[KeZyp],[KeZyp,AP],[yKSm],[yKSm,AP],[yKSm,KeZyp],[yKSm,KeZyp,AP],[hx],[hx,AP],[hx,KeZyp],[hx,KeZyp,AP],[hx,yKSm],[hx,yKSm,AP],[hx,yKSm,KeZyp],[hx,yKSm,KeZyp,AP],[oo],[oo,AP],[oo,KeZyp],[oo,KeZyp,AP],[oo,yKSm],[oo,yKSm,AP],[oo,yKSm,KeZyp],[oo,yKSm,KeZyp,AP],[oo,hx],[oo,hx,AP],[oo,hx,KeZyp],[oo,hx,KeZyp,AP],[oo,hx,yKSm],[oo,hx,yKSm,AP],[oo,hx,yKSm,KeZyp],[oo,hx,yKSm,KeZyp,AP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4561() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","OfKYk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OfKYk],[p],[p,OfKYk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4562() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","DP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DP],[Q],[Q,DP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4563() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Taf","HXX","QgRX","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[QgRX],[QgRX,Z],[HXX],[HXX,Z],[HXX,QgRX],[HXX,QgRX,Z],[Taf],[Taf,Z],[Taf,QgRX],[Taf,QgRX,Z],[Taf,HXX],[Taf,HXX,Z],[Taf,HXX,QgRX],[Taf,HXX,QgRX,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4564() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","g","pY","pafc","LTW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LTW],[pafc],[pafc,LTW],[pY],[pY,LTW],[pY,pafc],[pY,pafc,LTW],[g],[g,LTW],[g,pafc],[g,pafc,LTW],[g,pY],[g,pY,LTW],[g,pY,pafc],[g,pY,pafc,LTW],[F],[F,LTW],[F,pafc],[F,pafc,LTW],[F,pY],[F,pY,LTW],[F,pY,pafc],[F,pY,pafc,LTW],[F,g],[F,g,LTW],[F,g,pafc],[F,g,pafc,LTW],[F,g,pY],[F,g,pY,LTW],[F,g,pY,pafc],[F,g,pY,pafc,LTW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4565() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c","eYLJp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eYLJp],[c],[c,eYLJp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4566() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vsm","T","RAV","EAVyA","Xcygc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Xcygc],[EAVyA],[EAVyA,Xcygc],[RAV],[RAV,Xcygc],[RAV,EAVyA],[RAV,EAVyA,Xcygc],[T],[T,Xcygc],[T,EAVyA],[T,EAVyA,Xcygc],[T,RAV],[T,RAV,Xcygc],[T,RAV,EAVyA],[T,RAV,EAVyA,Xcygc],[vsm],[vsm,Xcygc],[vsm,EAVyA],[vsm,EAVyA,Xcygc],[vsm,RAV],[vsm,RAV,Xcygc],[vsm,RAV,EAVyA],[vsm,RAV,EAVyA,Xcygc],[vsm,T],[vsm,T,Xcygc],[vsm,T,EAVyA],[vsm,T,EAVyA,Xcygc],[vsm,T,RAV],[vsm,T,RAV,Xcygc],[vsm,T,RAV,EAVyA],[vsm,T,RAV,EAVyA,Xcygc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4567() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iPCBa","xLOai","QGe","kulqT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kulqT],[QGe],[QGe,kulqT],[xLOai],[xLOai,kulqT],[xLOai,QGe],[xLOai,QGe,kulqT],[iPCBa],[iPCBa,kulqT],[iPCBa,QGe],[iPCBa,QGe,kulqT],[iPCBa,xLOai],[iPCBa,xLOai,kulqT],[iPCBa,xLOai,QGe],[iPCBa,xLOai,QGe,kulqT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4568() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ItzJA","nzJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nzJ],[ItzJA],[ItzJA,nzJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4569() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tDe","T","zsQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zsQ],[T],[T,zsQ],[tDe],[tDe,zsQ],[tDe,T],[tDe,T,zsQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4570() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GpeB","x","QQbmr","KcNRn","Ukras")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ukras],[KcNRn],[KcNRn,Ukras],[QQbmr],[QQbmr,Ukras],[QQbmr,KcNRn],[QQbmr,KcNRn,Ukras],[x],[x,Ukras],[x,KcNRn],[x,KcNRn,Ukras],[x,QQbmr],[x,QQbmr,Ukras],[x,QQbmr,KcNRn],[x,QQbmr,KcNRn,Ukras],[GpeB],[GpeB,Ukras],[GpeB,KcNRn],[GpeB,KcNRn,Ukras],[GpeB,QQbmr],[GpeB,QQbmr,Ukras],[GpeB,QQbmr,KcNRn],[GpeB,QQbmr,KcNRn,Ukras],[GpeB,x],[GpeB,x,Ukras],[GpeB,x,KcNRn],[GpeB,x,KcNRn,Ukras],[GpeB,x,QQbmr],[GpeB,x,QQbmr,Ukras],[GpeB,x,QQbmr,KcNRn],[GpeB,x,QQbmr,KcNRn,Ukras]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4571() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "woY","PUw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PUw],[woY],[woY,PUw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4572() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GJ","i","HaQe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HaQe],[i],[i,HaQe],[GJ],[GJ,HaQe],[GJ,i],[GJ,i,HaQe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4573() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","eILe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eILe],[p],[p,eILe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4574() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dEnZh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dEnZh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4575() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dCjCZ","PcN","CxT","Ve")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ve],[CxT],[CxT,Ve],[PcN],[PcN,Ve],[PcN,CxT],[PcN,CxT,Ve],[dCjCZ],[dCjCZ,Ve],[dCjCZ,CxT],[dCjCZ,CxT,Ve],[dCjCZ,PcN],[dCjCZ,PcN,Ve],[dCjCZ,PcN,CxT],[dCjCZ,PcN,CxT,Ve]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4576() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jJQ","nwbP","IBGw","mwF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mwF],[IBGw],[IBGw,mwF],[nwbP],[nwbP,mwF],[nwbP,IBGw],[nwbP,IBGw,mwF],[jJQ],[jJQ,mwF],[jJQ,IBGw],[jJQ,IBGw,mwF],[jJQ,nwbP],[jJQ,nwbP,mwF],[jJQ,nwbP,IBGw],[jJQ,nwbP,IBGw,mwF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4577() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gWAJr","M")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[M],[gWAJr],[gWAJr,M]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4578() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X","kIG","L","Yu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yu],[L],[L,Yu],[kIG],[kIG,Yu],[kIG,L],[kIG,L,Yu],[X],[X,Yu],[X,L],[X,L,Yu],[X,kIG],[X,kIG,Yu],[X,kIG,L],[X,kIG,L,Yu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4579() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qd","v","pEL","QIq","pmuKs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pmuKs],[QIq],[QIq,pmuKs],[pEL],[pEL,pmuKs],[pEL,QIq],[pEL,QIq,pmuKs],[v],[v,pmuKs],[v,QIq],[v,QIq,pmuKs],[v,pEL],[v,pEL,pmuKs],[v,pEL,QIq],[v,pEL,QIq,pmuKs],[qd],[qd,pmuKs],[qd,QIq],[qd,QIq,pmuKs],[qd,pEL],[qd,pEL,pmuKs],[qd,pEL,QIq],[qd,pEL,QIq,pmuKs],[qd,v],[qd,v,pmuKs],[qd,v,QIq],[qd,v,QIq,pmuKs],[qd,v,pEL],[qd,v,pEL,pmuKs],[qd,v,pEL,QIq],[qd,v,pEL,QIq,pmuKs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4580() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KnmHk","LH","CrIsT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CrIsT],[LH],[LH,CrIsT],[KnmHk],[KnmHk,CrIsT],[KnmHk,LH],[KnmHk,LH,CrIsT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4581() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fAth","fssa","XGRe","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[XGRe],[XGRe,o],[fssa],[fssa,o],[fssa,XGRe],[fssa,XGRe,o],[fAth],[fAth,o],[fAth,XGRe],[fAth,XGRe,o],[fAth,fssa],[fAth,fssa,o],[fAth,fssa,XGRe],[fAth,fssa,XGRe,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4582() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tQaUZ","e","UJ","bFO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bFO],[UJ],[UJ,bFO],[e],[e,bFO],[e,UJ],[e,UJ,bFO],[tQaUZ],[tQaUZ,bFO],[tQaUZ,UJ],[tQaUZ,UJ,bFO],[tQaUZ,e],[tQaUZ,e,bFO],[tQaUZ,e,UJ],[tQaUZ,e,UJ,bFO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4583() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AHdgq","ejEg","GA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GA],[ejEg],[ejEg,GA],[AHdgq],[AHdgq,GA],[AHdgq,ejEg],[AHdgq,ejEg,GA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4584() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ETjwh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ETjwh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4585() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","inAhj","wELYE","ZH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZH],[wELYE],[wELYE,ZH],[inAhj],[inAhj,ZH],[inAhj,wELYE],[inAhj,wELYE,ZH],[r],[r,ZH],[r,wELYE],[r,wELYE,ZH],[r,inAhj],[r,inAhj,ZH],[r,inAhj,wELYE],[r,inAhj,wELYE,ZH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4586() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ylVay","mbOlO","qYhR","X","DbX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DbX],[X],[X,DbX],[qYhR],[qYhR,DbX],[qYhR,X],[qYhR,X,DbX],[mbOlO],[mbOlO,DbX],[mbOlO,X],[mbOlO,X,DbX],[mbOlO,qYhR],[mbOlO,qYhR,DbX],[mbOlO,qYhR,X],[mbOlO,qYhR,X,DbX],[ylVay],[ylVay,DbX],[ylVay,X],[ylVay,X,DbX],[ylVay,qYhR],[ylVay,qYhR,DbX],[ylVay,qYhR,X],[ylVay,qYhR,X,DbX],[ylVay,mbOlO],[ylVay,mbOlO,DbX],[ylVay,mbOlO,X],[ylVay,mbOlO,X,DbX],[ylVay,mbOlO,qYhR],[ylVay,mbOlO,qYhR,DbX],[ylVay,mbOlO,qYhR,X],[ylVay,mbOlO,qYhR,X,DbX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4587() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yNV","JY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JY],[yNV],[yNV,JY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4588() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yNF","TE","UYWDq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UYWDq],[TE],[TE,UYWDq],[yNF],[yNF,UYWDq],[yNF,TE],[yNF,TE,UYWDq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4589() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Mo","b","hdkE","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[hdkE],[hdkE,k],[b],[b,k],[b,hdkE],[b,hdkE,k],[Mo],[Mo,k],[Mo,hdkE],[Mo,hdkE,k],[Mo,b],[Mo,b,k],[Mo,b,hdkE],[Mo,b,hdkE,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4590() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OnGcG","jjE","RPYc","WGO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WGO],[RPYc],[RPYc,WGO],[jjE],[jjE,WGO],[jjE,RPYc],[jjE,RPYc,WGO],[OnGcG],[OnGcG,WGO],[OnGcG,RPYc],[OnGcG,RPYc,WGO],[OnGcG,jjE],[OnGcG,jjE,WGO],[OnGcG,jjE,RPYc],[OnGcG,jjE,RPYc,WGO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4591() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4592() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ot")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ot]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4593() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IKJ","XIym","NEOUt","dSn","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[dSn],[dSn,o],[NEOUt],[NEOUt,o],[NEOUt,dSn],[NEOUt,dSn,o],[XIym],[XIym,o],[XIym,dSn],[XIym,dSn,o],[XIym,NEOUt],[XIym,NEOUt,o],[XIym,NEOUt,dSn],[XIym,NEOUt,dSn,o],[IKJ],[IKJ,o],[IKJ,dSn],[IKJ,dSn,o],[IKJ,NEOUt],[IKJ,NEOUt,o],[IKJ,NEOUt,dSn],[IKJ,NEOUt,dSn,o],[IKJ,XIym],[IKJ,XIym,o],[IKJ,XIym,dSn],[IKJ,XIym,dSn,o],[IKJ,XIym,NEOUt],[IKJ,XIym,NEOUt,o],[IKJ,XIym,NEOUt,dSn],[IKJ,XIym,NEOUt,dSn,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4594() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qQJa","oGsD","Nl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Nl],[oGsD],[oGsD,Nl],[qQJa],[qQJa,Nl],[qQJa,oGsD],[qQJa,oGsD,Nl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4595() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dZM","AKA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AKA],[dZM],[dZM,AKA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4596() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "epZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[epZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4597() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zsnW","ddjk","Aub","IIXFf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IIXFf],[Aub],[Aub,IIXFf],[ddjk],[ddjk,IIXFf],[ddjk,Aub],[ddjk,Aub,IIXFf],[zsnW],[zsnW,IIXFf],[zsnW,Aub],[zsnW,Aub,IIXFf],[zsnW,ddjk],[zsnW,ddjk,IIXFf],[zsnW,ddjk,Aub],[zsnW,ddjk,Aub,IIXFf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4598() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FxrsE","FY","AnNrS","w","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[w],[w,i],[AnNrS],[AnNrS,i],[AnNrS,w],[AnNrS,w,i],[FY],[FY,i],[FY,w],[FY,w,i],[FY,AnNrS],[FY,AnNrS,i],[FY,AnNrS,w],[FY,AnNrS,w,i],[FxrsE],[FxrsE,i],[FxrsE,w],[FxrsE,w,i],[FxrsE,AnNrS],[FxrsE,AnNrS,i],[FxrsE,AnNrS,w],[FxrsE,AnNrS,w,i],[FxrsE,FY],[FxrsE,FY,i],[FxrsE,FY,w],[FxrsE,FY,w,i],[FxrsE,FY,AnNrS],[FxrsE,FY,AnNrS,i],[FxrsE,FY,AnNrS,w],[FxrsE,FY,AnNrS,w,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4599() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mTH","S","um","wvDOd","saI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[saI],[wvDOd],[wvDOd,saI],[um],[um,saI],[um,wvDOd],[um,wvDOd,saI],[S],[S,saI],[S,wvDOd],[S,wvDOd,saI],[S,um],[S,um,saI],[S,um,wvDOd],[S,um,wvDOd,saI],[mTH],[mTH,saI],[mTH,wvDOd],[mTH,wvDOd,saI],[mTH,um],[mTH,um,saI],[mTH,um,wvDOd],[mTH,um,wvDOd,saI],[mTH,S],[mTH,S,saI],[mTH,S,wvDOd],[mTH,S,wvDOd,saI],[mTH,S,um],[mTH,S,um,saI],[mTH,S,um,wvDOd],[mTH,S,um,wvDOd,saI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4600() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TvNWn","QX","EYn","Pfbhw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pfbhw],[EYn],[EYn,Pfbhw],[QX],[QX,Pfbhw],[QX,EYn],[QX,EYn,Pfbhw],[TvNWn],[TvNWn,Pfbhw],[TvNWn,EYn],[TvNWn,EYn,Pfbhw],[TvNWn,QX],[TvNWn,QX,Pfbhw],[TvNWn,QX,EYn],[TvNWn,QX,EYn,Pfbhw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4601() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tLQ","H")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[H],[tLQ],[tLQ,H]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4602() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hsp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hsp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4603() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mGme","cXkE","UmO","Cho","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[Cho],[Cho,N],[UmO],[UmO,N],[UmO,Cho],[UmO,Cho,N],[cXkE],[cXkE,N],[cXkE,Cho],[cXkE,Cho,N],[cXkE,UmO],[cXkE,UmO,N],[cXkE,UmO,Cho],[cXkE,UmO,Cho,N],[mGme],[mGme,N],[mGme,Cho],[mGme,Cho,N],[mGme,UmO],[mGme,UmO,N],[mGme,UmO,Cho],[mGme,UmO,Cho,N],[mGme,cXkE],[mGme,cXkE,N],[mGme,cXkE,Cho],[mGme,cXkE,Cho,N],[mGme,cXkE,UmO],[mGme,cXkE,UmO,N],[mGme,cXkE,UmO,Cho],[mGme,cXkE,UmO,Cho,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4604() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LCJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LCJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4605() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tQtn","PUUXs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PUUXs],[tQtn],[tQtn,PUUXs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4606() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "etVKN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[etVKN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4607() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oNEGa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oNEGa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4608() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nPPA","JQgF","MMjjT","Ci","x")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[x],[Ci],[Ci,x],[MMjjT],[MMjjT,x],[MMjjT,Ci],[MMjjT,Ci,x],[JQgF],[JQgF,x],[JQgF,Ci],[JQgF,Ci,x],[JQgF,MMjjT],[JQgF,MMjjT,x],[JQgF,MMjjT,Ci],[JQgF,MMjjT,Ci,x],[nPPA],[nPPA,x],[nPPA,Ci],[nPPA,Ci,x],[nPPA,MMjjT],[nPPA,MMjjT,x],[nPPA,MMjjT,Ci],[nPPA,MMjjT,Ci,x],[nPPA,JQgF],[nPPA,JQgF,x],[nPPA,JQgF,Ci],[nPPA,JQgF,Ci,x],[nPPA,JQgF,MMjjT],[nPPA,JQgF,MMjjT,x],[nPPA,JQgF,MMjjT,Ci],[nPPA,JQgF,MMjjT,Ci,x]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4609() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gjIX","peuol","OG","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[OG],[OG,N],[peuol],[peuol,N],[peuol,OG],[peuol,OG,N],[gjIX],[gjIX,N],[gjIX,OG],[gjIX,OG,N],[gjIX,peuol],[gjIX,peuol,N],[gjIX,peuol,OG],[gjIX,peuol,OG,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4610() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K","pnM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pnM],[K],[K,pnM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4611() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "soicv","JBq","VHxZK","OZvz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OZvz],[VHxZK],[VHxZK,OZvz],[JBq],[JBq,OZvz],[JBq,VHxZK],[JBq,VHxZK,OZvz],[soicv],[soicv,OZvz],[soicv,VHxZK],[soicv,VHxZK,OZvz],[soicv,JBq],[soicv,JBq,OZvz],[soicv,JBq,VHxZK],[soicv,JBq,VHxZK,OZvz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4612() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","soEob","BNES","hCY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hCY],[BNES],[BNES,hCY],[soEob],[soEob,hCY],[soEob,BNES],[soEob,BNES,hCY],[A],[A,hCY],[A,BNES],[A,BNES,hCY],[A,soEob],[A,soEob,hCY],[A,soEob,BNES],[A,soEob,BNES,hCY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4613() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WneI","x","tUAm","RxS","aPqu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aPqu],[RxS],[RxS,aPqu],[tUAm],[tUAm,aPqu],[tUAm,RxS],[tUAm,RxS,aPqu],[x],[x,aPqu],[x,RxS],[x,RxS,aPqu],[x,tUAm],[x,tUAm,aPqu],[x,tUAm,RxS],[x,tUAm,RxS,aPqu],[WneI],[WneI,aPqu],[WneI,RxS],[WneI,RxS,aPqu],[WneI,tUAm],[WneI,tUAm,aPqu],[WneI,tUAm,RxS],[WneI,tUAm,RxS,aPqu],[WneI,x],[WneI,x,aPqu],[WneI,x,RxS],[WneI,x,RxS,aPqu],[WneI,x,tUAm],[WneI,x,tUAm,aPqu],[WneI,x,tUAm,RxS],[WneI,x,tUAm,RxS,aPqu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4614() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hsaOE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hsaOE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4615() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EhKKr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EhKKr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4616() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TiVw","m")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[m],[TiVw],[TiVw,m]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4617() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","vIOrB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vIOrB],[w],[w,vIOrB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4618() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KXvb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KXvb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4619() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hCCN","PEXYe","Y","YcW","zdI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zdI],[YcW],[YcW,zdI],[Y],[Y,zdI],[Y,YcW],[Y,YcW,zdI],[PEXYe],[PEXYe,zdI],[PEXYe,YcW],[PEXYe,YcW,zdI],[PEXYe,Y],[PEXYe,Y,zdI],[PEXYe,Y,YcW],[PEXYe,Y,YcW,zdI],[hCCN],[hCCN,zdI],[hCCN,YcW],[hCCN,YcW,zdI],[hCCN,Y],[hCCN,Y,zdI],[hCCN,Y,YcW],[hCCN,Y,YcW,zdI],[hCCN,PEXYe],[hCCN,PEXYe,zdI],[hCCN,PEXYe,YcW],[hCCN,PEXYe,YcW,zdI],[hCCN,PEXYe,Y],[hCCN,PEXYe,Y,zdI],[hCCN,PEXYe,Y,YcW],[hCCN,PEXYe,Y,YcW,zdI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4620() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TskAR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TskAR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4621() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CBipE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CBipE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4622() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vQAvT","LRVHY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LRVHY],[vQAvT],[vQAvT,LRVHY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4623() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oDEUh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oDEUh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4624() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HrGIm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HrGIm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4625() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cotD","YB","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[YB],[YB,n],[cotD],[cotD,n],[cotD,YB],[cotD,YB,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4626() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hn","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[Hn],[Hn,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4627() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K","LxRrU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LxRrU],[K],[K,LxRrU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4628() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LBv","CzB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CzB],[LBv],[LBv,CzB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4629() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bji","zkTPk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zkTPk],[Bji],[Bji,zkTPk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4630() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gvgyb","JHgp","GLsI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GLsI],[JHgp],[JHgp,GLsI],[gvgyb],[gvgyb,GLsI],[gvgyb,JHgp],[gvgyb,JHgp,GLsI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4631() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UwS","cGJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cGJ],[UwS],[UwS,cGJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4632() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OAjrc","nvj","nzi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nzi],[nvj],[nvj,nzi],[OAjrc],[OAjrc,nzi],[OAjrc,nvj],[OAjrc,nvj,nzi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4633() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kunf","lyLQ","by","Kd","pvBD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pvBD],[Kd],[Kd,pvBD],[by],[by,pvBD],[by,Kd],[by,Kd,pvBD],[lyLQ],[lyLQ,pvBD],[lyLQ,Kd],[lyLQ,Kd,pvBD],[lyLQ,by],[lyLQ,by,pvBD],[lyLQ,by,Kd],[lyLQ,by,Kd,pvBD],[kunf],[kunf,pvBD],[kunf,Kd],[kunf,Kd,pvBD],[kunf,by],[kunf,by,pvBD],[kunf,by,Kd],[kunf,by,Kd,pvBD],[kunf,lyLQ],[kunf,lyLQ,pvBD],[kunf,lyLQ,Kd],[kunf,lyLQ,Kd,pvBD],[kunf,lyLQ,by],[kunf,lyLQ,by,pvBD],[kunf,lyLQ,by,Kd],[kunf,lyLQ,by,Kd,pvBD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4634() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OdTK","je","PPUp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PPUp],[je],[je,PPUp],[OdTK],[OdTK,PPUp],[OdTK,je],[OdTK,je,PPUp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4635() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[U]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4636() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oeL","y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y],[oeL],[oeL,y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4637() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","ioat","kc","DQ","ZKP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZKP],[DQ],[DQ,ZKP],[kc],[kc,ZKP],[kc,DQ],[kc,DQ,ZKP],[ioat],[ioat,ZKP],[ioat,DQ],[ioat,DQ,ZKP],[ioat,kc],[ioat,kc,ZKP],[ioat,kc,DQ],[ioat,kc,DQ,ZKP],[s],[s,ZKP],[s,DQ],[s,DQ,ZKP],[s,kc],[s,kc,ZKP],[s,kc,DQ],[s,kc,DQ,ZKP],[s,ioat],[s,ioat,ZKP],[s,ioat,DQ],[s,ioat,DQ,ZKP],[s,ioat,kc],[s,ioat,kc,ZKP],[s,ioat,kc,DQ],[s,ioat,kc,DQ,ZKP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4638() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DYyd","c","e","vHq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vHq],[e],[e,vHq],[c],[c,vHq],[c,e],[c,e,vHq],[DYyd],[DYyd,vHq],[DYyd,e],[DYyd,e,vHq],[DYyd,c],[DYyd,c,vHq],[DYyd,c,e],[DYyd,c,e,vHq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4639() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gGFrV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gGFrV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4640() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FM","Hr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hr],[FM],[FM,Hr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4641() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VH","qW","yIF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yIF],[qW],[qW,yIF],[VH],[VH,yIF],[VH,qW],[VH,qW,yIF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4642() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yIQ","OgpdD","k","L","MIwD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MIwD],[L],[L,MIwD],[k],[k,MIwD],[k,L],[k,L,MIwD],[OgpdD],[OgpdD,MIwD],[OgpdD,L],[OgpdD,L,MIwD],[OgpdD,k],[OgpdD,k,MIwD],[OgpdD,k,L],[OgpdD,k,L,MIwD],[yIQ],[yIQ,MIwD],[yIQ,L],[yIQ,L,MIwD],[yIQ,k],[yIQ,k,MIwD],[yIQ,k,L],[yIQ,k,L,MIwD],[yIQ,OgpdD],[yIQ,OgpdD,MIwD],[yIQ,OgpdD,L],[yIQ,OgpdD,L,MIwD],[yIQ,OgpdD,k],[yIQ,OgpdD,k,MIwD],[yIQ,OgpdD,k,L],[yIQ,OgpdD,k,L,MIwD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4643() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hldp","qkqx","sNuW","heH","Wq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wq],[heH],[heH,Wq],[sNuW],[sNuW,Wq],[sNuW,heH],[sNuW,heH,Wq],[qkqx],[qkqx,Wq],[qkqx,heH],[qkqx,heH,Wq],[qkqx,sNuW],[qkqx,sNuW,Wq],[qkqx,sNuW,heH],[qkqx,sNuW,heH,Wq],[hldp],[hldp,Wq],[hldp,heH],[hldp,heH,Wq],[hldp,sNuW],[hldp,sNuW,Wq],[hldp,sNuW,heH],[hldp,sNuW,heH,Wq],[hldp,qkqx],[hldp,qkqx,Wq],[hldp,qkqx,heH],[hldp,qkqx,heH,Wq],[hldp,qkqx,sNuW],[hldp,qkqx,sNuW,Wq],[hldp,qkqx,sNuW,heH],[hldp,qkqx,sNuW,heH,Wq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4644() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "nMyzM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nMyzM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4645() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "buD","ypgLj","nr","G")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[G],[nr],[nr,G],[ypgLj],[ypgLj,G],[ypgLj,nr],[ypgLj,nr,G],[buD],[buD,G],[buD,nr],[buD,nr,G],[buD,ypgLj],[buD,ypgLj,G],[buD,ypgLj,nr],[buD,ypgLj,nr,G]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4646() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JJy","nih","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[nih],[nih,O],[JJy],[JJy,O],[JJy,nih],[JJy,nih,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4647() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jFa","kEn","YU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YU],[kEn],[kEn,YU],[jFa],[jFa,YU],[jFa,kEn],[jFa,kEn,YU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4648() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XidcX","s","qGRu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qGRu],[s],[s,qGRu],[XidcX],[XidcX,qGRu],[XidcX,s],[XidcX,s,qGRu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4649() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "evA","Falzt","vYX","ECiMc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ECiMc],[vYX],[vYX,ECiMc],[Falzt],[Falzt,ECiMc],[Falzt,vYX],[Falzt,vYX,ECiMc],[evA],[evA,ECiMc],[evA,vYX],[evA,vYX,ECiMc],[evA,Falzt],[evA,Falzt,ECiMc],[evA,Falzt,vYX],[evA,Falzt,vYX,ECiMc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4650() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SMNIL","gUGse","nVxQZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nVxQZ],[gUGse],[gUGse,nVxQZ],[SMNIL],[SMNIL,nVxQZ],[SMNIL,gUGse],[SMNIL,gUGse,nVxQZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4651() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RjPDM","MCXuj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MCXuj],[RjPDM],[RjPDM,MCXuj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4652() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tf","MKmP","iLk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iLk],[MKmP],[MKmP,iLk],[tf],[tf,iLk],[tf,MKmP],[tf,MKmP,iLk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4653() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MyO","DNIrk","Ksd","xWASo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xWASo],[Ksd],[Ksd,xWASo],[DNIrk],[DNIrk,xWASo],[DNIrk,Ksd],[DNIrk,Ksd,xWASo],[MyO],[MyO,xWASo],[MyO,Ksd],[MyO,Ksd,xWASo],[MyO,DNIrk],[MyO,DNIrk,xWASo],[MyO,DNIrk,Ksd],[MyO,DNIrk,Ksd,xWASo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4654() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bXNv","dY","Mi","dXbMC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dXbMC],[Mi],[Mi,dXbMC],[dY],[dY,dXbMC],[dY,Mi],[dY,Mi,dXbMC],[bXNv],[bXNv,dXbMC],[bXNv,Mi],[bXNv,Mi,dXbMC],[bXNv,dY],[bXNv,dY,dXbMC],[bXNv,dY,Mi],[bXNv,dY,Mi,dXbMC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4655() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SVhV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SVhV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4656() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZQIu","dAJJB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dAJJB],[ZQIu],[ZQIu,dAJJB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4657() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eIem","XJfU","ghuTQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ghuTQ],[XJfU],[XJfU,ghuTQ],[eIem],[eIem,ghuTQ],[eIem,XJfU],[eIem,XJfU,ghuTQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4658() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4659() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jB","Y","Ak","z","iT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iT],[z],[z,iT],[Ak],[Ak,iT],[Ak,z],[Ak,z,iT],[Y],[Y,iT],[Y,z],[Y,z,iT],[Y,Ak],[Y,Ak,iT],[Y,Ak,z],[Y,Ak,z,iT],[jB],[jB,iT],[jB,z],[jB,z,iT],[jB,Ak],[jB,Ak,iT],[jB,Ak,z],[jB,Ak,z,iT],[jB,Y],[jB,Y,iT],[jB,Y,z],[jB,Y,z,iT],[jB,Y,Ak],[jB,Y,Ak,iT],[jB,Y,Ak,z],[jB,Y,Ak,z,iT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4660() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KiyQq","ypcBW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ypcBW],[KiyQq],[KiyQq,ypcBW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4661() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OBX","z","xsWR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xsWR],[z],[z,xsWR],[OBX],[OBX,xsWR],[OBX,z],[OBX,z,xsWR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4662() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rV","HAHx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HAHx],[rV],[rV,HAHx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4663() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cy","WTY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WTY],[Cy],[Cy,WTY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4664() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CPzAI","hZo","zW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zW],[hZo],[hZo,zW],[CPzAI],[CPzAI,zW],[CPzAI,hZo],[CPzAI,hZo,zW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4665() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Uuijh","W","IV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IV],[W],[W,IV],[Uuijh],[Uuijh,IV],[Uuijh,W],[Uuijh,W,IV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4666() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G","Yob")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yob],[G],[G,Yob]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4667() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qin","zKEzw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zKEzw],[Qin],[Qin,zKEzw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4668() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rqMr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rqMr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4669() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IyVx","jNN","EOH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EOH],[jNN],[jNN,EOH],[IyVx],[IyVx,EOH],[IyVx,jNN],[IyVx,jNN,EOH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4670() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EwvOb","t","SrdFD","ck","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[ck],[ck,Z],[SrdFD],[SrdFD,Z],[SrdFD,ck],[SrdFD,ck,Z],[t],[t,Z],[t,ck],[t,ck,Z],[t,SrdFD],[t,SrdFD,Z],[t,SrdFD,ck],[t,SrdFD,ck,Z],[EwvOb],[EwvOb,Z],[EwvOb,ck],[EwvOb,ck,Z],[EwvOb,SrdFD],[EwvOb,SrdFD,Z],[EwvOb,SrdFD,ck],[EwvOb,SrdFD,ck,Z],[EwvOb,t],[EwvOb,t,Z],[EwvOb,t,ck],[EwvOb,t,ck,Z],[EwvOb,t,SrdFD],[EwvOb,t,SrdFD,Z],[EwvOb,t,SrdFD,ck],[EwvOb,t,SrdFD,ck,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4671() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WenN","G","X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X],[G],[G,X],[WenN],[WenN,X],[WenN,G],[WenN,G,X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4672() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cEJg","f","i","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[i],[i,Z],[f],[f,Z],[f,i],[f,i,Z],[cEJg],[cEJg,Z],[cEJg,i],[cEJg,i,Z],[cEJg,f],[cEJg,f,Z],[cEJg,f,i],[cEJg,f,i,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4673() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "acd","InGl","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[InGl],[InGl,l],[acd],[acd,l],[acd,InGl],[acd,InGl,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4674() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tGfa","Kz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kz],[tGfa],[tGfa,Kz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4675() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JIV","jyH","MLm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MLm],[jyH],[jyH,MLm],[JIV],[JIV,MLm],[JIV,jyH],[JIV,jyH,MLm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4676() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "du","YLP","mVG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mVG],[YLP],[YLP,mVG],[du],[du,mVG],[du,YLP],[du,YLP,mVG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4677() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fMx","Ozm","WRbC","lnm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lnm],[WRbC],[WRbC,lnm],[Ozm],[Ozm,lnm],[Ozm,WRbC],[Ozm,WRbC,lnm],[fMx],[fMx,lnm],[fMx,WRbC],[fMx,WRbC,lnm],[fMx,Ozm],[fMx,Ozm,lnm],[fMx,Ozm,WRbC],[fMx,Ozm,WRbC,lnm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4678() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hDv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hDv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4679() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bBt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bBt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4680() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "L","rN","m","ED")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ED],[m],[m,ED],[rN],[rN,ED],[rN,m],[rN,m,ED],[L],[L,ED],[L,m],[L,m,ED],[L,rN],[L,rN,ED],[L,rN,m],[L,rN,m,ED]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4681() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HC","aO","QAEO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QAEO],[aO],[aO,QAEO],[HC],[HC,QAEO],[HC,aO],[HC,aO,QAEO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4682() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kiGk","Pa","pay","WP","HizFa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HizFa],[WP],[WP,HizFa],[pay],[pay,HizFa],[pay,WP],[pay,WP,HizFa],[Pa],[Pa,HizFa],[Pa,WP],[Pa,WP,HizFa],[Pa,pay],[Pa,pay,HizFa],[Pa,pay,WP],[Pa,pay,WP,HizFa],[kiGk],[kiGk,HizFa],[kiGk,WP],[kiGk,WP,HizFa],[kiGk,pay],[kiGk,pay,HizFa],[kiGk,pay,WP],[kiGk,pay,WP,HizFa],[kiGk,Pa],[kiGk,Pa,HizFa],[kiGk,Pa,WP],[kiGk,Pa,WP,HizFa],[kiGk,Pa,pay],[kiGk,Pa,pay,HizFa],[kiGk,Pa,pay,WP],[kiGk,Pa,pay,WP,HizFa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4683() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sswS","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[sswS],[sswS,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4684() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TwCSS","X","vVx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vVx],[X],[X,vVx],[TwCSS],[TwCSS,vVx],[TwCSS,X],[TwCSS,X,vVx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4685() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mEM","Ng","CIabd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CIabd],[Ng],[Ng,CIabd],[mEM],[mEM,CIabd],[mEM,Ng],[mEM,Ng,CIabd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4686() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LrH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LrH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4687() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "w","Oh","l","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[l],[l,L],[Oh],[Oh,L],[Oh,l],[Oh,l,L],[w],[w,L],[w,l],[w,l,L],[w,Oh],[w,Oh,L],[w,Oh,l],[w,Oh,l,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4688() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oYgm","DW","TetHp","WQ","gWyXH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gWyXH],[WQ],[WQ,gWyXH],[TetHp],[TetHp,gWyXH],[TetHp,WQ],[TetHp,WQ,gWyXH],[DW],[DW,gWyXH],[DW,WQ],[DW,WQ,gWyXH],[DW,TetHp],[DW,TetHp,gWyXH],[DW,TetHp,WQ],[DW,TetHp,WQ,gWyXH],[oYgm],[oYgm,gWyXH],[oYgm,WQ],[oYgm,WQ,gWyXH],[oYgm,TetHp],[oYgm,TetHp,gWyXH],[oYgm,TetHp,WQ],[oYgm,TetHp,WQ,gWyXH],[oYgm,DW],[oYgm,DW,gWyXH],[oYgm,DW,WQ],[oYgm,DW,WQ,gWyXH],[oYgm,DW,TetHp],[oYgm,DW,TetHp,gWyXH],[oYgm,DW,TetHp,WQ],[oYgm,DW,TetHp,WQ,gWyXH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4689() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RCuV","SfwvH","VbFN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VbFN],[SfwvH],[SfwvH,VbFN],[RCuV],[RCuV,VbFN],[RCuV,SfwvH],[RCuV,SfwvH,VbFN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4690() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","B","iuVG","pnmJK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pnmJK],[iuVG],[iuVG,pnmJK],[B],[B,pnmJK],[B,iuVG],[B,iuVG,pnmJK],[Q],[Q,pnmJK],[Q,iuVG],[Q,iuVG,pnmJK],[Q,B],[Q,B,pnmJK],[Q,B,iuVG],[Q,B,iuVG,pnmJK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4691() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Fj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Fj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4692() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4693() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CNg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CNg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4694() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QLL","P","FtS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FtS],[P],[P,FtS],[QLL],[QLL,FtS],[QLL,P],[QLL,P,FtS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4695() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","NPnI","vB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vB],[NPnI],[NPnI,vB],[e],[e,vB],[e,NPnI],[e,NPnI,vB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4696() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LL","yz","LyHza")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LyHza],[yz],[yz,LyHza],[LL],[LL,LyHza],[LL,yz],[LL,yz,LyHza]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4697() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qZt","dFvcM","L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L],[dFvcM],[dFvcM,L],[qZt],[qZt,L],[qZt,dFvcM],[qZt,dFvcM,L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4698() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UyjjY","JfvQ","NFvJa","UNpBd","ktmrb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ktmrb],[UNpBd],[UNpBd,ktmrb],[NFvJa],[NFvJa,ktmrb],[NFvJa,UNpBd],[NFvJa,UNpBd,ktmrb],[JfvQ],[JfvQ,ktmrb],[JfvQ,UNpBd],[JfvQ,UNpBd,ktmrb],[JfvQ,NFvJa],[JfvQ,NFvJa,ktmrb],[JfvQ,NFvJa,UNpBd],[JfvQ,NFvJa,UNpBd,ktmrb],[UyjjY],[UyjjY,ktmrb],[UyjjY,UNpBd],[UyjjY,UNpBd,ktmrb],[UyjjY,NFvJa],[UyjjY,NFvJa,ktmrb],[UyjjY,NFvJa,UNpBd],[UyjjY,NFvJa,UNpBd,ktmrb],[UyjjY,JfvQ],[UyjjY,JfvQ,ktmrb],[UyjjY,JfvQ,UNpBd],[UyjjY,JfvQ,UNpBd,ktmrb],[UyjjY,JfvQ,NFvJa],[UyjjY,JfvQ,NFvJa,ktmrb],[UyjjY,JfvQ,NFvJa,UNpBd],[UyjjY,JfvQ,NFvJa,UNpBd,ktmrb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4699() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iSl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iSl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4700() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WZpo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WZpo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4701() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "liTI","FfEqf","QpSg","dvq","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[dvq],[dvq,o],[QpSg],[QpSg,o],[QpSg,dvq],[QpSg,dvq,o],[FfEqf],[FfEqf,o],[FfEqf,dvq],[FfEqf,dvq,o],[FfEqf,QpSg],[FfEqf,QpSg,o],[FfEqf,QpSg,dvq],[FfEqf,QpSg,dvq,o],[liTI],[liTI,o],[liTI,dvq],[liTI,dvq,o],[liTI,QpSg],[liTI,QpSg,o],[liTI,QpSg,dvq],[liTI,QpSg,dvq,o],[liTI,FfEqf],[liTI,FfEqf,o],[liTI,FfEqf,dvq],[liTI,FfEqf,dvq,o],[liTI,FfEqf,QpSg],[liTI,FfEqf,QpSg,o],[liTI,FfEqf,QpSg,dvq],[liTI,FfEqf,QpSg,dvq,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4702() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SaO","sGVAe","R","kjfS","Hf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hf],[kjfS],[kjfS,Hf],[R],[R,Hf],[R,kjfS],[R,kjfS,Hf],[sGVAe],[sGVAe,Hf],[sGVAe,kjfS],[sGVAe,kjfS,Hf],[sGVAe,R],[sGVAe,R,Hf],[sGVAe,R,kjfS],[sGVAe,R,kjfS,Hf],[SaO],[SaO,Hf],[SaO,kjfS],[SaO,kjfS,Hf],[SaO,R],[SaO,R,Hf],[SaO,R,kjfS],[SaO,R,kjfS,Hf],[SaO,sGVAe],[SaO,sGVAe,Hf],[SaO,sGVAe,kjfS],[SaO,sGVAe,kjfS,Hf],[SaO,sGVAe,R],[SaO,sGVAe,R,Hf],[SaO,sGVAe,R,kjfS],[SaO,sGVAe,R,kjfS,Hf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4703() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KFni","di","MtAM","Z","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[Z],[Z,n],[MtAM],[MtAM,n],[MtAM,Z],[MtAM,Z,n],[di],[di,n],[di,Z],[di,Z,n],[di,MtAM],[di,MtAM,n],[di,MtAM,Z],[di,MtAM,Z,n],[KFni],[KFni,n],[KFni,Z],[KFni,Z,n],[KFni,MtAM],[KFni,MtAM,n],[KFni,MtAM,Z],[KFni,MtAM,Z,n],[KFni,di],[KFni,di,n],[KFni,di,Z],[KFni,di,Z,n],[KFni,di,MtAM],[KFni,di,MtAM,n],[KFni,di,MtAM,Z],[KFni,di,MtAM,Z,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4704() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","rRSI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rRSI],[r],[r,rRSI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4705() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LeZ","B","fh","R","TFtWD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TFtWD],[R],[R,TFtWD],[fh],[fh,TFtWD],[fh,R],[fh,R,TFtWD],[B],[B,TFtWD],[B,R],[B,R,TFtWD],[B,fh],[B,fh,TFtWD],[B,fh,R],[B,fh,R,TFtWD],[LeZ],[LeZ,TFtWD],[LeZ,R],[LeZ,R,TFtWD],[LeZ,fh],[LeZ,fh,TFtWD],[LeZ,fh,R],[LeZ,fh,R,TFtWD],[LeZ,B],[LeZ,B,TFtWD],[LeZ,B,R],[LeZ,B,R,TFtWD],[LeZ,B,fh],[LeZ,B,fh,TFtWD],[LeZ,B,fh,R],[LeZ,B,fh,R,TFtWD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4706() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cw","g","hFI","TA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TA],[hFI],[hFI,TA],[g],[g,TA],[g,hFI],[g,hFI,TA],[cw],[cw,TA],[cw,hFI],[cw,hFI,TA],[cw,g],[cw,g,TA],[cw,g,hFI],[cw,g,hFI,TA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4707() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NCyk","i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i],[NCyk],[NCyk,i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4708() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jm","pXLq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pXLq],[jm],[jm,pXLq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4709() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Aa","ug","myeQf","nH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nH],[myeQf],[myeQf,nH],[ug],[ug,nH],[ug,myeQf],[ug,myeQf,nH],[Aa],[Aa,nH],[Aa,myeQf],[Aa,myeQf,nH],[Aa,ug],[Aa,ug,nH],[Aa,ug,myeQf],[Aa,ug,myeQf,nH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4710() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HvfL","RQQB","Cz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cz],[RQQB],[RQQB,Cz],[HvfL],[HvfL,Cz],[HvfL,RQQB],[HvfL,RQQB,Cz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4711() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","mEojS","tdvI","YvEe","YDv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YDv],[YvEe],[YvEe,YDv],[tdvI],[tdvI,YDv],[tdvI,YvEe],[tdvI,YvEe,YDv],[mEojS],[mEojS,YDv],[mEojS,YvEe],[mEojS,YvEe,YDv],[mEojS,tdvI],[mEojS,tdvI,YDv],[mEojS,tdvI,YvEe],[mEojS,tdvI,YvEe,YDv],[p],[p,YDv],[p,YvEe],[p,YvEe,YDv],[p,tdvI],[p,tdvI,YDv],[p,tdvI,YvEe],[p,tdvI,YvEe,YDv],[p,mEojS],[p,mEojS,YDv],[p,mEojS,YvEe],[p,mEojS,YvEe,YDv],[p,mEojS,tdvI],[p,mEojS,tdvI,YDv],[p,mEojS,tdvI,YvEe],[p,mEojS,tdvI,YvEe,YDv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4712() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zlny","wOFk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wOFk],[zlny],[zlny,wOFk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4713() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pwZ","t","LTSVw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LTSVw],[t],[t,LTSVw],[pwZ],[pwZ,LTSVw],[pwZ,t],[pwZ,t,LTSVw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4714() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vaJXY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vaJXY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4715() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","v","BYC","eIS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eIS],[BYC],[BYC,eIS],[v],[v,eIS],[v,BYC],[v,BYC,eIS],[C],[C,eIS],[C,BYC],[C,BYC,eIS],[C,v],[C,v,eIS],[C,v,BYC],[C,v,BYC,eIS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4716() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zl","s","iEq","ligko")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ligko],[iEq],[iEq,ligko],[s],[s,ligko],[s,iEq],[s,iEq,ligko],[zl],[zl,ligko],[zl,iEq],[zl,iEq,ligko],[zl,s],[zl,s,ligko],[zl,s,iEq],[zl,s,iEq,ligko]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4717() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HyQi","qTggP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qTggP],[HyQi],[HyQi,qTggP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4718() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QAhsb","iA","DWQEv","hRT","CUO")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CUO],[hRT],[hRT,CUO],[DWQEv],[DWQEv,CUO],[DWQEv,hRT],[DWQEv,hRT,CUO],[iA],[iA,CUO],[iA,hRT],[iA,hRT,CUO],[iA,DWQEv],[iA,DWQEv,CUO],[iA,DWQEv,hRT],[iA,DWQEv,hRT,CUO],[QAhsb],[QAhsb,CUO],[QAhsb,hRT],[QAhsb,hRT,CUO],[QAhsb,DWQEv],[QAhsb,DWQEv,CUO],[QAhsb,DWQEv,hRT],[QAhsb,DWQEv,hRT,CUO],[QAhsb,iA],[QAhsb,iA,CUO],[QAhsb,iA,hRT],[QAhsb,iA,hRT,CUO],[QAhsb,iA,DWQEv],[QAhsb,iA,DWQEv,CUO],[QAhsb,iA,DWQEv,hRT],[QAhsb,iA,DWQEv,hRT,CUO]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4719() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4720() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gy","aqZgu","MFp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MFp],[aqZgu],[aqZgu,MFp],[gy],[gy,MFp],[gy,aqZgu],[gy,aqZgu,MFp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4721() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pyDtt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pyDtt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4722() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Yo","I","VPsN","bcmOo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bcmOo],[VPsN],[VPsN,bcmOo],[I],[I,bcmOo],[I,VPsN],[I,VPsN,bcmOo],[Yo],[Yo,bcmOo],[Yo,VPsN],[Yo,VPsN,bcmOo],[Yo,I],[Yo,I,bcmOo],[Yo,I,VPsN],[Yo,I,VPsN,bcmOo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4723() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dg","XgOJ","hIv","ATG","SGYV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SGYV],[ATG],[ATG,SGYV],[hIv],[hIv,SGYV],[hIv,ATG],[hIv,ATG,SGYV],[XgOJ],[XgOJ,SGYV],[XgOJ,ATG],[XgOJ,ATG,SGYV],[XgOJ,hIv],[XgOJ,hIv,SGYV],[XgOJ,hIv,ATG],[XgOJ,hIv,ATG,SGYV],[dg],[dg,SGYV],[dg,ATG],[dg,ATG,SGYV],[dg,hIv],[dg,hIv,SGYV],[dg,hIv,ATG],[dg,hIv,ATG,SGYV],[dg,XgOJ],[dg,XgOJ,SGYV],[dg,XgOJ,ATG],[dg,XgOJ,ATG,SGYV],[dg,XgOJ,hIv],[dg,XgOJ,hIv,SGYV],[dg,XgOJ,hIv,ATG],[dg,XgOJ,hIv,ATG,SGYV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4724() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","MwrX","hR","iYjU","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[iYjU],[iYjU,o],[hR],[hR,o],[hR,iYjU],[hR,iYjU,o],[MwrX],[MwrX,o],[MwrX,iYjU],[MwrX,iYjU,o],[MwrX,hR],[MwrX,hR,o],[MwrX,hR,iYjU],[MwrX,hR,iYjU,o],[r],[r,o],[r,iYjU],[r,iYjU,o],[r,hR],[r,hR,o],[r,hR,iYjU],[r,hR,iYjU,o],[r,MwrX],[r,MwrX,o],[r,MwrX,iYjU],[r,MwrX,iYjU,o],[r,MwrX,hR],[r,MwrX,hR,o],[r,MwrX,hR,iYjU],[r,MwrX,hR,iYjU,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4725() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sImX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sImX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4726() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YIYll","TGk","LI","lvAC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lvAC],[LI],[LI,lvAC],[TGk],[TGk,lvAC],[TGk,LI],[TGk,LI,lvAC],[YIYll],[YIYll,lvAC],[YIYll,LI],[YIYll,LI,lvAC],[YIYll,TGk],[YIYll,TGk,lvAC],[YIYll,TGk,LI],[YIYll,TGk,LI,lvAC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4727() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rJjy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rJjy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4728() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kK","oXWo","YRbZY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YRbZY],[oXWo],[oXWo,YRbZY],[kK],[kK,YRbZY],[kK,oXWo],[kK,oXWo,YRbZY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4729() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "OQ","zAm","NJvLx","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[NJvLx],[NJvLx,o],[zAm],[zAm,o],[zAm,NJvLx],[zAm,NJvLx,o],[OQ],[OQ,o],[OQ,NJvLx],[OQ,NJvLx,o],[OQ,zAm],[OQ,zAm,o],[OQ,zAm,NJvLx],[OQ,zAm,NJvLx,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4730() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ghDV","PCW","X","Cl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cl],[X],[X,Cl],[PCW],[PCW,Cl],[PCW,X],[PCW,X,Cl],[ghDV],[ghDV,Cl],[ghDV,X],[ghDV,X,Cl],[ghDV,PCW],[ghDV,PCW,Cl],[ghDV,PCW,X],[ghDV,PCW,X,Cl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4731() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UGIZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UGIZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4732() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[t]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4733() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "c")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[c]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4734() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "F","ZB","oIHCI","Qo","cdYuk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cdYuk],[Qo],[Qo,cdYuk],[oIHCI],[oIHCI,cdYuk],[oIHCI,Qo],[oIHCI,Qo,cdYuk],[ZB],[ZB,cdYuk],[ZB,Qo],[ZB,Qo,cdYuk],[ZB,oIHCI],[ZB,oIHCI,cdYuk],[ZB,oIHCI,Qo],[ZB,oIHCI,Qo,cdYuk],[F],[F,cdYuk],[F,Qo],[F,Qo,cdYuk],[F,oIHCI],[F,oIHCI,cdYuk],[F,oIHCI,Qo],[F,oIHCI,Qo,cdYuk],[F,ZB],[F,ZB,cdYuk],[F,ZB,Qo],[F,ZB,Qo,cdYuk],[F,ZB,oIHCI],[F,ZB,oIHCI,cdYuk],[F,ZB,oIHCI,Qo],[F,ZB,oIHCI,Qo,cdYuk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4735() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Au","PBy","MgOeU","KtOp","oTd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oTd],[KtOp],[KtOp,oTd],[MgOeU],[MgOeU,oTd],[MgOeU,KtOp],[MgOeU,KtOp,oTd],[PBy],[PBy,oTd],[PBy,KtOp],[PBy,KtOp,oTd],[PBy,MgOeU],[PBy,MgOeU,oTd],[PBy,MgOeU,KtOp],[PBy,MgOeU,KtOp,oTd],[Au],[Au,oTd],[Au,KtOp],[Au,KtOp,oTd],[Au,MgOeU],[Au,MgOeU,oTd],[Au,MgOeU,KtOp],[Au,MgOeU,KtOp,oTd],[Au,PBy],[Au,PBy,oTd],[Au,PBy,KtOp],[Au,PBy,KtOp,oTd],[Au,PBy,MgOeU],[Au,PBy,MgOeU,oTd],[Au,PBy,MgOeU,KtOp],[Au,PBy,MgOeU,KtOp,oTd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4736() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YUbRk","SXLgn","UHMl","OOZ","YX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YX],[OOZ],[OOZ,YX],[UHMl],[UHMl,YX],[UHMl,OOZ],[UHMl,OOZ,YX],[SXLgn],[SXLgn,YX],[SXLgn,OOZ],[SXLgn,OOZ,YX],[SXLgn,UHMl],[SXLgn,UHMl,YX],[SXLgn,UHMl,OOZ],[SXLgn,UHMl,OOZ,YX],[YUbRk],[YUbRk,YX],[YUbRk,OOZ],[YUbRk,OOZ,YX],[YUbRk,UHMl],[YUbRk,UHMl,YX],[YUbRk,UHMl,OOZ],[YUbRk,UHMl,OOZ,YX],[YUbRk,SXLgn],[YUbRk,SXLgn,YX],[YUbRk,SXLgn,OOZ],[YUbRk,SXLgn,OOZ,YX],[YUbRk,SXLgn,UHMl],[YUbRk,SXLgn,UHMl,YX],[YUbRk,SXLgn,UHMl,OOZ],[YUbRk,SXLgn,UHMl,OOZ,YX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4737() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","md","IE","YSMts")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YSMts],[IE],[IE,YSMts],[md],[md,YSMts],[md,IE],[md,IE,YSMts],[Q],[Q,YSMts],[Q,IE],[Q,IE,YSMts],[Q,md],[Q,md,YSMts],[Q,md,IE],[Q,md,IE,YSMts]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4738() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G","CjDoQ","ki","sPao")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sPao],[ki],[ki,sPao],[CjDoQ],[CjDoQ,sPao],[CjDoQ,ki],[CjDoQ,ki,sPao],[G],[G,sPao],[G,ki],[G,ki,sPao],[G,CjDoQ],[G,CjDoQ,sPao],[G,CjDoQ,ki],[G,CjDoQ,ki,sPao]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4739() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AJI","kC","QDdhD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QDdhD],[kC],[kC,QDdhD],[AJI],[AJI,QDdhD],[AJI,kC],[AJI,kC,QDdhD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4740() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AQJuh","NoKDB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NoKDB],[AQJuh],[AQJuh,NoKDB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4741() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hfC","w","BViy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BViy],[w],[w,BViy],[hfC],[hfC,BViy],[hfC,w],[hfC,w,BViy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4742() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jJbf","z","HBYl","UkhX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UkhX],[HBYl],[HBYl,UkhX],[z],[z,UkhX],[z,HBYl],[z,HBYl,UkhX],[jJbf],[jJbf,UkhX],[jJbf,HBYl],[jJbf,HBYl,UkhX],[jJbf,z],[jJbf,z,UkhX],[jJbf,z,HBYl],[jJbf,z,HBYl,UkhX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4743() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sXhH","hj","SJJnB","Mx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Mx],[SJJnB],[SJJnB,Mx],[hj],[hj,Mx],[hj,SJJnB],[hj,SJJnB,Mx],[sXhH],[sXhH,Mx],[sXhH,SJJnB],[sXhH,SJJnB,Mx],[sXhH,hj],[sXhH,hj,Mx],[sXhH,hj,SJJnB],[sXhH,hj,SJJnB,Mx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4744() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TyYgs","kD","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[kD],[kD,j],[TyYgs],[TyYgs,j],[TyYgs,kD],[TyYgs,kD,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4745() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ArBO","FSGJ","cuH","ph","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[ph],[ph,N],[cuH],[cuH,N],[cuH,ph],[cuH,ph,N],[FSGJ],[FSGJ,N],[FSGJ,ph],[FSGJ,ph,N],[FSGJ,cuH],[FSGJ,cuH,N],[FSGJ,cuH,ph],[FSGJ,cuH,ph,N],[ArBO],[ArBO,N],[ArBO,ph],[ArBO,ph,N],[ArBO,cuH],[ArBO,cuH,N],[ArBO,cuH,ph],[ArBO,cuH,ph,N],[ArBO,FSGJ],[ArBO,FSGJ,N],[ArBO,FSGJ,ph],[ArBO,FSGJ,ph,N],[ArBO,FSGJ,cuH],[ArBO,FSGJ,cuH,N],[ArBO,FSGJ,cuH,ph],[ArBO,FSGJ,cuH,ph,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4746() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AUhs","fy","ElLk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ElLk],[fy],[fy,ElLk],[AUhs],[AUhs,ElLk],[AUhs,fy],[AUhs,fy,ElLk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4747() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bE","xl","BEaD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BEaD],[xl],[xl,BEaD],[bE],[bE,BEaD],[bE,xl],[bE,xl,BEaD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4748() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "i")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[i]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4749() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SQMsj","IjYf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IjYf],[SQMsj],[SQMsj,IjYf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4750() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LLHN","h","ngJsX","gDz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gDz],[ngJsX],[ngJsX,gDz],[h],[h,gDz],[h,ngJsX],[h,ngJsX,gDz],[LLHN],[LLHN,gDz],[LLHN,ngJsX],[LLHN,ngJsX,gDz],[LLHN,h],[LLHN,h,gDz],[LLHN,h,ngJsX],[LLHN,h,ngJsX,gDz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4751() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ff","kKI","Hue","yS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yS],[Hue],[Hue,yS],[kKI],[kKI,yS],[kKI,Hue],[kKI,Hue,yS],[ff],[ff,yS],[ff,Hue],[ff,Hue,yS],[ff,kKI],[ff,kKI,yS],[ff,kKI,Hue],[ff,kKI,Hue,yS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4752() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "wGPd","cz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cz],[wGPd],[wGPd,cz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4753() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dd","r","Dh","Osny")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Osny],[Dh],[Dh,Osny],[r],[r,Osny],[r,Dh],[r,Dh,Osny],[Dd],[Dd,Osny],[Dd,Dh],[Dd,Dh,Osny],[Dd,r],[Dd,r,Osny],[Dd,r,Dh],[Dd,r,Dh,Osny]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4754() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WTZGo","pI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pI],[WTZGo],[WTZGo,pI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4755() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QD","nfYLT","Ttzy","cFnuw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cFnuw],[Ttzy],[Ttzy,cFnuw],[nfYLT],[nfYLT,cFnuw],[nfYLT,Ttzy],[nfYLT,Ttzy,cFnuw],[QD],[QD,cFnuw],[QD,Ttzy],[QD,Ttzy,cFnuw],[QD,nfYLT],[QD,nfYLT,cFnuw],[QD,nfYLT,Ttzy],[QD,nfYLT,Ttzy,cFnuw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4756() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qh","eJNZ","o")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[o],[eJNZ],[eJNZ,o],[qh],[qh,o],[qh,eJNZ],[qh,eJNZ,o]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4757() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NLE","aNd","CqM","qo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qo],[CqM],[CqM,qo],[aNd],[aNd,qo],[aNd,CqM],[aNd,CqM,qo],[NLE],[NLE,qo],[NLE,CqM],[NLE,CqM,qo],[NLE,aNd],[NLE,aNd,qo],[NLE,aNd,CqM],[NLE,aNd,CqM,qo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4758() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "TPJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TPJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4759() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AkGUV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AkGUV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4760() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "klf","EKdGC","xO","Z")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Z],[xO],[xO,Z],[EKdGC],[EKdGC,Z],[EKdGC,xO],[EKdGC,xO,Z],[klf],[klf,Z],[klf,xO],[klf,xO,Z],[klf,EKdGC],[klf,EKdGC,Z],[klf,EKdGC,xO],[klf,EKdGC,xO,Z]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4761() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BLgz","OWG","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[OWG],[OWG,O],[BLgz],[BLgz,O],[BLgz,OWG],[BLgz,OWG,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4762() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "br")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[br]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4763() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","CER","xIl","UR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UR],[xIl],[xIl,UR],[CER],[CER,UR],[CER,xIl],[CER,xIl,UR],[p],[p,UR],[p,xIl],[p,xIl,UR],[p,CER],[p,CER,UR],[p,CER,xIl],[p,CER,xIl,UR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4764() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LqAxT","rp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rp],[LqAxT],[LqAxT,rp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4765() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eQdJE","W","j")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[j],[W],[W,j],[eQdJE],[eQdJE,j],[eQdJE,W],[eQdJE,W,j]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4766() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AVioj","Gol","lE","y","yavS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yavS],[y],[y,yavS],[lE],[lE,yavS],[lE,y],[lE,y,yavS],[Gol],[Gol,yavS],[Gol,y],[Gol,y,yavS],[Gol,lE],[Gol,lE,yavS],[Gol,lE,y],[Gol,lE,y,yavS],[AVioj],[AVioj,yavS],[AVioj,y],[AVioj,y,yavS],[AVioj,lE],[AVioj,lE,yavS],[AVioj,lE,y],[AVioj,lE,y,yavS],[AVioj,Gol],[AVioj,Gol,yavS],[AVioj,Gol,y],[AVioj,Gol,y,yavS],[AVioj,Gol,lE],[AVioj,Gol,lE,yavS],[AVioj,Gol,lE,y],[AVioj,Gol,lE,y,yavS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4767() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FkKG","YULh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YULh],[FkKG],[FkKG,YULh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4768() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QttmD","whCtm","iA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iA],[whCtm],[whCtm,iA],[QttmD],[QttmD,iA],[QttmD,whCtm],[QttmD,whCtm,iA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4769() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Htohn","HcxH","cJE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cJE],[HcxH],[HcxH,cJE],[Htohn],[Htohn,cJE],[Htohn,HcxH],[Htohn,HcxH,cJE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4770() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zxq","W","H","UwOQC","gd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gd],[UwOQC],[UwOQC,gd],[H],[H,gd],[H,UwOQC],[H,UwOQC,gd],[W],[W,gd],[W,UwOQC],[W,UwOQC,gd],[W,H],[W,H,gd],[W,H,UwOQC],[W,H,UwOQC,gd],[zxq],[zxq,gd],[zxq,UwOQC],[zxq,UwOQC,gd],[zxq,H],[zxq,H,gd],[zxq,H,UwOQC],[zxq,H,UwOQC,gd],[zxq,W],[zxq,W,gd],[zxq,W,UwOQC],[zxq,W,UwOQC,gd],[zxq,W,H],[zxq,W,H,gd],[zxq,W,H,UwOQC],[zxq,W,H,UwOQC,gd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4771() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4772() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Wl","uEMi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uEMi],[Wl],[Wl,uEMi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4773() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JHJKA","us","Zey","ElKC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ElKC],[Zey],[Zey,ElKC],[us],[us,ElKC],[us,Zey],[us,Zey,ElKC],[JHJKA],[JHJKA,ElKC],[JHJKA,Zey],[JHJKA,Zey,ElKC],[JHJKA,us],[JHJKA,us,ElKC],[JHJKA,us,Zey],[JHJKA,us,Zey,ElKC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4774() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HFyl","zlxgK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zlxgK],[HFyl],[HFyl,zlxgK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4775() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DT","GmqgV","v")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[v],[GmqgV],[GmqgV,v],[DT],[DT,v],[DT,GmqgV],[DT,GmqgV,v]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4776() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MnJI","t")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[t],[MnJI],[MnJI,t]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4777() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ytb","tMuK","THn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[THn],[tMuK],[tMuK,THn],[ytb],[ytb,THn],[ytb,tMuK],[ytb,tMuK,THn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4778() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eGHE","R","D")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[D],[R],[R,D],[eGHE],[eGHE,D],[eGHE,R],[eGHE,R,D]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4779() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HqY","Vufts","pqOv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pqOv],[Vufts],[Vufts,pqOv],[HqY],[HqY,pqOv],[HqY,Vufts],[HqY,Vufts,pqOv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4780() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ShE","th","t","Zzf","w")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[w],[Zzf],[Zzf,w],[t],[t,w],[t,Zzf],[t,Zzf,w],[th],[th,w],[th,Zzf],[th,Zzf,w],[th,t],[th,t,w],[th,t,Zzf],[th,t,Zzf,w],[ShE],[ShE,w],[ShE,Zzf],[ShE,Zzf,w],[ShE,t],[ShE,t,w],[ShE,t,Zzf],[ShE,t,Zzf,w],[ShE,th],[ShE,th,w],[ShE,th,Zzf],[ShE,th,Zzf,w],[ShE,th,t],[ShE,th,t,w],[ShE,th,t,Zzf],[ShE,th,t,Zzf,w]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4781() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zqq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zqq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4782() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DGv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DGv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4783() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dbC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dbC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4784() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GYlzV","pRcb","qcZ","k","gHMm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[gHMm],[k],[k,gHMm],[qcZ],[qcZ,gHMm],[qcZ,k],[qcZ,k,gHMm],[pRcb],[pRcb,gHMm],[pRcb,k],[pRcb,k,gHMm],[pRcb,qcZ],[pRcb,qcZ,gHMm],[pRcb,qcZ,k],[pRcb,qcZ,k,gHMm],[GYlzV],[GYlzV,gHMm],[GYlzV,k],[GYlzV,k,gHMm],[GYlzV,qcZ],[GYlzV,qcZ,gHMm],[GYlzV,qcZ,k],[GYlzV,qcZ,k,gHMm],[GYlzV,pRcb],[GYlzV,pRcb,gHMm],[GYlzV,pRcb,k],[GYlzV,pRcb,k,gHMm],[GYlzV,pRcb,qcZ],[GYlzV,pRcb,qcZ,gHMm],[GYlzV,pRcb,qcZ,k],[GYlzV,pRcb,qcZ,k,gHMm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4785() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BGv","MfYp","u","me","wMxdL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wMxdL],[me],[me,wMxdL],[u],[u,wMxdL],[u,me],[u,me,wMxdL],[MfYp],[MfYp,wMxdL],[MfYp,me],[MfYp,me,wMxdL],[MfYp,u],[MfYp,u,wMxdL],[MfYp,u,me],[MfYp,u,me,wMxdL],[BGv],[BGv,wMxdL],[BGv,me],[BGv,me,wMxdL],[BGv,u],[BGv,u,wMxdL],[BGv,u,me],[BGv,u,me,wMxdL],[BGv,MfYp],[BGv,MfYp,wMxdL],[BGv,MfYp,me],[BGv,MfYp,me,wMxdL],[BGv,MfYp,u],[BGv,MfYp,u,wMxdL],[BGv,MfYp,u,me],[BGv,MfYp,u,me,wMxdL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4786() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ulvm","Tle")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Tle],[ulvm],[ulvm,Tle]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4787() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","dwKA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dwKA],[E],[E,dwKA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4788() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IMygi")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IMygi]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4789() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KHIn","aIMQD","qX","sk","Ap")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ap],[sk],[sk,Ap],[qX],[qX,Ap],[qX,sk],[qX,sk,Ap],[aIMQD],[aIMQD,Ap],[aIMQD,sk],[aIMQD,sk,Ap],[aIMQD,qX],[aIMQD,qX,Ap],[aIMQD,qX,sk],[aIMQD,qX,sk,Ap],[KHIn],[KHIn,Ap],[KHIn,sk],[KHIn,sk,Ap],[KHIn,qX],[KHIn,qX,Ap],[KHIn,qX,sk],[KHIn,qX,sk,Ap],[KHIn,aIMQD],[KHIn,aIMQD,Ap],[KHIn,aIMQD,sk],[KHIn,aIMQD,sk,Ap],[KHIn,aIMQD,qX],[KHIn,aIMQD,qX,Ap],[KHIn,aIMQD,qX,sk],[KHIn,aIMQD,qX,sk,Ap]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4790() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ZVNj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZVNj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4791() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pX","xRwIW","pXXM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pXXM],[xRwIW],[xRwIW,pXXM],[pX],[pX,pXXM],[pX,xRwIW],[pX,xRwIW,pXXM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4792() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "pxgWh","C","U","rox")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rox],[U],[U,rox],[C],[C,rox],[C,U],[C,U,rox],[pxgWh],[pxgWh,rox],[pxgWh,U],[pxgWh,U,rox],[pxgWh,C],[pxgWh,C,rox],[pxgWh,C,U],[pxgWh,C,U,rox]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4793() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "iCXPx","wJ","f","Tjnst","wT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wT],[Tjnst],[Tjnst,wT],[f],[f,wT],[f,Tjnst],[f,Tjnst,wT],[wJ],[wJ,wT],[wJ,Tjnst],[wJ,Tjnst,wT],[wJ,f],[wJ,f,wT],[wJ,f,Tjnst],[wJ,f,Tjnst,wT],[iCXPx],[iCXPx,wT],[iCXPx,Tjnst],[iCXPx,Tjnst,wT],[iCXPx,f],[iCXPx,f,wT],[iCXPx,f,Tjnst],[iCXPx,f,Tjnst,wT],[iCXPx,wJ],[iCXPx,wJ,wT],[iCXPx,wJ,Tjnst],[iCXPx,wJ,Tjnst,wT],[iCXPx,wJ,f],[iCXPx,wJ,f,wT],[iCXPx,wJ,f,Tjnst],[iCXPx,wJ,f,Tjnst,wT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4794() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rx","CVDQ","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[CVDQ],[CVDQ,O],[Rx],[Rx,O],[Rx,CVDQ],[Rx,CVDQ,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4795() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NB","F","IA","lmsl","PM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PM],[lmsl],[lmsl,PM],[IA],[IA,PM],[IA,lmsl],[IA,lmsl,PM],[F],[F,PM],[F,lmsl],[F,lmsl,PM],[F,IA],[F,IA,PM],[F,IA,lmsl],[F,IA,lmsl,PM],[NB],[NB,PM],[NB,lmsl],[NB,lmsl,PM],[NB,IA],[NB,IA,PM],[NB,IA,lmsl],[NB,IA,lmsl,PM],[NB,F],[NB,F,PM],[NB,F,lmsl],[NB,F,lmsl,PM],[NB,F,IA],[NB,F,IA,PM],[NB,F,IA,lmsl],[NB,F,IA,lmsl,PM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4796() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eH","JiAui","WJJeG","qqI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qqI],[WJJeG],[WJJeG,qqI],[JiAui],[JiAui,qqI],[JiAui,WJJeG],[JiAui,WJJeG,qqI],[eH],[eH,qqI],[eH,WJJeG],[eH,WJJeG,qqI],[eH,JiAui],[eH,JiAui,qqI],[eH,JiAui,WJJeG],[eH,JiAui,WJJeG,qqI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4797() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vXD","d","Vl","pvSU","dQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dQ],[pvSU],[pvSU,dQ],[Vl],[Vl,dQ],[Vl,pvSU],[Vl,pvSU,dQ],[d],[d,dQ],[d,pvSU],[d,pvSU,dQ],[d,Vl],[d,Vl,dQ],[d,Vl,pvSU],[d,Vl,pvSU,dQ],[vXD],[vXD,dQ],[vXD,pvSU],[vXD,pvSU,dQ],[vXD,Vl],[vXD,Vl,dQ],[vXD,Vl,pvSU],[vXD,Vl,pvSU,dQ],[vXD,d],[vXD,d,dQ],[vXD,d,pvSU],[vXD,d,pvSU,dQ],[vXD,d,Vl],[vXD,d,Vl,dQ],[vXD,d,Vl,pvSU],[vXD,d,Vl,pvSU,dQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4798() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rAp","QNAMt","sbUH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sbUH],[QNAMt],[QNAMt,sbUH],[rAp],[rAp,sbUH],[rAp,QNAMt],[rAp,QNAMt,sbUH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4799() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qON","Pr","qv","ODRyp")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ODRyp],[qv],[qv,ODRyp],[Pr],[Pr,ODRyp],[Pr,qv],[Pr,qv,ODRyp],[qON],[qON,ODRyp],[qON,qv],[qON,qv,ODRyp],[qON,Pr],[qON,Pr,ODRyp],[qON,Pr,qv],[qON,Pr,qv,ODRyp]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4800() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eg","MiNBY","FgDW","oIIEm","iqreM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iqreM],[oIIEm],[oIIEm,iqreM],[FgDW],[FgDW,iqreM],[FgDW,oIIEm],[FgDW,oIIEm,iqreM],[MiNBY],[MiNBY,iqreM],[MiNBY,oIIEm],[MiNBY,oIIEm,iqreM],[MiNBY,FgDW],[MiNBY,FgDW,iqreM],[MiNBY,FgDW,oIIEm],[MiNBY,FgDW,oIIEm,iqreM],[eg],[eg,iqreM],[eg,oIIEm],[eg,oIIEm,iqreM],[eg,FgDW],[eg,FgDW,iqreM],[eg,FgDW,oIIEm],[eg,FgDW,oIIEm,iqreM],[eg,MiNBY],[eg,MiNBY,iqreM],[eg,MiNBY,oIIEm],[eg,MiNBY,oIIEm,iqreM],[eg,MiNBY,FgDW],[eg,MiNBY,FgDW,iqreM],[eg,MiNBY,FgDW,oIIEm],[eg,MiNBY,FgDW,oIIEm,iqreM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4801() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dilg","aHA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aHA],[Dilg],[Dilg,aHA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4802() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BYTt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BYTt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4803() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cdJ","MjZL","XfjN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XfjN],[MjZL],[MjZL,XfjN],[cdJ],[cdJ,XfjN],[cdJ,MjZL],[cdJ,MjZL,XfjN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4804() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WDEGn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WDEGn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4805() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CjL","VVIF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VVIF],[CjL],[CjL,VVIF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4806() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","qdvs","GPx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GPx],[qdvs],[qdvs,GPx],[C],[C,GPx],[C,qdvs],[C,qdvs,GPx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4807() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WDGt","orX","E","Oiyrj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Oiyrj],[E],[E,Oiyrj],[orX],[orX,Oiyrj],[orX,E],[orX,E,Oiyrj],[WDGt],[WDGt,Oiyrj],[WDGt,E],[WDGt,E,Oiyrj],[WDGt,orX],[WDGt,orX,Oiyrj],[WDGt,orX,E],[WDGt,orX,E,Oiyrj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4808() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[P]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4809() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SDZ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SDZ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4810() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "QiA","Z","cDM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cDM],[Z],[Z,cDM],[QiA],[QiA,cDM],[QiA,Z],[QiA,Z,cDM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4811() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FH","ZtSu","Hhk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hhk],[ZtSu],[ZtSu,Hhk],[FH],[FH,Hhk],[FH,ZtSu],[FH,ZtSu,Hhk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4812() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ajey")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ajey]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4813() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Qbe","bg","Mzsub","FC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FC],[Mzsub],[Mzsub,FC],[bg],[bg,FC],[bg,Mzsub],[bg,Mzsub,FC],[Qbe],[Qbe,FC],[Qbe,Mzsub],[Qbe,Mzsub,FC],[Qbe,bg],[Qbe,bg,FC],[Qbe,bg,Mzsub],[Qbe,bg,Mzsub,FC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4814() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VGR","A","RWPXl","hZT","bKul")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[bKul],[hZT],[hZT,bKul],[RWPXl],[RWPXl,bKul],[RWPXl,hZT],[RWPXl,hZT,bKul],[A],[A,bKul],[A,hZT],[A,hZT,bKul],[A,RWPXl],[A,RWPXl,bKul],[A,RWPXl,hZT],[A,RWPXl,hZT,bKul],[VGR],[VGR,bKul],[VGR,hZT],[VGR,hZT,bKul],[VGR,RWPXl],[VGR,RWPXl,bKul],[VGR,RWPXl,hZT],[VGR,RWPXl,hZT,bKul],[VGR,A],[VGR,A,bKul],[VGR,A,hZT],[VGR,A,hZT,bKul],[VGR,A,RWPXl],[VGR,A,RWPXl,bKul],[VGR,A,RWPXl,hZT],[VGR,A,RWPXl,hZT,bKul]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4815() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qqFLB","VW","tdcz","WmcbM","CNF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CNF],[WmcbM],[WmcbM,CNF],[tdcz],[tdcz,CNF],[tdcz,WmcbM],[tdcz,WmcbM,CNF],[VW],[VW,CNF],[VW,WmcbM],[VW,WmcbM,CNF],[VW,tdcz],[VW,tdcz,CNF],[VW,tdcz,WmcbM],[VW,tdcz,WmcbM,CNF],[qqFLB],[qqFLB,CNF],[qqFLB,WmcbM],[qqFLB,WmcbM,CNF],[qqFLB,tdcz],[qqFLB,tdcz,CNF],[qqFLB,tdcz,WmcbM],[qqFLB,tdcz,WmcbM,CNF],[qqFLB,VW],[qqFLB,VW,CNF],[qqFLB,VW,WmcbM],[qqFLB,VW,WmcbM,CNF],[qqFLB,VW,tdcz],[qqFLB,VW,tdcz,CNF],[qqFLB,VW,tdcz,WmcbM],[qqFLB,VW,tdcz,WmcbM,CNF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4816() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rfL","kE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kE],[rfL],[rfL,kE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4817() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4818() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dMZ","z","btLXo","GufEA","UOii")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UOii],[GufEA],[GufEA,UOii],[btLXo],[btLXo,UOii],[btLXo,GufEA],[btLXo,GufEA,UOii],[z],[z,UOii],[z,GufEA],[z,GufEA,UOii],[z,btLXo],[z,btLXo,UOii],[z,btLXo,GufEA],[z,btLXo,GufEA,UOii],[dMZ],[dMZ,UOii],[dMZ,GufEA],[dMZ,GufEA,UOii],[dMZ,btLXo],[dMZ,btLXo,UOii],[dMZ,btLXo,GufEA],[dMZ,btLXo,GufEA,UOii],[dMZ,z],[dMZ,z,UOii],[dMZ,z,GufEA],[dMZ,z,GufEA,UOii],[dMZ,z,btLXo],[dMZ,z,btLXo,UOii],[dMZ,z,btLXo,GufEA],[dMZ,z,btLXo,GufEA,UOii]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4819() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rllW","R","zSu","Faef")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Faef],[zSu],[zSu,Faef],[R],[R,Faef],[R,zSu],[R,zSu,Faef],[rllW],[rllW,Faef],[rllW,zSu],[rllW,zSu,Faef],[rllW,R],[rllW,R,Faef],[rllW,R,zSu],[rllW,R,zSu,Faef]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4820() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FgnP","H","kvTt","M","zW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zW],[M],[M,zW],[kvTt],[kvTt,zW],[kvTt,M],[kvTt,M,zW],[H],[H,zW],[H,M],[H,M,zW],[H,kvTt],[H,kvTt,zW],[H,kvTt,M],[H,kvTt,M,zW],[FgnP],[FgnP,zW],[FgnP,M],[FgnP,M,zW],[FgnP,kvTt],[FgnP,kvTt,zW],[FgnP,kvTt,M],[FgnP,kvTt,M,zW],[FgnP,H],[FgnP,H,zW],[FgnP,H,M],[FgnP,H,M,zW],[FgnP,H,kvTt],[FgnP,H,kvTt,zW],[FgnP,H,kvTt,M],[FgnP,H,kvTt,M,zW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4821() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","KRDe")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KRDe],[V],[V,KRDe]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4822() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YZ","xkbdN","PY","iF","Ba")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ba],[iF],[iF,Ba],[PY],[PY,Ba],[PY,iF],[PY,iF,Ba],[xkbdN],[xkbdN,Ba],[xkbdN,iF],[xkbdN,iF,Ba],[xkbdN,PY],[xkbdN,PY,Ba],[xkbdN,PY,iF],[xkbdN,PY,iF,Ba],[YZ],[YZ,Ba],[YZ,iF],[YZ,iF,Ba],[YZ,PY],[YZ,PY,Ba],[YZ,PY,iF],[YZ,PY,iF,Ba],[YZ,xkbdN],[YZ,xkbdN,Ba],[YZ,xkbdN,iF],[YZ,xkbdN,iF,Ba],[YZ,xkbdN,PY],[YZ,xkbdN,PY,Ba],[YZ,xkbdN,PY,iF],[YZ,xkbdN,PY,iF,Ba]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4823() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IZq","ZOx","NDb","WgIHu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WgIHu],[NDb],[NDb,WgIHu],[ZOx],[ZOx,WgIHu],[ZOx,NDb],[ZOx,NDb,WgIHu],[IZq],[IZq,WgIHu],[IZq,NDb],[IZq,NDb,WgIHu],[IZq,ZOx],[IZq,ZOx,WgIHu],[IZq,ZOx,NDb],[IZq,ZOx,NDb,WgIHu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4824() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LGxgr","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[LGxgr],[LGxgr,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4825() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[t]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4826() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[C]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4827() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HUEnc","OSyA","qCJ","J")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[J],[qCJ],[qCJ,J],[OSyA],[OSyA,J],[OSyA,qCJ],[OSyA,qCJ,J],[HUEnc],[HUEnc,J],[HUEnc,qCJ],[HUEnc,qCJ,J],[HUEnc,OSyA],[HUEnc,OSyA,J],[HUEnc,OSyA,qCJ],[HUEnc,OSyA,qCJ,J]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4828() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sCq","mTHg","kv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kv],[mTHg],[mTHg,kv],[sCq],[sCq,kv],[sCq,mTHg],[sCq,mTHg,kv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4829() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","TACh","pESX","Z","njWH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[njWH],[Z],[Z,njWH],[pESX],[pESX,njWH],[pESX,Z],[pESX,Z,njWH],[TACh],[TACh,njWH],[TACh,Z],[TACh,Z,njWH],[TACh,pESX],[TACh,pESX,njWH],[TACh,pESX,Z],[TACh,pESX,Z,njWH],[t],[t,njWH],[t,Z],[t,Z,njWH],[t,pESX],[t,pESX,njWH],[t,pESX,Z],[t,pESX,Z,njWH],[t,TACh],[t,TACh,njWH],[t,TACh,Z],[t,TACh,Z,njWH],[t,TACh,pESX],[t,TACh,pESX,njWH],[t,TACh,pESX,Z],[t,TACh,pESX,Z,njWH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4830() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4831() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vcZSh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vcZSh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4832() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rs","baHCE","wOu","l")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[l],[wOu],[wOu,l],[baHCE],[baHCE,l],[baHCE,wOu],[baHCE,wOu,l],[rs],[rs,l],[rs,wOu],[rs,wOu,l],[rs,baHCE],[rs,baHCE,l],[rs,baHCE,wOu],[rs,baHCE,wOu,l]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4833() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "z","avVtD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[avVtD],[z],[z,avVtD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4834() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kXPd","fi","eY","Rxto","YiJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YiJ],[Rxto],[Rxto,YiJ],[eY],[eY,YiJ],[eY,Rxto],[eY,Rxto,YiJ],[fi],[fi,YiJ],[fi,Rxto],[fi,Rxto,YiJ],[fi,eY],[fi,eY,YiJ],[fi,eY,Rxto],[fi,eY,Rxto,YiJ],[kXPd],[kXPd,YiJ],[kXPd,Rxto],[kXPd,Rxto,YiJ],[kXPd,eY],[kXPd,eY,YiJ],[kXPd,eY,Rxto],[kXPd,eY,Rxto,YiJ],[kXPd,fi],[kXPd,fi,YiJ],[kXPd,fi,Rxto],[kXPd,fi,Rxto,YiJ],[kXPd,fi,eY],[kXPd,fi,eY,YiJ],[kXPd,fi,eY,Rxto],[kXPd,fi,eY,Rxto,YiJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4835() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GLvHp","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[GLvHp],[GLvHp,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4836() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Kkxd")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Kkxd]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4837() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Bt","iEIq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iEIq],[Bt],[Bt,iEIq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4838() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BOkg","HT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HT],[BOkg],[BOkg,HT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4839() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t","HsA","RL","esew")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[esew],[RL],[RL,esew],[HsA],[HsA,esew],[HsA,RL],[HsA,RL,esew],[t],[t,esew],[t,RL],[t,RL,esew],[t,HsA],[t,HsA,esew],[t,HsA,RL],[t,HsA,RL,esew]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4840() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "dzF","r","Tl","wu","ddkvy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ddkvy],[wu],[wu,ddkvy],[Tl],[Tl,ddkvy],[Tl,wu],[Tl,wu,ddkvy],[r],[r,ddkvy],[r,wu],[r,wu,ddkvy],[r,Tl],[r,Tl,ddkvy],[r,Tl,wu],[r,Tl,wu,ddkvy],[dzF],[dzF,ddkvy],[dzF,wu],[dzF,wu,ddkvy],[dzF,Tl],[dzF,Tl,ddkvy],[dzF,Tl,wu],[dzF,Tl,wu,ddkvy],[dzF,r],[dzF,r,ddkvy],[dzF,r,wu],[dzF,r,wu,ddkvy],[dzF,r,Tl],[dzF,r,Tl,ddkvy],[dzF,r,Tl,wu],[dzF,r,Tl,wu,ddkvy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4841() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JETJA","kUig","Vo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Vo],[kUig],[kUig,Vo],[JETJA],[JETJA,Vo],[JETJA,kUig],[JETJA,kUig,Vo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4842() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RqKDH","K","eHGLU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eHGLU],[K],[K,eHGLU],[RqKDH],[RqKDH,eHGLU],[RqKDH,K],[RqKDH,K,eHGLU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4843() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xDl","B","DZ","Ysv","vKZn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vKZn],[Ysv],[Ysv,vKZn],[DZ],[DZ,vKZn],[DZ,Ysv],[DZ,Ysv,vKZn],[B],[B,vKZn],[B,Ysv],[B,Ysv,vKZn],[B,DZ],[B,DZ,vKZn],[B,DZ,Ysv],[B,DZ,Ysv,vKZn],[xDl],[xDl,vKZn],[xDl,Ysv],[xDl,Ysv,vKZn],[xDl,DZ],[xDl,DZ,vKZn],[xDl,DZ,Ysv],[xDl,DZ,Ysv,vKZn],[xDl,B],[xDl,B,vKZn],[xDl,B,Ysv],[xDl,B,Ysv,vKZn],[xDl,B,DZ],[xDl,B,DZ,vKZn],[xDl,B,DZ,Ysv],[xDl,B,DZ,Ysv,vKZn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4844() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "t")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[t]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4845() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","z","SjV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SjV],[z],[z,SjV],[B],[B,SjV],[B,z],[B,z,SjV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4846() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q","slo","SZznm","iNZvD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iNZvD],[SZznm],[SZznm,iNZvD],[slo],[slo,iNZvD],[slo,SZznm],[slo,SZznm,iNZvD],[Q],[Q,iNZvD],[Q,SZznm],[Q,SZznm,iNZvD],[Q,slo],[Q,slo,iNZvD],[Q,slo,SZznm],[Q,slo,SZznm,iNZvD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4847() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ixplI","r","hM","tqu","YXGl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[YXGl],[tqu],[tqu,YXGl],[hM],[hM,YXGl],[hM,tqu],[hM,tqu,YXGl],[r],[r,YXGl],[r,tqu],[r,tqu,YXGl],[r,hM],[r,hM,YXGl],[r,hM,tqu],[r,hM,tqu,YXGl],[ixplI],[ixplI,YXGl],[ixplI,tqu],[ixplI,tqu,YXGl],[ixplI,hM],[ixplI,hM,YXGl],[ixplI,hM,tqu],[ixplI,hM,tqu,YXGl],[ixplI,r],[ixplI,r,YXGl],[ixplI,r,tqu],[ixplI,r,tqu,YXGl],[ixplI,r,hM],[ixplI,r,hM,YXGl],[ixplI,r,hM,tqu],[ixplI,r,hM,tqu,YXGl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4848() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kqdL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kqdL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4849() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AvQIh","qoAD","bUnIf","OvPFY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OvPFY],[bUnIf],[bUnIf,OvPFY],[qoAD],[qoAD,OvPFY],[qoAD,bUnIf],[qoAD,bUnIf,OvPFY],[AvQIh],[AvQIh,OvPFY],[AvQIh,bUnIf],[AvQIh,bUnIf,OvPFY],[AvQIh,qoAD],[AvQIh,qoAD,OvPFY],[AvQIh,qoAD,bUnIf],[AvQIh,qoAD,bUnIf,OvPFY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4850() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KQX","mSjJH","f","MyccN","W")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[W],[MyccN],[MyccN,W],[f],[f,W],[f,MyccN],[f,MyccN,W],[mSjJH],[mSjJH,W],[mSjJH,MyccN],[mSjJH,MyccN,W],[mSjJH,f],[mSjJH,f,W],[mSjJH,f,MyccN],[mSjJH,f,MyccN,W],[KQX],[KQX,W],[KQX,MyccN],[KQX,MyccN,W],[KQX,f],[KQX,f,W],[KQX,f,MyccN],[KQX,f,MyccN,W],[KQX,mSjJH],[KQX,mSjJH,W],[KQX,mSjJH,MyccN],[KQX,mSjJH,MyccN,W],[KQX,mSjJH,f],[KQX,mSjJH,f,W],[KQX,mSjJH,f,MyccN],[KQX,mSjJH,f,MyccN,W]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4851() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lBA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lBA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4852() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NP","DQ","KI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KI],[DQ],[DQ,KI],[NP],[NP,KI],[NP,DQ],[NP,DQ,KI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4853() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "vvoUm","Reao")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Reao],[vvoUm],[vvoUm,Reao]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4854() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Hyhg","pvdq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pvdq],[Hyhg],[Hyhg,pvdq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4855() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","Th","BVx")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[BVx],[Th],[Th,BVx],[b],[b,BVx],[b,Th],[b,Th,BVx]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4856() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VgCj","ZEwqk","d","EMb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EMb],[d],[d,EMb],[ZEwqk],[ZEwqk,EMb],[ZEwqk,d],[ZEwqk,d,EMb],[VgCj],[VgCj,EMb],[VgCj,d],[VgCj,d,EMb],[VgCj,ZEwqk],[VgCj,ZEwqk,EMb],[VgCj,ZEwqk,d],[VgCj,ZEwqk,d,EMb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4857() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rEv","oVIh","JUzZn","en","I")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[I],[en],[en,I],[JUzZn],[JUzZn,I],[JUzZn,en],[JUzZn,en,I],[oVIh],[oVIh,I],[oVIh,en],[oVIh,en,I],[oVIh,JUzZn],[oVIh,JUzZn,I],[oVIh,JUzZn,en],[oVIh,JUzZn,en,I],[rEv],[rEv,I],[rEv,en],[rEv,en,I],[rEv,JUzZn],[rEv,JUzZn,I],[rEv,JUzZn,en],[rEv,JUzZn,en,I],[rEv,oVIh],[rEv,oVIh,I],[rEv,oVIh,en],[rEv,oVIh,en,I],[rEv,oVIh,JUzZn],[rEv,oVIh,JUzZn,I],[rEv,oVIh,JUzZn,en],[rEv,oVIh,JUzZn,en,I]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4858() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tVf","sPd","k","ciZE","TS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TS],[ciZE],[ciZE,TS],[k],[k,TS],[k,ciZE],[k,ciZE,TS],[sPd],[sPd,TS],[sPd,ciZE],[sPd,ciZE,TS],[sPd,k],[sPd,k,TS],[sPd,k,ciZE],[sPd,k,ciZE,TS],[tVf],[tVf,TS],[tVf,ciZE],[tVf,ciZE,TS],[tVf,k],[tVf,k,TS],[tVf,k,ciZE],[tVf,k,ciZE,TS],[tVf,sPd],[tVf,sPd,TS],[tVf,sPd,ciZE],[tVf,sPd,ciZE,TS],[tVf,sPd,k],[tVf,sPd,k,TS],[tVf,sPd,k,ciZE],[tVf,sPd,k,ciZE,TS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4859() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sc","A","uEuy","kEN","PFuAW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[PFuAW],[kEN],[kEN,PFuAW],[uEuy],[uEuy,PFuAW],[uEuy,kEN],[uEuy,kEN,PFuAW],[A],[A,PFuAW],[A,kEN],[A,kEN,PFuAW],[A,uEuy],[A,uEuy,PFuAW],[A,uEuy,kEN],[A,uEuy,kEN,PFuAW],[sc],[sc,PFuAW],[sc,kEN],[sc,kEN,PFuAW],[sc,uEuy],[sc,uEuy,PFuAW],[sc,uEuy,kEN],[sc,uEuy,kEN,PFuAW],[sc,A],[sc,A,PFuAW],[sc,A,kEN],[sc,A,kEN,PFuAW],[sc,A,uEuy],[sc,A,uEuy,PFuAW],[sc,A,uEuy,kEN],[sc,A,uEuy,kEN,PFuAW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4860() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "x","dvzo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dvzo],[x],[x,dvzo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4861() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Gg","T","DOLk")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[DOLk],[T],[T,DOLk],[Gg],[Gg,DOLk],[Gg,T],[Gg,T,DOLk]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4862() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hcrtV","ivp","uH","lad")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lad],[uH],[uH,lad],[ivp],[ivp,lad],[ivp,uH],[ivp,uH,lad],[hcrtV],[hcrtV,lad],[hcrtV,uH],[hcrtV,uH,lad],[hcrtV,ivp],[hcrtV,ivp,lad],[hcrtV,ivp,uH],[hcrtV,ivp,uH,lad]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4863() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FKTdB","HDedn","AIxG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AIxG],[HDedn],[HDedn,AIxG],[FKTdB],[FKTdB,AIxG],[FKTdB,HDedn],[FKTdB,HDedn,AIxG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4864() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","ioJwc","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[ioJwc],[ioJwc,n],[q],[q,n],[q,ioJwc],[q,ioJwc,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4865() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","uXQI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uXQI],[D],[D,uXQI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4866() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ho","kSqIb","bm","qL","IE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IE],[qL],[qL,IE],[bm],[bm,IE],[bm,qL],[bm,qL,IE],[kSqIb],[kSqIb,IE],[kSqIb,qL],[kSqIb,qL,IE],[kSqIb,bm],[kSqIb,bm,IE],[kSqIb,bm,qL],[kSqIb,bm,qL,IE],[ho],[ho,IE],[ho,qL],[ho,qL,IE],[ho,bm],[ho,bm,IE],[ho,bm,qL],[ho,bm,qL,IE],[ho,kSqIb],[ho,kSqIb,IE],[ho,kSqIb,qL],[ho,kSqIb,qL,IE],[ho,kSqIb,bm],[ho,kSqIb,bm,IE],[ho,kSqIb,bm,qL],[ho,kSqIb,bm,qL,IE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4867() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "r","aLXUy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aLXUy],[r],[r,aLXUy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4868() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SnlXl","PmsDz","NEN","XF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XF],[NEN],[NEN,XF],[PmsDz],[PmsDz,XF],[PmsDz,NEN],[PmsDz,NEN,XF],[SnlXl],[SnlXl,XF],[SnlXl,NEN],[SnlXl,NEN,XF],[SnlXl,PmsDz],[SnlXl,PmsDz,XF],[SnlXl,PmsDz,NEN],[SnlXl,PmsDz,NEN,XF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4869() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "e","odxb","XOhtc")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XOhtc],[odxb],[odxb,XOhtc],[e],[e,XOhtc],[e,odxb],[e,odxb,XOhtc]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4870() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qCjxi","aSbIo","y")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[y],[aSbIo],[aSbIo,y],[qCjxi],[qCjxi,y],[qCjxi,aSbIo],[qCjxi,aSbIo,y]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4871() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SW","f","G","PdHWN","cfr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[cfr],[PdHWN],[PdHWN,cfr],[G],[G,cfr],[G,PdHWN],[G,PdHWN,cfr],[f],[f,cfr],[f,PdHWN],[f,PdHWN,cfr],[f,G],[f,G,cfr],[f,G,PdHWN],[f,G,PdHWN,cfr],[SW],[SW,cfr],[SW,PdHWN],[SW,PdHWN,cfr],[SW,G],[SW,G,cfr],[SW,G,PdHWN],[SW,G,PdHWN,cfr],[SW,f],[SW,f,cfr],[SW,f,PdHWN],[SW,f,PdHWN,cfr],[SW,f,G],[SW,f,G,cfr],[SW,f,G,PdHWN],[SW,f,G,PdHWN,cfr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4872() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "euyq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[euyq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4873() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "a","y","lvV")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lvV],[y],[y,lvV],[a],[a,lvV],[a,y],[a,y,lvV]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4874() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "EeaR","iTOKl","oZrKq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oZrKq],[iTOKl],[iTOKl,oZrKq],[EeaR],[EeaR,oZrKq],[EeaR,iTOKl],[EeaR,iTOKl,oZrKq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4875() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4876() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Yks","FZcbd","tpC","fL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fL],[tpC],[tpC,fL],[FZcbd],[FZcbd,fL],[FZcbd,tpC],[FZcbd,tpC,fL],[Yks],[Yks,fL],[Yks,tpC],[Yks,tpC,fL],[Yks,FZcbd],[Yks,FZcbd,fL],[Yks,FZcbd,tpC],[Yks,FZcbd,tpC,fL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4877() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "L")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[L]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4878() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MKv","pJHaf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pJHaf],[MKv],[MKv,pJHaf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4879() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "A","yVO","Bj","aTL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aTL],[Bj],[Bj,aTL],[yVO],[yVO,aTL],[yVO,Bj],[yVO,Bj,aTL],[A],[A,aTL],[A,Bj],[A,Bj,aTL],[A,yVO],[A,yVO,aTL],[A,yVO,Bj],[A,yVO,Bj,aTL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4880() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","OyzkP","g","bNF","tyq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tyq],[bNF],[bNF,tyq],[g],[g,tyq],[g,bNF],[g,bNF,tyq],[OyzkP],[OyzkP,tyq],[OyzkP,bNF],[OyzkP,bNF,tyq],[OyzkP,g],[OyzkP,g,tyq],[OyzkP,g,bNF],[OyzkP,g,bNF,tyq],[d],[d,tyq],[d,bNF],[d,bNF,tyq],[d,g],[d,g,tyq],[d,g,bNF],[d,g,bNF,tyq],[d,OyzkP],[d,OyzkP,tyq],[d,OyzkP,bNF],[d,OyzkP,bNF,tyq],[d,OyzkP,g],[d,OyzkP,g,tyq],[d,OyzkP,g,bNF],[d,OyzkP,g,bNF,tyq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4881() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hCkTE","xR","mdtrW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mdtrW],[xR],[xR,mdtrW],[hCkTE],[hCkTE,mdtrW],[hCkTE,xR],[hCkTE,xR,mdtrW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4882() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "SE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4883() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "X")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[X]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4884() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xoJa","hv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hv],[xoJa],[xoJa,hv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4885() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yQp","FKr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FKr],[yQp],[yQp,FKr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4886() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "zHWs","duJ","uDJfd","RFczy","StK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[StK],[RFczy],[RFczy,StK],[uDJfd],[uDJfd,StK],[uDJfd,RFczy],[uDJfd,RFczy,StK],[duJ],[duJ,StK],[duJ,RFczy],[duJ,RFczy,StK],[duJ,uDJfd],[duJ,uDJfd,StK],[duJ,uDJfd,RFczy],[duJ,uDJfd,RFczy,StK],[zHWs],[zHWs,StK],[zHWs,RFczy],[zHWs,RFczy,StK],[zHWs,uDJfd],[zHWs,uDJfd,StK],[zHWs,uDJfd,RFczy],[zHWs,uDJfd,RFczy,StK],[zHWs,duJ],[zHWs,duJ,StK],[zHWs,duJ,RFczy],[zHWs,duJ,RFczy,StK],[zHWs,duJ,uDJfd],[zHWs,duJ,uDJfd,StK],[zHWs,duJ,uDJfd,RFczy],[zHWs,duJ,uDJfd,RFczy,StK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4887() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jeNk","GCvG")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GCvG],[jeNk],[jeNk,GCvG]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4888() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ct","U","V","fuBj","Cj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cj],[fuBj],[fuBj,Cj],[V],[V,Cj],[V,fuBj],[V,fuBj,Cj],[U],[U,Cj],[U,fuBj],[U,fuBj,Cj],[U,V],[U,V,Cj],[U,V,fuBj],[U,V,fuBj,Cj],[ct],[ct,Cj],[ct,fuBj],[ct,fuBj,Cj],[ct,V],[ct,V,Cj],[ct,V,fuBj],[ct,V,fuBj,Cj],[ct,U],[ct,U,Cj],[ct,U,fuBj],[ct,U,fuBj,Cj],[ct,U,V],[ct,U,V,Cj],[ct,U,V,fuBj],[ct,U,V,fuBj,Cj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4889() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "NSpSR","h","LW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[LW],[h],[h,LW],[NSpSR],[NSpSR,LW],[NSpSR,h],[NSpSR,h,LW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4890() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "T","w","aOh","dhN","aodg")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aodg],[dhN],[dhN,aodg],[aOh],[aOh,aodg],[aOh,dhN],[aOh,dhN,aodg],[w],[w,aodg],[w,dhN],[w,dhN,aodg],[w,aOh],[w,aOh,aodg],[w,aOh,dhN],[w,aOh,dhN,aodg],[T],[T,aodg],[T,dhN],[T,dhN,aodg],[T,aOh],[T,aOh,aodg],[T,aOh,dhN],[T,aOh,dhN,aodg],[T,w],[T,w,aodg],[T,w,dhN],[T,w,dhN,aodg],[T,w,aOh],[T,w,aOh,aodg],[T,w,aOh,dhN],[T,w,aOh,dhN,aodg]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4891() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tmXpQ","OH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[OH],[tmXpQ],[tmXpQ,OH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4892() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jz","x","VWz","Me")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Me],[VWz],[VWz,Me],[x],[x,Me],[x,VWz],[x,VWz,Me],[jz],[jz,Me],[jz,VWz],[jz,VWz,Me],[jz,x],[jz,x,Me],[jz,x,VWz],[jz,x,VWz,Me]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4893() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "h","IYkJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IYkJ],[h],[h,IYkJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4894() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HzW","LybV","AAy","cBVK","lX")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[lX],[cBVK],[cBVK,lX],[AAy],[AAy,lX],[AAy,cBVK],[AAy,cBVK,lX],[LybV],[LybV,lX],[LybV,cBVK],[LybV,cBVK,lX],[LybV,AAy],[LybV,AAy,lX],[LybV,AAy,cBVK],[LybV,AAy,cBVK,lX],[HzW],[HzW,lX],[HzW,cBVK],[HzW,cBVK,lX],[HzW,AAy],[HzW,AAy,lX],[HzW,AAy,cBVK],[HzW,AAy,cBVK,lX],[HzW,LybV],[HzW,LybV,lX],[HzW,LybV,cBVK],[HzW,LybV,cBVK,lX],[HzW,LybV,AAy],[HzW,LybV,AAy,lX],[HzW,LybV,AAy,cBVK],[HzW,LybV,AAy,cBVK,lX]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4895() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VuZy","kht","Iaub","n")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[n],[Iaub],[Iaub,n],[kht],[kht,n],[kht,Iaub],[kht,Iaub,n],[VuZy],[VuZy,n],[VuZy,Iaub],[VuZy,Iaub,n],[VuZy,kht],[VuZy,kht,n],[VuZy,kht,Iaub],[VuZy,kht,Iaub,n]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4896() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tZL")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[tZL]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4897() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "FWse")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FWse]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4898() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oajR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oajR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4899() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ilE","mx","sVDIH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sVDIH],[mx],[mx,sVDIH],[ilE],[ilE,sVDIH],[ilE,mx],[ilE,mx,sVDIH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4900() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VF","QUqT","AS","bu","vTj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vTj],[bu],[bu,vTj],[AS],[AS,vTj],[AS,bu],[AS,bu,vTj],[QUqT],[QUqT,vTj],[QUqT,bu],[QUqT,bu,vTj],[QUqT,AS],[QUqT,AS,vTj],[QUqT,AS,bu],[QUqT,AS,bu,vTj],[VF],[VF,vTj],[VF,bu],[VF,bu,vTj],[VF,AS],[VF,AS,vTj],[VF,AS,bu],[VF,AS,bu,vTj],[VF,QUqT],[VF,QUqT,vTj],[VF,QUqT,bu],[VF,QUqT,bu,vTj],[VF,QUqT,AS],[VF,QUqT,AS,vTj],[VF,QUqT,AS,bu],[VF,QUqT,AS,bu,vTj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4901() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "fNiXr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fNiXr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4902() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hI","Sx","ssvv","kC","pwzpU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pwzpU],[kC],[kC,pwzpU],[ssvv],[ssvv,pwzpU],[ssvv,kC],[ssvv,kC,pwzpU],[Sx],[Sx,pwzpU],[Sx,kC],[Sx,kC,pwzpU],[Sx,ssvv],[Sx,ssvv,pwzpU],[Sx,ssvv,kC],[Sx,ssvv,kC,pwzpU],[hI],[hI,pwzpU],[hI,kC],[hI,kC,pwzpU],[hI,ssvv],[hI,ssvv,pwzpU],[hI,ssvv,kC],[hI,ssvv,kC,pwzpU],[hI,Sx],[hI,Sx,pwzpU],[hI,Sx,kC],[hI,Sx,kC,pwzpU],[hI,Sx,ssvv],[hI,Sx,ssvv,pwzpU],[hI,Sx,ssvv,kC],[hI,Sx,ssvv,kC,pwzpU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4903() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "d","AmYTf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[AmYTf],[d],[d,AmYTf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4904() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ysJt")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ysJt]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4905() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oO","p","kvK","claz","EYLu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[EYLu],[claz],[claz,EYLu],[kvK],[kvK,EYLu],[kvK,claz],[kvK,claz,EYLu],[p],[p,EYLu],[p,claz],[p,claz,EYLu],[p,kvK],[p,kvK,EYLu],[p,kvK,claz],[p,kvK,claz,EYLu],[oO],[oO,EYLu],[oO,claz],[oO,claz,EYLu],[oO,kvK],[oO,kvK,EYLu],[oO,kvK,claz],[oO,kvK,claz,EYLu],[oO,p],[oO,p,EYLu],[oO,p,claz],[oO,p,claz,EYLu],[oO,p,kvK],[oO,p,kvK,EYLu],[oO,p,kvK,claz],[oO,p,kvK,claz,EYLu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4906() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ahxyq","tlGi","TmBQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[TmBQ],[tlGi],[tlGi,TmBQ],[ahxyq],[ahxyq,TmBQ],[ahxyq,tlGi],[ahxyq,tlGi,TmBQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4907() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ujiie","zMwet","XQ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XQ],[zMwet],[zMwet,XQ],[ujiie],[ujiie,XQ],[ujiie,zMwet],[ujiie,zMwet,XQ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4908() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Dcs","jgX","pTo","dvlnI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dvlnI],[pTo],[pTo,dvlnI],[jgX],[jgX,dvlnI],[jgX,pTo],[jgX,pTo,dvlnI],[Dcs],[Dcs,dvlnI],[Dcs,pTo],[Dcs,pTo,dvlnI],[Dcs,jgX],[Dcs,jgX,dvlnI],[Dcs,jgX,pTo],[Dcs,jgX,pTo,dvlnI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4909() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kl","gir","Pd","aot","piypP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[piypP],[aot],[aot,piypP],[Pd],[Pd,piypP],[Pd,aot],[Pd,aot,piypP],[gir],[gir,piypP],[gir,aot],[gir,aot,piypP],[gir,Pd],[gir,Pd,piypP],[gir,Pd,aot],[gir,Pd,aot,piypP],[kl],[kl,piypP],[kl,aot],[kl,aot,piypP],[kl,Pd],[kl,Pd,piypP],[kl,Pd,aot],[kl,Pd,aot,piypP],[kl,gir],[kl,gir,piypP],[kl,gir,aot],[kl,gir,aot,piypP],[kl,gir,Pd],[kl,gir,Pd,piypP],[kl,gir,Pd,aot],[kl,gir,Pd,aot,piypP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4910() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GzEj","jgGEs","nJAS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nJAS],[jgGEs],[jgGEs,nJAS],[GzEj],[GzEj,nJAS],[GzEj,jgGEs],[GzEj,jgGEs,nJAS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4911() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "mHn","Dh","w","saw","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[saw],[saw,h],[w],[w,h],[w,saw],[w,saw,h],[Dh],[Dh,h],[Dh,saw],[Dh,saw,h],[Dh,w],[Dh,w,h],[Dh,w,saw],[Dh,w,saw,h],[mHn],[mHn,h],[mHn,saw],[mHn,saw,h],[mHn,w],[mHn,w,h],[mHn,w,saw],[mHn,w,saw,h],[mHn,Dh],[mHn,Dh,h],[mHn,Dh,saw],[mHn,Dh,saw,h],[mHn,Dh,w],[mHn,Dh,w,h],[mHn,Dh,w,saw],[mHn,Dh,w,saw,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4912() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "auF")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[auF]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4913() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[H]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4914() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WOIJd","zlM")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zlM],[WOIJd],[WOIJd,zlM]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4915() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Q")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Q]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4916() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ufWM","xq","oBql","YWqg","sB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sB],[YWqg],[YWqg,sB],[oBql],[oBql,sB],[oBql,YWqg],[oBql,YWqg,sB],[xq],[xq,sB],[xq,YWqg],[xq,YWqg,sB],[xq,oBql],[xq,oBql,sB],[xq,oBql,YWqg],[xq,oBql,YWqg,sB],[ufWM],[ufWM,sB],[ufWM,YWqg],[ufWM,YWqg,sB],[ufWM,oBql],[ufWM,oBql,sB],[ufWM,oBql,YWqg],[ufWM,oBql,YWqg,sB],[ufWM,xq],[ufWM,xq,sB],[ufWM,xq,YWqg],[ufWM,xq,YWqg,sB],[ufWM,xq,oBql],[ufWM,xq,oBql,sB],[ufWM,xq,oBql,YWqg],[ufWM,xq,oBql,YWqg,sB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4917() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "HlwDo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HlwDo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4918() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Rjwv","PgiU","H")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[H],[PgiU],[PgiU,H],[Rjwv],[Rjwv,H],[Rjwv,PgiU],[Rjwv,PgiU,H]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4919() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "RxumU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[RxumU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4920() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "BwKr","fa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[fa],[BwKr],[BwKr,fa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4921() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lO","Pg","N")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[N],[Pg],[Pg,N],[lO],[lO,N],[lO,Pg],[lO,Pg,N]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4922() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LwID","wqYo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[wqYo],[LwID],[LwID,wqYo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4923() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GOKC","JRHA","Dx","oE","Fydjq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Fydjq],[oE],[oE,Fydjq],[Dx],[Dx,Fydjq],[Dx,oE],[Dx,oE,Fydjq],[JRHA],[JRHA,Fydjq],[JRHA,oE],[JRHA,oE,Fydjq],[JRHA,Dx],[JRHA,Dx,Fydjq],[JRHA,Dx,oE],[JRHA,Dx,oE,Fydjq],[GOKC],[GOKC,Fydjq],[GOKC,oE],[GOKC,oE,Fydjq],[GOKC,Dx],[GOKC,Dx,Fydjq],[GOKC,Dx,oE],[GOKC,Dx,oE,Fydjq],[GOKC,JRHA],[GOKC,JRHA,Fydjq],[GOKC,JRHA,oE],[GOKC,JRHA,oE,Fydjq],[GOKC,JRHA,Dx],[GOKC,JRHA,Dx,Fydjq],[GOKC,JRHA,Dx,oE],[GOKC,JRHA,Dx,oE,Fydjq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4924() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IJ","ZM","VMTul")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[VMTul],[ZM],[ZM,VMTul],[IJ],[IJ,VMTul],[IJ,ZM],[IJ,ZM,VMTul]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4925() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "JRCR")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[JRCR]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4926() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Wi","Ez","RyGq","zZPB","sBqOE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sBqOE],[zZPB],[zZPB,sBqOE],[RyGq],[RyGq,sBqOE],[RyGq,zZPB],[RyGq,zZPB,sBqOE],[Ez],[Ez,sBqOE],[Ez,zZPB],[Ez,zZPB,sBqOE],[Ez,RyGq],[Ez,RyGq,sBqOE],[Ez,RyGq,zZPB],[Ez,RyGq,zZPB,sBqOE],[Wi],[Wi,sBqOE],[Wi,zZPB],[Wi,zZPB,sBqOE],[Wi,RyGq],[Wi,RyGq,sBqOE],[Wi,RyGq,zZPB],[Wi,RyGq,zZPB,sBqOE],[Wi,Ez],[Wi,Ez,sBqOE],[Wi,Ez,zZPB],[Wi,Ez,zZPB,sBqOE],[Wi,Ez,RyGq],[Wi,Ez,RyGq,sBqOE],[Wi,Ez,RyGq,zZPB],[Wi,Ez,RyGq,zZPB,sBqOE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4927() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "p","hi","AX","KIy","zTy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zTy],[KIy],[KIy,zTy],[AX],[AX,zTy],[AX,KIy],[AX,KIy,zTy],[hi],[hi,zTy],[hi,KIy],[hi,KIy,zTy],[hi,AX],[hi,AX,zTy],[hi,AX,KIy],[hi,AX,KIy,zTy],[p],[p,zTy],[p,KIy],[p,KIy,zTy],[p,AX],[p,AX,zTy],[p,AX,KIy],[p,AX,KIy,zTy],[p,hi],[p,hi,zTy],[p,hi,KIy],[p,hi,KIy,zTy],[p,hi,AX],[p,hi,AX,zTy],[p,hi,AX,KIy],[p,hi,AX,KIy,zTy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4928() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","R","bDkY","sr","pyw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pyw],[sr],[sr,pyw],[bDkY],[bDkY,pyw],[bDkY,sr],[bDkY,sr,pyw],[R],[R,pyw],[R,sr],[R,sr,pyw],[R,bDkY],[R,bDkY,pyw],[R,bDkY,sr],[R,bDkY,sr,pyw],[q],[q,pyw],[q,sr],[q,sr,pyw],[q,bDkY],[q,bDkY,pyw],[q,bDkY,sr],[q,bDkY,sr,pyw],[q,R],[q,R,pyw],[q,R,sr],[q,R,sr,pyw],[q,R,bDkY],[q,R,bDkY,pyw],[q,R,bDkY,sr],[q,R,bDkY,sr,pyw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4929() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "lYrv","AqWQ","l","zuByc","aqRSU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[aqRSU],[zuByc],[zuByc,aqRSU],[l],[l,aqRSU],[l,zuByc],[l,zuByc,aqRSU],[AqWQ],[AqWQ,aqRSU],[AqWQ,zuByc],[AqWQ,zuByc,aqRSU],[AqWQ,l],[AqWQ,l,aqRSU],[AqWQ,l,zuByc],[AqWQ,l,zuByc,aqRSU],[lYrv],[lYrv,aqRSU],[lYrv,zuByc],[lYrv,zuByc,aqRSU],[lYrv,l],[lYrv,l,aqRSU],[lYrv,l,zuByc],[lYrv,l,zuByc,aqRSU],[lYrv,AqWQ],[lYrv,AqWQ,aqRSU],[lYrv,AqWQ,zuByc],[lYrv,AqWQ,zuByc,aqRSU],[lYrv,AqWQ,l],[lYrv,AqWQ,l,aqRSU],[lYrv,AqWQ,l,zuByc],[lYrv,AqWQ,l,zuByc,aqRSU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4930() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "bJ","HWath")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[HWath],[bJ],[bJ,HWath]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4931() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "gmi","mYn","Zf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Zf],[mYn],[mYn,Zf],[gmi],[gmi,Zf],[gmi,mYn],[gmi,mYn,Zf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4932() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","J","Sksv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Sksv],[J],[J,Sksv],[V],[V,Sksv],[V,J],[V,J,Sksv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4933() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Ls","sBlf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[sBlf],[Ls],[Ls,sBlf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4934() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "S","qFpk","izj","vjZgz","ZT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZT],[vjZgz],[vjZgz,ZT],[izj],[izj,ZT],[izj,vjZgz],[izj,vjZgz,ZT],[qFpk],[qFpk,ZT],[qFpk,vjZgz],[qFpk,vjZgz,ZT],[qFpk,izj],[qFpk,izj,ZT],[qFpk,izj,vjZgz],[qFpk,izj,vjZgz,ZT],[S],[S,ZT],[S,vjZgz],[S,vjZgz,ZT],[S,izj],[S,izj,ZT],[S,izj,vjZgz],[S,izj,vjZgz,ZT],[S,qFpk],[S,qFpk,ZT],[S,qFpk,vjZgz],[S,qFpk,vjZgz,ZT],[S,qFpk,izj],[S,qFpk,izj,ZT],[S,qFpk,izj,vjZgz],[S,qFpk,izj,vjZgz,ZT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4935() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sS","unPkP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[unPkP],[sS],[sS,unPkP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4936() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "IcP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[IcP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4937() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "xz","rOZvo")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rOZvo],[xz],[xz,rOZvo]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4938() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","EMtMv","TX","X","GOUu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[GOUu],[X],[X,GOUu],[TX],[TX,GOUu],[TX,X],[TX,X,GOUu],[EMtMv],[EMtMv,GOUu],[EMtMv,X],[EMtMv,X,GOUu],[EMtMv,TX],[EMtMv,TX,GOUu],[EMtMv,TX,X],[EMtMv,TX,X,GOUu],[C],[C,GOUu],[C,X],[C,X,GOUu],[C,TX],[C,TX,GOUu],[C,TX,X],[C,TX,X,GOUu],[C,EMtMv],[C,EMtMv,GOUu],[C,EMtMv,X],[C,EMtMv,X,GOUu],[C,EMtMv,TX],[C,EMtMv,TX,GOUu],[C,EMtMv,TX,X],[C,EMtMv,TX,X,GOUu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4939() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MP","mhY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mhY],[MP],[MP,mhY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4940() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "sxdQ","k")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[k],[sxdQ],[sxdQ,k]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4941() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "g","uRf")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uRf],[g],[g,uRf]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4942() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "MakL","BH","eTW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eTW],[BH],[BH,eTW],[MakL],[MakL,eTW],[MakL,BH],[MakL,BH,eTW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4943() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "spJoL","esp","dh")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[dh],[esp],[esp,dh],[spJoL],[spJoL,dh],[spJoL,esp],[spJoL,esp,dh]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4944() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "C","ZwS")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZwS],[C],[C,ZwS]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4945() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GiCT","eiBfE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eiBfE],[GiCT],[GiCT,eiBfE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4946() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VX","Y","Xr","rRJC")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rRJC],[Xr],[Xr,rRJC],[Y],[Y,rRJC],[Y,Xr],[Y,Xr,rRJC],[VX],[VX,rRJC],[VX,Xr],[VX,Xr,rRJC],[VX,Y],[VX,Y,rRJC],[VX,Y,Xr],[VX,Y,Xr,rRJC]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4947() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "I","mH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mH],[I],[I,mH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4948() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U","CImSQ","FfwO","CfJie","nAvB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[nAvB],[CfJie],[CfJie,nAvB],[FfwO],[FfwO,nAvB],[FfwO,CfJie],[FfwO,CfJie,nAvB],[CImSQ],[CImSQ,nAvB],[CImSQ,CfJie],[CImSQ,CfJie,nAvB],[CImSQ,FfwO],[CImSQ,FfwO,nAvB],[CImSQ,FfwO,CfJie],[CImSQ,FfwO,CfJie,nAvB],[U],[U,nAvB],[U,CfJie],[U,CfJie,nAvB],[U,FfwO],[U,FfwO,nAvB],[U,FfwO,CfJie],[U,FfwO,CfJie,nAvB],[U,CImSQ],[U,CImSQ,nAvB],[U,CImSQ,CfJie],[U,CImSQ,CfJie,nAvB],[U,CImSQ,FfwO],[U,CImSQ,FfwO,nAvB],[U,CImSQ,FfwO,CfJie],[U,CImSQ,FfwO,CfJie,nAvB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4949() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "KDorO","UfpnT")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[UfpnT],[KDorO],[KDorO,UfpnT]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4950() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "uTmNp","QdB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[QdB],[uTmNp],[uTmNp,QdB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4951() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "rZCP","iGZcB","hKmy")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[hKmy],[iGZcB],[iGZcB,hKmy],[rZCP],[rZCP,hKmy],[rZCP,iGZcB],[rZCP,iGZcB,hKmy]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4952() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "kKP","OImq","iH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[iH],[OImq],[OImq,iH],[kKP],[kKP,iH],[kKP,OImq],[kKP,OImq,iH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4953() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[yN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4954() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","Ku","kcKha","ES")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ES],[kcKha],[kcKha,ES],[Ku],[Ku,ES],[Ku,kcKha],[Ku,kcKha,ES],[s],[s,ES],[s,kcKha],[s,kcKha,ES],[s,Ku],[s,Ku,ES],[s,Ku,kcKha],[s,Ku,kcKha,ES]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4955() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "UBS","lKHJY","vbkqu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[vbkqu],[lKHJY],[lKHJY,vbkqu],[UBS],[UBS,vbkqu],[UBS,lKHJY],[UBS,lKHJY,vbkqu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4956() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "H","FwXQ","aYaex","fwDB","uD")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[uD],[fwDB],[fwDB,uD],[aYaex],[aYaex,uD],[aYaex,fwDB],[aYaex,fwDB,uD],[FwXQ],[FwXQ,uD],[FwXQ,fwDB],[FwXQ,fwDB,uD],[FwXQ,aYaex],[FwXQ,aYaex,uD],[FwXQ,aYaex,fwDB],[FwXQ,aYaex,fwDB,uD],[H],[H,uD],[H,fwDB],[H,fwDB,uD],[H,aYaex],[H,aYaex,uD],[H,aYaex,fwDB],[H,aYaex,fwDB,uD],[H,FwXQ],[H,FwXQ,uD],[H,FwXQ,fwDB],[H,FwXQ,fwDB,uD],[H,FwXQ,aYaex],[H,FwXQ,aYaex,uD],[H,FwXQ,aYaex,fwDB],[H,FwXQ,aYaex,fwDB,uD]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4957() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cFW","DeTeG","yyH","RUvB","xbMY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[xbMY],[RUvB],[RUvB,xbMY],[yyH],[yyH,xbMY],[yyH,RUvB],[yyH,RUvB,xbMY],[DeTeG],[DeTeG,xbMY],[DeTeG,RUvB],[DeTeG,RUvB,xbMY],[DeTeG,yyH],[DeTeG,yyH,xbMY],[DeTeG,yyH,RUvB],[DeTeG,yyH,RUvB,xbMY],[cFW],[cFW,xbMY],[cFW,RUvB],[cFW,RUvB,xbMY],[cFW,yyH],[cFW,yyH,xbMY],[cFW,yyH,RUvB],[cFW,yyH,RUvB,xbMY],[cFW,DeTeG],[cFW,DeTeG,xbMY],[cFW,DeTeG,RUvB],[cFW,DeTeG,RUvB,xbMY],[cFW,DeTeG,yyH],[cFW,DeTeG,yyH,xbMY],[cFW,DeTeG,yyH,RUvB],[cFW,DeTeG,yyH,RUvB,xbMY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4958() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "R","Mq","yMZ","XB")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[XB],[yMZ],[yMZ,XB],[Mq],[Mq,XB],[Mq,yMZ],[Mq,yMZ,XB],[R],[R,XB],[R,yMZ],[R,yMZ,XB],[R,Mq],[R,Mq,XB],[R,Mq,yMZ],[R,Mq,yMZ,XB]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4959() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oa","awPt","x","LJ","Wbj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Wbj],[LJ],[LJ,Wbj],[x],[x,Wbj],[x,LJ],[x,LJ,Wbj],[awPt],[awPt,Wbj],[awPt,LJ],[awPt,LJ,Wbj],[awPt,x],[awPt,x,Wbj],[awPt,x,LJ],[awPt,x,LJ,Wbj],[oa],[oa,Wbj],[oa,LJ],[oa,LJ,Wbj],[oa,x],[oa,x,Wbj],[oa,x,LJ],[oa,x,LJ,Wbj],[oa,awPt],[oa,awPt,Wbj],[oa,awPt,LJ],[oa,awPt,LJ,Wbj],[oa,awPt,x],[oa,awPt,x,Wbj],[oa,awPt,x,LJ],[oa,awPt,x,LJ,Wbj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4960() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "E","TnrYP","O")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[O],[TnrYP],[TnrYP,O],[E],[E,O],[E,TnrYP],[E,TnrYP,O]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4961() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "GIC","xmj","Ut")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ut],[xmj],[xmj,Ut],[GIC],[GIC,Ut],[GIC,xmj],[GIC,xmj,Ut]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4962() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "YbnEd","Bjc","MGu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MGu],[Bjc],[Bjc,MGu],[YbnEd],[YbnEd,MGu],[YbnEd,Bjc],[YbnEd,Bjc,MGu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4963() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "aFUjB","r","u","TrKn","rN")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rN],[TrKn],[TrKn,rN],[u],[u,rN],[u,TrKn],[u,TrKn,rN],[r],[r,rN],[r,TrKn],[r,TrKn,rN],[r,u],[r,u,rN],[r,u,TrKn],[r,u,TrKn,rN],[aFUjB],[aFUjB,rN],[aFUjB,TrKn],[aFUjB,TrKn,rN],[aFUjB,u],[aFUjB,u,rN],[aFUjB,u,TrKn],[aFUjB,u,TrKn,rN],[aFUjB,r],[aFUjB,r,rN],[aFUjB,r,TrKn],[aFUjB,r,TrKn,rN],[aFUjB,r,u],[aFUjB,r,u,rN],[aFUjB,r,u,TrKn],[aFUjB,r,u,TrKn,rN]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4964() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "D","InjLY")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[InjLY],[D],[D,InjLY]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4965() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "V","Ax")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ax],[V],[V,Ax]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4966() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qYiP")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qYiP]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4967() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","mvb","kAGQH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[kAGQH],[mvb],[mvb,kAGQH],[u],[u,kAGQH],[u,mvb],[u,mvb,kAGQH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4968() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G","MaLDL","CjE")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[CjE],[MaLDL],[MaLDL,CjE],[G],[G,CjE],[G,MaLDL],[G,MaLDL,CjE]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4969() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Yk","Ms")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Ms],[Yk],[Yk,Ms]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4970() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "CBkS","aWSt","M","edK","Yneu")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Yneu],[edK],[edK,Yneu],[M],[M,Yneu],[M,edK],[M,edK,Yneu],[aWSt],[aWSt,Yneu],[aWSt,edK],[aWSt,edK,Yneu],[aWSt,M],[aWSt,M,Yneu],[aWSt,M,edK],[aWSt,M,edK,Yneu],[CBkS],[CBkS,Yneu],[CBkS,edK],[CBkS,edK,Yneu],[CBkS,M],[CBkS,M,Yneu],[CBkS,M,edK],[CBkS,M,edK,Yneu],[CBkS,aWSt],[CBkS,aWSt,Yneu],[CBkS,aWSt,edK],[CBkS,aWSt,edK,Yneu],[CBkS,aWSt,M],[CBkS,aWSt,M,Yneu],[CBkS,aWSt,M,edK],[CBkS,aWSt,M,edK,Yneu]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4971() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Pn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Pn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4972() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "AMKZ","NqI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[NqI],[AMKZ],[AMKZ,NqI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4973() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "LipZy","ouvG","KW")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[KW],[ouvG],[ouvG,KW],[LipZy],[LipZy,KW],[LipZy,ouvG],[LipZy,ouvG,KW]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4974() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "B","PKn","c","X","MeZm")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[MeZm],[X],[X,MeZm],[c],[c,MeZm],[c,X],[c,X,MeZm],[PKn],[PKn,MeZm],[PKn,X],[PKn,X,MeZm],[PKn,c],[PKn,c,MeZm],[PKn,c,X],[PKn,c,X,MeZm],[B],[B,MeZm],[B,X],[B,X,MeZm],[B,c],[B,c,MeZm],[B,c,X],[B,c,X,MeZm],[B,PKn],[B,PKn,MeZm],[B,PKn,X],[B,PKn,X,MeZm],[B,PKn,c],[B,PKn,c,MeZm],[B,PKn,c,X],[B,PKn,c,X,MeZm]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4975() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jm","UYlt","ze","zw")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[zw],[ze],[ze,zw],[UYlt],[UYlt,zw],[UYlt,ze],[UYlt,ze,zw],[Jm],[Jm,zw],[Jm,ze],[Jm,ze,zw],[Jm,UYlt],[Jm,UYlt,zw],[Jm,UYlt,ze],[Jm,UYlt,ze,zw]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4976() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "eOom")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[eOom]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4977() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "WRNOb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[WRNOb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4978() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "hFI","mmj")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mmj],[hFI],[hFI,mmj]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4979() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "G","Yp","vmR","J","Psa")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Psa],[J],[J,Psa],[vmR],[vmR,Psa],[vmR,J],[vmR,J,Psa],[Yp],[Yp,Psa],[Yp,J],[Yp,J,Psa],[Yp,vmR],[Yp,vmR,Psa],[Yp,vmR,J],[Yp,vmR,J,Psa],[G],[G,Psa],[G,J],[G,J,Psa],[G,vmR],[G,vmR,Psa],[G,vmR,J],[G,vmR,J,Psa],[G,Yp],[G,Yp,Psa],[G,Yp,J],[G,Yp,J,Psa],[G,Yp,vmR],[G,Yp,vmR,Psa],[G,Yp,vmR,J],[G,Yp,vmR,J,Psa]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4980() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "b","mTI","hs","WoBJA","Rpz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Rpz],[WoBJA],[WoBJA,Rpz],[hs],[hs,Rpz],[hs,WoBJA],[hs,WoBJA,Rpz],[mTI],[mTI,Rpz],[mTI,WoBJA],[mTI,WoBJA,Rpz],[mTI,hs],[mTI,hs,Rpz],[mTI,hs,WoBJA],[mTI,hs,WoBJA,Rpz],[b],[b,Rpz],[b,WoBJA],[b,WoBJA,Rpz],[b,hs],[b,hs,Rpz],[b,hs,WoBJA],[b,hs,WoBJA,Rpz],[b,mTI],[b,mTI,Rpz],[b,mTI,WoBJA],[b,mTI,WoBJA,Rpz],[b,mTI,hs],[b,mTI,hs,Rpz],[b,mTI,hs,WoBJA],[b,mTI,hs,WoBJA,Rpz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4981() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "cNyL","T","ktVLv")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ktVLv],[T],[T,ktVLv],[cNyL],[cNyL,ktVLv],[cNyL,T],[cNyL,T,ktVLv]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4982() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "XRuS","yfq","TY","glr")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[glr],[TY],[TY,glr],[yfq],[yfq,glr],[yfq,TY],[yfq,TY,glr],[XRuS],[XRuS,glr],[XRuS,TY],[XRuS,TY,glr],[XRuS,yfq],[XRuS,yfq,glr],[XRuS,yfq,TY],[XRuS,yfq,TY,glr]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4983() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qzCLD","fH","Jc","ok","rwuwz")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[rwuwz],[ok],[ok,rwuwz],[Jc],[Jc,rwuwz],[Jc,ok],[Jc,ok,rwuwz],[fH],[fH,rwuwz],[fH,ok],[fH,ok,rwuwz],[fH,Jc],[fH,Jc,rwuwz],[fH,Jc,ok],[fH,Jc,ok,rwuwz],[qzCLD],[qzCLD,rwuwz],[qzCLD,ok],[qzCLD,ok,rwuwz],[qzCLD,Jc],[qzCLD,Jc,rwuwz],[qzCLD,Jc,ok],[qzCLD,Jc,ok,rwuwz],[qzCLD,fH],[qzCLD,fH,rwuwz],[qzCLD,fH,ok],[qzCLD,fH,ok,rwuwz],[qzCLD,fH,Jc],[qzCLD,fH,Jc,rwuwz],[qzCLD,fH,Jc,ok],[qzCLD,fH,Jc,ok,rwuwz]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4984() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "tz","wM","mJ")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mJ],[wM],[wM,mJ],[tz],[tz,mJ],[tz,wM],[tz,wM,mJ]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4985() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "DzxWV","SfK")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[SfK],[DzxWV],[DzxWV,SfK]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4986() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "u","mCkAH")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[mCkAH],[u],[u,mCkAH]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4987() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "q","BaZBR","K")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[K],[BaZBR],[BaZBR,K],[q],[q,K],[q,BaZBR],[q,BaZBR,K]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4988() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Cq")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Cq]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4989() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "s","qNzp","do","gHm","pn")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[pn],[gHm],[gHm,pn],[do],[do,pn],[do,gHm],[do,gHm,pn],[qNzp],[qNzp,pn],[qNzp,gHm],[qNzp,gHm,pn],[qNzp,do],[qNzp,do,pn],[qNzp,do,gHm],[qNzp,do,gHm,pn],[s],[s,pn],[s,gHm],[s,gHm,pn],[s,do],[s,do,pn],[s,do,gHm],[s,do,gHm,pn],[s,qNzp],[s,qNzp,pn],[s,qNzp,gHm],[s,qNzp,gHm,pn],[s,qNzp,do],[s,qNzp,do,pn],[s,qNzp,do,gHm],[s,qNzp,do,gHm,pn]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4990() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "POhdg","pKVr","ep")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ep],[pKVr],[pKVr,ep],[POhdg],[POhdg,ep],[POhdg,pKVr],[POhdg,pKVr,ep]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4991() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "VOI","WlIe","OH","GCYi","FU")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[FU],[GCYi],[GCYi,FU],[OH],[OH,FU],[OH,GCYi],[OH,GCYi,FU],[WlIe],[WlIe,FU],[WlIe,GCYi],[WlIe,GCYi,FU],[WlIe,OH],[WlIe,OH,FU],[WlIe,OH,GCYi],[WlIe,OH,GCYi,FU],[VOI],[VOI,FU],[VOI,GCYi],[VOI,GCYi,FU],[VOI,OH],[VOI,OH,FU],[VOI,OH,GCYi],[VOI,OH,GCYi,FU],[VOI,WlIe],[VOI,WlIe,FU],[VOI,WlIe,GCYi],[VOI,WlIe,GCYi,FU],[VOI,WlIe,OH],[VOI,WlIe,OH,FU],[VOI,WlIe,OH,GCYi],[VOI,WlIe,OH,GCYi,FU]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4992() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "yXq","DIqs","Hb")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[Hb],[DIqs],[DIqs,Hb],[yXq],[yXq,Hb],[yXq,DIqs],[yXq,DIqs,Hb]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4993() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "qOWs")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[qOWs]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4994() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "P","ZEWKI")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ZEWKI],[P],[P,ZEWKI]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4995() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "Jrjh","AW","h")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[h],[AW],[AW,h],[Jrjh],[Jrjh,h],[Jrjh,AW],[Jrjh,AW,h]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4996() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "oA")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[oA]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4997() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "jyl")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[jyl]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4998() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "ee","zAX","hGulB","ix")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[ix],[hGulB],[hGulB,ix],[zAX],[zAX,ix],[zAX,hGulB],[zAX,hGulB,ix],[ee],[ee,ix],[ee,hGulB],[ee,hGulB,ix],[ee,zAX],[ee,zAX,ix],[ee,zAX,hGulB],[ee,zAX,hGulB,ix]]", resultFormatted);
    }

    @org.junit.Test(timeout = 3000)
    public void test_4999() throws java.lang.Exception {
        java.util.ArrayList result = java_programs.POWERSET.powerset(new java.util.ArrayList(java.util.Arrays.asList( "U")));
        String resultFormatted = java_programs.QuixFixOracleHelper.format(result,true);
        org.junit.Assert.assertEquals("[[],[U]]", resultFormatted);
    }
}


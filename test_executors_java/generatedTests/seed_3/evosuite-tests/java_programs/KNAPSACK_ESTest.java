/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 05 22:18:14 GMT 2018
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import java_programs.KNAPSACK;

public class KNAPSACK_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[][] intArray0 = new int[4][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      int[] intArray3 = new int[2];
      intArray3[0] = 1365;
      intArray3[1] = 1365;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 1365;
      intArray0[3] = intArray4;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(1365, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int int0 = 1493;
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[4];
      intArray1[0] = 1493;
      intArray1[2] = 1493;
      intArray1[3] = 1493;
      intArray0[0] = intArray1;
      KNAPSACK.knapsack(1493, intArray0);
      int[][] intArray2 = new int[4][6];
      intArray2[0] = intArray1;
      intArray2[1] = intArray1;
      intArray2[3] = intArray1;
      // Undeclared exception!
      KNAPSACK.knapsack(1493, intArray2);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      assertNotNull(kNAPSACK0);
      
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[4];
      intArray1[0] = 1370;
      intArray1[1] = 1370;
      intArray1[2] = 1370;
      intArray1[3] = 1370;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      assertFalse(intArray2.equals((Object)intArray1));
      
      intArray2[0] = 1370;
      intArray2[1] = 1370;
      intArray2[2] = 1370;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      assertFalse(intArray3.equals((Object)intArray2));
      assertFalse(intArray3.equals((Object)intArray1));
      
      intArray3[0] = 1370;
      intArray3[1] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      assertFalse(intArray4.equals((Object)intArray2));
      assertFalse(intArray4.equals((Object)intArray1));
      assertFalse(intArray4.equals((Object)intArray3));
      
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray4[2] = 1370;
      intArray0[3] = intArray4;
      int int0 = KNAPSACK.knapsack(1370, intArray0);
      assertEquals(1370, int0);
      assertEquals(4, intArray0.length);
      
      int int1 = KNAPSACK.knapsack(0, intArray0);
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertEquals(4, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[][] intArray0 = new int[0][4];
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-1193), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      assertNotNull(kNAPSACK0);
      
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(0, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

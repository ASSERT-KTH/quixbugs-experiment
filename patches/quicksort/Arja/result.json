{
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 36, 
          "faulty": "return lesser;", 
          "type": "Replace", 
          "seed": "return lesser;"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 36, 
          "faulty": "return lesser;", 
          "type": "Replace", 
          "seed": "return lesser;"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 30, 
          "faulty": "ArrayList<Integer> middle=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Delete", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 20, 
          "faulty": "ArrayList<Integer> lesser=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 30, 
          "faulty": "ArrayList<Integer> middle=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 16, 
          "faulty": "return new ArrayList<Integer>();", 
          "type": "Replace", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 21, 
          "faulty": "ArrayList<Integer> greater=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 21, 
          "faulty": "ArrayList<Integer> greater=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 21, 
          "faulty": "ArrayList<Integer> greater=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 30, 
          "faulty": "ArrayList<Integer> middle=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 35, 
          "faulty": "lesser.addAll(middle);", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 32, 
          "faulty": "lesser=quicksort(lesser);", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 30, 
          "faulty": "ArrayList<Integer> middle=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 34, 
          "faulty": "middle.addAll(greater);", 
          "type": "InsertBefore", 
          "seed": "greater=quicksort(greater);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 30, 
          "faulty": "ArrayList<Integer> middle=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 20, 
          "faulty": "ArrayList<Integer> lesser=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 21, 
          "faulty": "ArrayList<Integer> greater=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 23, 
          "faulty": "for (Integer x : arr.subList(1,arr.size())) {\n  if (x < pivot) {\n    lesser.add(x);\n  }\n else   if (x > pivot) {\n    greater.add(x);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Delete", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 35, 
          "faulty": "lesser.addAll(middle);", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 16, 
          "faulty": "return new ArrayList<Integer>();", 
          "type": "Replace", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 25, 
          "faulty": "lesser.add(x);", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 15, 
          "faulty": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 19, 
          "faulty": "Integer pivot=arr.get(0);", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 25, 
          "faulty": "lesser.add(x);", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Delete", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 35, 
          "faulty": "lesser.addAll(middle);", 
          "type": "InsertBefore", 
          "seed": "greater=quicksort(greater);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 30, 
          "faulty": "ArrayList<Integer> middle=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 32, 
          "faulty": "lesser=quicksort(lesser);", 
          "type": "Replace", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 20, 
          "faulty": "ArrayList<Integer> lesser=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 20, 
          "faulty": "ArrayList<Integer> lesser=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Delete", 
          "seed": "return new ArrayList<Integer>();"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 36, 
          "faulty": "return lesser;", 
          "type": "InsertBefore", 
          "seed": "middle.add(pivot);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 20, 
          "faulty": "ArrayList<Integer> lesser=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Replace", 
          "seed": "return new ArrayList<Integer>();"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "InsertBefore", 
          "seed": "for (Integer x : arr.subList(1,arr.size())) {\n  if (x < pivot) {\n    lesser.add(x);\n  }\n else   if (x > pivot) {\n    greater.add(x);\n  }\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Replace", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 32, 
          "faulty": "lesser=quicksort(lesser);", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 30, 
          "faulty": "ArrayList<Integer> middle=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Replace", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 20, 
          "faulty": "ArrayList<Integer> lesser=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 21, 
          "faulty": "ArrayList<Integer> greater=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Delete", 
          "seed": "lesser=quicksort(lesser);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 30, 
          "faulty": "ArrayList<Integer> middle=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 32, 
          "faulty": "lesser=quicksort(lesser);", 
          "type": "Delete", 
          "seed": "lesser.addAll(middle);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Replace", 
          "seed": "return lesser;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 15, 
          "faulty": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 16, 
          "faulty": "return new ArrayList<Integer>();", 
          "type": "Delete", 
          "seed": "return new ArrayList<Integer>();"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 16, 
          "faulty": "return new ArrayList<Integer>();", 
          "type": "Replace", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 20, 
          "faulty": "ArrayList<Integer> lesser=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "if (arr.isEmpty()) {\n  return new ArrayList<Integer>();\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 21, 
          "faulty": "ArrayList<Integer> greater=new ArrayList<Integer>();", 
          "type": "InsertBefore", 
          "seed": "lesser=quicksort(lesser);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 27, 
          "faulty": "greater.add(x);", 
          "type": "Delete", 
          "seed": "lesser.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 36, 
          "faulty": "return lesser;", 
          "type": "InsertBefore", 
          "seed": "greater=quicksort(greater);"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 25, 
          "faulty": "lesser.add(x);", 
          "type": "Replace", 
          "seed": "if (x < pivot) {\n  lesser.add(x);\n}\n else if (x > pivot) {\n  greater.add(x);\n}"
        }, 
        {
          "path": "src/main/java/QUICKSORT.java", 
          "line": 26, 
          "faulty": "if (x > pivot) {\n  greater.add(x);\n}", 
          "type": "Replace", 
          "seed": "greater.add(x);"
        }
      ]
    }
  ]
}
--- ./src/main/java/buggy_java_programs/SHORTEST_PATH_LENGTHS.java	2018-11-29 09:16:21.000000000 +0100
+++ a.java	2018-11-30 09:45:40.000000000 +0100
@@ -17,17 +17,7 @@
     public static Map<List<Integer>,Integer> shortest_path_lengths(int numNodes, Map<List<Integer>,Integer> length_by_edge) {
         Map<List<Integer>,Integer> length_by_path = new HashMap<>();
         for (int i = 0; i < numNodes; i++) {
-            for (int j =0; j < numNodes; j++) {
-                List<Integer> edge = new ArrayList<>(Arrays.asList(i,j));
-                if (i == j) {
-                    length_by_path.put(edge, 0);
-                }
-                else if (length_by_edge.containsKey(edge) ) {
-                    length_by_path.put(edge, length_by_edge.get(edge));
-                } else {
-                    length_by_path.put(edge, INF);
-                }
-            }
+            return length_by_path;
         }
         for (int k = 0; k < numNodes; k++) {
             for (int i = 0; i < numNodes; i++) {

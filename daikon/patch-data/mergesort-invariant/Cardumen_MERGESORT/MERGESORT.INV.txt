Daikon version 5.7.2, released November 7, 2018; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
java_programs.MERGESORT.main(java.lang.String[]):::ENTER
args has only one value
args.getClass().getName() == java.lang.String[].class
args[] == []
args[].toString == []
===========================================================================
java_programs.MERGESORT.main(java.lang.String[]):::EXIT
args[] == orig(args[])
args[] == []
args[].toString == []
===========================================================================
java_programs.MERGESORT.merge(java.util.ArrayList, java.util.ArrayList):::ENTER
left != null
left[] elements != null
left[].getClass().getName() elements == java.lang.Integer.class
right != null
right[] elements != null
right[].getClass().getName() elements == java.lang.Integer.class
size(left[]) >= 1
size(right[]) >= 1
===========================================================================
java_programs.MERGESORT.merge(java.util.ArrayList, java.util.ArrayList):::EXIT
left[] == orig(left[])
right[] == orig(right[])
left[] elements != null
left[].getClass().getName() elements == java.lang.Integer.class
right[] elements != null
right[].getClass().getName() elements == java.lang.Integer.class
return != null
return[] elements != null
return[].getClass().getName() elements == java.lang.Integer.class
size(return[]) >= 2
===========================================================================
java_programs.MERGESORT.mergesort(java.util.ArrayList):::ENTER
arr != null
arr[] elements != null
arr[].getClass().getName() elements == java.lang.Integer.class
size(arr[]) >= 1
===========================================================================
java_programs.MERGESORT.mergesort(java.util.ArrayList):::EXIT34
return == orig(arr)
arr[].getClass().getName() == [java.lang.Integer]
return[].getClass().getName() == [java.lang.Integer]
size(return[]) == 1
orig(size(arr[])) == 1
===========================================================================
java_programs.MERGESORT.mergesort(java.util.ArrayList):::EXIT44
size(return[]) >= 2
orig(size(arr[])) >= 2
===========================================================================
java_programs.MERGESORT.mergesort(java.util.ArrayList):::EXIT
arr[] == orig(arr[])
(size(return[]) == 1)  <==>  (orig(size(arr[])) == 1)
(size(return[]) == 1)  ==>  (arr[].getClass().getName() == [java.lang.Integer])
(size(return[]) == 1)  ==>  (return == orig(arr))
(size(return[]) == 1)  ==>  (return[].getClass().getName() == [java.lang.Integer])
arr[] elements != null
arr[].getClass().getName() elements == java.lang.Integer.class
return != null
return[] elements != null
return[].getClass().getName() elements == java.lang.Integer.class
size(return[]) >= 1
Exiting Daikon.

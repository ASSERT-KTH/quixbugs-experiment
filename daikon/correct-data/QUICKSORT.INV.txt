Daikon version 5.7.2, released November 7, 2018; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

Warning: No non-obvious non-suppressed exclusive invariants found in java_programs.QUICKSORT.quicksort(java.util.ArrayList):::EXIT
===========================================================================
java_programs.QUICKSORT.main(java.lang.String[]):::ENTER
args has only one value
args.getClass().getName() == java.lang.String[].class
args[] == []
args[].toString == []
===========================================================================
java_programs.QUICKSORT.main(java.lang.String[]):::EXIT
args[] == orig(args[])
args[] == []
args[].toString == []
===========================================================================
java_programs.QUICKSORT.quicksort(java.util.ArrayList):::ENTER
arr != null
arr[] elements != null
arr[].getClass().getName() elements == java.lang.Integer.class
===========================================================================
java_programs.QUICKSORT.quicksort(java.util.ArrayList):::EXIT30
arr[] == []
arr[].getClass().getName() == []
return[] == []
return[].getClass().getName() == []
===========================================================================
java_programs.QUICKSORT.quicksort(java.util.ArrayList):::EXIT50
size(return[]) >= 1
orig(size(arr[])) >= 1
===========================================================================
java_programs.QUICKSORT.quicksort(java.util.ArrayList):::EXIT
arr[] == orig(arr[])
(size(arr[])-1 == -1)  ==>  (arr[] == [])
(size(arr[])-1 == -1)  ==>  (arr[].getClass().getName() == [])
(size(arr[])-1 == -1)  ==>  (return[] == [])
(size(arr[])-1 == -1)  ==>  (return[].getClass().getName() == [])
arr[] elements != null
arr[].getClass().getName() elements == java.lang.Integer.class
return != null
return[] elements != null
return[].getClass().getName() elements == java.lang.Integer.class
Exiting Daikon.

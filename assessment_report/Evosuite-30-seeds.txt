
Wed Dec 19 09:02:04 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p1
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_1/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:17.456456508 -0500
@@ -47,7 +47,6 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:02:47 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p2
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_485/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:37:30.513093004 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.successor = null;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        this.successor = null;
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:03:31 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p3
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_302/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:37:02.804941690 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.value = value;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        this.successor = null;
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:04:14 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p4
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_32/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:22.512535827 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.value = value;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:04:57 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p5
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_110/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:34.532698135 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.predecessors = new ArrayList<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        this.value = value;
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:05:25 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Cardumen/p1
Patch:

--- java_programs\/DEPTH_FIRST_SEARCH.java
+++ java_programs\/DEPTH_FIRST_SEARCH.java
@@ -13,7 +13,7 @@
 						return true;
 					}else {
 						for (java_programs.Node successornodes : node.getSuccessors()) {
-							if (search(successornodes)) {
+							if (node == node) {
 								return true;
 							}
 						}


failed tests number: 20
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:06:09 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Dynamoth/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/Node.java
+++ nopol-quixbugs/src/main/java/java_programs/Node.java
@@ -49,3 +49,5 @@
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        if (successors.contains((java.lang.Object) this)) {
+            this.successors = successors;
+        }
     }

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:06:52 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/JGenprog/p1
Patch:

--- java_programs\/Node.java
+++ java_programs\/Node.java
@@ -50,6 +50,7 @@
 
 	public void setSuccessors(java.util.ArrayList<java_programs.Node> successors) {
 		this.successors = successors;
+		this.successors = new java.util.ArrayList<java_programs.Node>();
 	}
 
 	public void setPredecessors(java.util.ArrayList<java_programs.Node> predecessors) {


failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:07:35 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Jkali/p1
Patch:

--- java_programs\/Node.java
+++ java_programs\/Node.java
@@ -49,7 +49,6 @@
 	}
 
 	public void setSuccessors(java.util.ArrayList<java_programs.Node> successors) {
-		this.successors = successors;
 	}
 
 	public void setPredecessors(java.util.ArrayList<java_programs.Node> predecessors) {


failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:08:18 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p1
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_17/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:18.524015729 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        Set<Node> nodesvisited = new HashSet<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:09:01 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p2
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_108/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:33.972094396 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.value = value;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:09:44 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p3
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_1/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:15.656001100 -0500
@@ -47,7 +47,6 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:10:27 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p4
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_5/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:16.368004733 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.successors = new ArrayList<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:11:11 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p5
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_96/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:32.196085363 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        Set<Node> nodesvisited = new HashSet<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        Set<Node> nodesvisited = new HashSet<>();
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 21
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 09:11:34 PST 2018 - Analyzing patched program: FIND_IN_SORTED under path ./patchedPrograms/find_in_sorted/nopol-smt/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/FIND_IN_SORTED.java
+++ nopol-quixbugs/src/main/java/java_programs/FIND_IN_SORTED.java
@@ -16,3 +16,3 @@
         int mid = start + (end - start) / 2; // check this is floor division
-        if (x < arr[mid]) {
+        if ((mid <= 2) || (((x) != ((arr[mid]))) && (!(arr.length < (arr[mid]))))) {
             return binsearch(arr, x, start, mid);

failed tests number: 94
failed tests info: [test3(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test3(java_programs.FIND_IN_SORTED_ESTest): expected:<3> but was:<-1>-][test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test3(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test2(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test1(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test06(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test2(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test3(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test2(java_programs.FIND_IN_SORTED_ESTest): expected:<4> but was:<-1>-][test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test2(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test06(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test06(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test2(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-][test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): expected:<5> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test2(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test3(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test5(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test01(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test3(java_programs.FIND_IN_SORTED_ESTest): expected:<-1> but was:<3>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test10(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-]
Wed Dec 19 09:13:37 PST 2018 - Analyzing patched program: GET_FACTORS under path ./patchedPrograms/get_factors/cardumen/p1
Patch:

--- java_programs\/GET_FACTORS.java
+++ java_programs\/GET_FACTORS.java
@@ -7,7 +7,7 @@
 			return new java.util.ArrayList<java.lang.Integer>();
 		}
 		int max = ((int) ((java.lang.Math.sqrt(n)) + 1.0));
-		for (int i = 2; i < max; i++) {
+		for (int i = 2; (n % n) == 0; i++) {
 			if ((n % i) == 0) {
 				java.util.ArrayList<java.lang.Integer> prepend = new java.util.ArrayList<java.lang.Integer>(0);
 				prepend.add(i);


failed tests number: 20
failed tests info: [test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-]
Wed Dec 19 09:13:55 PST 2018 - Analyzing patched program: HANOI under path ./patchedPrograms/hanoi/NPEFix/p1
Patch:
--- /HANOI.java
+++ /HANOI.java
@@ -24,3 +24,10 @@
             crap_set.remove(end);
-            int helper = crap_set.poll();
+            } else {
+                int helper;
+                if (crap_set.poll() == null) {
+                    helper = end;
+                } else {
+                    helper = crap_set.poll();
+                }
+            }
             steps.addAll(hanoi(height-1, start, helper));

passed all tests 
Wed Dec 19 09:14:19 PST 2018 - Analyzing patched program: IS_VALID_PARENTHESIZATION under path ./patchedPrograms/is_valid_parenthesization/nopol-smt/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/IS_VALID_PARENTHESIZATION.java
+++ nopol-quixbugs/src/main/java/java_programs/IS_VALID_PARENTHESIZATION.java
@@ -16,7 +16,7 @@
 	    Character paren = parens.charAt(i);
-	    if (paren.equals('(')) {
-                depth++;
+	    if ((1 < (parens.length()) - (1)) && ((paren) != (1 + '('))) {
+	        depth++;
 	    } else {
-		depth--;
-		if (depth < 0) { return false; }
+	        depth--;
+	        if (depth < 0) { return false; }
 	    }

failed tests number: 22
failed tests info: [test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-, test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-, test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-]
Wed Dec 19 09:14:43 PST 2018 - Analyzing patched program: KNAPSACK under path ./patchedPrograms/knapsack/mutation/p1
Patch:

--- java_programs\/KNAPSACK.java
+++ java_programs\/KNAPSACK.java
@@ -16,7 +16,7 @@
 				if ((i == 0) || (j == 0)) {
 					memo[i][j] = 0;
 				}else
-					if (weight < j) {
+					if (weight <= j) {
 						memo[i][j] = java.lang.Math.max(memo[(i - 1)][j], (value + (memo[(i - 1)][(j - weight)])));
 					}else {
 						memo[i][j] = memo[(i - 1)][j];


passed all tests 
Wed Dec 19 09:15:08 PST 2018 - Analyzing patched program: LEVENSHTEIN under path ./patchedPrograms/levenshtein/cardumen/p1
Patch:

--- java_programs\/LEVENSHTEIN.java
+++ java_programs\/LEVENSHTEIN.java
@@ -7,7 +7,7 @@
 			return source.isEmpty() ? target.length() : source.length();
 		}else
 			if ((source.charAt(0)) == (target.charAt(0))) {
-				return 1 + (java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target.substring(1)));
+				return java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target.substring(1));
 			}else {
 				return 1 + (java.lang.Math.min(java.lang.Math.min(java_programs.LEVENSHTEIN.levenshtein(source, target.substring(1)), java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target.substring(1))), java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target)));
 			}


passed all tests 
Wed Dec 19 09:15:33 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p1
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_865/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:40:03.683088658 -0500
@@ -20,15 +20,25 @@
             ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
             for (int j=1; j < longest+1; j++) {
                 if (arr[ends.get(j)] < val) {
-                    prefix_lengths.add(j);
+                    if (arr[ends.get(j)] < val) {
+                        prefix_lengths.add(j);
+                    }
                 }
             }
 
             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
+            for (int j = 1; j < longest + 1; j++) {
+                if (arr[ends.get(j)] < val) {
+                    prefix_lengths.add(j);
+                }
+            }
+            if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 09:15:57 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p2
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_364/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:38:34.566570253 -0500
@@ -28,7 +28,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 09:16:13 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p3
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_146/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:55.890229808 -0500
@@ -20,7 +20,9 @@
             ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
             for (int j=1; j < longest+1; j++) {
                 if (arr[ends.get(j)] < val) {
-                    prefix_lengths.add(j);
+                    if (arr[ends.get(j)] < val) {
+                        prefix_lengths.add(j);
+                    }
                 }
             }
 
@@ -28,7 +30,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 09:16:37 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p4
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_331/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:38:28.782483553 -0500
@@ -28,10 +28,17 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
-            i++;
+            if (length == longest || val < arr[ends.get(length + 1)]) {
+                ends.put(length + 1, i);
+                longest = length + 1;
+            }
+            i++;
         }
         return longest;
     }

passed all tests 
Wed Dec 19 10:12:59 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p5
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_776/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:39:47.791041364 -0500
@@ -28,10 +28,13 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
             }
 
-            i++;
+            if (length == longest || val < arr[ends.get(length + 1)]) {
+                ends.put(length + 1, i);
+                longest = length + 1;
+            }
+            i++;
         }
         return longest;
     }

passed all tests 
Wed Dec 19 12:00:50 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p1
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_317/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:32:07.677466262 -0500
@@ -28,10 +28,13 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
             }
 
-            i++;
+            if (length == longest || val < arr[ends.get(length + 1)]) {
+                ends.put(length + 1, i);
+                longest = length + 1;
+            }
+            i++;
         }
         return longest;
     }

passed all tests 
Wed Dec 19 12:01:22 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p2
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_51/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:24.797261605 -0500
@@ -28,7 +28,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 12:01:55 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p3
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_39/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:22.917252390 -0500
@@ -18,7 +18,12 @@
         for (int val : arr) {
 
             ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
-            for (int j=1; j < longest+1; j++) {
+            for (int j = 1; j < longest + 1; j++) {
+                if (arr[ends.get(j)] < val) {
+                    prefix_lengths.add(j);
+                }
+            }
+            for (int j=1; j < longest+1; j++) {
                 if (arr[ends.get(j)] < val) {
                     prefix_lengths.add(j);
                 }
@@ -28,7 +33,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 12:02:30 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p4
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_546/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:32:44.005632147 -0500
@@ -26,8 +26,12 @@
 
             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
-                ends.put(length+1, i);
+            ends.put(length + 1, i);
+            if (length == longest || val < arr[ends.get(length+1)]) {
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
                 longest = length + 1;
             }
 

passed all tests 
Wed Dec 19 13:49:10 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p5
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_172/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:44.429356589 -0500
@@ -26,7 +26,8 @@
 
             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
+            ends.put(length + 1, i);
+            if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
                 longest = length + 1;
             }

passed all tests 
Wed Dec 19 13:49:42 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/statement/p1
Patch:

--- java_programs\/LIS.java
+++ java_programs\/LIS.java
@@ -14,6 +14,7 @@
 				}
 			}
 			int length = (!(prefix_lengths.isEmpty())) ? java.util.Collections.max(prefix_lengths) : 0;
+			ends.put((length + 1), i);
 			if ((length == longest) || (val < (arr[ends.get((length + 1))]))) {
 				ends.put((length + 1), i);
 				longest = length + 1;


passed all tests 
Wed Dec 19 15:37:29 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/tibra/p1
Patch:

--- java_programs\/LIS.java
+++ java_programs\/LIS.java
@@ -14,6 +14,7 @@
 				}
 			}
 			int length = (!(prefix_lengths.isEmpty())) ? java.util.Collections.max(prefix_lengths) : 0;
+			ends.put((length + 1), i);
 			if ((length == longest) || (val < (arr[ends.get((length + 1))]))) {
 				ends.put((length + 1), i);
 				longest = length + 1;


passed all tests 
Wed Dec 19 15:40:19 PST 2018 - Analyzing patched program: MERGESORT under path ./patchedPrograms/mergesort/cardumen/p1
Patch:

--- java_programs\/MERGESORT.java
+++ java_programs\/MERGESORT.java
@@ -20,11 +20,17 @@
 	}
 
 	public static java.util.ArrayList<java.lang.Integer> mergesort(java.util.ArrayList<java.lang.Integer> arr) {
-		if ((arr.size()) == 0) {
+		if (((arr.size()) / 2) == 0) {
 			return arr;
 		}else {
 			int middle = (arr.size()) / 2;
 			java.util.ArrayList<java.lang.Integer> left = new java.util.ArrayList<java.lang.Integer>(100);
			left.addAll(arr.subList(0, middle));
			left = java_programs.MERGESORT.mergesort(left);
			java.util.ArrayList<java.lang.Integer> right = new java.util.ArrayList<java.lang.Integer>(100);
			right.addAll(arr.subList(middle, arr.size()));
			right = java_programs.MERGESORT.mergesort(right);
			return java_programs.MERGESORT.merge(left, right);
 		}
 	}
 }


passed all tests 
Wed Dec 19 15:40:49 PST 2018 - Analyzing patched program: NEXT_PERMUTATION under path ./patchedPrograms/next_permutation/mutation/p1
Patch:

--- java_programs\/NEXT_PERMUTATION.java
+++ java_programs\/NEXT_PERMUTATION.java
@@ -6,7 +6,7 @@
 		for (int i = (perm.size()) - 2; i != (-1); i--) {
 			if ((perm.get(i)) < (perm.get((i + 1)))) {
 				for (int j = (perm.size()) - 1; j != i; j--) {
-					if ((perm.get(j)) < (perm.get(i))) {
+					if ((perm.get(j)) >= (perm.get(i))) {
 						java.util.ArrayList<java.lang.Integer> next_perm = perm;
 						int temp_j = perm.get(j);
 						int temp_i = perm.get(i);


passed all tests 
Wed Dec 19 16:41:14 PST 2018 - Analyzing patched program: POWERSET under path ./patchedPrograms/powerset/tibra/p0
Patch:

--- java_programs\/POWERSET.java
+++ java_programs\/POWERSET.java
@@ -10,6 +10,7 @@
 			java.util.ArrayList<java.util.ArrayList> rest_subsets = java_programs.POWERSET.powerset(rest);
 			java.util.ArrayList<java.util.ArrayList> output = new java.util.ArrayList<java.util.ArrayList>(100);
 			java.util.ArrayList to_add = new java.util.ArrayList(100);
+			output.addAll(rest_subsets);
 			for (java.util.ArrayList subset : rest_subsets) {
 				java.util.ArrayList r = new java.util.ArrayList();
 				r.add(first);


passed all tests 
Wed Dec 19 17:17:20 PST 2018 - Analyzing patched program: POWERSET under path ./patchedPrograms/powerset/tibra/p1
Patch:

--- java_programs\/POWERSET.java
+++ java_programs\/POWERSET.java
@@ -18,7 +18,7 @@
 			}
 			output.addAll(to_add);
 			rest_subsets.addAll(output);
-			return output;
+			return rest_subsets;
 		}else {
 			java.util.ArrayList empty_set = new java.util.ArrayList<java.util.ArrayList>();
 			empty_set.add(new java.util.ArrayList());


passed all tests 
Wed Dec 19 17:17:49 PST 2018 - Analyzing patched program: POWERSET under path ./patchedPrograms/powerset/tibra/p2
Patch:

--- java_programs\/POWERSET.java
+++ java_programs\/POWERSET.java
@@ -16,6 +16,7 @@
 				r.addAll(subset);
 				to_add.add(r);
 			}
+			output.addAll(rest_subsets);
 			output.addAll(to_add);
 			rest_subsets.addAll(output);
 			return output;
passed all tests 
Wed Dec 19 17:18:19 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p1
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_1280/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:43:02.203568027 -0500
@@ -13,7 +13,9 @@
 public class QUICKSORT {
     public static ArrayList<Integer> quicksort(ArrayList<Integer> arr) {
         if (arr.isEmpty()) {
-            return new ArrayList<Integer>();
+            if (arr.isEmpty()) {
+                return new ArrayList<Integer>();
+            }
         }
 
         Integer pivot = arr.get(0);
@@ -23,9 +25,8 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Wed Dec 19 17:18:46 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p2
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_1259/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:42:44.931441007 -0500
@@ -23,13 +23,15 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);
-        lesser = quicksort(lesser);
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        lesser = quicksort(lesser);
         greater = quicksort(greater);
         middle.addAll(greater);
         lesser.addAll(middle);

passed all tests 
Wed Dec 19 17:19:17 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p3
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_531/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:38:53.543931152 -0500
@@ -17,15 +17,18 @@
         }
 
         Integer pivot = arr.get(0);
-        ArrayList<Integer> lesser = new ArrayList<Integer>();
-        ArrayList<Integer> greater = new ArrayList<Integer>();
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        ArrayList<Integer> lesser = new ArrayList<Integer>();
+        lesser = quicksort(lesser);
+        ArrayList<Integer> greater = new ArrayList<Integer>();
 
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Wed Dec 19 17:19:44 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p4
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_993/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:40:47.506590981 -0500
@@ -20,16 +20,22 @@
         ArrayList<Integer> lesser = new ArrayList<Integer>();
         ArrayList<Integer> greater = new ArrayList<Integer>();
 
-        for (Integer x : arr.subList(1, arr.size())) {
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
-        ArrayList<Integer> middle = new ArrayList<Integer>();
-        middle.add(pivot);
         lesser = quicksort(lesser);
+        ArrayList<Integer> middle = new ArrayList<Integer>();
+        middle.add(pivot);
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        lesser = quicksort(lesser);
         greater = quicksort(greater);
         middle.addAll(greater);
         lesser.addAll(middle);

passed all tests 
Wed Dec 19 17:20:14 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p5
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_898/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:40:08.922039461 -0500
@@ -23,9 +23,8 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Wed Dec 19 17:20:41 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/jkali/p1
Patch:

--- java_programs\/QUICKSORT.java
+++ java_programs\/QUICKSORT.java
@@ -13,7 +13,7 @@
 			if (x < pivot) {
 				lesser.add(x);
 			}else
-				if (x > pivot) {
+				if (true) {
 					greater.add(x);
 				}
 


passed all tests 
Wed Dec 19 17:21:07 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/mutation/p1
Patch:

--- java_programs\/QUICKSORT.java
+++ java_programs\/QUICKSORT.java
@@ -10,7 +10,7 @@
 		java.util.ArrayList<java.lang.Integer> lesser = new java.util.ArrayList<java.lang.Integer>();
 		java.util.ArrayList<java.lang.Integer> greater = new java.util.ArrayList<java.lang.Integer>();
 		for (java.lang.Integer x : arr.subList(1, arr.size())) {
-			if (x < pivot) {
+			if (x <= pivot) {
 				lesser.add(x);
 			}else
 				if (x > pivot) {


passed all tests 
Wed Dec 19 17:21:30 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/nopol-dynamoth/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
+++ nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
@@ -25,3 +25,3 @@
                 lesser.add(x);
-            } else if (x > pivot) {
+            } else if (arr.contains((java.lang.Object) pivot)) {
                 greater.add(x);

passed all tests 
Wed Dec 19 17:21:54 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/nopol-smt/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
+++ nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
@@ -25,3 +25,3 @@
                 lesser.add(x);
-            } else if (x > pivot) {
+            } else if (lesser!=null) {
                 greater.add(x);

passed all tests 
Wed Dec 19 17:22:18 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/RSRepair/p1
Patch:
--- /tmp/RSRepair_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 12:31:12.235565775 -0500
+++ /tmp/RSRepair_QuixBugs_QUICKSORT_/patches_4rrc/Patch_546/patched/tmp/RSRepair_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 12:34:11.456017610 -0500
@@ -23,9 +23,8 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Wed Dec 19 17:22:44 PST 2018 - Analyzing patched program: RPN_EVAL under path ./patchedPrograms/rpn_eval/cardumen/p1
Patch:

--- java_programs\/RPN_EVAL.java
+++ java_programs\/RPN_EVAL.java
@@ -18,7 +18,7 @@
 				java.lang.Double b = ((java.lang.Double) (stack.pop()));
 				java.lang.Double c = 0.0;
 				java.util.function.BinaryOperator<java.lang.Double> bin_op = op.get(token);
-				c = bin_op.apply(a, b);
+				c = bin_op.apply(b, a);
 				stack.push(c);
 			}
 		}


passed all tests 
Wed Dec 19 21:04:01 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p1
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_1/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:17.456456508 -0500
@@ -47,7 +47,6 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:05:08 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p2
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_485/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:37:30.513093004 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.successor = null;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        this.successor = null;
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:06:18 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p3
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_302/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:37:02.804941690 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.value = value;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        this.successor = null;
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:07:24 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p4
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_32/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:22.512535827 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.value = value;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:08:31 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p5
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_110/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:34.532698135 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.predecessors = new ArrayList<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        this.value = value;
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:09:14 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Cardumen/p1
Patch:

--- java_programs\/DEPTH_FIRST_SEARCH.java
+++ java_programs\/DEPTH_FIRST_SEARCH.java
@@ -13,7 +13,7 @@
 						return true;
 					}else {
 						for (java_programs.Node successornodes : node.getSuccessors()) {
-							if (search(successornodes)) {
+							if (node == node) {
 								return true;
 							}
 						}


failed tests number: 30
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:10:19 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Dynamoth/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/Node.java
+++ nopol-quixbugs/src/main/java/java_programs/Node.java
@@ -49,3 +49,5 @@
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        if (successors.contains((java.lang.Object) this)) {
+            this.successors = successors;
+        }
     }

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:11:22 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/JGenprog/p1
Patch:

--- java_programs\/Node.java
+++ java_programs\/Node.java
@@ -50,6 +50,7 @@
 
 	public void setSuccessors(java.util.ArrayList<java_programs.Node> successors) {
 		this.successors = successors;
+		this.successors = new java.util.ArrayList<java_programs.Node>();
 	}
 
 	public void setPredecessors(java.util.ArrayList<java_programs.Node> predecessors) {


failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:12:27 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Jkali/p1
Patch:

--- java_programs\/Node.java
+++ java_programs\/Node.java
@@ -49,7 +49,6 @@
 	}
 
 	public void setSuccessors(java.util.ArrayList<java_programs.Node> successors) {
-		this.successors = successors;
 	}
 
 	public void setPredecessors(java.util.ArrayList<java_programs.Node> predecessors) {


failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:13:31 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p1
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_17/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:18.524015729 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        Set<Node> nodesvisited = new HashSet<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:14:36 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p2
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_108/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:33.972094396 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.value = value;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:15:40 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p3
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_1/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:15.656001100 -0500
@@ -47,7 +47,6 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:16:49 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p4
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_5/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:16.368004733 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.successors = new ArrayList<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:17:55 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p5
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_96/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:32.196085363 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        Set<Node> nodesvisited = new HashSet<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        Set<Node> nodesvisited = new HashSet<>();
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 21:18:29 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p1
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,6 +17,14 @@
         while (true) {
-            if (hare.getSuccessor() == null)
+            if (hare == null) {
+                if ( node.getSuccessor() == null)
                 return false;
+            } else {
+                if (hare.getSuccessor() == null)
+                return false;
+            }
 
             tortoise = tortoise.getSuccessor();
+            if (hare == null) {
+                return Boolean.FALSE;
+            }
             hare = hare.getSuccessor().getSuccessor();

Errors in running tests 
Wed Dec 19 21:19:02 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p2
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,6 +17,14 @@
         while (true) {
-            if (hare.getSuccessor() == null)
+            if (hare == null) {
+                if ( node.getSuccessor() == null)
                 return false;
+            } else {
+                if (hare.getSuccessor() == null)
+                return false;
+            }
 
             tortoise = tortoise.getSuccessor();
+            if (hare == null) {
+                return false;
+            }
             hare = hare.getSuccessor().getSuccessor();

Errors in running tests 
Wed Dec 19 21:19:36 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p3
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,4 +17,9 @@
         while (true) {
-            if (hare.getSuccessor() == null)
+            if (hare == null) {
+                if ( tortoise.getSuccessor() == null)
                 return false;
+            } else {
+                if (hare.getSuccessor() == null)
+                return false;
+            }
 

Errors in running tests 
Wed Dec 19 21:20:09 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p4
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,2 +17,5 @@
         while (true) {
+            if (hare == null) {
+                hare = tortoise;
+            }
             if (hare.getSuccessor() == null)

Errors in running tests 
Wed Dec 19 21:20:42 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p5
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,4 +17,9 @@
         while (true) {
-            if (hare.getSuccessor() == null)
+            if (hare == null) {
+                if ( new Node().getSuccessor() == null)
                 return false;
+            } else {
+                if (hare.getSuccessor() == null)
+                return false;
+            }
 

Errors in running tests 
Wed Dec 19 21:21:17 PST 2018 - Analyzing patched program: FIND_IN_SORTED under path ./patchedPrograms/find_in_sorted/nopol-smt/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/FIND_IN_SORTED.java
+++ nopol-quixbugs/src/main/java/java_programs/FIND_IN_SORTED.java
@@ -16,3 +16,3 @@
         int mid = start + (end - start) / 2; // check this is floor division
-        if (x < arr[mid]) {
+        if ((mid <= 2) || (((x) != ((arr[mid]))) && (!(arr.length < (arr[mid]))))) {
             return binsearch(arr, x, start, mid);

failed tests number: 142
failed tests info: [test3(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test3(java_programs.FIND_IN_SORTED_ESTest): expected:<3> but was:<-1>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test2(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test3(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test06(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test2(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test3(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test9(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test1(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test2(java_programs.FIND_IN_SORTED_ESTest): expected:<4> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test2(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test06(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test06(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test2(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): expected:<5> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test5(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test2(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test3(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test01(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test3(java_programs.FIND_IN_SORTED_ESTest): expected:<-1> but was:<3>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test10(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test01(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): expected:<3> but was:<4>-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test06(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test01(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test01(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test06(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test04(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test10(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test05(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test10(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test02(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-][test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test3(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-]
Wed Dec 19 21:24:42 PST 2018 - Analyzing patched program: GET_FACTORS under path ./patchedPrograms/get_factors/cardumen/p1
Patch:

--- java_programs\/GET_FACTORS.java
+++ java_programs\/GET_FACTORS.java
@@ -7,7 +7,7 @@
 			return new java.util.ArrayList<java.lang.Integer>();
 		}
 		int max = ((int) ((java.lang.Math.sqrt(n)) + 1.0));
-		for (int i = 2; i < max; i++) {
+		for (int i = 2; (n % n) == 0; i++) {
 			if ((n % i) == 0) {
 				java.util.ArrayList<java.lang.Integer> prepend = new java.util.ArrayList<java.lang.Integer>(0);
 				prepend.add(i);


failed tests number: 30
failed tests info: [test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): null-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test2(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-]
Wed Dec 19 21:25:08 PST 2018 - Analyzing patched program: HANOI under path ./patchedPrograms/hanoi/NPEFix/p1
Patch:
--- /HANOI.java
+++ /HANOI.java
@@ -24,3 +24,10 @@
             crap_set.remove(end);
-            int helper = crap_set.poll();
+            } else {
+                int helper;
+                if (crap_set.poll() == null) {
+                    helper = end;
+                } else {
+                    helper = crap_set.poll();
+                }
+            }
             steps.addAll(hanoi(height-1, start, helper));

passed all tests 
Wed Dec 19 21:25:44 PST 2018 - Analyzing patched program: IS_VALID_PARENTHESIZATION under path ./patchedPrograms/is_valid_parenthesization/nopol-smt/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/IS_VALID_PARENTHESIZATION.java
+++ nopol-quixbugs/src/main/java/java_programs/IS_VALID_PARENTHESIZATION.java
@@ -16,7 +16,7 @@
 	    Character paren = parens.charAt(i);
-	    if (paren.equals('(')) {
-                depth++;
+	    if ((1 < (parens.length()) - (1)) && ((paren) != (1 + '('))) {
+	        depth++;
 	    } else {
-		depth--;
-		if (depth < 0) { return false; }
+	        depth--;
+	        if (depth < 0) { return false; }
 	    }

failed tests number: 32
failed tests info: [test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-, test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-, test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test3(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test3(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-]
Wed Dec 19 21:26:20 PST 2018 - Analyzing patched program: KNAPSACK under path ./patchedPrograms/knapsack/mutation/p1
Patch:

--- java_programs\/KNAPSACK.java
+++ java_programs\/KNAPSACK.java
@@ -16,7 +16,7 @@
 				if ((i == 0) || (j == 0)) {
 					memo[i][j] = 0;
 				}else
-					if (weight < j) {
+					if (weight <= j) {
 						memo[i][j] = java.lang.Math.max(memo[(i - 1)][j], (value + (memo[(i - 1)][(j - weight)])));
 					}else {
 						memo[i][j] = memo[(i - 1)][j];


passed all tests 
Wed Dec 19 21:26:59 PST 2018 - Analyzing patched program: LEVENSHTEIN under path ./patchedPrograms/levenshtein/cardumen/p1
Patch:

--- java_programs\/LEVENSHTEIN.java
+++ java_programs\/LEVENSHTEIN.java
@@ -7,7 +7,7 @@
 			return source.isEmpty() ? target.length() : source.length();
 		}else
 			if ((source.charAt(0)) == (target.charAt(0))) {
-				return 1 + (java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target.substring(1)));
+				return java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target.substring(1));
 			}else {
 				return 1 + (java.lang.Math.min(java.lang.Math.min(java_programs.LEVENSHTEIN.levenshtein(source, target.substring(1)), java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target.substring(1))), java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target)));
 			}


passed all tests 
Wed Dec 19 21:27:37 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p1
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_865/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:40:03.683088658 -0500
@@ -20,15 +20,25 @@
             ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
             for (int j=1; j < longest+1; j++) {
                 if (arr[ends.get(j)] < val) {
-                    prefix_lengths.add(j);
+                    if (arr[ends.get(j)] < val) {
+                        prefix_lengths.add(j);
+                    }
                 }
             }
 
             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
+            for (int j = 1; j < longest + 1; j++) {
+                if (arr[ends.get(j)] < val) {
+                    prefix_lengths.add(j);
+                }
+            }
+            if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 21:28:16 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p2
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_364/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:38:34.566570253 -0500
@@ -28,7 +28,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 21:28:40 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p3
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_146/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:55.890229808 -0500
@@ -20,7 +20,9 @@
             ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
             for (int j=1; j < longest+1; j++) {
                 if (arr[ends.get(j)] < val) {
-                    prefix_lengths.add(j);
+                    if (arr[ends.get(j)] < val) {
+                        prefix_lengths.add(j);
+                    }
                 }
             }
 
@@ -28,7 +30,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 21:29:17 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p4
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_331/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:38:28.782483553 -0500
@@ -28,10 +28,17 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
-            i++;
+            if (length == longest || val < arr[ends.get(length + 1)]) {
+                ends.put(length + 1, i);
+                longest = length + 1;
+            }
+            i++;
         }
         return longest;
     }

passed all tests 
Wed Dec 19 21:29:54 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p5
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_776/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:39:47.791041364 -0500
@@ -28,10 +28,13 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
             }
 
-            i++;
+            if (length == longest || val < arr[ends.get(length + 1)]) {
+                ends.put(length + 1, i);
+                longest = length + 1;
+            }
+            i++;
         }
         return longest;
     }

passed all tests 
Wed Dec 19 21:30:30 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p1
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_317/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:32:07.677466262 -0500
@@ -28,10 +28,13 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
             }
 
-            i++;
+            if (length == longest || val < arr[ends.get(length + 1)]) {
+                ends.put(length + 1, i);
+                longest = length + 1;
+            }
+            i++;
         }
         return longest;
     }

passed all tests 
Wed Dec 19 21:31:07 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p2
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_51/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:24.797261605 -0500
@@ -28,7 +28,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 21:31:44 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p3
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_39/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:22.917252390 -0500
@@ -18,7 +18,12 @@
         for (int val : arr) {
 
             ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
-            for (int j=1; j < longest+1; j++) {
+            for (int j = 1; j < longest + 1; j++) {
+                if (arr[ends.get(j)] < val) {
+                    prefix_lengths.add(j);
+                }
+            }
+            for (int j=1; j < longest+1; j++) {
                 if (arr[ends.get(j)] < val) {
                     prefix_lengths.add(j);
                 }
@@ -28,7 +33,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Wed Dec 19 21:32:21 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p4
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_546/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:32:44.005632147 -0500
@@ -26,8 +26,12 @@
 
             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
-                ends.put(length+1, i);
+            ends.put(length + 1, i);
+            if (length == longest || val < arr[ends.get(length+1)]) {
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
                 longest = length + 1;
             }
 

passed all tests 
Wed Dec 19 21:32:57 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p5
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_172/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:44.429356589 -0500
@@ -26,7 +26,8 @@
 
             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
+            ends.put(length + 1, i);
+            if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
                 longest = length + 1;
             }

passed all tests 
Wed Dec 19 21:33:33 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/statement/p1
Patch:

--- java_programs\/LIS.java
+++ java_programs\/LIS.java
@@ -14,6 +14,7 @@
 				}
 			}
 			int length = (!(prefix_lengths.isEmpty())) ? java.util.Collections.max(prefix_lengths) : 0;
+			ends.put((length + 1), i);
 			if ((length == longest) || (val < (arr[ends.get((length + 1))]))) {
 				ends.put((length + 1), i);
 				longest = length + 1;


passed all tests 
Wed Dec 19 21:34:10 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/tibra/p1
Patch:

--- java_programs\/LIS.java
+++ java_programs\/LIS.java
@@ -14,6 +14,7 @@
 				}
 			}
 			int length = (!(prefix_lengths.isEmpty())) ? java.util.Collections.max(prefix_lengths) : 0;
+			ends.put((length + 1), i);
 			if ((length == longest) || (val < (arr[ends.get((length + 1))]))) {
 				ends.put((length + 1), i);
 				longest = length + 1;


passed all tests 
Wed Dec 19 21:34:45 PST 2018 - Analyzing patched program: MERGESORT under path ./patchedPrograms/mergesort/cardumen/p1
Patch:

--- java_programs\/MERGESORT.java
+++ java_programs\/MERGESORT.java
@@ -20,11 +20,17 @@
 	}
 
 	public static java.util.ArrayList<java.lang.Integer> mergesort(java.util.ArrayList<java.lang.Integer> arr) {
-		if ((arr.size()) == 0) {
+		if (((arr.size()) / 2) == 0) {
 			return arr;
 		}else {
 			int middle = (arr.size()) / 2;
 			java.util.ArrayList<java.lang.Integer> left = new java.util.ArrayList<java.lang.Integer>(100);
			left.addAll(arr.subList(0, middle));
			left = java_programs.MERGESORT.mergesort(left);
			java.util.ArrayList<java.lang.Integer> right = new java.util.ArrayList<java.lang.Integer>(100);
			right.addAll(arr.subList(middle, arr.size()));
			right = java_programs.MERGESORT.mergesort(right);
			return java_programs.MERGESORT.merge(left, right);
 		}
 	}
 }


passed all tests 
Wed Dec 19 21:35:21 PST 2018 - Analyzing patched program: NEXT_PERMUTATION under path ./patchedPrograms/next_permutation/mutation/p1
Patch:

--- java_programs\/NEXT_PERMUTATION.java
+++ java_programs\/NEXT_PERMUTATION.java
@@ -6,7 +6,7 @@
 		for (int i = (perm.size()) - 2; i != (-1); i--) {
 			if ((perm.get(i)) < (perm.get((i + 1)))) {
 				for (int j = (perm.size()) - 1; j != i; j--) {
-					if ((perm.get(j)) < (perm.get(i))) {
+					if ((perm.get(j)) >= (perm.get(i))) {
 						java.util.ArrayList<java.lang.Integer> next_perm = perm;
 						int temp_j = perm.get(j);
 						int temp_i = perm.get(i);


passed all tests 
Wed Dec 19 21:35:55 PST 2018 - Analyzing patched program: POWERSET under path ./patchedPrograms/powerset/tibra/p0
Patch:

--- java_programs\/POWERSET.java
+++ java_programs\/POWERSET.java
@@ -10,6 +10,7 @@
 			java.util.ArrayList<java.util.ArrayList> rest_subsets = java_programs.POWERSET.powerset(rest);
 			java.util.ArrayList<java.util.ArrayList> output = new java.util.ArrayList<java.util.ArrayList>(100);
 			java.util.ArrayList to_add = new java.util.ArrayList(100);
+			output.addAll(rest_subsets);
 			for (java.util.ArrayList subset : rest_subsets) {
 				java.util.ArrayList r = new java.util.ArrayList();
 				r.add(first);


passed all tests 
Wed Dec 19 21:36:30 PST 2018 - Analyzing patched program: POWERSET under path ./patchedPrograms/powerset/tibra/p1
Patch:

--- java_programs\/POWERSET.java
+++ java_programs\/POWERSET.java
@@ -18,7 +18,7 @@
 			}
 			output.addAll(to_add);
 			rest_subsets.addAll(output);
-			return output;
+			return rest_subsets;
 		}else {
 			java.util.ArrayList empty_set = new java.util.ArrayList<java.util.ArrayList>();
 			empty_set.add(new java.util.ArrayList());


passed all tests 
Wed Dec 19 21:37:04 PST 2018 - Analyzing patched program: POWERSET under path ./patchedPrograms/powerset/tibra/p2
Patch:

--- java_programs\/POWERSET.java
+++ java_programs\/POWERSET.java
@@ -16,6 +16,7 @@
 				r.addAll(subset);
 				to_add.add(r);
 			}
+			output.addAll(rest_subsets);
 			output.addAll(to_add);
 			rest_subsets.addAll(output);
 			return output;
passed all tests 
Wed Dec 19 21:37:40 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p1
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_1280/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:43:02.203568027 -0500
@@ -13,7 +13,9 @@
 public class QUICKSORT {
     public static ArrayList<Integer> quicksort(ArrayList<Integer> arr) {
         if (arr.isEmpty()) {
-            return new ArrayList<Integer>();
+            if (arr.isEmpty()) {
+                return new ArrayList<Integer>();
+            }
         }
 
         Integer pivot = arr.get(0);
@@ -23,9 +25,8 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Wed Dec 19 21:38:15 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p2
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_1259/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:42:44.931441007 -0500
@@ -23,13 +23,15 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);
-        lesser = quicksort(lesser);
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        lesser = quicksort(lesser);
         greater = quicksort(greater);
         middle.addAll(greater);
         lesser.addAll(middle);

passed all tests 
Wed Dec 19 21:38:51 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p3
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_531/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:38:53.543931152 -0500
@@ -17,15 +17,18 @@
         }
 
         Integer pivot = arr.get(0);
-        ArrayList<Integer> lesser = new ArrayList<Integer>();
-        ArrayList<Integer> greater = new ArrayList<Integer>();
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        ArrayList<Integer> lesser = new ArrayList<Integer>();
+        lesser = quicksort(lesser);
+        ArrayList<Integer> greater = new ArrayList<Integer>();
 
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Wed Dec 19 21:39:26 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p4
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_993/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:40:47.506590981 -0500
@@ -20,16 +20,22 @@
         ArrayList<Integer> lesser = new ArrayList<Integer>();
         ArrayList<Integer> greater = new ArrayList<Integer>();
 
-        for (Integer x : arr.subList(1, arr.size())) {
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
-        ArrayList<Integer> middle = new ArrayList<Integer>();
-        middle.add(pivot);
         lesser = quicksort(lesser);
+        ArrayList<Integer> middle = new ArrayList<Integer>();
+        middle.add(pivot);
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        lesser = quicksort(lesser);
         greater = quicksort(greater);
         middle.addAll(greater);
         lesser.addAll(middle);

passed all tests 
Wed Dec 19 21:40:01 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p5
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_898/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:40:08.922039461 -0500
@@ -23,9 +23,8 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Wed Dec 19 21:40:37 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/jkali/p1
Patch:

--- java_programs\/QUICKSORT.java
+++ java_programs\/QUICKSORT.java
@@ -13,7 +13,7 @@
 			if (x < pivot) {
 				lesser.add(x);
 			}else
-				if (x > pivot) {
+				if (true) {
 					greater.add(x);
 				}
 


passed all tests 
Wed Dec 19 21:41:13 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/mutation/p1
Patch:

--- java_programs\/QUICKSORT.java
+++ java_programs\/QUICKSORT.java
@@ -10,7 +10,7 @@
 		java.util.ArrayList<java.lang.Integer> lesser = new java.util.ArrayList<java.lang.Integer>();
 		java.util.ArrayList<java.lang.Integer> greater = new java.util.ArrayList<java.lang.Integer>();
 		for (java.lang.Integer x : arr.subList(1, arr.size())) {
-			if (x < pivot) {
+			if (x <= pivot) {
 				lesser.add(x);
 			}else
 				if (x > pivot) {


passed all tests 
Wed Dec 19 21:41:48 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/nopol-dynamoth/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
+++ nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
@@ -25,3 +25,3 @@
                 lesser.add(x);
-            } else if (x > pivot) {
+            } else if (arr.contains((java.lang.Object) pivot)) {
                 greater.add(x);

passed all tests 
Wed Dec 19 21:42:24 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/nopol-smt/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
+++ nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
@@ -25,3 +25,3 @@
                 lesser.add(x);
-            } else if (x > pivot) {
+            } else if (lesser!=null) {
                 greater.add(x);

passed all tests 
Wed Dec 19 21:42:59 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/RSRepair/p1
Patch:
--- /tmp/RSRepair_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 12:31:12.235565775 -0500
+++ /tmp/RSRepair_QuixBugs_QUICKSORT_/patches_4rrc/Patch_546/patched/tmp/RSRepair_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 12:34:11.456017610 -0500
@@ -23,9 +23,8 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Wed Dec 19 21:43:38 PST 2018 - Analyzing patched program: RPN_EVAL under path ./patchedPrograms/rpn_eval/cardumen/p1
Patch:

--- java_programs\/RPN_EVAL.java
+++ java_programs\/RPN_EVAL.java
@@ -18,7 +18,7 @@
 				java.lang.Double b = ((java.lang.Double) (stack.pop()));
 				java.lang.Double c = 0.0;
 				java.util.function.BinaryOperator<java.lang.Double> bin_op = op.get(token);
-				c = bin_op.apply(a, b);
+				c = bin_op.apply(b, a);
 				stack.push(c);
 			}
 		}


passed all tests 
Wed Dec 19 23:27:27 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p1
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_1/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:17.456456508 -0500
@@ -47,7 +47,6 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:28:38 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p2
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_485/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:37:30.513093004 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.successor = null;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        this.successor = null;
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:29:45 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p3
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_302/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:37:02.804941690 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.value = value;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        this.successor = null;
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:30:50 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p4
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_32/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:22.512535827 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.value = value;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:31:54 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Arja/p5
Patch:
--- /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:11.048343665 -0500
+++ /tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/patches_xts7/Patch_110/patched/tmp/Arja_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 05:36:34.532698135 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.predecessors = new ArrayList<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        this.value = value;
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:32:36 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Cardumen/p1
Patch:

--- java_programs\/DEPTH_FIRST_SEARCH.java
+++ java_programs\/DEPTH_FIRST_SEARCH.java
@@ -13,7 +13,7 @@
 						return true;
 					}else {
 						for (java_programs.Node successornodes : node.getSuccessors()) {
-							if (search(successornodes)) {
+							if (node == node) {
 								return true;
 							}
 						}


failed tests number: 30
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:33:40 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Dynamoth/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/Node.java
+++ nopol-quixbugs/src/main/java/java_programs/Node.java
@@ -49,3 +49,5 @@
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        if (successors.contains((java.lang.Object) this)) {
+            this.successors = successors;
+        }
     }

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:34:45 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/JGenprog/p1
Patch:

--- java_programs\/Node.java
+++ java_programs\/Node.java
@@ -50,6 +50,7 @@
 
 	public void setSuccessors(java.util.ArrayList<java_programs.Node> successors) {
 		this.successors = successors;
+		this.successors = new java.util.ArrayList<java_programs.Node>();
 	}
 
 	public void setPredecessors(java.util.ArrayList<java_programs.Node> predecessors) {


failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:35:49 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/Jkali/p1
Patch:

--- java_programs\/Node.java
+++ java_programs\/Node.java
@@ -49,7 +49,6 @@
 	}
 
 	public void setSuccessors(java.util.ArrayList<java_programs.Node> successors) {
-		this.successors = successors;
 	}
 
 	public void setPredecessors(java.util.ArrayList<java_programs.Node> predecessors) {


failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:36:54 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p1
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_17/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:18.524015729 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        Set<Node> nodesvisited = new HashSet<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:37:58 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p2
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_108/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:33.972094396 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.value = value;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:39:02 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p3
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_1/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:15.656001100 -0500
@@ -47,7 +47,6 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:40:07 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p4
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_5/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:16.368004733 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        this.successors = new ArrayList<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:41:12 PST 2018 - Analyzing patched program: DEPTH_FIRST_SEARCH under path ./patchedPrograms/depth_first_search/RSRepair/p5
Patch:
--- /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:09.099967637 -0500
+++ /tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/patches_tvm8/Patch_96/patched/tmp/RSRepair_QuixBugs_DEPTH_FIRST_SEARCH_/src/main/java/Node.java    2018-12-02 12:31:32.196085363 -0500
@@ -47,7 +47,7 @@
     }
 
     public void setSuccessors(ArrayList<Node> successors) {
-        this.successors = successors;
+        Set<Node> nodesvisited = new HashSet<>();
     }
 
     public void setPredecessors(ArrayList<Node> predecessors) {
@@ -59,7 +59,8 @@
     }
 
     public ArrayList<Node> getSuccessors() {
-        return successors;
+        Set<Node> nodesvisited = new HashSet<>();
+        return successors;
     }
     public ArrayList<Node> getPredecessors() {
         return predecessors;

failed tests number: 32
failed tests info: [test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-, test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test1(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-][test2(java_programs.DEPTH_FIRST_SEARCH_ESTest): null-]
Wed Dec 19 23:41:45 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p1
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,6 +17,14 @@
         while (true) {
-            if (hare.getSuccessor() == null)
+            if (hare == null) {
+                if ( node.getSuccessor() == null)
                 return false;
+            } else {
+                if (hare.getSuccessor() == null)
+                return false;
+            }
 
             tortoise = tortoise.getSuccessor();
+            if (hare == null) {
+                return Boolean.FALSE;
+            }
             hare = hare.getSuccessor().getSuccessor();

Errors in running tests 
Wed Dec 19 23:42:18 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p2
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,6 +17,14 @@
         while (true) {
-            if (hare.getSuccessor() == null)
+            if (hare == null) {
+                if ( node.getSuccessor() == null)
                 return false;
+            } else {
+                if (hare.getSuccessor() == null)
+                return false;
+            }
 
             tortoise = tortoise.getSuccessor();
+            if (hare == null) {
+                return false;
+            }
             hare = hare.getSuccessor().getSuccessor();

Errors in running tests 
Wed Dec 19 23:42:50 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p3
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,4 +17,9 @@
         while (true) {
-            if (hare.getSuccessor() == null)
+            if (hare == null) {
+                if ( tortoise.getSuccessor() == null)
                 return false;
+            } else {
+                if (hare.getSuccessor() == null)
+                return false;
+            }
 

Errors in running tests 
Wed Dec 19 23:43:23 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p4
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,2 +17,5 @@
         while (true) {
+            if (hare == null) {
+                hare = tortoise;
+            }
             if (hare.getSuccessor() == null)

Errors in running tests 
Wed Dec 19 23:43:56 PST 2018 - Analyzing patched program: DETECT_CYCLE under path ./patchedPrograms/detect_cycle/NPEFix/p5
Patch:
--- /DETECT_CYCLE.java
+++ /DETECT_CYCLE.java
@@ -17,4 +17,9 @@
         while (true) {
-            if (hare.getSuccessor() == null)
+            if (hare == null) {
+                if ( new Node().getSuccessor() == null)
                 return false;
+            } else {
+                if (hare.getSuccessor() == null)
+                return false;
+            }
 

Errors in running tests 
Wed Dec 19 23:44:31 PST 2018 - Analyzing patched program: FIND_IN_SORTED under path ./patchedPrograms/find_in_sorted/nopol-smt/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/FIND_IN_SORTED.java
+++ nopol-quixbugs/src/main/java/java_programs/FIND_IN_SORTED.java
@@ -16,3 +16,3 @@
         int mid = start + (end - start) / 2; // check this is floor division
-        if (x < arr[mid]) {
+        if ((mid <= 2) || (((x) != ((arr[mid]))) && (!(arr.length < (arr[mid]))))) {
             return binsearch(arr, x, start, mid);

failed tests number: 142
failed tests info: [test3(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test3(java_programs.FIND_IN_SORTED_ESTest): expected:<3> but was:<-1>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test3(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test1(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test2(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test06(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test2(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test3(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test2(java_programs.FIND_IN_SORTED_ESTest): expected:<4> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test2(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test6(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test06(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test06(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test2(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): expected:<5> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test2(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test3(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test5(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test01(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-][test3(java_programs.FIND_IN_SORTED_ESTest): expected:<-1> but was:<3>-, test5(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test10(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-][test01(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test04(java_programs.FIND_IN_SORTED_ESTest): expected:<3> but was:<4>-, test06(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test01(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test04(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test01(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test03(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-][test1(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test4(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test9(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test04(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test06(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test07(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test04(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test05(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: ArrayIndexOutOfBoundsException-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test10(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test07(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test02(java_programs.FIND_IN_SORTED_ESTest): Expecting exception: NullPointerException-, test05(java_programs.FIND_IN_SORTED_ESTest): expected:<2> but was:<-1>-, test08(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test09(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test10(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-][test3(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test6(java_programs.FIND_IN_SORTED_ESTest): expected:<1> but was:<-1>-, test7(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-, test8(java_programs.FIND_IN_SORTED_ESTest): expected:<0> but was:<-1>-]
Thu Dec 20 00:26:19 PST 2018 - Analyzing patched program: GET_FACTORS under path ./patchedPrograms/get_factors/cardumen/p1
Patch:

--- java_programs\/GET_FACTORS.java
+++ java_programs\/GET_FACTORS.java
@@ -7,7 +7,7 @@
 			return new java.util.ArrayList<java.lang.Integer>();
 		}
 		int max = ((int) ((java.lang.Math.sqrt(n)) + 1.0));
-		for (int i = 2; i < max; i++) {
+		for (int i = 2; (n % n) == 0; i++) {
 			if ((n % i) == 0) {
 				java.util.ArrayList<java.lang.Integer> prepend = new java.util.ArrayList<java.lang.Integer>(0);
 				prepend.add(i);


failed tests number: 30
failed tests info: [test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): / by zero-][test1(java_programs.GET_FACTORS_ESTest): / by zero-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test2(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-][test3(java_programs.GET_FACTORS_ESTest): test timed out after 4000 milliseconds-]
Thu Dec 20 00:26:49 PST 2018 - Analyzing patched program: HANOI under path ./patchedPrograms/hanoi/NPEFix/p1
Patch:
--- /HANOI.java
+++ /HANOI.java
@@ -24,3 +24,10 @@
             crap_set.remove(end);
-            int helper = crap_set.poll();
+            } else {
+                int helper;
+                if (crap_set.poll() == null) {
+                    helper = end;
+                } else {
+                    helper = crap_set.poll();
+                }
+            }
             steps.addAll(hanoi(height-1, start, helper));

passed all tests 
Thu Dec 20 00:27:31 PST 2018 - Analyzing patched program: IS_VALID_PARENTHESIZATION under path ./patchedPrograms/is_valid_parenthesization/nopol-smt/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/IS_VALID_PARENTHESIZATION.java
+++ nopol-quixbugs/src/main/java/java_programs/IS_VALID_PARENTHESIZATION.java
@@ -16,7 +16,7 @@
 	    Character paren = parens.charAt(i);
-	    if (paren.equals('(')) {
-                depth++;
+	    if ((1 < (parens.length()) - (1)) && ((paren) != (1 + '('))) {
+	        depth++;
 	    } else {
-		depth--;
-		if (depth < 0) { return false; }
+	        depth--;
+	        if (depth < 0) { return false; }
 	    }

failed tests number: 32
failed tests info: [test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-, test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-, test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test4(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test3(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test2(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test1(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-][test3(java_programs.IS_VALID_PARENTHESIZATION_ESTest): null-]
Thu Dec 20 00:28:18 PST 2018 - Analyzing patched program: KNAPSACK under path ./patchedPrograms/knapsack/mutation/p1
Patch:

--- java_programs\/KNAPSACK.java
+++ java_programs\/KNAPSACK.java
@@ -16,7 +16,7 @@
 				if ((i == 0) || (j == 0)) {
 					memo[i][j] = 0;
 				}else
-					if (weight < j) {
+					if (weight <= j) {
 						memo[i][j] = java.lang.Math.max(memo[(i - 1)][j], (value + (memo[(i - 1)][(j - weight)])));
 					}else {
 						memo[i][j] = memo[(i - 1)][j];


passed all tests 
Thu Dec 20 00:29:02 PST 2018 - Analyzing patched program: LEVENSHTEIN under path ./patchedPrograms/levenshtein/cardumen/p1
Patch:

--- java_programs\/LEVENSHTEIN.java
+++ java_programs\/LEVENSHTEIN.java
@@ -7,7 +7,7 @@
 			return source.isEmpty() ? target.length() : source.length();
 		}else
 			if ((source.charAt(0)) == (target.charAt(0))) {
-				return 1 + (java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target.substring(1)));
+				return java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target.substring(1));
 			}else {
 				return 1 + (java.lang.Math.min(java.lang.Math.min(java_programs.LEVENSHTEIN.levenshtein(source, target.substring(1)), java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target.substring(1))), java_programs.LEVENSHTEIN.levenshtein(source.substring(1), target)));
 			}


passed all tests 
Thu Dec 20 00:29:41 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p1
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_865/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:40:03.683088658 -0500
@@ -20,15 +20,25 @@
             ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
             for (int j=1; j < longest+1; j++) {
                 if (arr[ends.get(j)] < val) {
-                    prefix_lengths.add(j);
+                    if (arr[ends.get(j)] < val) {
+                        prefix_lengths.add(j);
+                    }
                 }
             }
 
             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
+            for (int j = 1; j < longest + 1; j++) {
+                if (arr[ends.get(j)] < val) {
+                    prefix_lengths.add(j);
+                }
+            }
+            if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Thu Dec 20 00:30:22 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p2
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_364/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:38:34.566570253 -0500
@@ -28,7 +28,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Thu Dec 20 00:30:49 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p3
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_146/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:55.890229808 -0500
@@ -20,7 +20,9 @@
             ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
             for (int j=1; j < longest+1; j++) {
                 if (arr[ends.get(j)] < val) {
-                    prefix_lengths.add(j);
+                    if (arr[ends.get(j)] < val) {
+                        prefix_lengths.add(j);
+                    }
                 }
             }
 
@@ -28,7 +30,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Thu Dec 20 00:31:35 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p4
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_331/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:38:28.782483553 -0500
@@ -28,10 +28,17 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
-            i++;
+            if (length == longest || val < arr[ends.get(length + 1)]) {
+                ends.put(length + 1, i);
+                longest = length + 1;
+            }
+            i++;
         }
         return longest;
     }

passed all tests 
Thu Dec 20 00:32:26 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/Arja/p5
Patch:
--- /tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:37:18.902230939 -0500
+++ /tmp/Arja_QuixBugs_LIS_/patches_nmk9/Patch_776/patched/tmp/Arja_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 05:39:47.791041364 -0500
@@ -28,10 +28,13 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
             }
 
-            i++;
+            if (length == longest || val < arr[ends.get(length + 1)]) {
+                ends.put(length + 1, i);
+                longest = length + 1;
+            }
+            i++;
         }
         return longest;
     }

passed all tests 
Thu Dec 20 00:33:13 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p1
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_317/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:32:07.677466262 -0500
@@ -28,10 +28,13 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
             }
 
-            i++;
+            if (length == longest || val < arr[ends.get(length + 1)]) {
+                ends.put(length + 1, i);
+                longest = length + 1;
+            }
+            i++;
         }
         return longest;
     }

passed all tests 
Thu Dec 20 00:33:57 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p2
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_51/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:24.797261605 -0500
@@ -28,7 +28,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Thu Dec 20 00:34:41 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p3
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_39/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:22.917252390 -0500
@@ -18,7 +18,12 @@
         for (int val : arr) {
 
             ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
-            for (int j=1; j < longest+1; j++) {
+            for (int j = 1; j < longest + 1; j++) {
+                if (arr[ends.get(j)] < val) {
+                    prefix_lengths.add(j);
+                }
+            }
+            for (int j=1; j < longest+1; j++) {
                 if (arr[ends.get(j)] < val) {
                     prefix_lengths.add(j);
                 }
@@ -28,7 +33,10 @@
 
             if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
-                longest = length + 1;
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
             }
 
             i++;

passed all tests 
Thu Dec 20 00:35:24 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p4
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_546/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:32:44.005632147 -0500
@@ -26,8 +26,12 @@
 
             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
-                ends.put(length+1, i);
+            ends.put(length + 1, i);
+            if (length == longest || val < arr[ends.get(length+1)]) {
+                if (length == longest || val < arr[ends.get(length + 1)]) {
+                    ends.put(length + 1, i);
+                    longest = length + 1;
+                }
                 longest = length + 1;
             }
 

passed all tests 
Thu Dec 20 00:36:20 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/RSRepair/p5
Patch:
--- /tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:08.869182822 -0500
+++ /tmp/RSRepair_QuixBugs_LIS_/patches_yr6r/Patch_172/patched/tmp/RSRepair_QuixBugs_LIS_/src/main/java/LIS.java    2018-12-02 12:31:44.429356589 -0500
@@ -26,7 +26,8 @@
 
             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
+            ends.put(length + 1, i);
+            if (length == longest || val < arr[ends.get(length+1)]) {
                 ends.put(length+1, i);
                 longest = length + 1;
             }

passed all tests 
Thu Dec 20 00:37:15 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/statement/p1
Patch:

--- java_programs\/LIS.java
+++ java_programs\/LIS.java
@@ -14,6 +14,7 @@
 				}
 			}
 			int length = (!(prefix_lengths.isEmpty())) ? java.util.Collections.max(prefix_lengths) : 0;
+			ends.put((length + 1), i);
 			if ((length == longest) || (val < (arr[ends.get((length + 1))]))) {
 				ends.put((length + 1), i);
 				longest = length + 1;


passed all tests 
Thu Dec 20 00:38:06 PST 2018 - Analyzing patched program: LIS under path ./patchedPrograms/lis/tibra/p1
Patch:

--- java_programs\/LIS.java
+++ java_programs\/LIS.java
@@ -14,6 +14,7 @@
 				}
 			}
 			int length = (!(prefix_lengths.isEmpty())) ? java.util.Collections.max(prefix_lengths) : 0;
+			ends.put((length + 1), i);
 			if ((length == longest) || (val < (arr[ends.get((length + 1))]))) {
 				ends.put((length + 1), i);
 				longest = length + 1;


passed all tests 
Thu Dec 20 00:38:50 PST 2018 - Analyzing patched program: MERGESORT under path ./patchedPrograms/mergesort/cardumen/p1
Patch:

--- java_programs\/MERGESORT.java
+++ java_programs\/MERGESORT.java
@@ -20,11 +20,17 @@
 	}
 
 	public static java.util.ArrayList<java.lang.Integer> mergesort(java.util.ArrayList<java.lang.Integer> arr) {
-		if ((arr.size()) == 0) {
+		if (((arr.size()) / 2) == 0) {
 			return arr;
 		}else {
 			int middle = (arr.size()) / 2;
 			java.util.ArrayList<java.lang.Integer> left = new java.util.ArrayList<java.lang.Integer>(100);
			left.addAll(arr.subList(0, middle));
			left = java_programs.MERGESORT.mergesort(left);
			java.util.ArrayList<java.lang.Integer> right = new java.util.ArrayList<java.lang.Integer>(100);
			right.addAll(arr.subList(middle, arr.size()));
			right = java_programs.MERGESORT.mergesort(right);
			return java_programs.MERGESORT.merge(left, right);
 		}
 	}
 }


passed all tests 
Thu Dec 20 00:39:38 PST 2018 - Analyzing patched program: NEXT_PERMUTATION under path ./patchedPrograms/next_permutation/mutation/p1
Patch:

--- java_programs\/NEXT_PERMUTATION.java
+++ java_programs\/NEXT_PERMUTATION.java
@@ -6,7 +6,7 @@
 		for (int i = (perm.size()) - 2; i != (-1); i--) {
 			if ((perm.get(i)) < (perm.get((i + 1)))) {
 				for (int j = (perm.size()) - 1; j != i; j--) {
-					if ((perm.get(j)) < (perm.get(i))) {
+					if ((perm.get(j)) >= (perm.get(i))) {
 						java.util.ArrayList<java.lang.Integer> next_perm = perm;
 						int temp_j = perm.get(j);
 						int temp_i = perm.get(i);


passed all tests 
Thu Dec 20 00:40:31 PST 2018 - Analyzing patched program: POWERSET under path ./patchedPrograms/powerset/tibra/p0
Patch:

--- java_programs\/POWERSET.java
+++ java_programs\/POWERSET.java
@@ -10,6 +10,7 @@
 			java.util.ArrayList<java.util.ArrayList> rest_subsets = java_programs.POWERSET.powerset(rest);
 			java.util.ArrayList<java.util.ArrayList> output = new java.util.ArrayList<java.util.ArrayList>(100);
 			java.util.ArrayList to_add = new java.util.ArrayList(100);
+			output.addAll(rest_subsets);
 			for (java.util.ArrayList subset : rest_subsets) {
 				java.util.ArrayList r = new java.util.ArrayList();
 				r.add(first);


passed all tests 
Thu Dec 20 00:41:24 PST 2018 - Analyzing patched program: POWERSET under path ./patchedPrograms/powerset/tibra/p1
Patch:

--- java_programs\/POWERSET.java
+++ java_programs\/POWERSET.java
@@ -18,7 +18,7 @@
 			}
 			output.addAll(to_add);
 			rest_subsets.addAll(output);
-			return output;
+			return rest_subsets;
 		}else {
 			java.util.ArrayList empty_set = new java.util.ArrayList<java.util.ArrayList>();
 			empty_set.add(new java.util.ArrayList());


passed all tests 
Thu Dec 20 00:42:11 PST 2018 - Analyzing patched program: POWERSET under path ./patchedPrograms/powerset/tibra/p2
Patch:

--- java_programs\/POWERSET.java
+++ java_programs\/POWERSET.java
@@ -16,6 +16,7 @@
 				r.addAll(subset);
 				to_add.add(r);
 			}
+			output.addAll(rest_subsets);
 			output.addAll(to_add);
 			rest_subsets.addAll(output);
 			return output;
passed all tests 
Thu Dec 20 00:42:54 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p1
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_1280/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:43:02.203568027 -0500
@@ -13,7 +13,9 @@
 public class QUICKSORT {
     public static ArrayList<Integer> quicksort(ArrayList<Integer> arr) {
         if (arr.isEmpty()) {
-            return new ArrayList<Integer>();
+            if (arr.isEmpty()) {
+                return new ArrayList<Integer>();
+            }
         }
 
         Integer pivot = arr.get(0);
@@ -23,9 +25,8 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Thu Dec 20 00:43:37 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p2
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_1259/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:42:44.931441007 -0500
@@ -23,13 +23,15 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);
-        lesser = quicksort(lesser);
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        lesser = quicksort(lesser);
         greater = quicksort(greater);
         middle.addAll(greater);
         lesser.addAll(middle);

passed all tests 
Thu Dec 20 00:44:20 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p3
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_531/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:38:53.543931152 -0500
@@ -17,15 +17,18 @@
         }
 
         Integer pivot = arr.get(0);
-        ArrayList<Integer> lesser = new ArrayList<Integer>();
-        ArrayList<Integer> greater = new ArrayList<Integer>();
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        ArrayList<Integer> lesser = new ArrayList<Integer>();
+        lesser = quicksort(lesser);
+        ArrayList<Integer> greater = new ArrayList<Integer>();
 
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Thu Dec 20 00:45:01 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p4
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_993/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:40:47.506590981 -0500
@@ -20,16 +20,22 @@
         ArrayList<Integer> lesser = new ArrayList<Integer>();
         ArrayList<Integer> greater = new ArrayList<Integer>();
 
-        for (Integer x : arr.subList(1, arr.size())) {
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
-        ArrayList<Integer> middle = new ArrayList<Integer>();
-        middle.add(pivot);
         lesser = quicksort(lesser);
+        ArrayList<Integer> middle = new ArrayList<Integer>();
+        middle.add(pivot);
+        if (arr.isEmpty()) {
+            return new ArrayList<Integer>();
+        }
+        lesser = quicksort(lesser);
         greater = quicksort(greater);
         middle.addAll(greater);
         lesser.addAll(middle);

passed all tests 
Thu Dec 20 00:45:44 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/Arja/p5
Patch:
--- /tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:36:30.254338040 -0500
+++ /tmp/Arja_QuixBugs_QUICKSORT_/patches_2c2c/Patch_898/patched/tmp/Arja_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 05:40:08.922039461 -0500
@@ -23,9 +23,8 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Thu Dec 20 00:46:26 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/jkali/p1
Patch:

--- java_programs\/QUICKSORT.java
+++ java_programs\/QUICKSORT.java
@@ -13,7 +13,7 @@
 			if (x < pivot) {
 				lesser.add(x);
 			}else
-				if (x > pivot) {
+				if (true) {
 					greater.add(x);
 				}
 


passed all tests 
Thu Dec 20 00:47:09 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/mutation/p1
Patch:

--- java_programs\/QUICKSORT.java
+++ java_programs\/QUICKSORT.java
@@ -10,7 +10,7 @@
 		java.util.ArrayList<java.lang.Integer> lesser = new java.util.ArrayList<java.lang.Integer>();
 		java.util.ArrayList<java.lang.Integer> greater = new java.util.ArrayList<java.lang.Integer>();
 		for (java.lang.Integer x : arr.subList(1, arr.size())) {
-			if (x < pivot) {
+			if (x <= pivot) {
 				lesser.add(x);
 			}else
 				if (x > pivot) {


passed all tests 
Thu Dec 20 00:47:52 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/nopol-dynamoth/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
+++ nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
@@ -25,3 +25,3 @@
                 lesser.add(x);
-            } else if (x > pivot) {
+            } else if (arr.contains((java.lang.Object) pivot)) {
                 greater.add(x);

passed all tests 
Thu Dec 20 00:48:36 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/nopol-smt/p1
Patch:
--- nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
+++ nopol-quixbugs/src/main/java/java_programs/QUICKSORT.java
@@ -25,3 +25,3 @@
                 lesser.add(x);
-            } else if (x > pivot) {
+            } else if (lesser!=null) {
                 greater.add(x);

passed all tests 
Thu Dec 20 00:49:17 PST 2018 - Analyzing patched program: QUICKSORT under path ./patchedPrograms/quicksort/RSRepair/p1
Patch:
--- /tmp/RSRepair_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 12:31:12.235565775 -0500
+++ /tmp/RSRepair_QuixBugs_QUICKSORT_/patches_4rrc/Patch_546/patched/tmp/RSRepair_QuixBugs_QUICKSORT_/src/main/java/QUICKSORT.java    2018-12-02 12:34:11.456017610 -0500
@@ -23,9 +23,8 @@
         for (Integer x : arr.subList(1, arr.size())) {
             if (x < pivot) {
                 lesser.add(x);
-            } else if (x > pivot) {
-                greater.add(x);
-            }
+            } else
+                greater.add(x);
         }
         ArrayList<Integer> middle = new ArrayList<Integer>();
         middle.add(pivot);

passed all tests 
Thu Dec 20 00:50:02 PST 2018 - Analyzing patched program: RPN_EVAL under path ./patchedPrograms/rpn_eval/cardumen/p1
Patch:

--- java_programs\/RPN_EVAL.java
+++ java_programs\/RPN_EVAL.java
@@ -18,7 +18,7 @@
 				java.lang.Double b = ((java.lang.Double) (stack.pop()));
 				java.lang.Double c = 0.0;
 				java.util.function.BinaryOperator<java.lang.Double> bin_op = op.get(token);
-				c = bin_op.apply(a, b);
+				c = bin_op.apply(b, a);
 				stack.push(c);
 			}
 		}


passed all tests 
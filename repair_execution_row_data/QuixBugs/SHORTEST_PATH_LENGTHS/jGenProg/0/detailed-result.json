{"general":{"NR_RIGHT_COMPILATIONS":40674,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"SHORTEST_PATH_LENGTHS-","OUTPUT_STATUS":"TIME_OUT","NR_FAILLING_COMPILATIONS":20217,"NR_GENERATIONS":60894,"TOTAL_TIME":7200.089,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"52","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3","GENERATION":"26","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"82","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-82\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4","GENERATION":"41","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-82","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"102","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-102\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5","GENERATION":"51","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-102","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"264","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-264\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"12","GENERATION":"132","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-264","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"330","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-330\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"15","GENERATION":"165","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-330","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"350","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-350\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"16","GENERATION":"175","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-350","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"640","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-640\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"29","GENERATION":"320","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-640","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"658","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-658\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"30","GENERATION":"329","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-658","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"670","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-670\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"31","GENERATION":"335","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-670","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"764","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-764\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"35","GENERATION":"382","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-764","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"902","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-902\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"41","GENERATION":"451","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-902","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"1088","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-1088\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"49","GENERATION":"544","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-1088","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"1280","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-1280\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"58","GENERATION":"640","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-1280","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"1288","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-1288\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"58","GENERATION":"644","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-1288","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"1308","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-1308\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"59","GENERATION":"654","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-1308","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"1326","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-1326\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"61","GENERATION":"663","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-1326","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"1384","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-1384\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"63","GENERATION":"692","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-1384","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"1510","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-1510\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"69","GENERATION":"755","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-1510","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"1638","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-1638\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"74","GENERATION":"819","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-1638","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"1990","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-1990\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"88","GENERATION":"995","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-1990","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"2070","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-2070\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"91","GENERATION":"1035","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-2070","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"2340","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-2340\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"102","GENERATION":"1170","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-2340","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"2424","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-2424\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"106","GENERATION":"1212","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-2424","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"2474","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-2474\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"108","GENERATION":"1237","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-2474","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"2908","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-2908\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"127","GENERATION":"1454","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-2908","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"3082","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-3082\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"135","GENERATION":"1541","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-3082","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"3096","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-3096\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"135","GENERATION":"1548","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-3096","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"3134","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-3134\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"137","GENERATION":"1567","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-3134","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"3142","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-3142\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"138","GENERATION":"1571","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-3142","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"3350","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-3350\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"146","GENERATION":"1675","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-3350","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"3574","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-3574\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"155","GENERATION":"1787","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-3574","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"3596","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-3596\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"156","GENERATION":"1798","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-3596","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"3746","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-3746\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"162","GENERATION":"1873","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-3746","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"3942","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-3942\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"170","GENERATION":"1971","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-3942","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"4176","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-4176\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"179","GENERATION":"2088","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-4176","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"4238","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-4238\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"182","GENERATION":"2119","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-4238","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"4856","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-4856\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"207","GENERATION":"2428","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-4856","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"5048","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-5048\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"216","GENERATION":"2524","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-5048","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"5160","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-5160\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"221","GENERATION":"2580","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-5160","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"5480","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-5480\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"234","GENERATION":"2740","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-5480","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"5484","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-5484\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"234","GENERATION":"2742","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-5484","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"5890","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-5890\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"253","GENERATION":"2945","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-5890","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6006","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6006\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"258","GENERATION":"3003","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6006","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6090","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6090\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"262","GENERATION":"3045","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6090","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6158","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6158\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"265","GENERATION":"3079","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6158","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6230","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6230\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"268","GENERATION":"3115","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6230","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6264","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6264\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"269","GENERATION":"3132","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6264","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6314","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6314\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"272","GENERATION":"3157","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6314","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6532","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6532\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"281","GENERATION":"3266","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6532","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6598","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6598\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"284","GENERATION":"3299","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6598","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6674","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6674\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"287","GENERATION":"3337","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6674","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6900","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6900\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"297","GENERATION":"3450","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6900","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6928","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6928\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"299","GENERATION":"3464","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6928","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6944","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6944\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"300","GENERATION":"3472","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6944","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"6978","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-6978\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"301","GENERATION":"3489","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-6978","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7142","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7142\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"309","GENERATION":"3571","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7142","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7218","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7218\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"312","GENERATION":"3609","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7218","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7226","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7226\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"312","GENERATION":"3613","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7226","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7350","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7350\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"318","GENERATION":"3675","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7350","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7430","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7430\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"321","GENERATION":"3715","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7430","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7482","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7482\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"324","GENERATION":"3741","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7482","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7734","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7734\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"334","GENERATION":"3867","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7734","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7740","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7740\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"334","GENERATION":"3870","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7740","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7808","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7808\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"337","GENERATION":"3904","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7808","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"7904","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-7904\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"341","GENERATION":"3952","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-7904","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"8268","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-8268\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"357","GENERATION":"4134","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-8268","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"8312","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-8312\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"359","GENERATION":"4156","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-8312","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"8326","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-8326\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"360","GENERATION":"4163","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-8326","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"8698","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-8698\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"376","GENERATION":"4349","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-8698","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"8742","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-8742\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"379","GENERATION":"4371","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-8742","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"8832","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-8832\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"384","GENERATION":"4416","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-8832","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"8840","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-8840\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"384","GENERATION":"4420","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-8840","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"8864","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-8864\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"385","GENERATION":"4432","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-8864","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"8946","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-8946\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"389","GENERATION":"4473","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-8946","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"9048","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-9048\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"394","GENERATION":"4524","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-9048","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"9058","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-9058\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"395","GENERATION":"4529","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-9058","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"9132","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-9132\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"399","GENERATION":"4566","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-9132","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"9172","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-9172\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"400","GENERATION":"4586","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-9172","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"9198","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-9198\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"401","GENERATION":"4599","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-9198","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"9574","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-9574\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"418","GENERATION":"4787","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-9574","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"9814","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-9814\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"429","GENERATION":"4907","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-9814","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"10054","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-10054\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"438","GENERATION":"5027","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-10054","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"10208","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-10208\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"446","GENERATION":"5104","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-10208","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"10292","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-10292\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"449","GENERATION":"5146","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-10292","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"10496","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-10496\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"459","GENERATION":"5248","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-10496","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"10600","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-10600\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"463","GENERATION":"5300","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-10600","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"10784","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-10784\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"471","GENERATION":"5392","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-10784","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"10844","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-10844\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"473","GENERATION":"5422","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-10844","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"10918","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-10918\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"476","GENERATION":"5459","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-10918","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"10974","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-10974\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"479","GENERATION":"5487","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-10974","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11098","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11098\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"485","GENERATION":"5549","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11098","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11362","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11362\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"496","GENERATION":"5681","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11362","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11410","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11410\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"498","GENERATION":"5705","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11410","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11414","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11414\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"499","GENERATION":"5707","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11414","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11416","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11416\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"499","GENERATION":"5708","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11416","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11442","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11442\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"500","GENERATION":"5721","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11442","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11538","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11538\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"504","GENERATION":"5769","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11538","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11620","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11620\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"507","GENERATION":"5810","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11620","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11762","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11762\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"513","GENERATION":"5881","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11762","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11786","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11786\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"514","GENERATION":"5893","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11786","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11808","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11808\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"515","GENERATION":"5904","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11808","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11858","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11858\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"517","GENERATION":"5929","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11858","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11926","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11926\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"520","GENERATION":"5963","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11926","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"11994","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-11994\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"523","GENERATION":"5997","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-11994","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12076","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12076\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"527","GENERATION":"6038","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12076","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12238","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12238\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"533","GENERATION":"6119","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12238","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12542","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12542\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"547","GENERATION":"6271","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12542","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12572","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12572\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"548","GENERATION":"6286","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12572","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12640","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12640\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"551","GENERATION":"6320","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12640","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12712","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12712\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"555","GENERATION":"6356","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12712","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12732","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12732\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"556","GENERATION":"6366","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12732","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12816","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12816\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"560","GENERATION":"6408","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12816","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12822","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12822\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"560","GENERATION":"6411","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12822","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"12964","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-12964\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"566","GENERATION":"6482","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-12964","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"13252","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-13252\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"578","GENERATION":"6626","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-13252","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"13316","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-13316\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"581","GENERATION":"6658","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-13316","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"13556","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-13556\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"591","GENERATION":"6778","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-13556","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"13606","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-13606\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"594","GENERATION":"6803","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-13606","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"13730","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-13730\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"599","GENERATION":"6865","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-13730","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"13904","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-13904\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"607","GENERATION":"6952","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-13904","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"13910","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-13910\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"607","GENERATION":"6955","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-13910","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"13992","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-13992\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"611","GENERATION":"6996","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-13992","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"14084","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-14084\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"614","GENERATION":"7042","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-14084","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"14228","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-14228\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"620","GENERATION":"7114","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-14228","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"14304","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-14304\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"624","GENERATION":"7152","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-14304","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"14426","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-14426\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"629","GENERATION":"7213","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-14426","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"14496","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-14496\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"632","GENERATION":"7248","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-14496","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"15006","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-15006\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"656","GENERATION":"7503","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-15006","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"15026","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-15026\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"657","GENERATION":"7513","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-15026","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"15090","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-15090\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"660","GENERATION":"7545","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-15090","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"15108","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-15108\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"661","GENERATION":"7554","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-15108","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"15472","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-15472\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"676","GENERATION":"7736","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-15472","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"15756","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-15756\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"688","GENERATION":"7878","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-15756","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"15950","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-15950\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"697","GENERATION":"7975","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-15950","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16028","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16028\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"701","GENERATION":"8014","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16028","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16066","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16066\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"702","GENERATION":"8033","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16066","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16210","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16210\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"709","GENERATION":"8105","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16210","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16282","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16282\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"712","GENERATION":"8141","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16282","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16294","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16294\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"713","GENERATION":"8147","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16294","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16522","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16522\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"722","GENERATION":"8261","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16522","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16576","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16576\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"725","GENERATION":"8288","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16576","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16622","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16622\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"727","GENERATION":"8311","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16622","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16674","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16674\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"729","GENERATION":"8337","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16674","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16720","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16720\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"731","GENERATION":"8360","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16720","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"16856","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-16856\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"737","GENERATION":"8428","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-16856","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17010","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17010\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"744","GENERATION":"8505","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17010","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17116","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17116\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"749","GENERATION":"8558","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17116","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17134","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17134\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"750","GENERATION":"8567","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17134","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17296","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17296\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"757","GENERATION":"8648","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17296","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17404","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17404\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"761","GENERATION":"8702","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17404","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17442","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17442\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"763","GENERATION":"8721","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17442","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17554","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17554\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"768","GENERATION":"8777","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17554","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17698","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17698\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"774","GENERATION":"8849","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17698","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17778","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17778\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"778","GENERATION":"8889","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17778","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17902","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17902\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"783","GENERATION":"8951","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17902","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"17948","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-17948\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"786","GENERATION":"8974","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-17948","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"18172","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-18172\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"796","GENERATION":"9086","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-18172","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"18182","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-18182\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"797","GENERATION":"9091","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-18182","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"18194","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-18194\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"798","GENERATION":"9097","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-18194","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"18224","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-18224\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"800","GENERATION":"9112","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-18224","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"19030","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-19030\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"841","GENERATION":"9515","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-19030","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"19254","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-19254\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"854","GENERATION":"9627","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-19254","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"19350","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-19350\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"860","GENERATION":"9675","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-19350","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"19512","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-19512\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"869","GENERATION":"9756","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-19512","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"19532","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-19532\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"871","GENERATION":"9766","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-19532","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"19728","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-19728\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"883","GENERATION":"9864","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-19728","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20142","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20142\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"918","GENERATION":"10071","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20142","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20228","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20228\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"930","GENERATION":"10114","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20228","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20468","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20468\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"953","GENERATION":"10234","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20468","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20544","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20544\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"961","GENERATION":"10272","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20544","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20558","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20558\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"962","GENERATION":"10279","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20558","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20584","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20584\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"966","GENERATION":"10292","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20584","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20692","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20692\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"975","GENERATION":"10346","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20692","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20730","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20730\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"979","GENERATION":"10365","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20730","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20938","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20938\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"997","GENERATION":"10469","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20938","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"20956","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-20956\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"999","GENERATION":"10478","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-20956","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21064","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21064\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1007","GENERATION":"10532","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21064","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21152","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21152\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1014","GENERATION":"10576","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21152","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21244","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21244\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1022","GENERATION":"10622","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21244","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21264","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21264\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1024","GENERATION":"10632","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21264","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21294","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21294\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1026","GENERATION":"10647","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21294","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21530","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21530\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1044","GENERATION":"10765","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21530","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21614","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21614\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1050","GENERATION":"10807","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21614","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21672","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21672\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1054","GENERATION":"10836","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21672","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21716","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21716\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1057","GENERATION":"10858","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21716","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"21904","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-21904\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1072","GENERATION":"10952","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-21904","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"22004","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-22004\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1080","GENERATION":"11002","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-22004","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"22028","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-22028\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1082","GENERATION":"11014","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-22028","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"22030","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-22030\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1082","GENERATION":"11015","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-22030","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"22130","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-22130\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1089","GENERATION":"11065","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-22130","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"22144","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-22144\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1091","GENERATION":"11072","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-22144","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"22146","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-22146\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1091","GENERATION":"11073","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-22146","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"22534","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-22534\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1118","GENERATION":"11267","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-22534","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"22656","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-22656\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1126","GENERATION":"11328","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-22656","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"22962","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-22962\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1146","GENERATION":"11481","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-22962","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23020","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23020\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1150","GENERATION":"11510","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23020","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23024","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23024\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1150","GENERATION":"11512","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23024","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23052","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23052\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1153","GENERATION":"11526","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23052","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23122","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23122\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1158","GENERATION":"11561","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23122","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23132","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23132\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1159","GENERATION":"11566","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23132","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23144","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23144\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1160","GENERATION":"11572","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23144","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23272","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23272\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1168","GENERATION":"11636","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23272","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23344","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23344\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1173","GENERATION":"11672","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23344","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23356","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23356\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1174","GENERATION":"11678","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23356","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23396","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23396\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1178","GENERATION":"11698","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23396","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23526","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23526\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1186","GENERATION":"11763","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23526","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23784","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23784\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1201","GENERATION":"11892","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23784","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"23840","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-23840\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1204","GENERATION":"11920","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-23840","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"24234","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-24234\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1228","GENERATION":"12117","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-24234","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"24268","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-24268\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1229","GENERATION":"12134","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-24268","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"24490","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-24490\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1244","GENERATION":"12245","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-24490","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"24596","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-24596\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1252","GENERATION":"12298","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-24596","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"24632","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-24632\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1254","GENERATION":"12316","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-24632","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"24826","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-24826\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1266","GENERATION":"12413","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-24826","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"24930","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-24930\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1272","GENERATION":"12465","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-24930","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"24984","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-24984\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1275","GENERATION":"12492","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-24984","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"25082","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-25082\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1281","GENERATION":"12541","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-25082","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"25318","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-25318\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1296","GENERATION":"12659","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-25318","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"25326","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-25326\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1296","GENERATION":"12663","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-25326","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"25472","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-25472\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1305","GENERATION":"12736","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-25472","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"25510","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-25510\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1308","GENERATION":"12755","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-25510","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"25514","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-25514\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1308","GENERATION":"12757","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-25514","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"26036","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-26036\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1340","GENERATION":"13018","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-26036","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"26054","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-26054\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1341","GENERATION":"13027","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-26054","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"26074","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-26074\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1343","GENERATION":"13037","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-26074","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"26166","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-26166\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1348","GENERATION":"13083","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-26166","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"26318","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-26318\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1358","GENERATION":"13159","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-26318","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"26454","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-26454\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1366","GENERATION":"13227","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-26454","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"26492","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-26492\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1369","GENERATION":"13246","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-26492","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"26678","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-26678\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1381","GENERATION":"13339","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-26678","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"26872","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-26872\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1392","GENERATION":"13436","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-26872","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27054","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27054\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1403","GENERATION":"13527","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27054","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27280","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27280\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1418","GENERATION":"13640","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27280","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27298","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27298\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1419","GENERATION":"13649","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27298","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27306","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27306\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1419","GENERATION":"13653","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27306","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27444","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27444\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1429","GENERATION":"13722","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27444","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27496","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27496\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1431","GENERATION":"13748","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27496","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27566","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27566\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1435","GENERATION":"13783","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27566","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27574","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27574\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1437","GENERATION":"13787","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27574","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27620","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27620\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1439","GENERATION":"13810","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27620","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27712","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27712\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1445","GENERATION":"13856","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27712","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27914","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27914\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1456","GENERATION":"13957","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27914","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"27976","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-27976\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1460","GENERATION":"13988","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-27976","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"28292","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-28292\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1480","GENERATION":"14146","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-28292","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"28462","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-28462\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1490","GENERATION":"14231","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-28462","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"28564","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-28564\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1497","GENERATION":"14282","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-28564","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"28630","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-28630\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1501","GENERATION":"14315","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-28630","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"28732","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-28732\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1507","GENERATION":"14366","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-28732","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"28784","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-28784\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1511","GENERATION":"14392","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-28784","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"29424","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-29424\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1548","GENERATION":"14712","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-29424","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"29440","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-29440\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1549","GENERATION":"14720","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-29440","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"29484","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-29484\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1551","GENERATION":"14742","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-29484","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"29546","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-29546\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1554","GENERATION":"14773","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-29546","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"29606","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-29606\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1558","GENERATION":"14803","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-29606","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"29822","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-29822\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1571","GENERATION":"14911","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-29822","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"29980","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-29980\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1580","GENERATION":"14990","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-29980","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"30210","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-30210\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1595","GENERATION":"15105","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-30210","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"30386","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-30386\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1604","GENERATION":"15193","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-30386","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"30780","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-30780\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1630","GENERATION":"15390","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-30780","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"30814","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-30814\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1632","GENERATION":"15407","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-30814","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"30880","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-30880\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1635","GENERATION":"15440","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-30880","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"30938","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-30938\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1639","GENERATION":"15469","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-30938","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"30950","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-30950\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1640","GENERATION":"15475","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-30950","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31150","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31150\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1652","GENERATION":"15575","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31150","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31176","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31176\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1654","GENERATION":"15588","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31176","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31200","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31200\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1655","GENERATION":"15600","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31200","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31258","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31258\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1658","GENERATION":"15629","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31258","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31334","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31334\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1662","GENERATION":"15667","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31334","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31342","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31342\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1662","GENERATION":"15671","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31342","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31474","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31474\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1672","GENERATION":"15737","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31474","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31478","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31478\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1673","GENERATION":"15739","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31478","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31652","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31652\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1683","GENERATION":"15826","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31652","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31864","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31864\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1694","GENERATION":"15932","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31864","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"31918","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-31918\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1697","GENERATION":"15959","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-31918","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"32002","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-32002\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1703","GENERATION":"16001","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-32002","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"32038","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-32038\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1705","GENERATION":"16019","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-32038","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"32270","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-32270\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1717","GENERATION":"16135","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-32270","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"32388","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-32388\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1723","GENERATION":"16194","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-32388","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"32616","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-32616\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1736","GENERATION":"16308","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-32616","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"32824","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-32824\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1747","GENERATION":"16412","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-32824","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"32894","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-32894\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1751","GENERATION":"16447","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-32894","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"33334","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-33334\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1774","GENERATION":"16667","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-33334","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"33494","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-33494\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1784","GENERATION":"16747","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-33494","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"33718","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-33718\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1796","GENERATION":"16859","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-33718","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"33900","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-33900\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1807","GENERATION":"16950","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-33900","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"33994","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-33994\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1812","GENERATION":"16997","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-33994","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"34108","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-34108\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1817","GENERATION":"17054","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-34108","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"34378","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-34378\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1833","GENERATION":"17189","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-34378","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"34394","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-34394\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1833","GENERATION":"17197","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-34394","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"34448","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-34448\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1836","GENERATION":"17224","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-34448","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"34524","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-34524\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1841","GENERATION":"17262","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-34524","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"34538","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-34538\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1842","GENERATION":"17269","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-34538","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"34554","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-34554\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1843","GENERATION":"17277","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-34554","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"34980","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-34980\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1867","GENERATION":"17490","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-34980","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"35092","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-35092\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1873","GENERATION":"17546","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-35092","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"35200","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-35200\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1878","GENERATION":"17600","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-35200","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"35680","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-35680\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1905","GENERATION":"17840","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-35680","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"35710","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-35710\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1907","GENERATION":"17855","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-35710","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36002","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36002\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1923","GENERATION":"18001","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36002","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36062","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36062\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1926","GENERATION":"18031","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36062","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36120","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36120\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1929","GENERATION":"18060","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36120","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36244","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36244\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1936","GENERATION":"18122","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36244","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36290","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36290\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1939","GENERATION":"18145","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36290","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36322","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36322\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1940","GENERATION":"18161","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36322","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36326","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36326\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1941","GENERATION":"18163","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36326","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36354","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36354\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1943","GENERATION":"18177","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36354","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36500","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36500\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1951","GENERATION":"18250","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36500","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36570","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36570\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1955","GENERATION":"18285","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36570","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36838","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36838\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1968","GENERATION":"18419","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36838","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"36938","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-36938\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1974","GENERATION":"18469","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-36938","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"37082","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-37082\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"1983","GENERATION":"18541","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-37082","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"37390","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-37390\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2001","GENERATION":"18695","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-37390","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"37978","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-37978\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2032","GENERATION":"18989","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-37978","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38046","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38046\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2036","GENERATION":"19023","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38046","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38096","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38096\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2040","GENERATION":"19048","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38096","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38252","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38252\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2048","GENERATION":"19126","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38252","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38350","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38350\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2053","GENERATION":"19175","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38350","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38392","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38392\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2055","GENERATION":"19196","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38392","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38402","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38402\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2057","GENERATION":"19201","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38402","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38448","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38448\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2060","GENERATION":"19224","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38448","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38664","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38664\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2072","GENERATION":"19332","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38664","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38710","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38710\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2074","GENERATION":"19355","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38710","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38770","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38770\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2079","GENERATION":"19385","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38770","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"38796","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-38796\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2080","GENERATION":"19398","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-38796","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"39088","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-39088\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2097","GENERATION":"19544","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-39088","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"39102","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-39102\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2098","GENERATION":"19551","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-39102","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"39190","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-39190\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2104","GENERATION":"19595","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-39190","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"39606","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-39606\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2126","GENERATION":"19803","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-39606","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"39630","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-39630\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2129","GENERATION":"19815","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-39630","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"39664","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-39664\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2130","GENERATION":"19832","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-39664","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"39666","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-39666\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2131","GENERATION":"19833","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-39666","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"39914","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-39914\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2146","GENERATION":"19957","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-39914","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"39952","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-39952\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2148","GENERATION":"19976","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-39952","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"40018","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-40018\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2152","GENERATION":"20009","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-40018","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"40448","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-40448\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2176","GENERATION":"20224","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-40448","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"40908","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-40908\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2203","GENERATION":"20454","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-40908","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"40928","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-40928\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2204","GENERATION":"20464","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-40928","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"41112","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-41112\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2214","GENERATION":"20556","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-41112","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"41246","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-41246\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2223","GENERATION":"20623","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-41246","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"41464","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-41464\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2236","GENERATION":"20732","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-41464","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"41478","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-41478\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2237","GENERATION":"20739","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-41478","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"41484","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-41484\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2238","GENERATION":"20742","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-41484","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"41958","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-41958\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2266","GENERATION":"20979","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-41958","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"42044","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-42044\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2271","GENERATION":"21022","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-42044","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"42058","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-42058\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2272","GENERATION":"21029","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-42058","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"42696","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-42696\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2311","GENERATION":"21348","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-42696","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"42806","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-42806\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2317","GENERATION":"21403","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-42806","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"43006","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-43006\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2328","GENERATION":"21503","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-43006","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"43212","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-43212\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2342","GENERATION":"21606","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-43212","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"43356","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-43356\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2351","GENERATION":"21678","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-43356","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"43670","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-43670\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2371","GENERATION":"21835","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-43670","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"43792","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-43792\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2378","GENERATION":"21896","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-43792","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"43832","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-43832\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2380","GENERATION":"21916","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-43832","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"43860","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-43860\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2383","GENERATION":"21930","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-43860","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"43874","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-43874\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2383","GENERATION":"21937","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-43874","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"43992","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-43992\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2391","GENERATION":"21996","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-43992","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"44136","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-44136\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2401","GENERATION":"22068","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-44136","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"44180","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-44180\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2404","GENERATION":"22090","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-44180","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"44694","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-44694\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2436","GENERATION":"22347","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-44694","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"44836","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-44836\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2444","GENERATION":"22418","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-44836","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"44960","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-44960\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2452","GENERATION":"22480","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-44960","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45070","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45070\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2459","GENERATION":"22535","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45070","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45188","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45188\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2466","GENERATION":"22594","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45188","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45200","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45200\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2467","GENERATION":"22600","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45200","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45278","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45278\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2471","GENERATION":"22639","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45278","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45390","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45390\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2478","GENERATION":"22695","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45390","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45518","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45518\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2486","GENERATION":"22759","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45518","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45566","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45566\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2491","GENERATION":"22783","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45566","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45722","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45722\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2501","GENERATION":"22861","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45722","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45760","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45760\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2503","GENERATION":"22880","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45760","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45802","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45802\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2507","GENERATION":"22901","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45802","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45892","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45892\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2511","GENERATION":"22946","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45892","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"45930","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-45930\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2514","GENERATION":"22965","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-45930","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"46180","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-46180\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2529","GENERATION":"23090","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-46180","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"46188","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-46188\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2531","GENERATION":"23094","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-46188","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"46326","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-46326\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2539","GENERATION":"23163","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-46326","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"46386","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-46386\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2542","GENERATION":"23193","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-46386","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"46460","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-46460\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2547","GENERATION":"23230","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-46460","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"46828","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-46828\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2570","GENERATION":"23414","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-46828","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"46950","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-46950\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2577","GENERATION":"23475","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-46950","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"46970","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-46970\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2578","GENERATION":"23485","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-46970","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"47078","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-47078\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2586","GENERATION":"23539","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-47078","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"47106","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-47106\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2587","GENERATION":"23553","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-47106","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"47404","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-47404\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2605","GENERATION":"23702","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-47404","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"47564","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-47564\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2614","GENERATION":"23782","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-47564","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"47654","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-47654\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2620","GENERATION":"23827","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-47654","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"47788","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-47788\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2628","GENERATION":"23894","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-47788","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"47796","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-47796\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2629","GENERATION":"23898","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-47796","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"48056","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-48056\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2645","GENERATION":"24028","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-48056","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"48166","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-48166\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2651","GENERATION":"24083","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-48166","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"48228","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-48228\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2655","GENERATION":"24114","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-48228","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"48386","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-48386\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2665","GENERATION":"24193","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-48386","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"48410","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-48410\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2667","GENERATION":"24205","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-48410","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"48704","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-48704\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2687","GENERATION":"24352","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-48704","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"48730","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-48730\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2689","GENERATION":"24365","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-48730","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"48932","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-48932\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2701","GENERATION":"24466","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-48932","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"49076","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-49076\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2709","GENERATION":"24538","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-49076","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"49146","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-49146\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2712","GENERATION":"24573","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-49146","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"49276","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-49276\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2720","GENERATION":"24638","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-49276","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"49364","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-49364\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2726","GENERATION":"24682","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-49364","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"49540","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-49540\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2736","GENERATION":"24770","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-49540","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"49836","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-49836\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2754","GENERATION":"24918","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-49836","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50028","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50028\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2766","GENERATION":"25014","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50028","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50118","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50118\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2773","GENERATION":"25059","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50118","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50272","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50272\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2782","GENERATION":"25136","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50272","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50406","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50406\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2790","GENERATION":"25203","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50406","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50576","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50576\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2801","GENERATION":"25288","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50576","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50584","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50584\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2801","GENERATION":"25292","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50584","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50632","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50632\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2804","GENERATION":"25316","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50632","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50640","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50640\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2805","GENERATION":"25320","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50640","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50654","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50654\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2806","GENERATION":"25327","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50654","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50692","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50692\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2809","GENERATION":"25346","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50692","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50714","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50714\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2810","GENERATION":"25357","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50714","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50744","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50744\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2812","GENERATION":"25372","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50744","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50750","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50750\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2812","GENERATION":"25375","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50750","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50854","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50854\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2818","GENERATION":"25427","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50854","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50868","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50868\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2820","GENERATION":"25434","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50868","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50966","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50966\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2825","GENERATION":"25483","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50966","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"50972","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-50972\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2825","GENERATION":"25486","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-50972","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51012","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51012\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2828","GENERATION":"25506","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51012","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51120","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51120\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2834","GENERATION":"25560","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51120","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51344","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51344\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2846","GENERATION":"25672","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51344","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51362","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51362\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2847","GENERATION":"25681","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51362","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51420","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51420\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2851","GENERATION":"25710","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51420","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51494","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51494\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2856","GENERATION":"25747","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51494","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51610","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51610\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2862","GENERATION":"25805","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51610","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51664","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51664\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2866","GENERATION":"25832","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51664","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51724","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51724\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2869","GENERATION":"25862","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51724","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51832","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51832\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2875","GENERATION":"25916","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51832","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51868","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51868\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2878","GENERATION":"25934","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51868","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"51966","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-51966\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2884","GENERATION":"25983","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-51966","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52062","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52062\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2890","GENERATION":"26031","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52062","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52150","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52150\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2895","GENERATION":"26075","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52150","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52172","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52172\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2897","GENERATION":"26086","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52172","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52268","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52268\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2903","GENERATION":"26134","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52268","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52290","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52290\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2905","GENERATION":"26145","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52290","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52316","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52316\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2906","GENERATION":"26158","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52316","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52678","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52678\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2927","GENERATION":"26339","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52678","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52726","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52726\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2930","GENERATION":"26363","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52726","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52800","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52800\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2935","GENERATION":"26400","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52800","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52942","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52942\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2943","GENERATION":"26471","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52942","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52962","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52962\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2944","GENERATION":"26481","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52962","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"52994","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52994\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2946","GENERATION":"26497","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52994","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"53000","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-53000\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2947","GENERATION":"26500","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-53000","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"53430","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-53430\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2971","GENERATION":"26715","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-53430","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"53476","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-53476\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2974","GENERATION":"26738","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-53476","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"53642","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-53642\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2984","GENERATION":"26821","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-53642","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"53744","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-53744\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2991","GENERATION":"26872","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-53744","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"53824","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-53824\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2996","GENERATION":"26912","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-53824","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"53826","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-53826\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2996","GENERATION":"26913","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-53826","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"53848","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-53848\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"2999","GENERATION":"26924","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-53848","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"53988","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-53988\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3006","GENERATION":"26994","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-53988","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"54234","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-54234\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3021","GENERATION":"27117","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-54234","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"54552","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-54552\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3038","GENERATION":"27276","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-54552","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"54564","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-54564\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3039","GENERATION":"27282","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-54564","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"54580","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-54580\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3040","GENERATION":"27290","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-54580","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"54618","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-54618\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3042","GENERATION":"27309","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-54618","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"54814","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-54814\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3054","GENERATION":"27407","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-54814","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"54912","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-54912\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3060","GENERATION":"27456","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-54912","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"55236","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-55236\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3078","GENERATION":"27618","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-55236","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"55364","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-55364\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3084","GENERATION":"27682","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-55364","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"55492","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-55492\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3091","GENERATION":"27746","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-55492","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"55558","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-55558\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3094","GENERATION":"27779","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-55558","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"55820","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-55820\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3108","GENERATION":"27910","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-55820","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"56160","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-56160\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3127","GENERATION":"28080","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-56160","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"56318","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-56318\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3136","GENERATION":"28159","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-56318","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"56610","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-56610\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3151","GENERATION":"28305","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-56610","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"56754","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-56754\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3161","GENERATION":"28377","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-56754","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"57024","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-57024\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3178","GENERATION":"28512","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-57024","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"57192","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-57192\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3187","GENERATION":"28596","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-57192","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"57254","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-57254\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3191","GENERATION":"28627","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-57254","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"57324","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-57324\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3196","GENERATION":"28662","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-57324","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"57360","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-57360\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3198","GENERATION":"28680","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-57360","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"57714","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-57714\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3218","GENERATION":"28857","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-57714","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"57776","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-57776\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3221","GENERATION":"28888","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-57776","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"57778","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-57778\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3222","GENERATION":"28889","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-57778","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58100","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58100\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3240","GENERATION":"29050","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58100","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58156","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58156\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3244","GENERATION":"29078","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58156","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58258","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58258\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3250","GENERATION":"29129","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58258","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58400","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58400\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3258","GENERATION":"29200","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58400","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58474","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58474\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3261","GENERATION":"29237","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58474","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58478","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58478\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3261","GENERATION":"29239","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58478","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58596","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58596\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3269","GENERATION":"29298","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58596","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58678","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58678\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3274","GENERATION":"29339","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58678","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58826","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58826\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3283","GENERATION":"29413","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58826","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"58940","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-58940\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3290","GENERATION":"29470","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-58940","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"59104","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-59104\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3299","GENERATION":"29552","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-59104","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"59168","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-59168\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3304","GENERATION":"29584","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-59168","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"59280","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-59280\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3310","GENERATION":"29640","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-59280","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"59318","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-59318\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3311","GENERATION":"29659","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-59318","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"59376","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-59376\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3315","GENERATION":"29688","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-59376","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"59382","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-59382\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3315","GENERATION":"29691","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-59382","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"60230","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-60230\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3368","GENERATION":"30115","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-60230","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"60348","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-60348\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3374","GENERATION":"30174","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-60348","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"60502","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-60502\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3383","GENERATION":"30251","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-60502","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"61004","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-61004\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3414","GENERATION":"30502","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-61004","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"61254","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-61254\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3429","GENERATION":"30627","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-61254","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"61406","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-61406\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3438","GENERATION":"30703","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-61406","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"61708","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-61708\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3456","GENERATION":"30854","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-61708","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"61802","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-61802\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3462","GENERATION":"30901","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-61802","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"62316","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-62316\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3496","GENERATION":"31158","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-62316","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"62476","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-62476\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3506","GENERATION":"31238","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-62476","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"62700","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-62700\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3520","GENERATION":"31350","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-62700","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"62724","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-62724\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3523","GENERATION":"31362","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-62724","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"62830","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-62830\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3529","GENERATION":"31415","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-62830","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"62850","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-62850\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3531","GENERATION":"31425","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-62850","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"63266","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-63266\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3553","GENERATION":"31633","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-63266","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"63522","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-63522\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3568","GENERATION":"31761","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-63522","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"63538","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-63538\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3569","GENERATION":"31769","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-63538","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"63720","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-63720\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3579","GENERATION":"31860","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-63720","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"63770","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-63770\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3583","GENERATION":"31885","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-63770","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"63850","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-63850\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3588","GENERATION":"31925","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-63850","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"63952","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-63952\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3595","GENERATION":"31976","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-63952","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"64344","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-64344\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3620","GENERATION":"32172","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-64344","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"64766","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-64766\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3646","GENERATION":"32383","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-64766","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"65136","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-65136\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3672","GENERATION":"32568","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-65136","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"65326","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-65326\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3683","GENERATION":"32663","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-65326","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"65404","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-65404\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3688","GENERATION":"32702","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-65404","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"65568","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-65568\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3700","GENERATION":"32784","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-65568","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"65612","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-65612\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3704","GENERATION":"32806","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-65612","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"65692","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-65692\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3709","GENERATION":"32846","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-65692","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"65874","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-65874\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3721","GENERATION":"32937","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-65874","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"65884","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-65884\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3721","GENERATION":"32942","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-65884","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"65888","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-65888\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3721","GENERATION":"32944","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-65888","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"66032","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-66032\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3731","GENERATION":"33016","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-66032","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"66054","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-66054\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3732","GENERATION":"33027","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-66054","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"66424","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-66424\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3755","GENERATION":"33212","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-66424","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"66434","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-66434\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3755","GENERATION":"33217","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-66434","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"66536","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-66536\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3760","GENERATION":"33268","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-66536","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"66744","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-66744\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3775","GENERATION":"33372","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-66744","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"67444","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-67444\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3820","GENERATION":"33722","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-67444","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"67582","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-67582\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3829","GENERATION":"33791","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-67582","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"67808","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-67808\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3846","GENERATION":"33904","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-67808","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"67982","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-67982\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3857","GENERATION":"33991","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-67982","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68004","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68004\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3858","GENERATION":"34002","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68004","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68074","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68074\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3862","GENERATION":"34037","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68074","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68212","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68212\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3871","GENERATION":"34106","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68212","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68308","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68308\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3877","GENERATION":"34154","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68308","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68424","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68424\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3884","GENERATION":"34212","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68424","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68564","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68564\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3893","GENERATION":"34282","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68564","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68576","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68576\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3894","GENERATION":"34288","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68576","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68578","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68578\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3894","GENERATION":"34289","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68578","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68616","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68616\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3897","GENERATION":"34308","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68616","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68716","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68716\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3903","GENERATION":"34358","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68716","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68888","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68888\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3914","GENERATION":"34444","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68888","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"68984","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-68984\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3920","GENERATION":"34492","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-68984","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"69052","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-69052\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3925","GENERATION":"34526","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-69052","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"69222","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-69222\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3934","GENERATION":"34611","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-69222","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"69276","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-69276\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3938","GENERATION":"34638","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-69276","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"69364","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-69364\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3945","GENERATION":"34682","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-69364","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"69394","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-69394\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3947","GENERATION":"34697","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-69394","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"69528","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-69528\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3956","GENERATION":"34764","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-69528","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"70070","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-70070\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3990","GENERATION":"35035","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-70070","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"70154","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-70154\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"3995","GENERATION":"35077","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-70154","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"70398","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-70398\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4011","GENERATION":"35199","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-70398","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"70688","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-70688\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4028","GENERATION":"35344","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-70688","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"70728","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-70728\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4030","GENERATION":"35364","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-70728","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"70856","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-70856\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4038","GENERATION":"35428","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-70856","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"71132","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-71132\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4055","GENERATION":"35566","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-71132","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"71144","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-71144\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4057","GENERATION":"35572","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-71144","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"71186","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-71186\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4059","GENERATION":"35593","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-71186","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"71344","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-71344\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4069","GENERATION":"35672","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-71344","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"71398","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-71398\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4073","GENERATION":"35699","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-71398","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"71454","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-71454\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4075","GENERATION":"35727","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-71454","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"71672","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-71672\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4089","GENERATION":"35836","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-71672","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"71970","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-71970\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4107","GENERATION":"35985","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-71970","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"71972","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-71972\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4108","GENERATION":"35986","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-71972","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"72530","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-72530\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4140","GENERATION":"36265","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-72530","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"72542","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-72542\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4142","GENERATION":"36271","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-72542","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"72866","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-72866\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4160","GENERATION":"36433","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-72866","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"72904","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-72904\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4163","GENERATION":"36452","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-72904","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"72924","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-72924\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4164","GENERATION":"36462","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-72924","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73138","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73138\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4178","GENERATION":"36569","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73138","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73166","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73166\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4179","GENERATION":"36583","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73166","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73176","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73176\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4180","GENERATION":"36588","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73176","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73196","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73196\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4181","GENERATION":"36598","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73196","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73200","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73200\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4181","GENERATION":"36600","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73200","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73370","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73370\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4191","GENERATION":"36685","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73370","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73522","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73522\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4200","GENERATION":"36761","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73522","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73546","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73546\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4202","GENERATION":"36773","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73546","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73652","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73652\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4208","GENERATION":"36826","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73652","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73674","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73674\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4209","GENERATION":"36837","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73674","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73932","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73932\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4224","GENERATION":"36966","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73932","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"73936","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-73936\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4225","GENERATION":"36968","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-73936","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"74296","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-74296\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4246","GENERATION":"37148","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-74296","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"74612","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-74612\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4264","GENERATION":"37306","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-74612","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"74886","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-74886\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4280","GENERATION":"37443","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-74886","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"74890","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-74890\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4280","GENERATION":"37445","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-74890","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"74896","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-74896\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4281","GENERATION":"37448","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-74896","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"74916","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-74916\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4283","GENERATION":"37458","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-74916","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"75062","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-75062\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4292","GENERATION":"37531","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-75062","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"75124","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-75124\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4296","GENERATION":"37562","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-75124","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"75506","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-75506\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4317","GENERATION":"37753","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-75506","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"75594","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-75594\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4322","GENERATION":"37797","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-75594","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"75724","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-75724\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4330","GENERATION":"37862","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-75724","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"75770","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-75770\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4333","GENERATION":"37885","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-75770","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"75786","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-75786\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4334","GENERATION":"37893","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-75786","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"75936","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-75936\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4344","GENERATION":"37968","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-75936","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"75980","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-75980\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4346","GENERATION":"37990","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-75980","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"76004","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-76004\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4348","GENERATION":"38002","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-76004","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"76344","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-76344\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4369","GENERATION":"38172","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-76344","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"76362","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-76362\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4370","GENERATION":"38181","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-76362","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"76492","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-76492\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4378","GENERATION":"38246","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-76492","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"76706","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-76706\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4392","GENERATION":"38353","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-76706","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"76780","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-76780\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4397","GENERATION":"38390","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-76780","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"76868","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-76868\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4402","GENERATION":"38434","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-76868","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"76890","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-76890\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4402","GENERATION":"38445","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-76890","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77052","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77052\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4412","GENERATION":"38526","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77052","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77066","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77066\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4412","GENERATION":"38533","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77066","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77142","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77142\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4417","GENERATION":"38571","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77142","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77150","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77150\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4419","GENERATION":"38575","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77150","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77220","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77220\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4423","GENERATION":"38610","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77220","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77270","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77270\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4426","GENERATION":"38635","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77270","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77586","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77586\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4445","GENERATION":"38793","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77586","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77692","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77692\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4453","GENERATION":"38846","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77692","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77738","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77738\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4456","GENERATION":"38869","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77738","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"77844","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-77844\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4461","GENERATION":"38922","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-77844","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78152","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78152\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4481","GENERATION":"39076","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78152","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78184","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78184\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4482","GENERATION":"39092","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78184","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78404","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78404\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4496","GENERATION":"39202","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78404","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78414","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78414\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4496","GENERATION":"39207","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78414","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78448","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78448\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4499","GENERATION":"39224","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78448","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78488","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78488\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4501","GENERATION":"39244","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78488","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78504","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78504\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4502","GENERATION":"39252","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78504","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78808","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78808\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4520","GENERATION":"39404","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78808","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78916","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78916\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4526","GENERATION":"39458","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78916","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"78990","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-78990\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4530","GENERATION":"39495","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-78990","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"79072","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-79072\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4535","GENERATION":"39536","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-79072","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"79202","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-79202\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4543","GENERATION":"39601","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-79202","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"79268","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-79268\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4547","GENERATION":"39634","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-79268","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"79414","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-79414\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4557","GENERATION":"39707","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-79414","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"79734","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-79734\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4575","GENERATION":"39867","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-79734","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"79944","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-79944\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4588","GENERATION":"39972","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-79944","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"79966","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-79966\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4589","GENERATION":"39983","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-79966","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"80110","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-80110\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4598","GENERATION":"40055","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-80110","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"80252","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-80252\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4608","GENERATION":"40126","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-80252","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"80292","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-80292\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4610","GENERATION":"40146","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-80292","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"80344","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-80344\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4613","GENERATION":"40172","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-80344","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"80364","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-80364\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4614","GENERATION":"40182","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-80364","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"80448","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-80448\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4620","GENERATION":"40224","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-80448","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"80490","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-80490\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4622","GENERATION":"40245","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-80490","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"80910","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-80910\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4648","GENERATION":"40455","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-80910","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"80982","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-80982\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4651","GENERATION":"40491","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-80982","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81088","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81088\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4657","GENERATION":"40544","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81088","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81102","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81102\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4659","GENERATION":"40551","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81102","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81106","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81106\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4659","GENERATION":"40553","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81106","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81112","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81112\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4660","GENERATION":"40556","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81112","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81222","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81222\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4667","GENERATION":"40611","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81222","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81250","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81250\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4668","GENERATION":"40625","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81250","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81312","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81312\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4672","GENERATION":"40656","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81312","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81358","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81358\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4675","GENERATION":"40679","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81358","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81702","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81702\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4694","GENERATION":"40851","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81702","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81788","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81788\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4700","GENERATION":"40894","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81788","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81934","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81934\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4710","GENERATION":"40967","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81934","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81958","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81958\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4711","GENERATION":"40979","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81958","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"81980","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-81980\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4713","GENERATION":"40990","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-81980","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"82218","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-82218\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4727","GENERATION":"41109","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-82218","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"82534","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-82534\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4746","GENERATION":"41267","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-82534","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"82712","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-82712\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4757","GENERATION":"41356","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-82712","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"82816","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-82816\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4765","GENERATION":"41408","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-82816","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"82838","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-82838\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4766","GENERATION":"41419","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-82838","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"82864","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-82864\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4768","GENERATION":"41432","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-82864","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"82976","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-82976\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4773","GENERATION":"41488","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-82976","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"83302","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-83302\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4794","GENERATION":"41651","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-83302","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"83520","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-83520\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4808","GENERATION":"41760","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-83520","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"83678","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-83678\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4817","GENERATION":"41839","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-83678","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"83742","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-83742\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4821","GENERATION":"41871","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-83742","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"83758","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-83758\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4822","GENERATION":"41879","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-83758","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"83824","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-83824\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4827","GENERATION":"41912","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-83824","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"84008","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-84008\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4838","GENERATION":"42004","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-84008","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"84154","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-84154\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4847","GENERATION":"42077","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-84154","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"84228","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-84228\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4851","GENERATION":"42114","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-84228","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"84390","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-84390\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4861","GENERATION":"42195","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-84390","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"84562","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-84562\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4873","GENERATION":"42281","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-84562","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"84590","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-84590\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4874","GENERATION":"42295","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-84590","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"84648","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-84648\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4877","GENERATION":"42324","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-84648","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"84922","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-84922\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4893","GENERATION":"42461","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-84922","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"85176","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-85176\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4908","GENERATION":"42588","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-85176","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"85238","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-85238\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4911","GENERATION":"42619","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-85238","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"85268","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-85268\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4914","GENERATION":"42634","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-85268","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"85338","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-85338\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4918","GENERATION":"42669","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-85338","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"85616","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-85616\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4936","GENERATION":"42808","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-85616","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"85798","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-85798\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4945","GENERATION":"42899","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-85798","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"85878","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-85878\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4951","GENERATION":"42939","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-85878","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"85958","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-85958\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4955","GENERATION":"42979","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-85958","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"86106","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-86106\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4965","GENERATION":"43053","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-86106","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"86136","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-86136\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4967","GENERATION":"43068","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-86136","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"86212","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-86212\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4972","GENERATION":"43106","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-86212","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"86266","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-86266\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4975","GENERATION":"43133","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-86266","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"86282","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-86282\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4976","GENERATION":"43141","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-86282","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"86470","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-86470\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"4990","GENERATION":"43235","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-86470","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"86822","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-86822\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5011","GENERATION":"43411","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-86822","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"86994","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-86994\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5022","GENERATION":"43497","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-86994","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"87112","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-87112\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5029","GENERATION":"43556","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-87112","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"87338","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-87338\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5044","GENERATION":"43669","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-87338","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"87432","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-87432\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5050","GENERATION":"43716","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-87432","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"87450","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-87450\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5051","GENERATION":"43725","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-87450","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"87626","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-87626\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5063","GENERATION":"43813","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-87626","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"87688","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-87688\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5067","GENERATION":"43844","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-87688","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"87964","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-87964\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5084","GENERATION":"43982","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-87964","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"88136","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-88136\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5096","GENERATION":"44068","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-88136","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"88244","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-88244\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5102","GENERATION":"44122","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-88244","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"88246","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-88246\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5102","GENERATION":"44123","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-88246","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"88364","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-88364\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5110","GENERATION":"44182","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-88364","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"88388","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-88388\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5111","GENERATION":"44194","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-88388","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"88540","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-88540\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5120","GENERATION":"44270","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-88540","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"88694","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-88694\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5130","GENERATION":"44347","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-88694","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"89060","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-89060\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5150","GENERATION":"44530","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-89060","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"89370","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-89370\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5172","GENERATION":"44685","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-89370","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"89740","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-89740\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5194","GENERATION":"44870","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-89740","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"89914","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-89914\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5204","GENERATION":"44957","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-89914","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90142","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90142\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5217","GENERATION":"45071","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90142","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90236","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90236\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5223","GENERATION":"45118","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90236","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90304","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90304\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5227","GENERATION":"45152","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90304","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90322","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90322\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5228","GENERATION":"45161","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90322","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90330","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90330\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5229","GENERATION":"45165","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90330","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90514","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90514\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5241","GENERATION":"45257","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90514","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90536","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90536\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5242","GENERATION":"45268","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90536","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90576","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90576\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5245","GENERATION":"45288","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90576","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90658","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90658\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5249","GENERATION":"45329","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90658","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90848","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90848\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5262","GENERATION":"45424","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90848","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"90868","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-90868\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5263","GENERATION":"45434","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-90868","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"91194","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-91194\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5281","GENERATION":"45597","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-91194","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"91292","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-91292\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5288","GENERATION":"45646","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-91292","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"91718","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-91718\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5315","GENERATION":"45859","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-91718","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"91740","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-91740\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5317","GENERATION":"45870","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-91740","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"91746","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-91746\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5317","GENERATION":"45873","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-91746","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"91954","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-91954\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5328","GENERATION":"45977","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-91954","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"91960","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-91960\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5329","GENERATION":"45980","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-91960","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"91982","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-91982\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5331","GENERATION":"45991","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-91982","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92028","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92028\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5334","GENERATION":"46014","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92028","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92152","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92152\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5344","GENERATION":"46076","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92152","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92316","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92316\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5353","GENERATION":"46158","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92316","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92396","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92396\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5358","GENERATION":"46198","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92396","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92416","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92416\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5358","GENERATION":"46208","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92416","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92466","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92466\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5362","GENERATION":"46233","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92466","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92476","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92476\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5363","GENERATION":"46238","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92476","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92572","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92572\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5370","GENERATION":"46286","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92572","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92768","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92768\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5381","GENERATION":"46384","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92768","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"92964","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-92964\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5395","GENERATION":"46482","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-92964","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"93032","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-93032\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5400","GENERATION":"46516","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-93032","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"93050","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-93050\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5400","GENERATION":"46525","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-93050","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"93314","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-93314\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5416","GENERATION":"46657","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-93314","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"93408","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-93408\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5423","GENERATION":"46704","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-93408","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"93722","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-93722\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5442","GENERATION":"46861","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-93722","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"93818","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-93818\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5448","GENERATION":"46909","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-93818","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"93904","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-93904\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5453","GENERATION":"46952","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-93904","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"94162","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-94162\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5469","GENERATION":"47081","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-94162","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"94282","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-94282\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5476","GENERATION":"47141","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-94282","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"94496","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-94496\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5489","GENERATION":"47248","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-94496","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"94520","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-94520\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5491","GENERATION":"47260","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-94520","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"94932","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-94932\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5516","GENERATION":"47466","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-94932","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95012","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95012\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5521","GENERATION":"47506","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95012","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95040","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95040\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5523","GENERATION":"47520","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95040","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95128","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95128\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5529","GENERATION":"47564","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95128","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95166","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95166\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5532","GENERATION":"47583","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95166","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95306","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95306\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5540","GENERATION":"47653","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95306","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95336","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95336\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5543","GENERATION":"47668","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95336","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95356","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95356\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5544","GENERATION":"47678","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95356","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95366","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95366\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5544","GENERATION":"47683","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95366","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95388","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95388\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5545","GENERATION":"47694","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95388","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95676","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95676\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5563","GENERATION":"47838","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95676","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95702","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95702\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5565","GENERATION":"47851","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95702","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95880","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95880\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5575","GENERATION":"47940","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95880","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95970","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95970\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5581","GENERATION":"47985","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95970","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"95994","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-95994\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5583","GENERATION":"47997","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-95994","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"96022","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-96022\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5584","GENERATION":"48011","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-96022","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"96152","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-96152\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5592","GENERATION":"48076","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-96152","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"96272","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-96272\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5600","GENERATION":"48136","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-96272","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"96294","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-96294\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5602","GENERATION":"48147","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-96294","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"96388","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-96388\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5607","GENERATION":"48194","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-96388","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"96642","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-96642\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5624","GENERATION":"48321","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-96642","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"96726","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-96726\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5632","GENERATION":"48363","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-96726","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"97226","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-97226\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5661","GENERATION":"48613","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-97226","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"97298","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-97298\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5665","GENERATION":"48649","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-97298","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"97300","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-97300\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5666","GENERATION":"48650","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-97300","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"97414","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-97414\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5674","GENERATION":"48707","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-97414","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"97442","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-97442\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5677","GENERATION":"48721","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-97442","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"97452","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-97452\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5678","GENERATION":"48726","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-97452","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"97494","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-97494\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5681","GENERATION":"48747","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-97494","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"97802","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-97802\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5699","GENERATION":"48901","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-97802","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"97888","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-97888\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5705","GENERATION":"48944","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-97888","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"98086","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-98086\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5716","GENERATION":"49043","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-98086","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"98102","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-98102\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5718","GENERATION":"49051","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-98102","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"98262","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-98262\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5728","GENERATION":"49131","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-98262","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"98310","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-98310\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5732","GENERATION":"49155","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-98310","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"98414","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-98414\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5738","GENERATION":"49207","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-98414","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"98432","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-98432\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5739","GENERATION":"49216","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-98432","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"98448","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-98448\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5741","GENERATION":"49224","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-98448","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"98626","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-98626\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5752","GENERATION":"49313","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-98626","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"98632","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-98632\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5752","GENERATION":"49316","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-98632","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"99000","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-99000\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5774","GENERATION":"49500","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-99000","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"99676","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-99676\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5818","GENERATION":"49838","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-99676","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"99818","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-99818\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5827","GENERATION":"49909","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-99818","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"99938","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-99938\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5834","GENERATION":"49969","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-99938","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100092","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100092\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5844","GENERATION":"50046","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100092","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100250","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100250\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5853","GENERATION":"50125","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100250","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100322","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100322\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5860","GENERATION":"50161","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100322","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100336","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100336\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5861","GENERATION":"50168","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100336","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100412","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100412\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5866","GENERATION":"50206","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100412","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100708","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100708\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5883","GENERATION":"50354","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100708","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100744","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100744\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5885","GENERATION":"50372","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100744","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100790","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100790\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5889","GENERATION":"50395","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100790","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100828","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100828\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5892","GENERATION":"50414","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100828","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"100906","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-100906\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5896","GENERATION":"50453","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-100906","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101080","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101080\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5907","GENERATION":"50540","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101080","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101088","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101088\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5907","GENERATION":"50544","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101088","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101160","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101160\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5911","GENERATION":"50580","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101160","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101240","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101240\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5916","GENERATION":"50620","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101240","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101310","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101310\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5921","GENERATION":"50655","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101310","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101616","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101616\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5940","GENERATION":"50808","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101616","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101632","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101632\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5940","GENERATION":"50816","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101632","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101694","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101694\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5944","GENERATION":"50847","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101694","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101890","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101890\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5955","GENERATION":"50945","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101890","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"101956","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-101956\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5960","GENERATION":"50978","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-101956","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"102014","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-102014\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5963","GENERATION":"51007","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-102014","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"102344","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-102344\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5985","GENERATION":"51172","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-102344","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"102390","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-102390\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5988","GENERATION":"51195","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-102390","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"102670","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-102670\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6006","GENERATION":"51335","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-102670","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"102764","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-102764\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6011","GENERATION":"51382","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-102764","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"103002","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-103002\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6028","GENERATION":"51501","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-103002","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"103190","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-103190\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6041","GENERATION":"51595","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-103190","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"103206","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-103206\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6042","GENERATION":"51603","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-103206","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"103430","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-103430\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6057","GENERATION":"51715","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-103430","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"103504","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-103504\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6060","GENERATION":"51752","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-103504","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"103760","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-103760\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6077","GENERATION":"51880","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-103760","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"103762","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-103762\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6077","GENERATION":"51881","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-103762","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"103896","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-103896\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6085","GENERATION":"51948","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-103896","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"104394","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-104394\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6117","GENERATION":"52197","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-104394","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"104432","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-104432\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6120","GENERATION":"52216","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-104432","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"104494","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-104494\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6124","GENERATION":"52247","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-104494","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"104678","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-104678\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6135","GENERATION":"52339","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-104678","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"104762","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-104762\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6140","GENERATION":"52381","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-104762","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"104798","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-104798\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6143","GENERATION":"52399","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-104798","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"104822","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-104822\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6145","GENERATION":"52411","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-104822","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"104838","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-104838\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6145","GENERATION":"52419","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-104838","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"104988","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-104988\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6156","GENERATION":"52494","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-104988","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"105144","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-105144\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6165","GENERATION":"52572","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-105144","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"105296","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-105296\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6176","GENERATION":"52648","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-105296","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"105460","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-105460\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6185","GENERATION":"52730","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-105460","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"105696","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-105696\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6200","GENERATION":"52848","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-105696","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"106202","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-106202\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6232","GENERATION":"53101","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-106202","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"106388","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-106388\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6244","GENERATION":"53194","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-106388","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"106556","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-106556\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6255","GENERATION":"53278","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-106556","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"106646","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-106646\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6259","GENERATION":"53323","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-106646","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"106750","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-106750\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6267","GENERATION":"53375","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-106750","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"106856","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-106856\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6273","GENERATION":"53428","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-106856","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"106870","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-106870\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6274","GENERATION":"53435","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-106870","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"107020","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-107020\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6282","GENERATION":"53510","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-107020","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"107134","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-107134\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6290","GENERATION":"53567","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-107134","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"107800","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-107800\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6329","GENERATION":"53900","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-107800","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"107838","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-107838\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6332","GENERATION":"53919","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-107838","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"107920","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-107920\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6336","GENERATION":"53960","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-107920","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108036","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108036\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6344","GENERATION":"54018","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108036","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108074","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108074\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6346","GENERATION":"54037","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108074","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108194","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108194\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6354","GENERATION":"54097","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108194","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108220","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108220\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6356","GENERATION":"54110","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108220","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108254","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108254\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6358","GENERATION":"54127","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108254","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108354","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108354\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6364","GENERATION":"54177","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108354","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108398","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108398\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6367","GENERATION":"54199","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108398","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108506","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108506\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6373","GENERATION":"54253","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108506","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108574","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108574\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6378","GENERATION":"54287","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108574","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108690","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108690\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6384","GENERATION":"54345","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108690","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108702","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108702\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6386","GENERATION":"54351","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108702","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108760","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108760\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6390","GENERATION":"54380","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108760","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108928","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108928\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6399","GENERATION":"54464","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108928","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108930","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108930\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6399","GENERATION":"54465","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108930","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108950","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108950\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6401","GENERATION":"54475","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108950","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108956","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108956\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6402","GENERATION":"54478","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108956","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"108980","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-108980\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6403","GENERATION":"54490","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-108980","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"109000","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-109000\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6405","GENERATION":"54500","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-109000","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"109150","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-109150\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6414","GENERATION":"54575","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-109150","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"109270","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-109270\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6422","GENERATION":"54635","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-109270","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"109518","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-109518\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6437","GENERATION":"54759","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-109518","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"109836","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-109836\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6456","GENERATION":"54918","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-109836","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"109888","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-109888\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6459","GENERATION":"54944","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-109888","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"109962","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-109962\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6465","GENERATION":"54981","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-109962","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"110024","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-110024\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6468","GENERATION":"55012","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-110024","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"110116","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-110116\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6473","GENERATION":"55058","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-110116","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"110240","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-110240\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6480","GENERATION":"55120","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-110240","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"110638","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-110638\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6505","GENERATION":"55319","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-110638","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"110666","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-110666\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6508","GENERATION":"55333","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-110666","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"110762","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-110762\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6513","GENERATION":"55381","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-110762","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"110866","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-110866\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6520","GENERATION":"55433","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-110866","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"110896","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-110896\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6522","GENERATION":"55448","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-110896","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"110982","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-110982\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6527","GENERATION":"55491","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-110982","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"111072","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-111072\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6533","GENERATION":"55536","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-111072","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"111078","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-111078\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6533","GENERATION":"55539","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-111078","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"111160","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-111160\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6538","GENERATION":"55580","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-111160","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"111182","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-111182\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6541","GENERATION":"55591","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-111182","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"111454","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-111454\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6557","GENERATION":"55727","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-111454","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"111520","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-111520\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6562","GENERATION":"55760","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-111520","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"111754","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-111754\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6576","GENERATION":"55877","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-111754","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"112140","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-112140\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6600","GENERATION":"56070","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-112140","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"112178","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-112178\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6603","GENERATION":"56089","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-112178","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"112400","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-112400\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6615","GENERATION":"56200","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-112400","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"112620","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-112620\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6627","GENERATION":"56310","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-112620","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"112624","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-112624\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6627","GENERATION":"56312","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-112624","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"112658","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-112658\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6630","GENERATION":"56329","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-112658","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"112868","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-112868\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6642","GENERATION":"56434","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-112868","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"113056","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-113056\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6653","GENERATION":"56528","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-113056","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"113066","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-113066\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6655","GENERATION":"56533","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-113066","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"113148","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-113148\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6659","GENERATION":"56574","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-113148","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"113178","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-113178\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6662","GENERATION":"56589","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-113178","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"113586","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-113586\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6686","GENERATION":"56793","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-113586","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"113742","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-113742\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6696","GENERATION":"56871","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-113742","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"113996","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-113996\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6711","GENERATION":"56998","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-113996","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"114104","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-114104\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6718","GENERATION":"57052","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-114104","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"114182","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-114182\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6722","GENERATION":"57091","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-114182","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"114280","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-114280\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6728","GENERATION":"57140","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-114280","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"114284","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-114284\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6728","GENERATION":"57142","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-114284","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"114288","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-114288\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6729","GENERATION":"57144","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-114288","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"114672","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-114672\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6752","GENERATION":"57336","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-114672","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"114746","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-114746\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6756","GENERATION":"57373","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-114746","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"114760","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-114760\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6757","GENERATION":"57380","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-114760","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"114844","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-114844\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6763","GENERATION":"57422","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-114844","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"115250","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-115250\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6789","GENERATION":"57625","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-115250","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"115316","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-115316\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6792","GENERATION":"57658","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-115316","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"115452","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-115452\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6801","GENERATION":"57726","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-115452","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"115574","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-115574\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6809","GENERATION":"57787","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-115574","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"115732","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-115732\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6819","GENERATION":"57866","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-115732","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"115762","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-115762\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6821","GENERATION":"57881","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-115762","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"115780","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-115780\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6823","GENERATION":"57890","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-115780","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"115802","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-115802\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6824","GENERATION":"57901","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-115802","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"116010","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-116010\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6837","GENERATION":"58005","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-116010","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"116054","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-116054\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6840","GENERATION":"58027","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-116054","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"116262","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-116262\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6853","GENERATION":"58131","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-116262","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"116314","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-116314\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6856","GENERATION":"58157","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-116314","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"116472","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-116472\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6865","GENERATION":"58236","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-116472","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"117036","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-117036\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6898","GENERATION":"58518","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-117036","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"117088","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-117088\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6902","GENERATION":"58544","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-117088","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"117190","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-117190\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6908","GENERATION":"58595","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-117190","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"117306","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-117306\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6915","GENERATION":"58653","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-117306","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"117572","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-117572\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6932","GENERATION":"58786","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-117572","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"117604","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-117604\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6933","GENERATION":"58802","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-117604","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"117874","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-117874\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6950","GENERATION":"58937","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-117874","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"118168","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-118168\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6968","GENERATION":"59084","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-118168","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"118214","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-118214\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6970","GENERATION":"59107","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-118214","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"118314","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-118314\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6977","GENERATION":"59157","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-118314","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"118450","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-118450\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6986","GENERATION":"59225","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-118450","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"118640","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-118640\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"6998","GENERATION":"59320","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-118640","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"118844","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-118844\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7010","GENERATION":"59422","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-118844","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"118912","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-118912\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7015","GENERATION":"59456","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-118912","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"119044","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-119044\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7022","GENERATION":"59522","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-119044","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"119216","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-119216\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7034","GENERATION":"59608","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-119216","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"119248","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-119248\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7035","GENERATION":"59624","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-119248","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"119278","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-119278\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7038","GENERATION":"59639","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-119278","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"119518","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-119518\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7054","GENERATION":"59759","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-119518","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"119616","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-119616\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7060","GENERATION":"59808","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-119616","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"119844","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-119844\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7074","GENERATION":"59922","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-119844","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"119856","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-119856\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7074","GENERATION":"59928","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-119856","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"119868","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (length_by_edge.containsKey(edge)) {\\n\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n}else {\\n\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-119868\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"25","MP_RANKING":"6","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7076","GENERATION":"59934","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-119868","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -22,21 +22,21 @@\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n \\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n+\\t\\t\\t\\t{ \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"120284","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-120284\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7103","GENERATION":"60142","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-120284","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"120444","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-120444\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7113","GENERATION":"60222","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-120444","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"120454","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-120454\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7114","GENERATION":"60227","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-120454","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"120468","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-120468\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7115","GENERATION":"60234","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-120468","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"120664","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-120664\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7126","GENERATION":"60332","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-120664","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"120720","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, 0)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-120720\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"23","MP_RANKING":"5","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7130","GENERATION":"60360","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-120720","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -21,22 +21,22 @@\\n \\t\\t\\t\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n \\t\\t\\t\\tif (i == j) {\\n \\t\\t\\t\\t\\tlength_by_path.put(edge, 0);\\n-\\t\\t\\t\\t}else\\n-\\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\treturn length_by_path;}else \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"120806","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-120806\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7136","GENERATION":"60403","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-120806","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"121076","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-121076\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"28","MP_RANKING":"8","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7153","GENERATION":"60538","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-121076","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -26,17 +26,17 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"121372","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-121372\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7171","GENERATION":"60686","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-121372","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"121422","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"for (int j = 0; j < numNodes; j++) {\\n\\tjava.util.List<java.lang.Integer> edge = new java.util.ArrayList<>(java.util.Arrays.asList(i, j));\\n\\tif (i == j) {\\n\\t\\tlength_by_path.put(edge, 0);\\n\\t}else\\n\\t\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t\\t}else {\\n\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t\\t}\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-121422\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"20","MP_RANKING":"2","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7175","GENERATION":"60711","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-121422","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -28,15 +28,15 @@\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\treturn length_by_path;} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"121662","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"length_by_path.put(edge, length_by_edge.get(edge))","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-121662\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"26","MP_RANKING":"7","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7191","GENERATION":"60831","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-121662","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -24,19 +24,19 @@\\n \\t\\t\\t\\t}else\\n \\t\\t\\t\\t\\tif (length_by_edge.containsKey(edge)) {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\treturn length_by_path;}else { \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);}}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"},{"VARIANT_ID":"121746","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-121746\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"7197","GENERATION":"60873","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-121746","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n+++ \\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/src\\\/main\\\/java\\\/SHORTEST_PATH_LENGTHSjava\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"}]}